[
  {
    "c0": {
      "Unique tokens": [
        "",
        "pointer",
        "7",
        "6",
        "2",
        "5",
        "<",
        "1.0",
        "arcArray(idx=",
        "else",
        "part1",
        ")",
        "int",
        "length",
        "bufferUpto",
        "buf",
        "0xff",
        "WARN",
        "result",
        "3",
        "if",
        "null",
        ",",
        "sb",
        "100",
        "endIndex",
        "15",
        "Shape",
        "1000000",
        "13",
        "maxLevels",
        "60",
        "paddedLength",
        "==",
        "compressed",
        "false",
        "32",
        "field_5_dbcells",
        "4",
        "true",
        "1",
        "size",
        ".",
        "return",
        "synset",
        "throw",
        "bytes",
        "new",
        "+",
        "compressedLength",
        "numGoodPoints",
        "16",
        "0xFFFFE0",
        "31",
        "127",
        "add",
        "=",
        "basis0",
        "final",
        "while",
        "maxDoc",
        "10",
        "(",
        "numToCopy",
        "i",
        "in",
        "n",
        "MIN_VALUE_EQUALS_0",
        ";",
        "\"",
        "switch",
        "bufferLength",
        "0",
        "}",
        "wmfImageLength",
        "{",
        "field_4_string_len",
        "body",
        "]",
        ":",
        "instead",
        "&",
        "&&",
        "64",
        "8"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Input/Output",
        "Error Handling",
        "Data Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, while, switch, return, throw), operators (==, +, =, <, >, &, &&, |), data types (int, long, byte, char, boolean), literals (numbers, strings, true, false), identifiers (variables, methods, classes), and symbols (parentheses, brackets, commas, semicolons, dot operator). These elements are fundamental to C# programming and are used to construct various program structures, perform operations on data, handle errors, and control the flow of execution.  The context sentences show these tokens in action within methods, demonstrating their syntactic roles and semantic significance in the context of C# programming."
    }
  },
  {
    "c1": {
      "Unique tokens": [
        "getMissingSymbol",
        "getFontIndex",
        "f",
        "getErrorEval",
        "interpreter",
        "linkTable",
        "parseHexInt4",
        "QualityQueriesFinder",
        "setHierarchical",
        "vectorsStream",
        "hyphenator",
        "getCellStyle",
        "getByteBlock",
        "getLemmatizer",
        "getExternalBookAndSheetName",
        "fillParams",
        "CanonicalTreeParser",
        "readProperties",
        "clearConsumingCell",
        "peeledObjectId",
        "sheetName",
        "ft",
        "getFormatString",
        "putPathParameter",
        "IndexWriter",
        "Ptg",
        "newSource",
        "Daemons",
        "getComplexData",
        "findFunction",
        "DocMaker",
        "createShape",
        "serializePtgs",
        "escherRecords",
        "LittleEndianConsts",
        "balancedTree",
        "toBlockIndex",
        "getWriteAccess",
        "getIntBlock",
        "IntegerEncoder",
        "PathFilter",
        "atnSimulator",
        "FunctionID",
        "getNode",
        "createRecord",
        "SshConstants",
        "CharVector",
        "loadPriorSnapshots",
        "SrndQuery",
        "FormatRun",
        "rebaseResult",
        "[",
        "evaluateRef",
        "PayloadEncoder",
        "AttributeImpl",
        "WindowTwoRecord",
        "FunctionMetadata",
        "getDy1",
        "Pushback",
        "keySet",
        "PColor",
        "open",
        "hypFile",
        "SV",
        "getOrCreateLinkTable",
        "sentenceSplitter",
        "objectId",
        "anchor",
        "LoosePeeledTag",
        "IntervalSet",
        "_evaluator",
        "removed",
        "ArrayPredictionContext",
        "readCompressedUnicode",
        "_record",
        "iMode",
        "mods",
        "getRawData",
        "NUM_BYTES_OBJECT_REF",
        "getInterpreter",
        "sessionToken",
        "_errHandler",
        "AbstractEscherHolderRecord",
        "getNameXPtg",
        "toRefName",
        "isValidTermOrPhrase",
        "qqf",
        "startsWithCheckLength",
        "FlushInfo",
        "ModifierQueryNode",
        "HSSFSimpleShape",
        "field_pictureData",
        "ChangeIdUtil",
        "openResource",
        "tagTargets",
        "has",
        "hssf",
        "wmf",
        "newPtg",
        "initialBspos",
        "writeByte",
        "LinkTable",
        "syntaxError",
        "TermData",
        "openInput",
        "FormulaError",
        "ParseTreeMatch",
        "CharArrayMap",
        "getErrorDisplay",
        "DVALRecord",
        "_movedBuiltins",
        "PositionIncrementAttribute",
        "newSummaryInformation",
        "viableAlts",
        "mbk",
        "adjustPtg",
        "encoder",
        "dir2",
        "ReflogReader",
        "resolveRange",
        "wtMode",
        "isDirNoGitLinks",
        "EscherDgRecord",
        "walk",
        "LabelRecord",
        "getFileSharing",
        "BytesRef",
        "Name",
        "getErrorListenerDispatch",
        "parseRKs",
        "PostingsAndFreq",
        "_definedNames",
        "I_MatchPredicate",
        "HSSFClientAnchor",
        "&",
        "OpenNLPOpsFactory",
        "_byname",
        "lnk",
        "_sheet",
        "func",
        "escherRecord",
        "getS3Object",
        "AbbreviatedObjectId",
        "setPrintArea",
        "visitRecord",
        "CharBuffer",
        "refEval",
        "info",
        "displayName",
        "WeightedTerm",
        "numDirtyChunks",
        "recognition",
        "SheetNameFormatter",
        "segmentInfo",
        "setMultiValued",
        "rec",
        "PageSettingsBlock",
        "FileEntry",
        "termsToFind",
        "SubStringRevFilter",
        "display",
        "vocabulary",
        "ObjRecord",
        "matchedEOF",
        "getRuleNames",
        "_jumpTable",
        "readUnicodeLE",
        "createProperties",
        "allocSlice",
        "snapShot",
        "cell",
        "setSequenceName",
        "FormulaRecord",
        "DateUtil",
        "_mergedRegions",
        "BlankRecord",
        "setReaderTestPoint",
        "postingsWriter",
        "Lucene84PostingsWriter",
        "getFormatRun",
        "SharedFormulaRecord",
        "CellType",
        "fieldInfos",
        "not",
        "clearPriorSnapshots",
        "EscherContainerRecord",
        "BoolEval",
        "GutsRecord",
        "BoolErrRecord",
        "AbstractList",
        "decode",
        "encodedData",
        "toDirectoryIndex",
        "IdentityEncoder",
        "encoderClass",
        "qmkrClass",
        "subMap",
        "LazyField",
        "getBuiltInName",
        "sourceSet",
        "SortedSetSortField",
        "getSheetNameRange",
        "idEqual",
        "Term",
        "implCanEncode",
        "NativeUnixIndexInput",
        "readFirst512",
        "fetchResult",
        "custColor",
        "freenode",
        "RevSort",
        "delPolicy",
        "listener",
        "singleTokenDeletion",
        "targetImpl",
        "writeCharacterData",
        "_evaluationFrames",
        "maskedQuery",
        "copyTo",
        "NameCommentRecord",
        "CFRecordsAggregate",
        ".",
        "getCharacterClass",
        "_validationList",
        "disableRefLog",
        "genre",
        "POILogger",
        "singleTokenInsertion",
        "Automaton",
        "headMap",
        "JJCalls",
        "blockStore",
        "HyphenationCompoundWordTokenFilter",
        "ATNSimulator",
        "is",
        "cannotDetermineProxyFor",
        "getConfig",
        "withScriptBootstrapAction",
        "ret",
        "OptionalFields",
        "characterDefinition",
        "field",
        "=",
        "base10byte",
        "Document",
        "getWordSet",
        "state",
        "diff",
        "refreshProgress",
        "_precedenceStack",
        "getPOSTagger",
        "_ctx",
        "$genre",
        "runAndMaybeStats",
        "OrQuery",
        "path",
        "row",
        "_string",
        "nextTokenOnChannel",
        "createSumRange",
        "evaluateStringArg",
        "SeekStatus",
        "untrackedParentFolders",
        "Builder",
        "RawParseUtils",
        "_recordCreatorsById",
        "FormatRecord",
        "Record",
        "r",
        "currentSubtree",
        "tnode",
        "Vocabulary",
        "FSTTermsWriter",
        "lastEntryReturned",
        "RevFilter",
        "FieldsQuery",
        "addValueRecord",
        "CellStyle",
        ":",
        "boolResult",
        "QueryNode",
        "NLPLemmatizerOp",
        "SubStringSearch",
        "baseTree",
        "visitIfPresent",
        "writeIndexHeader",
        "getFieldsQuery",
        "value",
        "create",
        "LB",
        "clearFormulaEntry",
        "NONE",
        "poi",
        "Double",
        "getXFIndex",
        "unmodifiableMap",
        "encountered",
        "indexField",
        "emf",
        "ExternalName",
        "copyChars",
        "_formats",
        "setIndexFieldName",
        "getSingleValue",
        "_records",
        "IndexFileNames",
        "tags",
        "LexerCustomAction",
        "distErr",
        "thisFont",
        "Type",
        "NullEscherSerializationListener",
        "zzFinalHighSurrogate",
        "nameName",
        "evaluateArgParity",
        "fieldTypes",
        "getNameDefinition",
        "getNameRecord",
        "<",
        "setParentId",
        "_syntaxErrors",
        "HSSFCellStyle",
        "updateExhausted",
        "instance",
        "Operator",
        "FieldsConsumer",
        "implFlush",
        "CellReference",
        "nr",
        "MV",
        "convertRKRecords",
        "parseCommit",
        "LooseNonTag",
        "legacyCredential",
        "subAgg",
        "node",
        "getChunker",
        "ArrayRecord",
        "anyExhaustibleTasks",
        "getDirectory",
        "getSeverity",
        "Function",
        "setCachedBooleanResult",
        "isExternalFunction",
        "writeVLong",
        "getEncodedSize",
        "IntBlockPool",
        ",",
        "writeFooter",
        "calculate",
        "Cell",
        "TableRecord",
        "insertBalanced",
        "colForValByRound",
        ">",
        "getOptions",
        "ParserRuleContext",
        "DrawingRecord",
        "ReplicationSession",
        "idFor",
        "CellValueRecordInterface",
        "read",
        "recomputeFree",
        "CharStream",
        "_workbook",
        "ExternalSheetRange",
        "file",
        "addNameXPtg",
        "ViewDefinitionRecord",
        "characterIdOfFirstCharacter",
        "_cellType",
        "chunkerModelFile",
        "getFunctionByIndex",
        "SmallDocSet",
        "fillSlice",
        "TokenStream",
        "rb",
        "resolveNameXText",
        "SymLinks",
        "ErrorEval",
        "task",
        "NativeUnixIndexOutput",
        "parseEntry",
        "FSTTermsReader",
        "xptg",
        "on",
        "badObjectType",
        "IndexableField",
        "classmap",
        "docData",
        "existingTerm",
        "safe",
        "tailMap",
        "Multiset",
        "TextObjectRecord",
        "remove",
        "CustomProperty",
        "getExternalBookRecord",
        "writeData",
        "DocumentDescriptor",
        "isComponentRecord",
        "Break",
        "attributeImpls",
        "proxySelector",
        "NameXPtg",
        "segmentName",
        "getFieldNames",
        "dictionary",
        "convert",
        "_workbookRecordList",
        "redimNodeArrays",
        "evaluate",
        "Entry",
        "OperandResolver",
        "HSSFChildAnchor",
        "BlankEval",
        "isValidSchemeChar",
        "adjustFormula",
        "CharTermAttribute",
        "zzAtEOF",
        "record",
        "_hs",
        "getRawMode",
        "shingle",
        "_buildParseTrees",
        "!=",
        "getSymLinks",
        "\"",
        "HSSFRow",
        "WindowOneRecord",
        "complete",
        "tokenStream",
        "nItems",
        "FieldsProducer",
        "mergeResult",
        "getObjectId",
        "out",
        "LabelSSTRecord",
        "SessionToken",
        "getIndexDeletionPolicy",
        "ptg",
        "Modifier",
        "NumberRecord",
        "POIFSDocumentPath",
        "getCol1",
        "_pls",
        "PatternSearch",
        "getAnchorType",
        "Clause",
        "guessEncoding",
        "OpenSshConfig",
        "RuleBasedBreakIterator",
        "estimatedSegmentSize",
        "currentRun",
        "convertToNumberRecord",
        "DimConfig",
        "_read",
        "deflate",
        "hasMultibyte",
        "mcr",
        "si",
        "array",
        "Workbook",
        "_rowRecords",
        "readTaskQueryMaker",
        "mergeInfo",
        "getNextBlock",
        "CellRangeAddress",
        "_breakMap",
        "getTaxoArrays",
        "ExternalSheet",
        "createCriteriaPredicate",
        "DirectoryEntry",
        "reader",
        "OpenNLPChunkerFilter",
        ")",
        "pictures",
        "aeRange",
        "_cfHeaders",
        "RowRecord",
        "ColumnInfoRecord",
        "makeLuceneQueryField",
        "createOutput",
        "getDataFormat",
        "ATN",
        "findFirstRecordLocBySid",
        "upstreamCommit",
        "InputSource",
        "ANTLRErrorListener",
        "getBlockAt",
        "ExternalBookBlock",
        "FormulaRecordAggregate",
        "ExtendedFormatRecord",
        "FileSharingRecord",
        "refLogMessage",
        "LexerIndexedCustomAction",
        "TermInfo",
        "mp",
        "RKRecord",
        "addCell",
        "elsesorting",
        "weightedSpanTerm",
        "currMap",
        "setCellType",
        "_booleanValue",
        "DrawingSelectionRecord",
        "config1",
        "TerminalNode",
        "TreeFilter",
        "closeWhileHandlingException",
        "getRunData",
        "VocabularyImpl",
        "TokenSource",
        "FuncVarPtg",
        "<sortedset",
        "NLPChunkerOp",
        "ref",
        "delegate",
        "EscherPropertyFactory",
        "docsInFirstIndex",
        "requireDimCount",
        "URLEncoder",
        "NumberEval",
        "splitExtensionField",
        "$tags",
        "splitSentences",
        "HSSFCell",
        "getEscherRecords",
        "SnapshotDeletionPolicy",
        "DecisionInfo",
        "Token",
        "PowerPoint",
        "letChildReport",
        "setTrace",
        "MergeCellsRecord",
        "createIndex",
        "PostingsReaderBase",
        "JaroWinklerDistance",
        "gramSize",
        "metaData",
        "Modifiers",
        "visitContainedRecords",
        "getDecisionInfo",
        "oq",
        "setNameDefinition",
        "getTermInfo",
        "convertRangeArg",
        "addContextToParseTree",
        "termBytesReader",
        "ArrayPtg",
        "OffsetAttribute",
        "queryTerm",
        "CircularSequence",
        "is16bitEncoded",
        "EOFRecord",
        "getRunInBackground",
        "_headerRec",
        "next",
        "chunkerOp",
        "appendFormat",
        "SingletonPredictionContext",
        "scratch",
        "countArg",
        "(",
        "FooterLine",
        "tokenized",
        "other",
        "NameRecord",
        "AreaEval",
        "factorial",
        ";",
        "State",
        "rowCells",
        "EscherRecord",
        "Lucene84PostingsReader",
        "ProcessBuilder",
        "postingsReader",
        "FontRecord",
        "commitMessage",
        "isParallel",
        "afterRecordSerialize",
        "subTo",
        "c",
        "shifter",
        "TextFunction",
        "ValueEval",
        "loopDetector",
        "getVocabulary",
        "HSSFEvaluationCell",
        "FunctionMetadataRegistry",
        "FSDirectory",
        "]",
        "setID",
        "finish",
        "refill",
        "SubInfo",
        "_parseListeners",
        "createDefaultPalette",
        "oldSource",
        "getWorkbook",
        "dir1",
        "subIndex",
        "TernaryTree",
        "parseFormula",
        "getHyphenationTree",
        "_tokenFactorySourcePair",
        "update",
        "String",
        "dgg",
        "FileMode",
        "_builtinFormats",
        "luceneSubQueries"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "API Interaction",
        "Data Processing",
        "Utility Functions",
        "File Operations",
        "Object Manipulation"
      ],
      "Description": "These tokens represent methods in C# classes.  They perform various actions, including data retrieval (e.g., getMissingSymbol, getFontIndex), data transformation (e.g., parseHexInt4), object creation (e.g., createShape), and file handling (e.g., readProperties, openResource). The methods are used in different parts of the code for various purposes, such as handling data, interacting with external systems, and managing objects. The context sentences show how these methods are called and used within a larger application."
    }
  },
  {
    "c2": {
      "Unique tokens": [
        "\"",
        "null",
        ",",
        "path",
        ".",
        "args",
        "0",
        "+",
        "idx",
        "Locale",
        "maxIn",
        "ch",
        "PREFIX_LENGTH_KEY",
        "getParser",
        "{",
        "==",
        "field",
        "]",
        "short",
        "append",
        ")",
        "name",
        "int",
        "MODE",
        "(",
        "buffer",
        "\\n",
        "i",
        "instanceof",
        "minIn",
        "-",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "File System Operations",
        "Text Processing",
        "Lexical Analysis",
        "Parsing",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features, including keywords, operators, and identifiers.  They are used in various contexts, such as file manipulation, string processing, lexical analysis, parsing, and exception handling. The sentences demonstrate common C# programming patterns and structures, such as method definitions, loops, conditional statements, and exception handling blocks.  The semantic tags highlight the diverse functionalities and purposes of the code snippets."
    }
  },
  {
    "c3": {
      "Unique tokens": [
        "",
        "getType",
        "Type",
        "upstream",
        "setForceUpdate",
        "else",
        "break",
        "isSymbolic",
        ")",
        "modCount",
        "expTarget",
        "isGitRepository",
        "setExpectedOldObjectId",
        "setRefLogMessage",
        "getRepository",
        "finished",
        "if",
        "refLogMessage",
        "configs",
        "null",
        ",",
        "default",
        ">",
        "use",
        "getName",
        "MessageFormat",
        "==",
        "zeroId",
        "setResult",
        "name",
        "getNewId",
        "Result",
        "true",
        "DELETE",
        "getRef",
        "UPDATE",
        "Token",
        "p",
        "push",
        "!",
        "boolean",
        "OK",
        "setNewObjectId",
        "newDoc",
        ".",
        "return",
        "IOException",
        "unknownZlibError",
        "delete",
        "link",
        "OpenMode",
        "equals",
        "getRevWalk",
        "SLL",
        "_value",
        "=",
        "rp",
        "RefUpdate",
        "doc=",
        "UPDATE_NONFASTFORWARD",
        "(",
        "catch",
        "detach",
        "!=",
        ";",
        "updateRef",
        "\"",
        "type",
        "getTarget",
        "switch",
        "err",
        "refLogIncludeResult",
        "isAllowNonFastForwards",
        "doc",
        "CREATE",
        "ObjectId",
        "r",
        "}",
        "case",
        "{",
        "getRefLogIdent",
        "reject",
        ":",
        "setRefLogIdent",
        "&&",
        "getOldId",
        "ru",
        "getNewSymref",
        "inf",
        "update"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c4": {
      "Unique tokens": [
        "getInt",
        "\"",
        "null",
        "ris",
        "getBoolean",
        ".",
        "return",
        "IOUtils",
        "requireInt",
        "new",
        "StringUtil",
        "id",
        "+",
        "0",
        "Math",
        "cchName",
        "MAX_RECORD_LENGTH",
        "get",
        "externalWorkbookNumber",
        "subRecordData",
        "sheetName",
        "false",
        "=",
        "short",
        "cchDefPivotStyle",
        "RkRec",
        "+=",
        "CRNCountRecord",
        "readStringCommon",
        "(",
        "1",
        "getFrac",
        "in",
        "IntList",
        "ConstantValueParser",
        "-",
        "field_2_first_column_index",
        "sheetNames",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Data Input/Output",
        "Record Management",
        "Data Structures",
        "File Processing",
        "Data Serialization"
      ],
      "Description": "The tokens represent a mix of C# keywords, operators, and identifiers commonly used in data processing and file handling.  They are part of a system that reads and processes data from a record-based input stream (likely a file format), populating various C# objects (Records) with data.  The use of `RecordInputStream`, `readShort`, `readInt`, `readString`, etc., indicates that the code is designed to parse a binary file format.  The semantic tags reflect the overall functionality of managing and processing records, which are likely part of a larger data structure or file system."
    }
  },
  {
    "c5": {
      "Unique tokens": [
        "executeSearchUsers",
        "executeDeclineInvitations",
        "executeModifyScheduledAction",
        "executeUntagStream",
        "executeDisableEnhancedMonitoring",
        "executePutLifecycleHook",
        "executePutExternalModel",
        "executeUploadDocuments",
        "executeModifyIdFormat",
        "executeDisassociateAddress",
        "executeEnterStandby",
        "executeSearchProfiles",
        "executeEnableDirectory",
        "executePreviewAgents",
        "executeReceiveMessage",
        "executeExportApi",
        "executeExpireSession",
        "executePutResolverRulePolicy",
        "executeVerifyEmailAddress",
        "executeDetectText",
        "executePutDashboard",
        "executeDisableDirectory",
        "executeDisassociateResolverRule",
        "executeDetachLoadBalancers",
        "executeStartMatchBackfill",
        "executeRegisterAVSDevice",
        "executeSearchDevices",
        "executeDisableUser",
        "executeBatchGetNamedQuery",
        "executeRequestUploadCredentials",
        "executeStopInstances",
        "executeRunJobFlow",
        "executeImportVolume",
        "executeSearchSkillGroups",
        "executeBuildSuggesters",
        "executeAttachTypedLink",
        "executeDetectEntities",
        "executeIndexDocuments",
        "executeAddTags",
        "executeUpgradeAppliedSchema",
        "executeDefineExpression",
        "executeSearchContacts",
        "executeBatchGetVariable",
        "executeImportApiKeys",
        "executeAddApplicationInput",
        "executeRejectSkill",
        "executeStartInstances",
        "executeCopyImage",
        "executeSubscribeToDataset",
        "executeStopRelationalDatabase",
        "executeRegisterTaskDefinition",
        "executeResetInstanceAttribute",
        "executeExportImage",
        "executeModifyVpcEndpoint",
        "executeUpgradePublishedSchema",
        "executeFailoverDBCluster",
        "executeStopMatchmaking",
        "executeDetachPolicy",
        "executeSendEvent",
        "executeRevokeInvitation",
        "executeDefineSuggester",
        "executeAttachObject",
        "executeSendInvitation",
        "executeUploadLayerPart",
        "executeImportRestApi",
        "executeAbortVaultLock",
        "executeRemoveTagsFromResource",
        "executeBatchDetectSentiment",
        "executeStartProjectVersion",
        "executeStopTrainingEntityRecognizer",
        "executeStartMigration",
        "executeVoteOnProposal",
        "executeAcceptInvitation",
        "executeModifySnapshotSchedule",
        "executeStopFleetActions",
        "executeModifyFleet",
        "executeAuthorizeIpRules",
        "executeReadPreset",
        "executeRebootDBInstance",
        "executeBatchGetApplications",
        "executeAllocateHosts",
        "executeDiscoverInputSchema",
        "executePutMethodResponse",
        "executeStartHumanLoop",
        "executeLookupDeveloperIdentity",
        "executeRebootInstances",
        "executeEnableVolumeIO",
        "executeUnsubscribeFromEvent",
        "executePutImage",
        "executeDisassociateDomain",
        "executeRunScheduledInstances",
        "executeImportInstance",
        "executeAssociateFleet",
        "executeReorderReceiptRuleSet",
        "executeDetectStackResourceDrift",
        "executeAllocatePublicVirtualInterface",
        "executeStartDeployment",
        "executeRebootCluster",
        "executeStartMatchmaking",
        "executeTestEventPattern",
        "executeTagDeliveryStream",
        "executeSendMessages",
        "executeBatchRead",
        "executePeerVpc",
        "executeRegisterImage",
        "executeBatchDeleteImage",
        "executeCancelResize",
        "executeMigrateWorkspace",
        "executeRestoreWorkspace",
        "executeRemoveTargets",
        "executeReimportApi",
        "executeDeregisterStreamConsumer",
        "executeSendBounce",
        "executeDetachObject",
        "executeDisassociateRepository",
        "executeTestRenderTemplate",
        "executePurchaseProvisionedCapacity",
        "executeDetectKeyPhrases",
        "executeSuspendProcesses",
        "executeTestInvokeAuthorizer",
        "executeConfirmTransitVirtualInterface",
        "executeStopMonitoringSchedule",
        "executeDefineIndexField",
        "executeAttachDisk",
        "executeStartMonitoringMembers",
        "executeDownloadDefaultKeyPair",
        "executeBatchDeleteAttributes",
        "executeApplySchema",
        "executeExportSnapshot",
        "executePutVoiceConnectorProxy",
        "executePutInvitationConfiguration",
        "executeSendUsersMessages",
        "executeTerminateJobFlows",
        "executeSendMessage",
        "executeModifyInstanceAttribute",
        "executePauseCluster",
        "executeDeregisterTaskDefinition",
        "executeResetImageAttribute",
        "executeSendCommand",
        "executeDomainMetadata",
        "executeModifyDBInstance",
        "executeDetachTypedLink",
        "executeCancelIngestion",
        "executeInitiateJob",
        "executeAssociateRepository",
        "executeDetachVolume",
        "executeTagResource",
        "executeStartWorkflowExecution",
        "executeSplitShard",
        "executeStartFaceDetection",
        "executeRebootInstance",
        "executeResizeCluster",
        "executeModifyVolumeAttribute",
        "executeModifyVpnConnection",
        "executeDetachInternetGateway",
        "executeAddTagsToStream",
        "executeDefineAnalysisScheme",
        "executePutGatewayResponse",
        "executeDisassociateMembers",
        "executeModifyImageAttribute",
        "executeRemoveTags",
        "executeEnableUser",
        "executeTranslateText",
        "executeVerifyDomainDkim",
        "executeArchiveFindings",
        "executeTagMeeting",
        "executeBatchUpdateUser",
        "executeDetectSentiment",
        "executeRemoveResourcePermission",
        "executeModifyDBClusterEndpoint",
        "executeSendRawEmail",
        "executeDisableRule",
        "executeStartNotebookInstance",
        "executeImportTerminology",
        "executeVerifyDomainIdentity",
        "executeCancelDataRepositoryTask",
        "executeDetachVpnGateway",
        "executeConfirmProductInstance",
        "executeAssociateRouteTable",
        "executePutRestApi",
        "executeAssociateHostedConnection",
        "executeAssociateAddress",
        "executePutAlarm",
        "executeRebootBroker",
        "executeRegisterUser",
        "executeRejectAssignment",
        "executePutAutoScalingPolicy",
        "executeExitStandby",
        "executeSignalWorkflowExecution",
        "executeStartImageBuilder",
        "executeMonitorInstances",
        "executeCancelConversionTask",
        "executeRenewDomain",
        "executeBatchPutAttributes",
        "executeStopImageBuilder",
        "executeBatchDetectEntities",
        "executeSignalResource",
        "executePutEventsConfiguration",
        "executeDetachFromIndex",
        "executeRequestSpotFleet",
        "executeRegisterStreamConsumer",
        "executeAssociateVirtualInterface",
        "executePutOutcome",
        "executeAttachPolicy",
        "executeStopTrainingDocumentClassifier",
        "executeUnpeerVpc",
        "executeCompareFaces",
        "executeImportApi",
        "executeReadJob",
        "executeStartApplication",
        "executeCancelExportTask",
        "executePutRule",
        "executeResetPassword",
        "executeRebootWorkspaces",
        "executeRejectQualificationRequest",
        "executeStopDBCluster",
        "executeStartExportTask",
        "executeRegisterToWorkMail",
        "executeExecuteChangeSet",
        "executeStartDocumentAnalysis",
        "executeCancelBundleTask",
        "executeStartQueryExecution",
        "executeCancelCluster",
        "executeRemoveAttributes",
        "executeConfirmPublicVirtualInterface",
        "executeAllocateAddress",
        "executeStopActivityStream",
        "executeSendMessageBatch",
        "executeReleaseStaticIp",
        "executePutDetector",
        "executePutIdentityPolicy",
        "executePutNotificationConfiguration",
        "executePutAccessControlRule",
        "executePutModel",
        "executeTransferDomain",
        "executePutMethod",
        "executeStartFleet",
        "executeRevokeIpRules",
        "executeRevokeDomainAccess",
        "executeAttachNetworkInterface",
        "executeRemoveTagsFromStream",
        "executeBatchGetDeployments",
        "executeAllocateTransitVirtualInterface",
        "executePutLifecyclePolicy",
        "executePostToConnection",
        "executeCloneReceiptRuleSet",
        "executeAttachVolume",
        "executeDisassociateTrialComponent",
        "executeStopMonitoringMembers",
        "executeDisconnectParticipant",
        "executeTestRole",
        "executePutAccountSetting",
        "executePutSkillAuthorization",
        "executeBatchWrite",
        "executeCancelSteps",
        "executeBulkPublish",
        "executeStartAssessmentRun",
        "executeRegenerateSecurityToken",
        "executeStopTrainingJob",
        "executeReadPipeline",
        "executeTerminateWorkflowExecution",
        "executeInviteUsers",
        "executeTagStream",
        "executeRenderUiTemplate",
        "executeStopInstance",
        "executeUploadMultipartPart",
        "executeReleaseAddress",
        "executeUnmonitorInstances",
        "executeConfigureHealthCheck",
        "executePutRecordBatch",
        "executeSynthesizeSpeech",
        "executeIsVpcPeered",
        "executeModifyHosts",
        "executeContinueUpdateRollback",
        "executeDetachNetworkInterface",
        "executeTestAlarm",
        "executeModifySnapshotAttribute",
        "executeValidateConfiguration",
        "executePhoneNumberValidate",
        "executeDetachInstances",
        "executePutVoiceConnectorTermination",
        "executeBatchCreateVariable",
        "executeStopLabelingJob",
        "executeBundleInstance",
        "executeRecordLifecycleActionHeartbeat",
        "executeBatchUpdatePhoneNumber",
        "executeRunTask",
        "executeSearchFacesByImage",
        "executeStopNotebookInstance",
        "executeChangeMessageVisibility",
        "executeDetectLabels",
        "executeDetachDisk",
        "executeStartDeviceSync",
        "executeEstimateTemplateCost",
        "executeStartMonitoringSchedule",
        "executeAddTagsToVault",
        "executeStartDBInstance",
        "executePublishSchema",
        "executeStopProcessingJob",
        "executeExecutePolicy",
        "executeChangeTagsForResource",
        "executePurgeQueue",
        "executeRestoreAddressToClassic",
        "executeApproveSkill",
        "executeDeregisterType",
        "executeSetDataRetrievalPolicy",
        "executeStartWorkspaces",
        "executeRotateEncryptionKey",
        "executeAddPermission",
        "executePutRecords",
        "executeDetectSyntax",
        "executeDetectDocumentText",
        "executeEnableRule",
        "executeBatchGetImage",
        "executeDisableLogging",
        "executeConfirmConnection",
        "executeModifySubnetAttribute",
        "executeStartFaceSearch",
        "executeImportKeyPair",
        "executeRunInstances",
        "executeStopHumanLoop",
        "executeBatchStopUpdateAction",
        "executeDetectStackDrift",
        "executeBatchGetQueryExecution",
        "executeStartImageScan",
        "executeStopTransformJob",
        "executeModifyCluster",
        "executePurchaseHostReservation",
        "executeCheckDomainAvailability",
        "executeModifyCertificates",
        "executeConfirmPrivateVirtualInterface",
        "executeSendBonus",
        "executeStopAssessmentRun",
        "executeStopDeployment",
        "executeStopEntitiesDetectionJob",
        "executeStopStreamProcessor",
        "executeViewBilling",
        "executeUnsubscribeFromDataset",
        "executeStartTextDetection",
        "executePutAttributes",
        "executeDetectDominantLanguage",
        "executePutRecord",
        "executeClassifyDocument",
        "executeDetectFaces",
        "executeRejectInvitation",
        "executeDetectStackSetDrift",
        "executeStartInstance",
        "executeDeregisterImage",
        "executeResolveRoom",
        "executeSendEmail",
        "executePutInsightRule",
        "executeRebuildWorkspaces",
        "executeAddFacetToObject",
        "executeDetachStaticIp",
        "executeDisassociateFleet",
        "executeModifyVpcAttribute",
        "executeBatchApplyUpdateAction",
        "executePutConferencePreference",
        "executeVerifyEmailIdentity",
        "executeAttachInternetGateway",
        "executeCopyWorkspaceImage",
        "executeAllocatePrivateVirtualInterface",
        "executeStopDBInstance",
        "executeSetRepositoryPolicy",
        "executeCompleteLifecycleAction",
        "executeDisableMetricsCollection",
        "executeTestInvokeMethod",
        "executeModifyWorkspaceState",
        "executeClaimGameServer",
        "executeDeregisterContainerInstance",
        "executeCopySnapshot",
        "executePutEventStream",
        "executeSendAnnouncement",
        "executePurchaseScheduledInstances",
        "executeTestDNSAnswer",
        "executeAddTagsToResource",
        "executeDetectCustomLabels",
        "executeAcceptMatch",
        "executeStartStreamProcessor",
        "executeRegisterApplicationRevision",
        "executeRemoveFacetFromObject",
        "executePutScalingPolicy",
        "executeDeactivateUser",
        "executeAttachVpnGateway",
        "executeUntagResource",
        "executeCancelImportTask",
        "executePutLifecycleConfiguration",
        "executeSendVoiceMessage",
        "executeStopTextTranslationJob",
        "executeConfigureAgent",
        "executeDeactivateEventSource",
        "executeSetAlarmState",
        "executeSubscribeToEvent",
        "executeRegisterGameServer",
        "executeSearchFaces",
        "executeAssociateResolverRule",
        "executeStopStreamEncryption",
        "executeImportSnapshot",
        "executePutEvents",
        "executeMergeDeveloperIdentities",
        "executeBatchDetectSyntax",
        "executeModifyNetworkInterfaceAttribute",
        "executeEnableMetricsCollection",
        "executeCompleteMigration",
        "executeAttachToIndex",
        "executeUnlinkIdentity",
        "executeAcceptQualificationRequest",
        "executeStopProjectVersion",
        "executeAssociateDomain",
        "executeValidateTemplate",
        "executePutMetricAlarm",
        "executeStopAutoMLJob",
        "executeLogoutUser",
        "executeResolveAlias",
        "executeImportImage",
        "executeResetSnapshotAttribute",
        "executeBatchSuspendUser",
        "executeRecordHandlerProgress",
        "executeStopQueryExecution",
        "executeAssociateTrialComponent",
        "executeDeregisterGameServer",
        "executeStartLabelDetection",
        "executeRestoreDomainAccess",
        "executeAttachInstances",
        "executeRestorePhoneNumber",
        "executeIncreaseReplicationFactor",
        "executeBatchDeletePhoneNumber",
        "executeStartMonitoringMember",
        "executeSignOutUser",
        "executeRebootRelationalDatabase",
        "executeDeprecateDomain",
        "executeLookupPolicy",
        "executeTerminateWorkspaces",
        "executeSendDiagnosticInterrupt",
        "executeInvokeEndpoint",
        "executeDisassociateMembership",
        "executeRegisterDomain",
        "executeInviteMembers",
        "executeModifyLaunchTemplate",
        "executeEnableAddOn",
        "executeAssociateIpGroups",
        "executeModifyDBCluster",
        "executePutSchemaFromJson",
        "executePutCompositeAlarm",
        "executePutLexicon",
        "executePutFileSystemPolicy",
        "executeStopApplication",
        "executeAbortMultipartUpload",
        "executeCompleteLayerUpload",
        "executeStopFleet",
        "executeRemovePermission",
        "executeStartStreamEncryption",
        "executeFlushStageCache",
        "executeAnalyzeDocument",
        "executeBatchCheckLayerAvailability",
        "executeSetStackPolicy",
        "executeNotifyWorkers",
        "executeCancelJob",
        "executePutTargets",
        "executePutPermission",
        "executeGenerateClientCertificate",
        "executeImportWorkspaceImage"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "Cloud Service Operations",
        "API Gateway",
        "AWS Service Integration",
        "Asynchronous Actions",
        "Resource Management"
      ],
      "Description": "These tokens represent methods in a C# client library designed to interact with various AWS services.  Each method likely executes a specific operation on a particular AWS resource (e.g., stopping a text translation job, applying an update action). The methods' names clearly indicate the actions they perform, and the use of 'execute' as a prefix suggests that these methods are wrappers around lower-level execution logic. The semantic tags reflect the broad scope of AWS services and operations covered by these methods."
    }
  },
  {
    "c6": {
      "Unique tokens": [
        "SpanQuery",
        "ATNState",
        "StringBuilder",
        "Collection",
        "GetPolicyRequest",
        "ByteBuffer",
        "CellRangeAddress",
        "<",
        "ContinuableRecordOutput",
        "RecordVisitor",
        "long",
        "FieldConfig",
        "HSSFCellStyle",
        "Interval",
        "IndexWriter",
        "short",
        ")",
        "FooterKey",
        "int",
        "RowRecord",
        "NormalizeCharMap",
        "Ptg",
        "Path",
        "FormulaShifter",
        "BasicStats",
        "CellCacheEntry",
        "Config",
        "RecordStream",
        "Element",
        "ExtendedFormatRecord",
        "IntBuffer",
        "PersonIdent",
        "K",
        "Ref",
        "EscherContainerRecord",
        "URIish",
        "Cell",
        "FileFilter",
        "QualityStats",
        "ParserRuleContext",
        "Shape",
        "SrndQuery",
        "Row",
        "ExtRst",
        "DocData",
        "TreeFilter",
        "ShardRef",
        "BigInteger",
        "CharStream",
        "ReadTask",
        "byte",
        "FieldInfos",
        "Object",
        "float",
        "TaskStats",
        "Terms",
        "TokenStream",
        "Term",
        "DecisionState",
        "InputStream",
        "SegToken",
        "DataOutput",
        "Date",
        "_interp",
        "PredictionMode",
        "double",
        "RevSort",
        "HSSFCell",
        "CharsRef",
        "SemanticContext",
        "Token",
        "Map",
        "boolean",
        "Matcher",
        "SegmentWriteState",
        "ResourceLoader",
        ".",
        "char",
        "FS",
        "EscherBSERecord",
        "Automaton",
        "ATNConfig",
        "ObjectIdRef",
        "LongBuffer",
        "SpatialArgs",
        "FloatBuffer",
        "FieldPhraseList",
        "final",
        "ThreeDEval",
        "ParseTreeListener",
        "ET",
        "HSSFChildAnchor",
        "OutputStream",
        "InputIterator",
        "Calendar",
        "SingletonPredictionContext",
        "IndexCommit",
        "RefUpdate",
        "LocalDateTime",
        "(",
        "File",
        "AnyObjectId",
        "IndexSearcher",
        "o",
        "other",
        "NameRecord",
        "TermData",
        "java",
        "State",
        "Analyzer",
        "Parser",
        "FontRecord",
        "Directory",
        "IntStream",
        "C",
        "E",
        "Passage",
        "StringBuffer",
        "Reader",
        "ShortBuffer",
        "Trie",
        "DataInput",
        "Revision",
        "BytesRef",
        "ChecksumIndexInput",
        "Lexer",
        "List",
        "HttpConnection",
        "ValueEval",
        "RevFilter",
        "DiffEntry",
        "ReaderSlice",
        "PostingsAndFreq",
        "Property",
        "QueryNode",
        "IntsRef",
        "String",
        "EscapeQuerySyntax",
        "Repository",
        "ReceivePack",
        "ByteBlockPool",
        "CharSequence",
        "T",
        "CharBuffer",
        "poi",
        "ExternSheetRecord",
        "FieldInfo",
        "Tree",
        "object",
        "IntSet",
        "DoubleBuffer",
        "URI"
      ],
      "Syntactic Label": "C# identifiers, keywords, operators, and data types",
      "Semantic Tags": [
        "Data Structures",
        "Object-Oriented Programming",
        "API Interaction",
        "Data Processing",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including classes, interfaces, data types, methods, operators, and variables.  They are used in various code snippets that demonstrate different programming concepts, such as object manipulation, data processing, file I/O, and API interaction. The semantic tags reflect the diverse functionalities present in the code examples."
    }
  },
  {
    "c7": {
      "Unique tokens": [
        "",
        "SpanQuery",
        "oprt",
        "termsSet",
        "setRef",
        "CharsRefBuilder",
        "patternRuleIndex",
        "TermQuery",
        "toQueryString",
        "put",
        "BYTE1",
        "cannotReadCommit",
        "newReader",
        "AnalyzerFactory",
        "org.apache.lucene.analysis.core.",
        "SlopQueryNodeBuilder",
        "similarity",
        "stashCommits",
        "IndexOptions",
        "storeTerms",
        "setRevFilter",
        "isSymbolic",
        "ruleIndex",
        "infoStream",
        "set",
        "NormalizeCharMap",
        "setRecursive",
        "boost",
        "getATNState",
        "balancedTree",
        "getConflictingAltSubsets",
        "tortoiseplink",
        "addTree",
        "copyUTF8Bytes",
        "FST",
        "base",
        "q",
        "FieldsQueryList",
        "HSSFFormulaParser",
        "Charset",
        "refLog",
        "DirCacheBuildIterator",
        "[",
        "addAll",
        "getModuleName",
        "RevWalk",
        "open",
        "index:",
        "snapshot",
        "exactRef",
        "getStateString",
        "IntervalSet",
        "commit",
        "PrimaryQuery",
        "removed",
        "ArrayPredictionContext",
        "BytesRefBuilder",
        "hasContexts",
        "toIntsRef",
        "getErrorRecoverySet",
        "ReflogEntry",
        "return",
        "re",
        "IndexDeletionPolicy",
        "creating",
        "underlying",
        "getRefsByPrefix",
        "excludeTreeFilters",
        "ModifierQueryNode",
        "BooleanQueryNodeBuilder",
        "toString",
        "hasObject",
        "getSnowballWordSet",
        "soq",
        "copyBytes",
        "deletion.policy",
        "listMode",
        "relativePath",
        "isAccept",
        "reset",
        "getAttribute",
        "IndexSearcher",
        "fieldInfo",
        "term",
        "createFromStrings",
        "LockFile",
        "Long",
        "getRemoteUrl",
        "PositiveIntOutputs",
        "setAccept",
        "cleanInput",
        "JGitText",
        "EscapeQuerySyntaxImpl",
        "setString",
        "req",
        "RegexpQueryNodeBuilder",
        "walk",
        "tokenize",
        "createProcess",
        "BytesRef",
        "findRef",
        "Implementation",
        "SynonymQueryNode",
        "cached",
        "_parentContextStack",
        "createTerminalNode",
        "stashEntries",
        "hasStateAssociatedWithOneAlt",
        "e",
        "CONFIG_KEY_URL",
        "SpanTermQuery",
        "ErrorNode",
        "notes",
        "image",
        "inErrorRecoveryMode",
        "getWorkTree",
        "revision",
        "asSubclass",
        "FSTCompiler",
        "MultiPhraseQuery",
        "SpanBoostQuery",
        "getStatus",
        "deleteResult",
        "visitRecord",
        "fields",
        "TermsReader",
        "dup",
        "contains",
        "getPath",
        "enterRecursionRule",
        "BailErrorStrategy",
        "EscherSimpleProperty",
        "and",
        "segmentInfo",
        "SheetNameFormatter",
        "version",
        "HadoopJarStepConfig",
        "setErrorHandler",
        "readTask",
        "EnglishAnalyzer",
        "RecognitionException",
        "cannotRead",
        "value:",
        "StartRuleDoesNotConsumeFullPattern",
        "getStateType",
        "TermToBytesRefAttribute",
        "WQuery",
        "fetch",
        "fetcher",
        "cell",
        "ENGLISH_STOP_WORDS_SET",
        "BoostQueryNode",
        "data!",
        "MultiPhraseQueryNode",
        "list",
        "postingsWriter",
        "enterRule",
        "reportInputMismatch",
        "prepareHead",
        "PredictionContext",
        "fieldInfos",
        "readVInt",
        "OBJ_BLOB",
        "scratchUTF16",
        "rootContext",
        "nextTokensContext",
        "getExpectedTokens",
        "<=",
        "getName",
        "compile",
        "BooleanClause",
        "builder",
        "addErrorNode",
        "hasPayloads",
        "added",
        "cost",
        "payload",
        "Term",
        "recover",
        "deepCopyOf",
        "filters",
        "weight",
        "InternalWorkbook",
        "getLeaf",
        "delPolicy",
        "getModulesUpdate",
        "listener",
        "push",
        "singleTokenDeletion",
        "expecting",
        "setState",
        "setAnalyzer",
        ".",
        "visitErrorNode",
        "delete",
        "ppClass",
        "parser",
        "getConfig",
        "visitState",
        "AndRevFilter",
        "ret",
        "entryForNullKey",
        "field",
        "add",
        "=",
        "isEmpty",
        "stq",
        "key",
        "File",
        "standard.",
        "getWordSet",
        "getOptRecord",
        "lockDirCache",
        "fieldNumber",
        "checkCancelled",
        "_ctx",
        "getBSERecord",
        "Analyzer",
        "LexerActionExecutor",
        "path",
        "getRefDatabase",
        "PathFilterGroup",
        "Builder",
        "ModifierQueryNodeBuilder",
        "fstCompiler",
        "format",
        "Record",
        "r",
        "or",
        "}",
        "lexer",
        "termsIndexWriter",
        "getConfigUrl",
        "text",
        "NoMergeScheduler",
        "atn",
        "bQuery",
        "MatchNoDocsQueryNodeBuilder",
        "deleteTagUnexpectedResult",
        "call",
        "ParseCancellationException",
        ":",
        "PhraseQueryNodeBuilder",
        "getAndQuery",
        "String",
        "curPayload",
        "create",
        "WildcardQueryNodeBuilder",
        "FieldInfo",
        "a",
        "notAnObject",
        "Decryptor",
        "FuzzyQueryNode",
        "JGitInternalException",
        "InputMismatchException",
        "generator",
        "startRuleStartState",
        "getState",
        "getFileMode",
        "findUserDefinedFunction",
        "query",
        "PrefixWildcardQueryNode",
        "NullEscherSerializationListener",
        "remove'",
        "bits",
        "ConfigInvalidException",
        "taxoSDP",
        "SynonymQueryNodeBuilder",
        "TermRangeQueryNodeBuilder",
        "RegexpQueryNode",
        "TopTermsBlendedFreqScoringRewrite",
        "setMatchAlmostDiff",
        "SpanOrQuery",
        "buf",
        "build",
        "setBuilder",
        "setFilter",
        "parseCommit",
        "addAttribute",
        "getDistanceQuery",
        "CONFIG_SUBMODULE_SECTION",
        "org.apache.lucene.analysis.",
        "node",
        "createAnalyzer",
        "DirCacheBuilder",
        "SearcherManager",
        "getObjectType",
        "compareTo",
        "setPropertyValue",
        "setIndexCommit",
        ",",
        "spare",
        "MergeScheduler",
        "setMergeScheduler",
        "MultiPhraseQueryNodeBuilder",
        "reportUnwantedToken",
        "ParserRuleContext",
        ">",
        "by",
        "parseIntAt",
        "getFormulaFromTextExpression",
        "read",
        "incrementToken",
        "CharStream",
        "getOrQuery",
        "FieldInfos",
        "revisionVersion",
        "tieBreakerComparator",
        "true",
        "parseEntry",
        "hasConflictingAltSet",
        "t",
        "status",
        "setTreeFilter",
        "SemanticContext",
        "No",
        "Automata",
        "IndexReader",
        "toExternalString",
        "parse",
        "factory",
        "inserter",
        "isPositionDependent",
        "DirectoryReader",
        "checkTree",
        "credentials",
        "checksumEntireFile",
        "exception",
        "filterRefs",
        "Pair",
        "fileFor",
        "equals",
        "PackFile",
        "SimpleTextUtil",
        "reportError",
        "TokenizedPhraseQueryNode",
        "o2",
        "setDiffAlgorithm",
        "AndTreeFilter",
        "url",
        "ParseTreeListener",
        "visitTerminal",
        "ruleToStartState",
        "init",
        "lock",
        "invalidGitType",
        "recognizer",
        "SubmoduleStatus",
        "ModClause",
        "org.apache.lucene.analysis.standard.StandardAnalyzer",
        "exitRule",
        "putty",
        "TransportException",
        "_buildParseTrees",
        "sort",
        "checkIndexHeader",
        "!=",
        "updateRef",
        "\"",
        "stopNow",
        "RuleTransition",
        "normalizer",
        "RevCommit",
        "tokenStream",
        "attribute",
        "clausesList",
        "getMessage",
        "get",
        "ChecksumIndexInput",
        "'",
        "primaryExtensions",
        "readLine",
        "indexCommit",
        "parseURI",
        "whatFollowsLoopIterationOrRule",
        "Util",
        "fst",
        "iterator",
        "addChild",
        "getDecryptor",
        "outputs",
        "DOC",
        "FuzzyQueryNodeBuilder",
        "DOMUtils",
        "skip",
        "pt",
        "openChecksumInput",
        "createErrorNode",
        "StoredConfig",
        "removeEscherProperty",
        "ClassNotFoundException",
        "parserInterp",
        "indexWriter",
        "ATNState",
        "BitSet",
        "setIndexDeletionPolicy",
        "BM25FQuery",
        "currentField",
        "WildcardQueryNode",
        "analyzer",
        "LOG_PREFIX",
        "nextBlock",
        "resultRefs",
        "createJoinQuery",
        "docid",
        "tempFileNamePrefix",
        "setForceUpdate",
        "getPathString",
        "reader",
        "ListMode",
        "pattern",
        ")",
        "startCommit",
        "Exception",
        "isGitRepository",
        "upstreamCommit",
        "tree",
        "result",
        "ConfigConstants",
        "setTextComparator",
        "if",
        "seekDir",
        "getCurrentState",
        "config",
        "LexerIndexedCustomAction",
        "visitRuleStopState",
        "Ref",
        "o1",
        "reduced",
        "MatchAllDocsQueryNode",
        "Error",
        "getATN",
        "SkipRevFilter",
        "unrollRecursionContexts",
        "getSingleton",
        "ParseTreePattern",
        "R_HEADS",
        "setCallable",
        "ruleToStopState",
        "otherState",
        "sync",
        "TerminalNode",
        "closeWhileHandlingException",
        "TreeFilter",
        "getRunData",
        "TokenSource",
        "==",
        "withJar",
        "segmentFileName",
        "stateNumber",
        "SlopQueryNode",
        "name",
        "getNewId",
        "pendingPairs",
        "newTermQuery",
        "size",
        "getFile",
        "class",
        "getExtension",
        "ConjQuery",
        "returnState",
        "CharsRef",
        "Token",
        "resolve",
        "RefSpec",
        "getErrorHandler",
        "CorruptObjectException",
        "DVConstraint",
        "CannotInvokeStartRule",
        "BoostQueryNodeBuilder",
        "dir",
        "index",
        "TooManyClauses",
        "Class",
        "new",
        "analyzerName",
        "ATNConfig",
        "+",
        "isLeftRecursiveRule",
        "reportNoViableAlternative",
        "tempDir",
        "save",
        "getLiveCommitData",
        "endTask",
        "dateRes",
        "previous",
        "PrefixWildcardQueryNodeBuilder",
        "getIndexOptions",
        "fromString",
        "maxCount",
        "terms",
        "hasSemanticContext",
        "_filePassRec",
        "add'",
        "next",
        "getContext",
        "TreeMap",
        "scratch",
        "charsSpare",
        "thisState",
        "(",
        "Analyzer:",
        "catch",
        "TermRangeQueryNode",
        "w",
        "nextTokens",
        "getThumbnail",
        ";",
        "ProcessBuilder",
        "getBytesRef",
        "postingsReader",
        "IntsRefBuilder",
        "MaxCountRevFilter",
        "actuallyDeletedFiles",
        "makeWithin",
        "setOpenMode",
        "opnds",
        "{",
        "getModifierValue",
        "MatchNoDocsQueryNode",
        "getVocabulary",
        "ParseTree",
        "nextTokensState",
        "MatchAllDocsQueryNodeBuilder",
        "mergeScheduler",
        "isATPFunction",
        "]",
        "transition",
        "resolveEncoder",
        "getIndexReader",
        "ANY_DIFF",
        "createCommit",
        "coreClassName",
        "entry",
        "forIndex",
        "finish",
        "consumeUntil",
        "invokingState",
        "_parseListeners",
        "getWorkbook",
        "taxoCommit",
        "getTokenStream",
        "reportFailedPredicate",
        "update",
        "checkCallable",
        "initialized",
        "parentContext",
        "computeBlameResult"
      ],
      "Syntactic Label": "Multiple syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "Data Structures",
        "Input Processing",
        "Algorithm Implementation",
        "Exception Handling"
      ],
      "Description": "The tokens represent a variety of syntactic roles, including objects (e.g., RevObject, BytesRef, FST), operators (e.g., ., ==, +=), keywords (e.g., if, while, return, new, throw), and identifiers (e.g., iterator, weight, id, type).  The code snippets demonstrate object creation, manipulation of data structures (e.g., lists, arrays, FSTs), input processing, algorithm implementation (e.g., FST compilation, tree traversal), and exception handling.  The semantic tags reflect these diverse functionalities.  The significance in the context of C# programming is that these tokens and code structures are fundamental to building complex applications, handling data, and implementing algorithms efficiently."
    }
  },
  {
    "c8": {
      "Unique tokens": [
        "contextsField",
        "stop",
        "f",
        "lastRowIndex",
        "to",
        "row1",
        "nper",
        "patternRuleIndex",
        "qualified",
        "version",
        "startIndex",
        "ellipsis",
        "alt",
        "b",
        "steepness",
        "val",
        "bitsPerValue",
        "frozen",
        "searchTime",
        "green",
        "pv",
        "dx2",
        "weightField",
        "long",
        "object",
        "firstCol",
        "payloadField",
        "be",
        "delimiter",
        "short",
        "capacityIncrement",
        "firstColumnIndex",
        "checksum",
        "relativeRowIndex",
        "ruleIndex",
        "int",
        "pmt",
        "length",
        "wordType",
        "maxBufferedBlocks",
        "archiveSize",
        "Integer",
        "bs",
        "maxMergeSizeMB",
        "from",
        "fieldName",
        "comparisonOperation",
        "tfn",
        "operatorInfix",
        "pos",
        "inject",
        "bold",
        "K",
        "dx",
        "offset",
        "userId",
        "limit",
        ",",
        "dy2",
        "unlimited",
        "base",
        "indexedField",
        "stream",
        "maxCachedMB",
        "pivot",
        "bytesUsed",
        "isRowRelative",
        "len",
        "use",
        "active",
        "[",
        "isBlipId",
        "y2",
        "end",
        "minVersion",
        "V",
        "fieldOp",
        "byte",
        "srcCellCol",
        "float",
        "Object",
        "actionIndex",
        "inclusive",
        "lastCol",
        "ref",
        "visibilityTimeout",
        "Sheet",
        "ttype",
        "complexSize",
        "s",
        "DFA",
        "InputStream",
        "weight",
        "t",
        "appendStatus",
        "size",
        "double",
        "Token",
        "ae",
        "isComplex",
        "ramBudget",
        "p",
        "srcCellRow",
        "termID",
        "boolean",
        "srcRowIndex",
        ".",
        "orderByCount",
        "groupId",
        "char",
        "sid",
        "col1",
        "advise",
        "k",
        "x2",
        "arcWidth",
        "mem",
        "maxTokenCount",
        "col",
        "fromInclusive",
        "v",
        "includeUpper",
        "dropLF",
        "width",
        "field",
        "expiredHours",
        "pageSize",
        "pictureIndex",
        "height",
        "sheetIndex",
        "minCount",
        "OutputStream",
        "xoffset",
        "arg0",
        "dy",
        "indexedBytes",
        "masterUsername",
        "upperTerm",
        "filename",
        "d",
        "dx1",
        "uploadId",
        "in",
        "Attributes",
        "arn",
        "slopFactor",
        "externIdx",
        "n",
        "java",
        "depth",
        "recordId",
        "type",
        "arcHeight",
        "startAngle",
        "y1",
        "Counter",
        "escape",
        "maxVersion",
        "E",
        "location",
        "max",
        "min",
        "mask",
        "isColumnRelative",
        "Format",
        "totalCount",
        "receiptHandle",
        "lowerTerm",
        "inOrder",
        "predIndex",
        "rowIndex",
        "Locale",
        "start",
        "includeLower",
        "BytesRef",
        "c",
        "ch",
        "List",
        "per",
        "col2",
        "ValueEval",
        "style",
        "Character",
        "discountOverlaps",
        "reason",
        "blue",
        "dy1",
        "totalTermFreq",
        "srcColumnIndex",
        "y",
        "top",
        "numDocs",
        "CellStyle",
        "precedence",
        "factor",
        "toInclusive",
        "relativeColumnIndex",
        "cmd",
        "newUrl",
        "fv",
        "escapeLeft",
        "row2",
        "sheetNumber",
        "username",
        "value",
        "count",
        "column",
        "T",
        "minLength",
        "score",
        "columnIndex",
        "lastColumnIndex",
        "skipExisting",
        "fieldMatch",
        "minimumLength",
        "lastRow",
        "String",
        "command",
        "maxCodeLength",
        "left"
      ],
      "Syntactic Label": "Variables and parameters",
      "Semantic Tags": [
        "Object instantiation",
        "Data structures",
        "Class members",
        "Method parameters",
        "Data representation"
      ],
      "Description": "The tokens represent variables and parameters used within C# classes and methods.  They are significant because they define data structures, store values, and are passed as arguments to methods, which are fundamental aspects of C# programming.  The context sentences show how these tokens are used in object instantiation, method calls, and data manipulation within the methods."
    }
  },
  {
    "c9": {
      "Unique tokens": [
        "",
        "null",
        ",",
        ".",
        "return",
        "try",
        "failNoMatch",
        "0",
        ">",
        "2",
        "dn",
        "1d",
        "}",
        "ValueEval",
        "<",
        "{",
        ";",
        "1.0",
        "==",
        "else",
        "N",
        "false",
        "e",
        "=",
        "]",
        "final",
        ":",
        ")",
        "instance",
        "int",
        "length",
        "&&",
        "(",
        "true",
        "double",
        "result",
        "catch",
        "-",
        "!=",
        "if"
      ],
      "Syntactic Label": "C# Tokens and Operators in Spreadsheet Formula Evaluation",
      "Semantic Tags": [
        "Spreadsheet Formula Evaluation",
        "Error Handling",
        "Data Type Conversion",
        "Conditional Logic",
        "Mathematical Operations"
      ],
      "Description": "The tokens represent a wide range of C# language constructs used within the context of evaluating spreadsheet formulas.  These include keywords (try, catch, if, else, return), operators (., ==, !=, +, -, <, >, &&, =), data type declarations (int, double, boolean), and identifiers (ValueEval, OperandResolver, ErrorEval, NumberEval, etc.). The code demonstrates error handling (try-catch blocks), data type conversions (coerceValueToDouble, coerceValueToInt), conditional logic (if-else statements), and mathematical operations. The overall goal is to parse and evaluate spreadsheet formulas, handling various data types and potential errors during the evaluation process."
    }
  },
  {
    "c10": {
      "Unique tokens": [
        "memory=",
        "blockFP=",
        "docFreq=",
        "chunkSize",
        "nodeName",
        "getStage",
        "to",
        "lockFactory",
        "version",
        "(R1",
        "b",
        "alt",
        ":'",
        "docFreq",
        "<regexp",
        "bitsPerValue",
        "similarity",
        "/>",
        "blockFilePointer",
        "<opaque",
        "<boost",
        "blockSize=",
        ",ctx:",
        "}?",
        "blockSize",
        "hosts",
        "nodeID=",
        "bucket",
        "'/>",
        "hitIndex=",
        "chunkSize=",
        "ruleIndex",
        "pattern",
        ")",
        "append",
        "beginB",
        "default=",
        "termBlockOrd",
        "buffer",
        "schema='",
        "ctx",
        "-",
        "x",
        "fieldName",
        "ctx=",
        "pos",
        "@",
        "fileName",
        "<fuzzy",
        "OR",
        "data",
        ",",
        "postingsEnum",
        "distanceSquared=",
        "patternText",
        "similarity='",
        ">",
        "bytesUsed",
        "begin",
        "totalTermFreq=",
        "boost=",
        "hitIndex",
        "[",
        "pEntityName",
        "distribution",
        "Arrays",
        "end",
        "SMART",
        "basicModel",
        "termBlockOrd=",
        "version=",
        "'>",
        "Note[",
        "retval",
        ":/",
        "this",
        "revstr",
        "name",
        "s",
        "label",
        "\\\"",
        "text='",
        "field='",
        "size",
        "getFile",
        "flushBytes=",
        "getClass",
        "afterEffect",
        "isLeafNode",
        "path=",
        "forwardCount=",
        "!",
        "lockName",
        "getChild",
        "hosts=",
        "\\'",
        ".",
        "return",
        "'..'",
        "config=",
        "phase",
        "shardIndex",
        "index",
        "id",
        "+",
        "DoubleRange(",
        "configurations=",
        "pred",
        "resolvedValue",
        "brToString",
        "bitsPerValue=",
        "entries",
        "toString",
        "maxMergeSizeMB=",
        "field",
        "=",
        "lambda",
        "terms",
        "bytes=",
        "getLength",
        "schema",
        "key",
        "doc=",
        "value='",
        "(",
        "Point",
        "<field",
        "directory",
        "in",
        "label=",
        "shardIndex=",
        "Long",
        "R1",
        "/",
        ";",
        "\"",
        "forwardCount",
        "AND",
        "files=",
        "max",
        "min",
        "path='",
        "doc",
        "predIndex",
        "estimatedSegmentSize=",
        "sourceFiles",
        "lockFactory=",
        "<rule",
        "inv",
        "}",
        "'",
        "ch",
        "field:",
        "getNodeID",
        "<path",
        "text",
        "totalTermFreq",
        "y",
        "term='",
        "score=",
        "]",
        ":",
        "DFR",
        "size=",
        "%s;",
        "^",
        "ANY_DIFF",
        "end='",
        "value",
        "count",
        "\\n",
        "->",
        "normalization",
        "score",
        "isLeaf=",
        "endA",
        "a",
        "super",
        "assoc",
        "endB",
        "<wildcard"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Object Representation",
        "String Manipulation",
        "Data Structures",
        "Logging",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including objects, operators, keywords, and identifiers.  They are used in the context of creating string representations of objects (toString() method overrides), manipulating strings using StringBuilder, utilizing data structures (arrays, collections), handling exceptions (IllegalStateException), and potentially logging information. The significance in a C# context is that these tokens are fundamental building blocks for creating and managing objects, data, and program flow."
    }
  },
  {
    "c11": {
      "Unique tokens": [
        "final",
        "(",
        ")",
        "apache"
      ],
      "Syntactic Label": "Modifier, Opening Parenthesis, Closing Parenthesis, Identifier",
      "Semantic Tags": [
        "Declaration",
        "Method Definition",
        "Library Inclusion",
        "Exception Handling",
        "Object Instantiation"
      ],
      "Description": "The tokens represent a mix of C# language constructs. 'final' acts as a modifier (though not directly present in C#, it's conceptually similar to C#'s 'readonly' or 'const' depending on context), '(' and ')' are parentheses used for method calls and object instantiation, and 'apache' is part of an identifier, likely referring to a namespace or class from the Apache POI library, which is used for working with Microsoft Office files.  These tokens are significant in the context of C# because they are fundamental to defining methods, handling exceptions, and using external libraries."
    }
  },
  {
    "c12": {
      "Unique tokens": [
        "",
        "Collection",
        "b",
        "idx",
        "dateFormat",
        "chars",
        "Query",
        "Interval",
        "modified",
        "length",
        "shapes",
        "buffer",
        "sequence",
        "walker",
        "x",
        "-",
        "from",
        "pos",
        "data",
        "base",
        "getNode",
        "sb",
        "stream",
        "args",
        "uri",
        "len",
        "[",
        "specs",
        "fs",
        "destination",
        "end",
        "main",
        "false",
        "byte",
        "termtext",
        "keySet",
        "ConfigurationKeys",
        "eval",
        "enc",
        "stopWords",
        "ttype",
        "snapshot",
        "objectId",
        "anchor",
        "output",
        "commit",
        "searcher",
        "isLessThan",
        "backwardId",
        "v",
        "points",
        "regions",
        "toString",
        "el",
        "range",
        "rp",
        "stats",
        "Calendar",
        "raw",
        "d",
        "o",
        "book",
        "db",
        "in",
        "fieldInfo",
        "term",
        "string",
        "mode",
        "type",
        "E",
        "location",
        "numArgs",
        "holder",
        "mask",
        "rowIndex",
        "mutex",
        "_tracker",
        "states",
        "parent",
        "e",
        "fv",
        "image",
        "Constants",
        "fields",
        "keep",
        "columnIndex",
        "rowKey",
        "getPath",
        "ofKind",
        "info",
        "nodes",
        "to",
        "ERROR",
        "version",
        "tableArray",
        "pv",
        "vocabulary",
        "cut",
        "date",
        "formulaText",
        "cell",
        "address",
        "decoder",
        "formula",
        "list",
        "repo",
        "fileName",
        "offset",
        "cfraClone",
        "cfs",
        "dataSize",
        "nBits",
        "getName",
        "items",
        "cost",
        "ptgs",
        "this",
        "symbol",
        "code",
        "another",
        "hashCode",
        "subString",
        "Date",
        "srcRowIndex",
        "dvRecord",
        ".",
        "sid",
        "hashes",
        "source",
        "_shapes",
        "control",
        "norm",
        "INSTANCE",
        "field",
        "arg0",
        "key",
        "updates",
        "File",
        "state",
        "directory",
        "diff",
        "cnt",
        "errorCode",
        "pat",
        "/",
        "path",
        "row",
        "res",
        "max",
        "min",
        "separator",
        "context",
        "0",
        "format",
        "endpoint",
        "Record",
        "Locale",
        "currentSubtree",
        "r",
        "src",
        "ch",
        "}",
        "params",
        "lexer",
        "text",
        "y",
        "edit",
        ":",
        "TAG",
        "String",
        "payloads",
        "ec",
        "filepattern",
        "value",
        "->",
        "score",
        "a",
        "object",
        "corrected",
        "position",
        "nper",
        "query",
        "token",
        "StringUtil",
        "suffix",
        "val",
        "refs",
        "findTokens",
        "<",
        "toIndex",
        "append",
        "getColumn",
        "buf",
        "child",
        "org",
        "Formula",
        "fieldName",
        "group",
        ",",
        "Cell",
        "obj",
        "files",
        "pName",
        "FALSE",
        "cfAggregate",
        "utf8",
        "file",
        "getPosition",
        "true",
        "task",
        "t",
        "status",
        "msg",
        "fi",
        "propId",
        "p",
        "dist",
        "getEntry",
        "ArrayUtil",
        "charset",
        "credentials",
        "id",
        "closed",
        "nameRecord",
        "dictionary",
        "word",
        "contexts",
        "response",
        "rptg",
        "gitdir",
        "tmp",
        "sortedTerms",
        "cache",
        "filename",
        "endsWith",
        "gen",
        "record",
        "tokenName",
        "n",
        "sort",
        "lst",
        "level",
        "now",
        "input",
        "prefix",
        "sheet",
        "hidden",
        "out",
        "matchOffsets",
        "rewriteMethod",
        "indexCommit",
        "fst",
        "_input",
        "rr",
        "count",
        "column",
        "ruleName",
        "words",
        "rs",
        "array",
        "stop",
        "children",
        "formatIndex",
        "element",
        "srv",
        "hash",
        "xfptr",
        "attributes",
        "way",
        "reader",
        "pattern",
        ")",
        "int",
        "str",
        "srcCell",
        "item",
        "mSrc",
        "tree",
        "result",
        "ctx",
        "region",
        "null",
        "o1",
        "pivot",
        "getKey",
        "mKeys",
        "newRecord",
        "ix",
        "shape",
        "==",
        "values",
        "sre",
        "float",
        "name",
        "ref",
        "objects",
        "delegate",
        "monitor",
        "s",
        "target",
        "1",
        "size",
        "mcrs",
        "getDepth",
        "returnState",
        "decision",
        "num",
        "matchFound",
        "toAdd",
        "table",
        "localctx",
        "index",
        "queueControl",
        "+",
        "col",
        "16",
        "terms",
        "cr",
        "(",
        "freq",
        "i",
        "rule1",
        ";",
        "beginA",
        "arg1",
        "writer",
        "section",
        "start",
        "c",
        "per",
        "encode",
        "title",
        "{",
        "srcColumnIndex",
        "cmd",
        "toopack",
        "carry",
        "follow",
        "br",
        "frag2",
        "operands",
        "64",
        "lock",
        "other",
        "w1"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Operators, Keywords",
      "Semantic Tags": [
        "Object Management",
        "Data Structures",
        "Input/Output",
        "File Processing",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Variables store data (e.g., `type`, `len`, `objectId`). Objects are instances of classes (e.g., `TermsEnum`, `Repository`, `StringBuffer`). Methods perform actions on objects (e.g., `append`, `get`, `evaluate`). Operators perform operations (e.g., `+`, `-`, `==`). Keywords define the structure of the code (e.g., `public`, `static`, `if`, `for`, `return`). The code snippets show various operations including object creation, method calls, string manipulation, file processing, and data structure management."
    }
  },
  {
    "c13": {
      "Unique tokens": [
        "public"
      ],
      "Syntactic Label": "Access Modifier",
      "Semantic Tags": [
        "Class Declaration",
        "Object-Oriented Programming",
        "Encapsulation",
        "Access Control",
        "Constructor"
      ],
      "Description": "The `public` keyword is an access modifier in C#. It specifies that the class members (fields, methods, properties, etc.) declared after it are accessible from any other class or code within the same assembly or from other assemblies that reference it.  In the provided examples, `public` is used to define constructors and methods of various classes, demonstrating fundamental aspects of object-oriented programming in C#, such as encapsulation and access control."
    }
  },
  {
    "c14": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "API Request Handling",
        "Asynchronous Operations",
        "Client-Server Communication"
      ],
      "Description": "The closing parenthesis ')' in C# signifies the end of a method's parameter list or the end of an expression enclosed in parentheses. In this context, it's crucial for defining the input parameters of numerous API request handling methods.  The methods appear to handle asynchronous operations and facilitate client-server communication, likely within a larger AWS SDK or similar library."
    }
  },
  {
    "c15": {
      "Unique tokens": [
        "readCompressedUnicode",
        "readUShort",
        "readDouble",
        "remaining",
        ".",
        "readUByte",
        "readUnicodeString",
        "readShort",
        "readLong",
        "readFully",
        "getNext",
        "getSid",
        "readRemainder",
        "readUnicodeLEString",
        "readInt",
        "(",
        "readByte",
        "readString"
      ],
      "Syntactic Label": "Method Calls",
      "Semantic Tags": [
        "Data Reading",
        "Record Input",
        "Binary Data",
        "File Parsing",
        "Data Structures"
      ],
      "Description": "These tokens represent method calls to read various data types (short, int, double, byte, string, etc.) from a RecordInputStream in C#.  They are used extensively in parsing binary data from a file, populating fields of custom record classes. The methods are integral to processing structured data from a binary file format, such as a spreadsheet file. The semantic tags reflect the overall process of reading and interpreting binary data to build data structures."
    }
  },
  {
    "c16": {
      "Unique tokens": [
        "getLeftCol",
        "getObjectID",
        "rt",
        "iObjectContext",
        "getYPosition",
        "getHeaderColor",
        "getType",
        "field_3_width",
        "0x00",
        "getWidth",
        "encodedTypeString",
        "?",
        "mOnlyIndeterminate",
        "getDataSize",
        "field_4_leftColumn",
        "_row",
        "field_3_text",
        "field_7_options",
        "field_4_constant_values",
        "field_2_maximumAxisValue",
        "field_5_labelColorRgb",
        "_data",
        "field_4_scale",
        "getLastColumn",
        "getPassword",
        ")",
        "_lastCol",
        "0x01",
        "field_3_majorIncrement",
        "getBuildYear",
        "field_5_type",
        "expectedModCount",
        "length",
        "field_4_text",
        "getNumDbcells",
        "field_2_reserved1",
        "field_1_row_offset",
        "field_2_hasMultibyte",
        "field_6_backcolorIndex",
        "field_6_reserved3",
        "verOriginator",
        "_chooseFuncOffset",
        "field_7_width",
        "field_1_foregroundColor",
        ",",
        "wOffset",
        "cbFeatData",
        "0x7FFF",
        "field_2_linePattern",
        "field_3_y",
        "field_1_pointNumber",
        "field_2_x",
        "getHeight",
        "field_2_backgroundColor",
        "getColumnWidth",
        "field_2_y",
        "getOptions",
        "_booleanValue",
        "field_3_seriesNumber",
        "field_5_colourPaletteIndex",
        "getRequiredVersion",
        "field_1_xBasis",
        "getVerticalPos",
        "field_5_indexToFontTable",
        "field_2_option_flags",
        "field_5_forecolorIndex",
        "field_2_objectId",
        "field_4_minorIncrement",
        "field_3_weight",
        "field_4_width",
        "field_7_zero2",
        "getVersion",
        "_numStrings",
        "is16bit",
        "field_3_row_index",
        "getPageBreakZoom",
        "field_3_username_unicode_options",
        "getHorizontalPos",
        "_errorValue",
        "getHistoryBitMask",
        "_dxMin",
        "is16Bit",
        "field6_unknown",
        "field_4_zero",
        "getReserved",
        "field_5_reserved2",
        "mKeyProgressIncrement",
        "getXPosition",
        ".",
        "getDVRecNo",
        "field_1_x",
        "sid",
        "k",
        "getPtgClass",
        "field_1_id",
        "grbitFrt",
        "_not_used_1",
        "field_1_objectType",
        "field_3_heightBasis",
        "field_2_cell_offset",
        "RECORD_ID",
        "_numberValue",
        "field_1_axisType",
        "externNameIndex",
        "field_6_spacing",
        "_stringValue",
        "field_1_lineColor",
        "rgCFRTID",
        "field_5_reserved4",
        "field_3_option",
        "_isxvi",
        "(",
        "field_3_xSize",
        "field_5_categoryAxisCross",
        "field_1_last_column_index",
        "getFirstColumn",
        "field_4_height",
        "field_2_first_column_index",
        "iObjectKind",
        "/",
        "field_3_pattern",
        ";",
        "_wStyle",
        "verWriter",
        "field_3_username_value",
        "iObjectInstance1",
        "field_6_reserved",
        "field5_grbit",
        "_options",
        "reserved3",
        "field_4_reserved1",
        "field_2_yBasis",
        "field_5_activePane",
        "field_1_minimumAxisValue",
        "_numUniqueStrings",
        "FIRST_COLOR_INDEX",
        "{",
        "field_3_hasMultibyte",
        "field_2_seriesIndex",
        "getIndexCode",
        "field_4_formatFlags",
        "externSheetIndex",
        "blockBits",
        "iObjectInstance2",
        "field_6_y",
        "_cLine",
        ":",
        "field_6_options",
        "field_3_reserved2",
        "field_4_format",
        "_firstCol",
        "field_5_height",
        "field_2_yAxisUpperLeft",
        "getOptionFlags2",
        "field_4_ySize",
        "getLastRowAdd1",
        "field_4_reserved3",
        "getXFIndex",
        "field_3_topRow",
        "_tokenStartCharIndex"
      ],
      "Syntactic Label": "Method Name",
      "Semantic Tags": [
        "Data Serialization",
        "Data Access",
        "Object Attributes",
        "Getters/Setters",
        "Data Representation"
      ],
      "Description": "These tokens represent method names predominantly used as getters for retrieving attribute values of various objects and also for serializing data.  They are significant in C# as they reveal the object's internal structure and how data is accessed and stored. The methods appear to be part of a larger system for managing and serializing data, possibly related to file formats or data structures."
    }
  },
  {
    "c17": {
      "Unique tokens": [
        "number.",
        "supported",
        "(0..",
        "off",
        "and",
        "have",
        "to",
        "one",
        "2",
        "0..",
        "frozen",
        "alternatives.",
        "equal",
        "indexed",
        "<",
        "(got",
        "be",
        "serialized.",
        "NaN",
        "passed",
        ")",
        "expr2",
        "set",
        "length",
        "cell",
        "char.",
        "could",
        "formula",
        "least",
        "-",
        "must",
        "Can't",
        "if",
        "in-order,",
        "between",
        "lastDocID=",
        "null",
        ",",
        "not",
        "w/o",
        "missing",
        "of",
        "args",
        "argument",
        "supplied",
        ">",
        "already",
        "end",
        "Start",
        "==",
        "added",
        "with",
        ">=",
        "positive",
        "this",
        "name",
        "created",
        "doesn't",
        "array",
        "range.",
        "allowed",
        "yet",
        "1",
        "size",
        "our",
        "for",
        "non-null",
        "support",
        "empty",
        "index",
        "found",
        "+",
        "0;",
        "released",
        "does",
        "aren't",
        "is",
        "MAX_CODE_LENGTH",
        "regions",
        "31",
        "invalid",
        "simple",
        "there",
        "range",
        "index.",
        "positive.",
        "has",
        "(",
        "should",
        "less",
        "exceed",
        "specified",
        "state",
        "tokenized",
        "replacement.isEmpty()",
        "in",
        "requires",
        "got",
        "provided.",
        "getBufferStartIndex",
        "[1-",
        "at",
        ";",
        "type",
        "\"",
        "bounds:",
        "stored",
        "row",
        "the",
        "fields.length",
        "0",
        "loaded",
        "contain",
        "than",
        "sheet",
        "outside",
        "out",
        "or",
        "}",
        "'",
        "greater",
        "null.",
        "implementations",
        "MUST",
        "were",
        "negative.",
        "belong",
        "allowable",
        "been",
        "number:",
        "column",
        "an",
        "0:",
        "store",
        "Invalid",
        "a",
        "tried",
        "32767",
        "was",
        "ids"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Input Validation",
        "Exception Handling",
        "Data Structures",
        "Control Flow",
        "File Processing"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, for, while), operators (+, -, ==, <, >), identifiers (variables, methods, classes), and literals (numbers, strings, null).  The context sentences show these tokens being used in various programming constructs, such as conditional statements (if), loops (for, while), method calls (.), exception handling (throw new ...Exception), and data structure manipulation (arrays, lists, maps).  The semantic tags highlight the overall purpose of the code snippets, which involve validating inputs, handling potential errors, using data structures, controlling program flow, and potentially interacting with files or external resources."
    }
  },
  {
    "c18": {
      "Unique tokens": [
        "\"",
        ".",
        "sb",
        "getColumnWidth",
        "maxQueryTerms",
        "'",
        "toString",
        "0x",
        "=",
        "]",
        "append",
        ")",
        "getHorizontalPos",
        "(",
        "buffer",
        "\\n",
        "Integer",
        "HexDump",
        ";"
      ],
      "Syntactic Label": "StringBuilder Object and its methods, various data types, operators, and literals",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Hexadecimal Conversion",
        "Data Structure"
      ],
      "Description": "The code uses StringBuilder objects to construct strings representing various data structures.  It utilizes methods like append() to concatenate strings and data.  Several data types (Integer, short, byte) are used, along with operators (=, +, .) and literals (e.g., \", \n, 0x). The HexDump class is used for hexadecimal conversion, and the overall purpose is to serialize data into a string representation."
    }
  },
  {
    "c19": {
      "Unique tokens": [
        "Object",
        "get",
        "serialize",
        "remove",
        ".",
        "equals",
        "isLarge",
        "containsValue",
        "SimpleResponse",
        "apache",
        "(",
        "equalsSameType"
      ],
      "Syntactic Label": "Methods and Object Properties",
      "Semantic Tags": [
        "Object Serialization",
        "Data Comparison",
        "Data Access",
        "Boolean Checks",
        "Method Invocation"
      ],
      "Description": "The tokens represent a mix of methods (get, serialize, remove, equals, containsValue, isLarge) and object properties (.), used for object serialization, data comparison (equals, equalsSameType), data access (get), boolean checks (isLarge, containsValue, equals), and method invocation (.).  The presence of 'apache' suggests the code might interact with Apache libraries. The context shows these are methods operating on various data structures and objects, common in C# programming."
    }
  },
  {
    "c20": {
      "Unique tokens": [
        "",
        "(0..",
        "forwardType",
        "0L",
        "lastRowIndex",
        "to",
        "position",
        "b",
        "startBitsPerValue",
        "ByteBuffer",
        "5",
        "<",
        "blockSize",
        "textObjectRecord",
        "firstCol",
        "short",
        "firstColumnIndex",
        "objRecord",
        ")",
        "ord",
        "int",
        "TOKEN_OUTPUT",
        "getFontpos",
        "length",
        "margin",
        "MIN_BLOCK_SIZE",
        "components",
        "Integer",
        "orderByCountAndValue",
        "maxMergeSizeMB",
        "-",
        "Float",
        "from",
        "pos",
        "RamUsageEstimator",
        "offset",
        "null",
        ",",
        "getBitsPerValue",
        ">>>",
        "maxCachedMB",
        ">",
        "isRowRelative",
        "len",
        "fastestFormatAndBits",
        "[",
        "<=",
        "newForwardType",
        "isBlipId",
        "end",
        "*",
        "==",
        "srcColNum",
        "bufferSize",
        ">=",
        "this",
        "lastCol",
        "nameB",
        "expectedElements",
        "newLength",
        "OFFSET_CF",
        "s",
        "true",
        "1",
        "size",
        "SemanticContext",
        "toAutomaton",
        "isComplex",
        "slice",
        "COMPACT",
        ".",
        "orderByCount",
        "return",
        "shardIndex",
        "--",
        "index",
        "bytes",
        "lastRow",
        "+",
        "bytesStart",
        "strkey",
        "pageSize",
        "elements",
        "=",
        "sheetIndex",
        "next",
        "scan",
        "(",
        "maxCodeLength",
        "srcRowNum",
        "tracker",
        "in",
        "externIdx",
        "n",
        ">>",
        "string",
        "/",
        "!=",
        ";",
        "PackedInts",
        "\"",
        "path",
        "location",
        "toRead",
        "isColumnRelative",
        "context",
        "0",
        "SheetRefEvaluator",
        "start",
        "27",
        "src",
        "countEntries",
        "'",
        "<<",
        "acceptableOverheadRatio",
        "}",
        "1024",
        "pathLen",
        "nChars",
        "taxoReader",
        "]",
        "+=",
        "&",
        "_array",
        "&&",
        "column",
        "lastColumnIndex",
        "64",
        "onlySheetIndex",
        "8",
        "a",
        "orderByValue",
        "MIN_FRAG_CHAR_SIZE_FACTOR",
        "BYTES",
        "toBinaryString"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "Bitwise Operations",
        "File I/O",
        "Record Management"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Many tokens are involved in array manipulation (e.g., System.arraycopy, ArrayUtil.grow), bitwise operations (>>>, &, |, ^), and data structure usage (e.g., ByteBuffer, PackedInts).  There is also evidence of file I/O (e.g., IOException, FileChannel) and the management of custom record structures (e.g., RecordInputStream, EscherRecord). The code snippets show various operations on arrays, bit manipulation for efficient data storage, and handling of custom data structures.  The semantic tags reflect these core functionalities."
    }
  },
  {
    "c21": {
      "Unique tokens": [
        "\"",
        "_lastSheetIndex",
        ".",
        "maxMergeCount",
        "print",
        "ioThrottle=",
        "toHex",
        "_reserved",
        "[",
        "}",
        "'",
        "Flags",
        "*",
        ".rowheight",
        "STRING]",
        "toString",
        "getMaxChange",
        "intToHex",
        "0x",
        "]",
        "field_1_number_crn_records",
        "append",
        ")",
        "getColumn",
        "field_1_username",
        "(",
        "getCurrentCountry",
        "write",
        "fill",
        "buffer",
        "\\n",
        ".currentcountry",
        "flags",
        "elapsed",
        "getText",
        "HexDump",
        "println",
        ";",
        "[/BOOKBOOL]"
      ],
      "Syntactic Label": "C# Tokens and Operators in String Manipulation and Data Representation",
      "Semantic Tags": [
        "String Manipulation",
        "Data Serialization",
        "Object Representation",
        "Hexadecimal Conversion",
        "Data Structures"
      ],
      "Description": "The tokens represent a variety of C# language elements used in string manipulation, primarily using StringBuilder objects to create string representations of data.  The code uses several methods to format and display data, including hexadecimal conversion (HexDump.toHex, HexDump.shortToHex, Integer.toHexString) and array manipulation (Arrays.fill).  The tokens also show the use of various operators (., +, =, etc.) and data structures (StringBuilder, arrays, etc.) to achieve this."
    }
  },
  {
    "c22": {
      "Unique tokens": [
        "=",
        "32",
        ")",
        "64",
        "256",
        "super",
        "80",
        "(",
        ";"
      ],
      "Syntactic Label": "Operators and Literals",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "StringBuilder",
        "Hexadecimal Conversion",
        "Integer Literals"
      ],
      "Description": "The tokens represent a mix of assignment operators (=), integer literals (32, 64, 256, 80), parentheses ((), )), and the keyword 'super'.  These are fundamental C# elements used extensively in the provided code snippets, primarily within the context of StringBuilder manipulation.  The integer literals often represent sizes or flags, while parentheses structure method calls and expressions. The 'super' keyword (if used in the unseen parts of the code) would indicate inheritance. The code examples show the construction of strings using StringBuilder, often incorporating hexadecimal representations of data (using HexDump)."
    }
  },
  {
    "c23": {
      "Unique tokens": [
        "bounds",
        "StringBuilder",
        "loader",
        "Collections",
        "bypassAltsAtnCache",
        "<",
        "grow",
        "PendingInput",
        ")",
        "buf",
        "unSafeParser",
        "merge",
        "buffer",
        "Integer",
        "ctx",
        "getChar",
        "config",
        "addShingles",
        "null",
        ",",
        "dictionaryFiles",
        "removeGaps",
        "props",
        ">",
        "CellFormatPart",
        "MergedIterator",
        "NoteMap",
        "[",
        "specs",
        "==",
        "false",
        "byte",
        "map",
        "name",
        "Byte",
        "slices",
        "delegate",
        "array",
        "SubRecord",
        "_unmappableErrors",
        "Mode",
        "_interp",
        "size",
        "|=",
        "decision",
        "require",
        "createQueryParser",
        "it",
        "getBoolean",
        ".",
        "_externalBookBlocks",
        "bytes",
        "runData",
        "new",
        "createClassifiedPtg",
        "rules",
        "parser",
        "workbookRecordList",
        "toMergeItr",
        "width",
        "=",
        "synonyms",
        "(",
        "&=",
        "spgrContainer",
        "recognizer",
        "_malformedErrors",
        "in",
        "!=",
        ";",
        "\"",
        "Normalizer2",
        "0",
        "splitFileNames",
        "get",
        "}",
        "FieldsQuery",
        "functionNames",
        "getPattern",
        "{",
        "oldToken",
        "]",
        "getSet",
        ":",
        "fst",
        "guessEncoding",
        "DOMUtils",
        "Transliterator",
        "rs",
        "XmlSerializer"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Instantiation",
        "Method Invocation",
        "Control Flow",
        "Data Structures",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features.  'StringBuilder', 'Collections', 'Integer', 'Byte', etc., are types or classes.  '.' is the member access operator.  '<', '>', '[', ']', '(', ')', '{', '}', ',', ';', '=', '==', '!=', '|=', '&=', are operators.  'public', 'void', 'if', 'else', 'while', 'try', 'catch', 'throw' are keywords. 'new' is used for object creation. The code snippets demonstrate various programming constructs including object manipulation, method calls, conditional statements, loops, exception handling, and data structure usage."
    }
  },
  {
    "c24": {
      "Unique tokens": [
        "getRecordClass",
        "GetChangeRequest",
        "Collection",
        "GetPolicyRequest",
        "?",
        "DirCacheEntry",
        "ThreadState",
        "Query",
        "<",
        "Note",
        "Interval",
        "RevFlag",
        "Integer",
        "Enum",
        "IndexChangedListener",
        "DeletePublicAccessBlockRequest",
        "K",
        "HunkHeader",
        ",",
        "Ref",
        "URIishField",
        "Cell",
        "FieldsQueryList",
        ">",
        "SrndQuery",
        "[",
        "TerminalNode",
        "DeletePublicKeyRequest",
        "V",
        "ReceiveCommand",
        "extends",
        "CombinedHunkHeader",
        "DFAState",
        "keySet",
        "HSSFPictureData",
        "MatchingDocs",
        "ChildScorable",
        "SegToken",
        "TrackingRefUpdate",
        "RevSort",
        "CharsRef",
        "Token",
        "Map",
        "RefsChangedListener",
        "RefSpec",
        "Multiset",
        ".",
        "ReflogEntry",
        "Sequence",
        "FormatError",
        "GetPublicAccessBlockRequest",
        "RemoteRefUpdate",
        "Entry",
        "WeightedFragInfo",
        "IndexCommit",
        "FastIgnoreRule",
        "File",
        "FooterLine",
        "EscherProperty",
        "PerfTask",
        "ParseTreeMatch",
        "DedicatedCapacityInner",
        "Long",
        "EscherRecord",
        "ConfigChangedListener",
        "E",
        "RevCommit",
        "getAllMatchingGroups",
        "Number",
        "ObjectId",
        "Record",
        "listIterator",
        "ParseTree",
        "]",
        "PackedObjectInfo",
        "Head",
        "TransportProtocol",
        "iterator",
        "HSSFObjectData",
        "enumType",
        "MergeResult",
        "T",
        "FacetEntry",
        "Tree",
        "PositionSpan",
        "super",
        "subList",
        "String"
      ],
      "Syntactic Label": "Methods and Objects",
      "Semantic Tags": [
        "Data Access",
        "Collection Manipulation",
        "Iteration",
        "Object Retrieval",
        "Data Structures"
      ],
      "Description": "The tokens represent methods that retrieve or manipulate data structures (like Collections, Maps, Sets, Lists).  Many are iterators or return iterators, indicating traversal of data.  The presence of objects like DirCacheEntry, RevCommit, and others suggests interaction with a data model or repository. The methods are used to access and process data within the C# codebase."
    }
  },
  {
    "c25": {
      "Unique tokens": [
        "getInt",
        "position",
        "putDouble",
        "6",
        "b",
        "++",
        "2",
        "putChar",
        "pokeShort",
        "putShort",
        "SizeOf",
        "getLong",
        "FLOAT",
        "BufferUnderflowException",
        "getFloat",
        ")",
        "getDouble",
        "length",
        "buf",
        "available",
        "modCount",
        "putFloat",
        "result",
        "sequence",
        "checkConcurrentModification",
        "-",
        "putLong",
        "sz",
        "pos",
        "jj_gen",
        "getChar",
        "offset",
        "limit",
        "null",
        ",",
        "try",
        "getShort",
        "pokeInt",
        "IOUtils",
        "[",
        "*",
        "end",
        "byte",
        "byteCount",
        "this",
        "Memory",
        "mark",
        "size",
        "DOUBLE",
        "double",
        "removed",
        "currentBlockUpto",
        "charAt",
        "IO_FAILURE",
        "remove",
        ".",
        "return",
        "throw",
        "UNSET_MARK",
        "--",
        "new",
        "+",
        "_offset",
        "=",
        "putInt",
        "(",
        "fill",
        "byteBuffer",
        "in",
        ";",
        "finally",
        "SHORT",
        "0",
        "CHAR",
        "c",
        "}",
        "Character",
        "{",
        "capacity",
        "]",
        "LONG",
        "+=",
        "bos",
        "backingArray",
        "INT"
      ],
      "Syntactic Label": "C# Buffer Manipulation Methods and Operators",
      "Semantic Tags": [
        "Buffer Management",
        "Data Input/Output",
        "Exception Handling",
        "Array Manipulation",
        "Memory Management"
      ],
      "Description": "The tokens represent a collection of methods and operators used for manipulating buffers in C#.  These methods handle various data types (byte, short, int, long, float, double, char) and include methods for getting, putting, and compacting data within the buffer.  The presence of exceptions like BufferUnderflowException and BufferOverflowException indicates robust error handling.  The use of System.arraycopy suggests efficient array manipulation techniques.  The overall functionality centers around managing and manipulating data within memory buffers."
    }
  },
  {
    "c26": {
      "Unique tokens": [
        "_targetClass",
        "bcsg",
        "isValidCode",
        "_ptgs",
        "_modeStack",
        "f",
        "nodes",
        "position",
        "linkTable",
        "BitSet",
        "th",
        "readLimit",
        "head",
        "stopTags",
        "isMustExist",
        "getLastIndex",
        "b",
        "children",
        "formatIndex",
        "idx",
        "token",
        "distErr",
        "_code",
        "j",
        "docFreq",
        "2",
        "millis",
        "isDefaultField",
        "frozen",
        "ptr",
        "nameIndex",
        "allocationSite",
        "offsets",
        "<",
        "hasChildren",
        "hash",
        "ve",
        "initDone",
        "version",
        "lineCount",
        "dic",
        "getChildren",
        "xfr",
        "root",
        "document",
        "ruleIndex",
        "fetch",
        ")",
        "isClone",
        "ord",
        "peekNextRecord",
        "refCount",
        "buf",
        "length",
        "str",
        "cell",
        "child",
        "authority",
        "matcher",
        "getTags",
        "taxonomyReader",
        "sign",
        "find",
        "formula",
        "check",
        "upstreamCommit",
        "node",
        "entrySet",
        "result",
        "cf",
        "boost",
        "ctx",
        "getDirectory",
        "x",
        "repo",
        "freqs",
        "from",
        "pos",
        "group",
        "ff",
        "excludes",
        "rhs",
        "offset",
        "null",
        "base",
        "fieldData",
        "sb",
        "variantType",
        "eof",
        "obj",
        "args",
        ">",
        "existing",
        "uris",
        "keys",
        "sentenceStarts",
        "first",
        "RevTag",
        "shape",
        "ALL",
        "<=",
        "exists",
        "fs",
        "appendPos",
        "*",
        "bufferPos",
        "csq",
        "==",
        "builder",
        "iterations",
        "allowModify",
        "values",
        "added",
        "bufferSize",
        "processors",
        "last",
        "nNames",
        "this",
        "heads",
        "symbol",
        "_count",
        "cardinality",
        "eval",
        "name",
        "array",
        "newValue",
        "number",
        "charSequence",
        "code",
        "ttype",
        "_character",
        "s",
        "true",
        "used",
        "target",
        "needle",
        "enabled",
        "t",
        "label",
        "mark",
        "upto",
        "size",
        "on",
        "status",
        "msg",
        "getClass",
        "cur",
        "tempParent",
        "returnState",
        "compiled",
        "resolve",
        "ae",
        "output",
        "listener",
        "p",
        "push",
        "matchFound",
        "!",
        "objectCount",
        "getChild",
        "indexReader",
        "dist",
        "provider",
        "mPopup",
        "it",
        "currentBlock",
        ".",
        "getCode",
        "readonly",
        "factory",
        "deleted",
        "pushURIs",
        "elementCount",
        "sid",
        "index",
        "credentials",
        "oldProcessor",
        "executed",
        "k",
        "source",
        "_offset",
        "isOpen",
        "password",
        "alts",
        "dictionary",
        "hStart",
        "parser",
        "isRoot",
        "v",
        "bytesStart",
        "useHash",
        "ret",
        "markLimit",
        "previous",
        "ext",
        "enter",
        "decisionToState",
        "field",
        "maxCount",
        "taxonomyWriter",
        "stats",
        "next",
        "rval",
        "has",
        "isRemoved",
        "freeBlocks",
        "sessionID",
        "properties",
        "cache",
        "(",
        "d",
        "o",
        "qrj",
        "perField",
        "directory",
        "recognizer",
        "state",
        "tracker",
        "mustExist",
        "db",
        "isColumn",
        "i",
        "record",
        "diff",
        "in",
        "instanceof",
        "isValid",
        "term",
        "n",
        "message",
        "!=",
        "type",
        "cs",
        "ENABLED",
        "valByRound",
        "err",
        "path",
        "wb",
        "row",
        "location",
        "res",
        "writer",
        "min",
        "stateRegistry",
        "credential",
        "rowIndex",
        "ObjectId",
        "cmp",
        "_options",
        "tokenizer",
        "deltaBase",
        "r",
        "start",
        "out",
        "c",
        "src",
        "mGarbage",
        "parseTrees",
        "relativeOffset",
        "params",
        "text",
        "didNext",
        "current",
        "capacity",
        "e",
        "precedence",
        "error",
        "renameDetector",
        "remaining",
        ":",
        "lexState",
        "kid",
        "fst",
        "sourceLines",
        "carry",
        "widthInteger",
        "follow",
        "_array",
        "_input",
        "stashRef",
        "invert",
        "iter",
        "func",
        "entry",
        "replacement",
        "hasNext",
        "value",
        "count",
        "simpleCompareResult",
        "termOrd",
        "logger",
        "fetched",
        "noteRefName",
        "fields",
        "skip",
        "cvRec",
        "columnIndex",
        "Double",
        "s0",
        "a",
        "words",
        "contains",
        "lock",
        "other",
        "initialized",
        "queryNode"
      ],
      "Syntactic Label": "Variables and identifiers",
      "Semantic Tags": [
        "Factory Methods",
        "Object Manipulation",
        "Data Structures",
        "Exception Handling",
        "Filtering"
      ],
      "Description": "The tokens represent variables and identifiers commonly used in C# programming, particularly within the context of factory methods, object manipulation, data structures (like Maps, Lists, and BitSets), exception handling (using exceptions like IllegalArgumentException and NullPointerException), and filtering operations.  Many of the examples show the creation and manipulation of objects, often involving conditional checks and exception handling to ensure data integrity and program robustness."
    }
  },
  {
    "c27": {
      "Unique tokens": [
        "data",
        "paths",
        ",",
        "path",
        "characters",
        "StringBuilder",
        "altsets",
        "bytes",
        "blocks",
        "input",
        "args",
        "b",
        "keys",
        "delta",
        "files",
        "[",
        "src",
        "c",
        "arr",
        "chars",
        "original",
        "is",
        "arr1",
        "array2",
        "text",
        "v",
        "regions",
        "values",
        "tokens",
        "byte",
        "codec",
        "array1",
        "]",
        "ptgs",
        "dst",
        ")",
        "conflictingPaths",
        "dest",
        "tmp",
        "arr2",
        "carray",
        "newValue",
        "key",
        "docStarts",
        "buf",
        "int",
        "s",
        "urlstr",
        "(",
        "raw",
        "other",
        "buffer",
        "widths",
        "yPoints",
        "bs",
        "list",
        "legal",
        "in",
        "vals",
        "operands",
        "holidays",
        "output",
        "words",
        "a",
        "treeData",
        "freqs",
        "array",
        "xPoints"
      ],
      "Syntactic Label": "Variables and parameters",
      "Semantic Tags": [
        "Array manipulation",
        "Data processing",
        "Byte stream processing",
        "Algorithm implementation",
        "Utility functions"
      ],
      "Description": "The tokens represent a wide variety of variables and parameters used in different C# methods.  Many are array-based, suggesting operations on collections of data (e.g., bytes, characters, doubles).  The presence of  `StringBuilder` indicates string manipulation. The methods appear to perform various data processing tasks, including encoding/decoding, searching, and sorting. The overall semantic significance points towards a library of utility functions for data manipulation and algorithm implementation."
    }
  },
  {
    "c28": {
      "Unique tokens": [
        "\"",
        "null",
        ",",
        ".",
        "Z",
        "df",
        "getLocale",
        "ROOT",
        "HH:mm:ss",
        "yyyy",
        "getUserTimeZone",
        "MMM",
        "new",
        "value1",
        "Charset",
        "creating",
        "dateFormat",
        "SimpleDateFormat",
        "getLocaleCalendar",
        "format",
        "Locale",
        "setTimeZone",
        "getRunData",
        "locale",
        "US",
        "getConfig",
        "Paths",
        "EEE",
        "=",
        "value2",
        "Short",
        ")",
        "getTimeZone",
        "LocaleUtil",
        "(",
        "defaultCharset",
        "d",
        "getJavaDate",
        "1",
        "DateUtil",
        "valueOf",
        "isCellDateFormatted",
        "getUserLocale",
        "DATE",
        "-",
        "sdf",
        "formula2",
        "dd-MMM-yyyy",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Date and Time Formatting",
        "Internationalization",
        "String Manipulation",
        "File I/O",
        "Data Processing"
      ],
      "Description": "The tokens represent a mix of C# language constructs, including keywords (e.g., new, public, static), operators (=, ., -), identifiers (e.g., SimpleDateFormat, Locale, getLocale), and literals (e.g., null, \"dd-MMM-yyyy\", 1).  These are used in various contexts, such as creating and manipulating strings (StringBuilder), working with dates and times (SimpleDateFormat, DateUtil), handling locales (Locale, LocaleUtil), and performing file operations (Paths). The semantic tags reflect the diverse functionalities covered by the code snippets."
    }
  },
  {
    "c29": {
      "Unique tokens": [
        "Iterator",
        "_formats",
        "EscherRecord",
        "_tabids",
        "base",
        ".",
        "char",
        "Cell",
        "j",
        "Rule",
        "k",
        "0",
        "ATNConfig",
        "kPtr",
        "start",
        "orows",
        "<",
        "Object",
        "=",
        "short",
        ":",
        "final",
        "int",
        "(",
        "d",
        "size",
        "1",
        "i",
        "PerfTask",
        "String",
        "pos",
        "_colors",
        ";"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c30": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Method Input",
        "Client Request"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK, likely interacting with an API Gateway. Each method handles a specific request type (e.g., CreateSolutionRequest, DeleteVolumeRequest), indicating a pattern of client requests being processed by the service. The 'request' object carries the data needed for each operation."
    }
  },
  {
    "c31": {
      "Unique tokens": [
        "(",
        "toString",
        ")"
      ],
      "Syntactic Label": "Method and Parenthesis",
      "Semantic Tags": [
        "String Representation",
        "Object Serialization",
        "Data Output",
        "Debugging",
        "Logging"
      ],
      "Description": "The tokens '(' and ')' represent opening and closing parenthesis, which are used in method calls and to define the parameter list of methods. The token \"toString\" is a method that is commonly used to generate a string representation of an object. This is often used for debugging, logging, or data output purposes.  In C#, as in Java, the combination of these tokens is fundamental to object-oriented programming and string manipulation."
    }
  },
  {
    "c32": {
      "Unique tokens": [
        "getInt",
        "field_3_vert_pos",
        "indexWriter",
        "df",
        "_startIndex",
        "token",
        "_is16bitUnicode",
        "mergeProgress",
        "field_4_leftColumn",
        "CellRangeAddress",
        "field_2_last_row",
        "_significand",
        "field_4_constant_values",
        "_crns",
        "_cItm",
        "field_2_maximumAxisValue",
        "else",
        "short",
        "root",
        "field_4_scale",
        "append",
        ")",
        "field_3_majorIncrement",
        "int",
        "buf",
        "str",
        "field_4_text",
        "buffer",
        "0xa4",
        "field_2_num_unique_strings",
        "field_6_backcolorIndex",
        "deserializer",
        "list",
        "boost",
        "hashMask",
        "_colors",
        "if",
        "null",
        ",",
        "wOffset",
        "try",
        "sb",
        "field_2_linePattern",
        "field_3_y",
        "field_2_x",
        "field_3_rks",
        "field_2_backgroundColor",
        "field_2_y",
        "backType",
        "len",
        "field_3_strings",
        "[",
        "Arrays",
        "currPtr",
        "end",
        "field_5_indexToFontTable",
        "field_5_forecolorIndex",
        "_breaks",
        "this",
        "field_4_minorIncrement",
        "field_4_width",
        "map",
        "name",
        "is16bit",
        "field4_height",
        "field_3_row_index",
        "parseEntry",
        "stemmer",
        "longestOnly",
        "field2_y_position",
        "field6_unknown",
        "MAXP",
        "for",
        "boolean",
        "getBoolean",
        ".",
        "return",
        "throw",
        "prevPtr",
        "growExact",
        "k",
        "iiftab",
        "grbitFrt",
        "field_2_horiz_pos",
        "preserveOriginal",
        "arr",
        "field3_width",
        "readFully",
        "field_3_heightBasis",
        "v",
        "cachedRootArcs",
        "strkey",
        "_field3notUsed",
        "field_5_zero",
        "=",
        "final",
        "while",
        "isxvi",
        "elseprotocols",
        "grbit",
        "isxvd",
        "key",
        "CRNRecord",
        "assert",
        "scratch",
        "(",
        "RevTree",
        "reset",
        "state",
        "directory",
        "freq",
        "i",
        "in",
        "field_5_categoryAxisCross",
        "Descriptor",
        "field_2_first_column_index",
        "ignoreCase",
        "iObjectKind",
        "field_3_pattern",
        "at",
        ";",
        "\"",
        "field_5_dv_no",
        "max",
        "min",
        "maxGramSize",
        "ifmt",
        "field5_grbit",
        "minGramSize",
        "r",
        "start",
        "_endIndex",
        "_binaryExponent",
        "out",
        "System",
        "}",
        "cts",
        "field_2_yBasis",
        "field_5_activePane",
        "{",
        "_writeIndex",
        "_regions",
        "expectedTokenSequences",
        "_formula",
        "field_2_bytes",
        "field_4_formatFlags",
        "field_7_parsed_expr",
        "field_6_options",
        "Title",
        "isTOC",
        "field_2_first_col",
        "field_3_first_col",
        "count",
        "create",
        "field_5_height",
        "field_4_last_col",
        "T",
        "rgchDefListStyle",
        "a",
        "field_cbo_id",
        "field_3_topRow",
        "wordFiles",
        "array",
        "md"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Serialization",
        "Object Serialization",
        "Input/Output Operations",
        "Data Structures",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide variety of C# language elements, including identifiers (e.g., getInt, field_3_vert_pos), keywords (e.g., if, else, for, while), operators (e.g., ., =, +, -, ), and built-in types (e.g., int, short, boolean).  The context sentences show these tokens being used in various programming constructs, such as method definitions, loops, conditional statements, and object manipulations.  The code appears to be focused on data serialization, potentially for file I/O or object persistence, using various data structures (lists, arrays, maps) to manage data. The semantic tags reflect the overall functionality and purpose of the code."
    }
  },
  {
    "c33": {
      "Unique tokens": [
        "additionalRefMap",
        "causeList",
        "slice",
        ".",
        "return",
        "tokenOutput",
        "sb",
        "char",
        "throw",
        "res",
        "_string",
        "missing",
        "index",
        "REPORTER",
        "new",
        "errCode",
        "untokenizedTypes",
        "+",
        "deserializationOptions",
        "setComplexData",
        "?",
        "format",
        "preserveOriginal",
        "Collections",
        "System",
        "}",
        "field_1_value",
        "relativeOffset",
        "setErrorType",
        "{",
        "mapping",
        ";",
        "blockSize",
        "flush",
        "_spgrRecord",
        "markpos",
        "else",
        "checkNotClosed",
        "chunkerModelFile",
        "=",
        "fieldsToAdd",
        ":",
        "this",
        "pattern",
        ")",
        "append",
        "cp",
        "_ae",
        "FieldsConsumer",
        "queryMaker",
        "assert",
        "&&",
        "(",
        "useRomaji",
        "_currentlyEvaluatingCells",
        "skipBytes",
        "setServerCertificateName",
        "_bookEvaluator",
        "state",
        "buffer",
        "i",
        "for",
        "term",
        "IllegalArgumentException",
        "fieldsData",
        "super",
        "mode",
        "if"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "Object Creation",
        "Method Invocation",
        "Control Flow",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Keywords like `if`, `else`, `for`, `return`, `throw` control program flow.  Operators like `+`, `=`, `&&`, `?`, `.` perform arithmetic, assignment, logical operations, and member access.  `new` is used for object instantiation.  Identifiers like `additionalRefMap`, `causeList`, `sb`, etc., represent variables and objects.  The use of `System.Collections` indicates the use of collection classes.  The `IllegalArgumentException` and other exception types are used for error handling.  The code snippets show common C# programming patterns such as method definitions, loops, conditional statements, and exception handling."
    }
  },
  {
    "c34": {
      "Unique tokens": [
        "field_1_stream_pos",
        "setUserName",
        "rt",
        "Collection",
        "field_1_num_strings",
        "_row",
        "<",
        "blockSize",
        ")",
        "int",
        "setAccessKeyId",
        "setJobFlowId",
        "components",
        "field_1_row_offset",
        "buffer",
        "createEscherAnchor",
        "recordType",
        "StopWalkException",
        "year",
        "if",
        "field_1_pointNumber",
        "_refEval",
        "_extBookIndex",
        "setFormat",
        "offsetAtt",
        "setPath",
        "main",
        "_mask",
        "recompose",
        "byte",
        "this",
        "BoundedEntrySet",
        "setName",
        "synchronized",
        "for",
        "setLogGroupName",
        "groupComp",
        "table",
        "return",
        "field_1_x",
        "IClientProfile",
        "field_1_pane",
        "Set",
        "_reserved0",
        "field_1_anchorId",
        "_bookSheetColumn",
        "Slice",
        "final",
        "while",
        "field_1_barSpace",
        "_headerRec",
        "checkBlockSize",
        "assert",
        "cache",
        "_isxvi",
        "hashSize",
        "futureHeader",
        "(",
        "state",
        "db",
        "in",
        "field_1_row",
        "string",
        "beginA",
        "setVaultName",
        "setAccountId",
        "parentIds",
        "setDBInstanceIdentifier",
        "setLabel",
        "_externalBookRecord",
        "src",
        "{",
        "_regions",
        "_cache",
        "field_1_index_extern_sheet",
        "field_1_left_row_gutter",
        "fieldsToAdd",
        "field_1_number_of_sheets",
        "field_1_index_code",
        "rc",
        "setDomainName",
        "super",
        "checkCallable"
      ],
      "Syntactic Label": "C# identifiers, keywords, and operators",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Control Flow",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a mix of C# identifiers (e.g., field_1_stream_pos, setUserName, rt, Collection), keywords (e.g., if, for, while, return, synchronized), and operators (e.g., ., <, (, ), =).  These tokens are fundamental to C# programming. Identifiers name variables, objects, methods, etc. Keywords control program flow and structure. Operators perform operations on data. The sentences show various programming constructs including object instantiation, method calls, conditional statements, loops, exception handling, and the use of data structures like collections and arrays.  The semantic tags reflect the common functionalities and purposes of the code snippets."
    }
  },
  {
    "c35": {
      "Unique tokens": [
        "WeightedSpanTerm",
        "EscherSimpleProperty",
        "CommonRoaRequest",
        "CellEvaluationFrame",
        "ATNState",
        "rec",
        "HSSFPicture",
        "CommonTokenStream",
        "FuzzyQuery",
        "CellRangeAddress",
        "Query",
        "ReflogCommand",
        "<",
        "CanonicalTreeParser",
        "EncryptionInfo",
        "ExternalSheet",
        "Interval",
        "BooleanQuery",
        "IndexWriter",
        "TermsEnum",
        "TSTNode",
        ")",
        "TermStats",
        "PasswordRecord",
        "RowRecord",
        "CellReference",
        "Ptg",
        "result",
        "RuleStartState",
        "ObjectInserter",
        "BlankRecord",
        "ExternalBookBlock",
        "ParserInterpreter",
        "QueryMaker",
        "PredictionContext",
        "RuleNode",
        "FieldVals",
        "EscherSpRecord",
        "SupBookRecord",
        "SpatialOperation",
        "Ref",
        "TwoDEval",
        "HSSFColor",
        "BlameGenerator",
        "MergeInfo",
        "URIish",
        "Cell",
        "spContainer",
        "AbstractList",
        "QualityStats",
        "ParserRuleContext",
        "AlternateHandle",
        "first",
        "lexerAction",
        "SrndQuery",
        "Row",
        "EscherOptRecord",
        "ReplicationSession",
        "shape",
        "[",
        "NoteMap",
        "CellValueRecordInterface",
        "LexerAction",
        "TreeFilter",
        "IndexWriterConfig",
        "AttributeImpl",
        "FunctionMetadata",
        "RuleContext",
        "DFAState",
        "retval",
        "RevWalk",
        "SmallDocSet",
        "CompiledAutomaton",
        "PColor",
        "TokenStream",
        "Term",
        "MatchingDocs",
        "subRecStream",
        "s",
        "t",
        "objectId",
        "StrEnum",
        "HSSFCell",
        "RecordInputStream",
        "IntervalSet",
        "CharsRef",
        "CredentialItem",
        "Link",
        "Map",
        "RefSpec",
        "EmbeddedObjectRefSubRecord",
        "ExpressionValueSource",
        "SearcherTracker",
        "BlockList",
        "RecordBase",
        "Arc",
        ".",
        "ProtectRecord",
        "DirectoryReader",
        "EscherBSERecord",
        "k",
        "trans",
        "supbook",
        "Automaton",
        "Break",
        "MergeThread",
        "IndexInput",
        "PackFile",
        "FieldFragList",
        "cmo",
        "parser",
        "RevObject",
        "HSSFSimpleShape",
        "=",
        "PrefixQuery",
        "Entry",
        "InputIterator",
        "HashtableEntry",
        "PackList",
        "IndexCommit",
        "RefUpdate",
        "futureHeader",
        "NameRecord",
        "EscherProperty",
        "CTFormat",
        "TermData",
        "ObjectDirectory",
        "ModClause",
        "dfa",
        "AreaEval",
        "oldRevision",
        "MutableFPNumber",
        "DistanceSubQuery",
        "onCreate",
        ";",
        "UnicodeMapping",
        "HSSFRow",
        "State",
        "Resolution",
        "EscherRecord",
        "Analyzer",
        "FontRecord",
        "RevCommit",
        "ParsePathType",
        "Passage",
        "EvaluationWorkbook",
        "DrawingGroupRecord",
        "StandardQueryParser",
        "BlankCellRectangleGroup",
        "EvaluationCell",
        "ObjectId",
        "EscherDgRecord",
        "FormatRecord",
        "Record",
        "BytesRef",
        "r",
        "c",
        "ch",
        "SubmoduleWalk",
        "RevFilter",
        "ValueEval",
        "NumberRecord",
        "_regions",
        "ParseTree",
        "LittleEndianByteArrayOutputStream",
        "TreeWalk",
        "Property",
        "HashMapEntry",
        "spec",
        "ExtSSTRecord",
        "QueryNode",
        "HSSFClientAnchor",
        "FieldComparator",
        "OutputStreamWriter",
        "DirCache",
        "TermRangeQuery",
        "visitRecord",
        "RunAutomaton",
        "other"
      ],
      "Syntactic Label": "C# identifiers, keywords, and operators",
      "Semantic Tags": [
        "Data Structures",
        "Object Manipulation",
        "File I/O",
        "Exception Handling",
        "Record Management"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Identifiers name classes, methods, variables, and objects. Keywords like \"public\", \"void\", \"if\", \"for\", \"while\", \"try\", \"catch\", etc., define program structure and control flow. Operators such as \"=\", \".\", \"+\", \"==\", etc., perform operations on data.  The code snippets show object manipulation, file I/O operations, exception handling, and management of custom record structures.  The semantic tags reflect these key aspects of the code's functionality."
    }
  },
  {
    "c36": {
      "Unique tokens": [
        "withExclusiveStartTableName",
        "limit",
        "null",
        ",",
        ".",
        "CreateQueueRequest",
        "withVisibilityTimeout",
        "withMessageBody",
        "getStatusCode",
        "withReceiptHandle",
        "DeleteMessageRequest",
        "Collection",
        "new",
        "receiptHandle",
        "withQueueUrl",
        ">",
        "withQueueName",
        "getRequest",
        "attributeNames",
        "autocompleteResponse",
        "withQueueNamePrefix",
        "SendMessageBatchRequest",
        "List",
        "getHeaders",
        "GetQueueUrlRequest",
        "expected",
        "withAttributeNames",
        "<",
        "{",
        "ProvisionedThroughput",
        "getValue",
        "withTableName",
        "response",
        "getResults",
        "getQueueUrl",
        "withEntries",
        "entries",
        "ReceiveCommand",
        "ListQueuesRequest",
        "exclusiveStartTableName",
        "withProvisionedThroughput",
        ")",
        "DescribeTableRequest",
        "messageBody",
        "ListTablesRequest",
        "provisionedThroughput",
        "ChangeMessageVisibilityRequest",
        "creden",
        "ChangeMessageVisibilityBatchRequestEntry",
        "(",
        "queueName",
        "label",
        "withLimit",
        "RemovePermissionRequest",
        "ReceiveMessageRequest",
        "CredentialItem",
        "DeleteMessageBatchRequest",
        "withLabel",
        "UpdateTableRequest",
        "SendMessageRequest",
        "queueUrl",
        "attributesToGet",
        "super",
        "commands",
        "String",
        "GetQueueAttributesRequest",
        "tableName",
        "java",
        "DeleteMessageBatchRequestEntry",
        ";",
        "SendMessageBatchRequestEntry"
      ],
      "Syntactic Label": "Method Parameters, Object Instantiation, Method Calls, Object Properties, Operators",
      "Semantic Tags": [
        "Cloud Messaging",
        "Queue Management",
        "Table Management",
        "AWS SDK",
        "Data Structures"
      ],
      "Description": "The tokens represent various aspects of C# code related to interacting with cloud services, likely an AWS SDK.  They include method parameters (e.g., queueUrl, tableName, entries), object instantiation (e.g., new ListQueuesRequest()), method calls (e.g., getQueueUrl(), sendMessageBatch()), object properties (e.g., withQueueName, withEntries), and operators (e.g., ., >, <). The code manages queues and tables, sending and receiving messages, and manipulating attributes.  The semantic tags reflect the overall functionality of managing cloud resources and data within a queueing and table storage system."
    }
  },
  {
    "c37": {
      "Unique tokens": [
        "\"",
        "(",
        "AWS"
      ],
      "Syntactic Label": "Comma, Opening Parenthesis, Identifier",
      "Semantic Tags": [
        "API Request Parameters",
        "AWS Service Integration",
        "Request Initialization",
        "Parameter Passing",
        "Constructor Parameter"
      ],
      "Description": "The comma acts as a separator in parameter lists. The opening parenthesis initiates parameter lists in method calls and constructor invocations.  AWS is used as an identifier, likely representing Amazon Web Services, and is used as a parameter in the Principal constructor, indicating integration with AWS services. These tokens are fundamental to C# syntax and are crucial for defining and invoking methods, constructors, and passing parameters, which are essential aspects of object-oriented programming and API interactions."
    }
  },
  {
    "c38": {
      "Unique tokens": [
        ".ix",
        "?",
        "oldPath",
        "formatAsString",
        "minMergeSize",
        "collast",
        "_data",
        "Verifier",
        "append",
        ")",
        "type=",
        "minDocFreq",
        "length",
        ".textLen=",
        "getRowCount",
        "toHexString",
        "buffer",
        "OSVersion:",
        "colornum",
        "if",
        "null",
        ",",
        "sb",
        ">",
        "[",
        ".grbitFrt=",
        "\\t",
        "Arrays",
        "getNumAreas",
        "mergeFactor=",
        "this",
        "name",
        "ref",
        "s",
        "._cLine:",
        "target",
        "size",
        "for",
        "getString",
        "shortToHex",
        "letChildReport",
        "(forced)",
        "_firstCell",
        "getNumberInstance",
        "tag",
        ".",
        "return",
        "exclude",
        "[reject]:",
        "returnStates",
        "k",
        "space",
        ".comboObjectID",
        "toString",
        "childCount=",
        "=",
        "final",
        "(",
        "i",
        "getForegroundColorString",
        "workbook=",
        "!=",
        ";",
        "\"",
        "E",
        "getPropertySetIDMap",
        ".iiftab",
        "toHex",
        "r",
        "c",
        "ch",
        "'",
        "}",
        "{",
        "#values#uninitialised#",
        "intToHex",
        "]",
        ":",
        "getByteOrder",
        "minWordLen",
        "reuseAsIs",
        "Constants",
        "\\n",
        "CELL_DELIMITER",
        "biffName",
        "object",
        "HexDump",
        "newPath"
      ],
      "Syntactic Label": "StringBuilder Object and its methods, Variables, Operators, and Literals",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Hexadecimal Conversion",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a collection of C# language elements used to construct string representations of data structures.  The `StringBuilder` object is heavily used to efficiently build strings, often representing data in hexadecimal format using helper methods like `HexDump.toHex` and `HexDump.shortToHex`.  The code uses various operators (`=`, `+=`, `==`, `!=`, etc.) and literals (e.g., '\n', '[', ']', etc.) to manipulate and format the strings. Conditional statements (`if`) are used to control the string construction based on data properties.  The overall purpose is to serialize data into human-readable string formats, often for debugging or logging purposes."
    }
  },
  {
    "c39": {
      "Unique tokens": [
        "DefaultColWidthRecord",
        "WeightedSpanTerm",
        "HSSFPolygon",
        "CompoundException",
        "NumericPayloadTokenFilter",
        "TermQuery",
        "HSSFPicture",
        "AtomicReference",
        "HSSFConditionalFormattingRule",
        "InventoryPrefixPredicate",
        "ObjectStream",
        "MutableValue",
        "CommitCommand",
        "PutRetentionPolicyRequest",
        "SynonymFilter",
        "SeriesListRecord",
        "ReflogCommand",
        "CanonicalTreeParser",
        "RefPtg",
        "QueryAllGroupsRequest",
        "DTDHandler",
        "BooleanQuery",
        "clone",
        "NormValueSource",
        "PagedBytesDataInput",
        "OpenNLPPOSFilter",
        "NavigableSet",
        "BeginRecord",
        "MulBlankRecord",
        "Ptg",
        "NormalizeCharMap",
        "IntPtg",
        "LbsDropData",
        "RequestSpotInstancesRequest",
        "TermsEnumWithSlice",
        "SendMessageRequest",
        "CreateLoginProfileRequest",
        "ProgressMonitor",
        "HunspellStemFilter",
        "AbstractTreeIterator",
        "RevisionSyntaxException",
        "PathFilter",
        "HSSFPatternFormatting",
        "HeaderLineParser",
        "ElisionFilter",
        "UnpackException",
        "CharVector",
        "QueryParserConfig",
        "MulRKRecord",
        "SrndTruncQuery",
        "UnsubscribeRequest",
        "GroupMarkerSubRecord",
        "MergeException",
        "SaveRecalcRecord",
        "ToParentBlockJoinQuery",
        "SimpleBoolFunction",
        "WeightedSpanTermExtractor",
        "Result",
        "DefaultAcsClient",
        "SetSubscriptionAttributesRequest",
        "HSSFFormulaEvaluator",
        "IntervalSet",
        "PrecedenceQueryParser",
        "BootstrapActionConfig",
        "EmbeddedObjectRefSubRecord",
        "ExpandedDouble",
        "SortField",
        "ArrayPredictionContext",
        "ChangeType",
        "EveryNOrDocFreqTermSelector",
        "QueryNodeProcessor",
        "NamePtg",
        "PushCommand",
        "LimitTokenCountFilter",
        "IndicNormalizationFilter",
        "EscherBSERecord",
        "CherryPickStatus",
        "PersianNormalizationFilter",
        "UnitsRecord",
        "IndexInput",
        "VCenterRecord",
        "AbstractEscherHolderRecord",
        "TopMarginRecord",
        "UpdateInstanceRequest",
        "BufferedIndexInput",
        "UnescapedCharSequence",
        "XPathElement",
        "PaneRecord",
        "ListenerList",
        "FilePassRecord",
        "RevObject",
        "HSSFSimpleShape",
        "Explanation",
        "CellElapsedFormatter",
        "BreakIteratorBoundaryScanner",
        "StashCreateCommand",
        "FieldDateResolutionFCListener",
        "PullCommand",
        "SpreadsheetVersion",
        "FetchResult",
        "CalcCountRecord",
        "CreateGroupRequest",
        "ScandinavianNormalizationFilter",
        "DBCellRecord",
        "Editable",
        "AxisParentRecord",
        "Reader",
        "BytesRef",
        "LabelRecord",
        "ContinueRecord",
        "PrintHeadersRecord",
        "WorkingTreeOptions",
        "SpanTermQuery",
        "MappingCharFilter",
        "HSSFClientAnchor",
        "RowRecordsAggregate",
        "HSSFObjectData",
        "HSSFDataFormat",
        "AmazonS3EncryptionClient",
        "AbbreviatedObjectId",
        "ClassicFilterFactory",
        "RebootInstanceRequest",
        "EscherComplexProperty",
        "HSSFTextbox",
        "XmlSerializer",
        "ParameterNameValue",
        "ChartSubstreamRecordAggregate",
        "StopInstancesRequest",
        "EscherSimpleProperty",
        "SeriesToChartGroupRecord",
        "PhraseSlopQueryNode",
        "DocumentSummaryInformation",
        "HadoopJarStepConfig",
        "UDFFinder",
        "ExtendedPivotTableViewFieldsRecord",
        "ConflictState",
        "RenameCallback",
        "UserAgentConfig",
        "DeleteApplicationVersionRequest",
        "ShingleAnalyzerWrapper",
        "FacetLabel",
        "BoostQueryNode",
        "ErrorResponseBody",
        "IllegalFormatWidthException",
        "KeyPairCredentials",
        "WindowProtectRecord",
        "PredictionContext",
        "SharedFormulaRecord",
        "AreaValueArray",
        "StoredFieldsReader",
        "LinearRegressionFunction",
        "BlockJoinWeight",
        "TermsQueryBuilder",
        "IterationRecord",
        "BoolErrRecord",
        "SshSessionFactory",
        "HSSFShapeGroup",
        "StashDropCommand",
        "UsernamePasswordCredentialsProvider",
        "PushConnection",
        "EscherPropertyMetaData",
        "MergeCommand",
        "TableStylesRecord",
        "FieldAndTerm",
        "SeriesIndexRecord",
        "PackingPhase",
        "CopyOnWriteArrayList",
        "HSSFConditionalFormatting",
        "SeriesLabelsRecord",
        "RefModeRecord",
        "BottomMarginRecord",
        "ListJobsRequest",
        "StashListCommand",
        "TrackingRefUpdate",
        "CreateDBSnapshotRequest",
        "ListBranchCommand",
        "LeftMarginRecord",
        "DisjunctionMaxQueryBuilder",
        "PackConfig",
        "NameCommentRecord",
        "AndQueryNode",
        "IrishLowerCaseFilter",
        "SegmentCommitInfo",
        "CFRecordsAggregate",
        "ResetCommand",
        ".",
        "ProtectRecord",
        "DoubleMetaphoneFilter",
        "PersistentSnapshotDeletionPolicy",
        "SynonymFilterFactory",
        "CreatePlacementGroupRequest",
        "UseSelFSRecord",
        "TotalTermFreqValueSource",
        "NIOFSIndexInput",
        "XPathRuleElement",
        "getConfig",
        "SpatialArgs",
        "ShingleFilter",
        "InputIterator",
        "PerFieldAnalyzerWrapper",
        "RmCommand",
        "RefUpdate",
        "ValueRangeRecord",
        "AcsRequest",
        "CleanCommand",
        "PerfTask",
        "LexerActionExecutor",
        "Ref3DPxg",
        "SeekStatus",
        "StandardQueryParser",
        "BatchRefUpdate",
        "FormatRecord",
        "Locale",
        "BeiderMorseFilter",
        "FSTTermsWriter",
        "RevFilter",
        "DescribeJobRequest",
        "DeleteGroupRequest",
        "ParseException",
        "PatchFormatException",
        "SortedSetDocValuesField",
        "PorterStemFilter",
        "AlibabaCloudCredentials",
        "GetAttributesRequest",
        "LabelAndValue",
        "TermRangeQuery",
        "ByteBlockPool",
        "PhRun",
        "IntList",
        "SimpleFacetsExample",
        "LexerATNConfig",
        "BatchPutAttributesRequest",
        "ExternalName",
        "CellGeneralFormatter",
        "InvalidMarkException",
        "TermVectorsReader",
        "SpanNearQuery",
        "ServerCertificateMetadata",
        "FormatType",
        "PredicateTransition",
        "EscherDggRecord",
        "RenameDetectionType",
        "OrQueryNode",
        "SrndTermQuery",
        "GetLoginProfileRequest",
        "PhoneticFilter",
        "MultiBoolFunction",
        "Formula",
        "ArrayRecord",
        "Interpolator",
        "QueryMaker",
        "QueryPhraseMap",
        "HSSFCombobox",
        "EscherArrayProperty",
        "SingleCellValueArray",
        "BooleanMatcher",
        "MissingFormatArgumentException",
        "TableRecord",
        "LimitTokenPositionFilter",
        "InitCommand",
        "ParserRuleContext",
        "RefCountedRevision",
        "PutGroupPolicyRequest",
        "HCenterRecord",
        "CodepointCountFilter",
        "DeleteMessageBatchRequest",
        "ViewDefinitionRecord",
        "SmallDocSet",
        "PlotAreaRecord",
        "BooleanQueryBuilder",
        "TokenStream",
        "LongList",
        "UpdateGroupRequest",
        "FontFormatting",
        "Matcher",
        "CherryPickCommand",
        "HTMLStripCharFilter",
        "NumericDocValuesField",
        "QuadPrefixTree",
        "ClientException",
        "CustomProperty",
        "GermanNormalizationFilter",
        "RevertCommand",
        "DeltaRecord",
        "GrowableWriter",
        "SummaryInformation",
        "LockFailedException",
        "CredentialsProvider",
        "ECSMetadataServiceCredentialsFetcher",
        "FeatHdrRecord",
        "UpdateApplicationVersionRequest",
        "NameXPtg",
        "CharArrayIterator",
        "SoraniNormalizationFilter",
        "CreateUserRequest",
        "ProvisionedThroughput",
        "OldFormulaRecord",
        "ObjectProtectRecord",
        "HeaderRecord",
        "HSSFChildAnchor",
        "SimpleImmutableEntry",
        "FooterRecord",
        "ThreadSafeProgressMonitor",
        "SimilarityConfig",
        "CRNRecord",
        "GridsetRecord",
        "ProfilingATNSimulator",
        "UpdateLoginProfileRequest",
        "CreateApplicationVersionRequest",
        "DeletedArea3DPtg",
        "DeleteSnapshotRequest",
        "RecalcIdRecord",
        "MutableFPNumber",
        "RenameDetector",
        "FontBasisRecord",
        "DefaultPassageFormatter",
        "EntityResolver",
        "ContentHandler",
        "RevCommit",
        "ISigner",
        "AreaErrPtg",
        "BinaryHunk",
        "NavigableMap",
        "StatusCommand",
        "UnicodeString",
        "LinkedDataRecord",
        "MatchAllDocsQuery",
        "ObjectId",
        "SendMessageBatchRequest",
        "LabelSSTRecord",
        "List",
        "NumberRecord",
        "AddUserToGroupRequest",
        "ANTLRInputStream",
        "Rescorer",
        "NGramDistance",
        "CompositeReaderContext",
        "DVRecord",
        "WeightedPhraseInfo",
        "SegmentReadState",
        "PutUserPolicyRequest",
        "FileNameMatcher",
        "CheckoutCommand",
        "GeohashPrefixTree",
        "NotImplementedFunctionException",
        "HeaderFooterRecord",
        "PhraseWildcardQuery",
        "InvalidationBatch",
        "IfFunction",
        "BM25FQuery",
        "CellRangeAddress",
        "OrderedATNConfigSet",
        "ExternalSheet",
        "BlameCommand",
        "ServerException",
        "FreeRefFunction",
        "OpenNLPChunkerFilter",
        "EndRecord",
        "DiffCommand",
        "PasswordRecord",
        "RecallPoint",
        "QueryParser",
        "RevFlag",
        "CommonToken",
        "PrecedenceQueryNodeProcessorPipeline",
        "TblPtg",
        "TokenFilter",
        "ThreeWayMerger",
        "FeatRecord",
        "FormulaRecordAggregate",
        "FileSharingRecord",
        "PersonIdent",
        "GroupingSearch",
        "LazyAreaEval",
        "BlameGenerator",
        "RKRecord",
        "SimpleMergedSegmentWarmer",
        "ParseTreePattern",
        "CodingErrorAction",
        "PrintGridlinesRecord",
        "PatternReplaceFilter",
        "TokenTagToken",
        "EndSubRecord",
        "TreeFilter",
        "OldLabelRecord",
        "V",
        "CollatedTermAttributeImpl",
        "StandardSyntaxParser",
        "BinaryDocValues",
        "SlopQueryNode",
        "SuggestWordQueue",
        "DecisionState",
        "PostingsEnum",
        "HSSFCell",
        "SeriesRecord",
        "CharsRef",
        "LengthFilter",
        "BoundSheetRecord",
        "Token",
        "DrillDownQuery",
        "CreateSnapshotRequest",
        "EpsilonTransition",
        "SortedDocValuesField",
        "DoubleRange",
        "CFRuleBase",
        "HSSFBorderFormatting",
        "QueryConfigHandler",
        "EmptyTreeIterator",
        "ATNConfig",
        "ActionTransition",
        "LogCommand",
        "BulkOperationPackedSingleBlock",
        "GermanStemFilter",
        "RightMarginRecord",
        "LsRemoteCommand",
        "RebaseCommand",
        "FieldFragList",
        "TagCommand",
        "ApplyResult",
        "ArrayPtg",
        "DeleteUserRequest",
        "AddCommand",
        "StartInstancesRequest",
        "SearcherAndTaxonomy",
        "PendingTerm",
        "XPathTokenElement",
        "RemoteRefUpdate",
        "ICUTransformFilter",
        "IndexCommit",
        "AttributeFactory",
        "EscherProperty",
        "DeletedRef3DPtg",
        "NameRecord",
        "HSSFComment",
        "SheetBuilder",
        "BasicCredentials",
        "AreaRecord",
        "DoubleValuesSource",
        "State",
        "CJKWidthFilter",
        "ProcessBuilder",
        "Policy",
        "SpanOrTermsBuilder",
        "HSSFFontFormatting",
        "BM25Similarity",
        "SortedDocValues",
        "FieldType",
        "ValueEval",
        "RunBackgroundTask",
        "CommonRpcRequest",
        "ATNDeserializationOptions",
        "ParseTree",
        "SlicedIndexInput",
        "NormalisedDecimal",
        "CellRangeAddress8Bit",
        "ValueFiller",
        "RecyclingByteBlockAllocator",
        "BinaryDocValuesField",
        "PrefixCodedTerms",
        "ServerCertificate",
        "DirCache",
        "ListenerHandle",
        "ConfirmProductInstanceRequest",
        "CustomAnalyzerConfig",
        "VariableGapTermsIndexWriter",
        "MergeResult",
        "BlockTermsWriter",
        "CapitalizationFilter",
        "T",
        "StaticCredentialsProvider",
        "ExternSheetRecord",
        "AnalyticsPrefixPredicate",
        "ScenarioProtectRecord"
      ],
      "Syntactic Label": "Objects and Methods",
      "Semantic Tags": [
        "Command Pattern",
        "Progress Reporting",
        "Tokenization",
        "Explanation Generation",
        "Process Management"
      ],
      "Description": "The tokens represent various C# objects and their methods.  The code snippets showcase the command pattern (e.g., PullCommand, CommitCommand), progress reporting (ProgressMonitor), token stream manipulation (TokenStream, TokenFilter), explanation generation (Explanation), and process management (ProcessBuilder).  These are common patterns and functionalities in C# applications."
    }
  },
  {
    "c40": {
      "Unique tokens": [
        "isBuiltin",
        "[/SHARED",
        "byteToHex",
        "getFormatFlags",
        "b",
        ".xfindex=",
        "nameName",
        "formatAsString",
        "sectionCount",
        ".grBit",
        "else",
        "[/BOUNDSHEET]",
        "_data",
        "checkDateTimeFormats",
        ".alwaysClc=",
        "append",
        ")",
        "minDocFreq",
        "int",
        "_linkOpts",
        ".xfindex",
        "buf",
        "Ptg",
        "flag",
        "getBorderType",
        "toHexString",
        "buffer",
        ".denominator",
        "Integer",
        "getLastRow",
        "base=edge:",
        "fieldName",
        "if",
        ".nCFRTIDs",
        ".isxvd",
        "null",
        "isEdge",
        ",",
        ".colto",
        "sb",
        ".unknownShort10=",
        "toFormulaString",
        ">",
        "getOptions",
        "getHidden",
        ".sheetname",
        "encryptionInfo",
        "getAddress",
        "[",
        ".iObjectContext",
        "\\t",
        "getDenominator",
        "retval",
        "ptgs",
        "getProperty",
        "name",
        "maxMergeDocs=",
        ".link1",
        "s",
        "getURL",
        "cur",
        "section",
        "maxCFSSegmentSizeMB=",
        "for",
        "shortToHex",
        "_cSub",
        ".cItm",
        "[/CATLAB]",
        "getCollapsed",
        ".",
        "return",
        "line.separator",
        "k",
        ".verifierHash",
        "+",
        "grbitFrt",
        "toString",
        ".options",
        "=",
        ".zero",
        "cr",
        "labelValue",
        "getLink1",
        ".horizontalBorder",
        "isxvd",
        "(",
        "write",
        "i",
        "catch",
        "minimumMatchingmElements",
        "Formula[",
        "nextFinalOutput=",
        "w",
        "message",
        "!=",
        ";",
        "\"",
        ".unused",
        "iObjectInstance1",
        ".DVRecordsNumber",
        "._str:",
        "0",
        "getMessage",
        "prefix",
        "hidden",
        "get",
        "field_6_name_text",
        "r",
        "toHex",
        ".name",
        "checkNumbersAsText",
        "c",
        "System",
        "'",
        "}",
        "field_8_colInputRow",
        ".at",
        "{",
        ".linkOpts=",
        "field_2_frt_cell_ref_flag",
        "BIT_ARC_HAS_OUTPUT",
        "]",
        ":",
        "_cLine",
        "FORMULA]",
        ".stacked",
        "&",
        "minWordLen",
        ".unicodeflag=",
        "field_5_name_definition",
        "\\n",
        "BIT_ARC_HAS_FINAL_OUTPUT",
        ".string_len=",
        "maxMergeSizeForForcedMerge",
        ".alternatefo=",
        "starts",
        "HexDump"
      ],
      "Syntactic Label": "C# Tokens and Operators within String Manipulation and Data Representation",
      "Semantic Tags": [
        "String Manipulation",
        "Data Serialization",
        "Object Representation",
        "Hexadecimal Conversion",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a combination of C# language constructs used for string manipulation (StringBuilder, append, +, etc.), data serialization (creating string representations of objects), object representation (toString() method), hexadecimal conversion (HexDump class), and conditional logic (if, else statements).  These are fundamental aspects of C# programming, particularly when dealing with data structures and their textual representation. The code snippets are significant because they show how to convert various data structures into human-readable string formats, often for debugging or logging purposes. The use of StringBuilder for efficient string concatenation is also noteworthy."
    }
  },
  {
    "c41": {
      "Unique tokens": [
        "Iterator",
        "CharsetEncoder",
        ".",
        "E",
        "char",
        "StringBuffer",
        "StringBuilder",
        "ShortBuffer",
        "PrintStream",
        "ByteBuffer",
        "StringWriter",
        "LongBuffer",
        "ShortField",
        "Set",
        "V",
        "FloatBuffer",
        "Buffer",
        "PrintWriter",
        "LongField",
        "CharBlockArray",
        "CharArrayWriter",
        "CharsetDecoder",
        "double",
        "CharSequence",
        "CharBuffer",
        "Appendable",
        "Matcher",
        "IntBuffer",
        "DoubleBuffer"
      ],
      "Syntactic Label": "C# Data Structures and Methods",
      "Semantic Tags": [
        "Buffer Manipulation",
        "Data Conversion",
        "String Manipulation",
        "Character Encoding",
        "Exception Handling"
      ],
      "Description": "The tokens represent various C# data structures (buffers, strings, writers) and their associated methods.  The code snippets demonstrate buffer manipulation (get, put, compact, duplicate, slice), string manipulation (append, insert, delete, reverse), character encoding (CharsetEncoder, CharsetDecoder), and exception handling (BufferUnderflowException, BufferOverflowException, ReadOnlyBufferException).  These are fundamental operations in C# programming, particularly when dealing with I/O, data processing, and string management."
    }
  },
  {
    "c42": {
      "Unique tokens": [
        "",
        "Unsupported",
        "allocateMore",
        "0x10",
        "0x00",
        "StringUtil",
        "Math",
        "put",
        "++",
        "0x1c",
        "?",
        "2",
        "ptr",
        "0x38",
        "0x3b",
        "<",
        "OVERFLOW",
        "value:",
        "long",
        "Expected",
        "0x08",
        "field_3_unicode_len",
        "'Add-In",
        "else",
        "readUnicodeLE",
        "expression_len",
        "short",
        "Expecting",
        "_data",
        "charType",
        "_property_start",
        ")",
        "int",
        "_sbat_start",
        "length",
        "available",
        "_xbat_start",
        "toHexString",
        "Integer",
        "result",
        "_signature_offset",
        "Formula",
        "getObjectType",
        "MAX_PAD_ALIGNMENT",
        "-",
        "0x1e",
        "bytesRemaining",
        "if",
        "3",
        "data",
        "null",
        ",",
        "readShort",
        "valStart",
        "data:",
        "IOUtils",
        "EXTERNALBOOK",
        "bytesRead",
        "CommonObjectDataSubRecord",
        "of",
        ">",
        "cchName",
        "SMALLER_BIG_BLOCK_SIZE",
        "28",
        "[",
        "nRemainingBytes",
        "infoOffset",
        "*",
        "POIFSConstants",
        "read",
        "readRemainder",
        "==",
        "_signature",
        "false",
        "RuntimeException",
        "byte",
        "0x18",
        "readUByte",
        "32",
        "name",
        "0x24",
        "4",
        "number",
        "nextShort",
        "trim",
        "field_4_formula2_len",
        "success",
        "subRecStream",
        "true",
        "CoderResult",
        "setUsername",
        "size",
        "1",
        "0x0001",
        "msg",
        "34",
        "for",
        "output",
        "!",
        "0x20",
        "LittleEndian",
        "rawValue",
        "readCompressedUnicode",
        "21",
        "0x1a",
        "_isPaddedToQuadByteMultiple",
        "IntegerField",
        "ris",
        "arraycopy",
        ".",
        "return",
        "canPaddingBeDiscarded",
        "throw",
        "bytes",
        "END_OF_CHAIN",
        "new",
        "UNDERFLOW",
        "_bat_count",
        "supbook",
        "+",
        "isError",
        "but",
        "padSize",
        "ShortField",
        "subRecordData",
        "keyStart",
        "cmo",
        "16",
        "TAG_INTERNAL_REFERENCES",
        "flush",
        "UnmappableCharacterException",
        "readInt",
        "invalid",
        "previous",
        "-=",
        "Unexpected",
        "add",
        "=",
        "0x34",
        "while",
        "nBytesAvailable",
        "0x1000",
        "35",
        "sheets",
        "36",
        "(",
        "raw",
        "is16BitFlag",
        "getHeaderValue",
        "stage",
        "i",
        "0x0c",
        "got",
        "in",
        "no",
        "UTF8",
        "!=",
        "FormulaSpecialCachedValue",
        ";",
        "\"",
        "byte(s).",
        "0x6",
        "path",
        "MalformedInputException",
        "finally",
        "0",
        "numChars",
        "NORMAL_PAD_ALIGNMENT",
        "LabelRecord",
        "toHex",
        "out",
        "System",
        "}",
        "'",
        "close",
        "cchDefListStyle",
        "<<",
        "encode",
        "case",
        "{",
        "per",
        "0x3",
        "BOOLERR",
        "current",
        "nChars",
        "_xbat_count",
        "]",
        "packetSizeMustBeAtLeast",
        "12",
        "+=",
        ":",
        "remaining",
        "CellRangeAddress8Bit",
        "field_1_number_of_sheets",
        "field_1_username",
        "_sbat_count",
        "rawText",
        "isUnmappable",
        "33",
        "READY",
        "value",
        "isMalformed",
        "subRecord",
        "NAME_MASK",
        "Invalid",
        "flags",
        "Leftover",
        "getReadIndex",
        "_uninterpretedData",
        "flip",
        "8",
        "0x28",
        "String",
        "bigBlockSize"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "File I/O",
        "Data Structures",
        "String Manipulation",
        "Error Handling",
        "Data Serialization"
      ],
      "Description": "The tokens represent a wide range of C# language features, including keywords (if, else, for, while), operators (+, -, *, /, =, ==, !=, +=, -=, ++), data types (int, short, long, byte, char, String), hexadecimal values (0x10, 0x00, etc.), and method calls (e.g., readShort, readUnicodeLE, toHexString).  These are used in the context of file processing, data structure manipulation (arrays, lists), string handling, error management (exceptions), and data serialization/deserialization. The code snippets show various operations on byte arrays, strings, and other data structures, suggesting file parsing, data extraction, and transformation."
    }
  },
  {
    "c43": {
      "Unique tokens": [
        "offset",
        "definedNameIndex",
        ".",
        "ArrayUtil",
        "location",
        "treeIndex",
        "index",
        "nthParent",
        "_startIndex",
        "idx",
        "+",
        "0",
        "zzStartRead",
        "++",
        "len",
        "[",
        "c",
        "nth",
        "taxonomySize",
        "wordId",
        "blockSize",
        "_writeIndex",
        "which",
        "capacity",
        "_limit",
        "]",
        "oversize",
        "_count",
        "32",
        "&",
        "length",
        "0xff",
        "(",
        "bufferPosition",
        "phraseID",
        "value",
        "pos",
        "1",
        "getRecordSize",
        "size",
        "i",
        "8",
        "coffset",
        "lastPos",
        ";"
      ],
      "Syntactic Label": "Array Indexing and Access, Method Parameters, Variable Access, Operators, Method Calls",
      "Semantic Tags": [
        "Data Structure Manipulation",
        "Array Processing",
        "Data Access",
        "Object Interaction",
        "Utility Functions"
      ],
      "Description": "The tokens represent a mix of array indexing (e.g., `[]`, `offset + index`), method parameters (e.g., `nthParent`, `index`, `value`, `coffset`), variable access (e.g., `oldModes`, `mKeys`, `sourceTrees`, `blockSize`), operators (`+`, `++`, `&`, `0xff`), and method calls (e.g., `getOldMode`, `keyAt`, `codePointAt`, `getRecordSize`).  These are fundamental aspects of C# programming, reflecting common operations on arrays, objects, and data structures. The context shows access and manipulation of data within various classes, indicating data processing and object interaction."
    }
  },
  {
    "c44": {
      "Unique tokens": [
        "JGitText",
        "\"",
        ".",
        "IOException",
        "return",
        "throw",
        "new",
        "input",
        "CloneNotSupportedException",
        "out",
        "ReadOnlyBufferException",
        "src",
        "}",
        "UnsupportedOperationException",
        "{",
        ";",
        "RecordFormatException",
        "invalid",
        "UncheckedIOException",
        "Streams",
        "IoBridge",
        "e",
        "RuntimeException",
        "this",
        "NullPointerException",
        ")",
        "createTempFile",
        "LargeObjectException",
        "(",
        "NotSupportedException",
        "Exception",
        "IllegalStateException",
        "getClass",
        "synchronized",
        "ArrayIndexOutOfBoundsException",
        "in",
        "NotActiveException",
        "IllegalArgumentException",
        "AssertionError",
        "super",
        "if"
      ],
      "Syntactic Label": "Exception Handling and Method Implementation",
      "Semantic Tags": [
        "Exception Handling",
        "Method Implementation",
        "I/O Operations",
        "Data Structures",
        "Concurrency Control"
      ],
      "Description": "The tokens represent various aspects of C# programming, primarily focused on exception handling within method implementations.  Many methods throw exceptions (IOException, UnsupportedOperationException, etc.) indicating that they are not designed to handle certain scenarios or operations.  The presence of keywords like 'return', 'throw', 'new', 'if', and operators like '.' (dot operator for method calls), '(', ')', '{', '}' (parentheses and braces for code blocks) shows the basic structure of methods and exception handling.  The use of 'synchronized' suggests potential concurrency control mechanisms.  The semantic tags reflect the overall functionality of the code snippets, which involve I/O operations, manipulation of data structures (buffers, streams), and handling of exceptions to maintain program stability."
    }
  },
  {
    "c45": {
      "Unique tokens": [
        "notifyAll",
        "counter",
        "TYPE_UNMAPPABLE_CHAR",
        "to",
        "INT_SIZE",
        "MAX_VALUE",
        "getWidth",
        "token",
        "b",
        "Math",
        "lastWasCR",
        "++",
        "AnalyzerFactory",
        "2",
        "getBorderFormatting",
        "CellRangeAddress",
        "getErrorValue",
        "protectedArray",
        "TYPE_MALFORMED_INPUT",
        "HashMap",
        "<",
        "1.0",
        "getValue",
        "myStatus",
        "writePolicyToString",
        "clone",
        "idMap",
        "getFilePointer",
        "short",
        "reader",
        "mapEntry",
        "append",
        ")",
        "positionIncrementGap",
        "NATIVE_ORDER",
        "markedLastChar",
        "int",
        "originalText",
        "length",
        "UNKNOWN",
        "beginB",
        "available",
        "buf",
        "markSupported",
        "buffer",
        "LOOSE",
        "Integer",
        "nextForIterator",
        "clearAll",
        "LittleEndianConsts",
        "-",
        "repo",
        "<notokenfound/>",
        "from",
        "expectedOldObjectId",
        "pos",
        "data",
        "null",
        ",",
        "Hashtable",
        "getShort",
        "readShort",
        "unmodifiableSet",
        "MORE",
        "contentDisposition",
        "lastChar",
        "getHeight",
        "keys",
        ">",
        "apiVersion",
        "sourceText",
        "markedLineNumber",
        "ConcurrentHashMap",
        "[",
        "contentLength",
        "filteredEntrySet",
        "UnsupportedOperationException",
        "specialCachedValue",
        "formularData",
        "main",
        "==",
        "client",
        "false",
        "byte",
        "STAGE_0",
        "this",
        "readUByte",
        "map",
        "newValue",
        "true",
        "Date",
        "getPort",
        "size",
        "outCandidate",
        "getFile",
        "isDirect",
        "fdLimit",
        "1",
        "isShowing",
        "returnState",
        "PRIVATEKEY",
        "getString",
        "output",
        "slice",
        ".",
        "return",
        "char",
        "getDecisionInfo",
        "nextValue",
        "index",
        "entryIterator",
        "new",
        "matchingGroups",
        "+",
        "50",
        "delete",
        "firstWant",
        "cloneAttributes",
        "bucketName",
        "attSource",
        "sourceCommit",
        "memoryLimit",
        "flush",
        "readByte",
        "toString",
        "isReadOnly",
        "=",
        "isEmpty",
        "final",
        "isCaseSensitive",
        "newLimit",
        "next",
        "nextIndex",
        "key",
        "getSectionCount",
        "(",
        "reset",
        "TYPE_OVERFLOW",
        "renameScore",
        "scheme",
        "release",
        "INVALID_ALT_NUMBER",
        "_in",
        "getUser",
        "lastIndex",
        "clear",
        "byteBuffer",
        "in",
        "lineNumber",
        "getAccessSecret",
        "/",
        "incrementAndGet",
        "!=",
        ";",
        "type",
        "\"",
        "beginA",
        "firstKey",
        "field_3_last_col",
        "path",
        "getOldMode",
        "min",
        "isClosed",
        "0",
        "nanoTime",
        "getMessage",
        "ObjectId",
        "_options",
        "anyChanges",
        "get",
        "c",
        "src",
        "}",
        "close",
        "SKIP",
        "backingMap",
        "mImage",
        "text",
        "changeType",
        "error",
        "REF",
        "readUShort",
        "]",
        "oldPrefix",
        "deleteQueue",
        "getBooleanValue",
        "PROPERTY_SIZE",
        "getOldId",
        "hasNext",
        "value",
        "count",
        "getLine",
        "nextEntry",
        "0x0000",
        "nextExternal",
        "rootNode",
        "getDeclaringClass",
        "nextEntryNotFailFast",
        "offsetGap",
        "countMap",
        "a",
        "minValue",
        "command",
        "displayName",
        "TYPE_UNDERFLOW"
      ],
      "Syntactic Label": "Methods and Variables",
      "Semantic Tags": [
        "Object Manipulation",
        "Data Structures",
        "Input/Output",
        "Version Control",
        "Utility Functions"
      ],
      "Description": "The tokens represent a mix of methods (e.g., hasNext(), toString(), clone(), clear(), close(), get, set methods etc.), variables (e.g., counter, data, type, repo, etc.), constants (e.g., TYPE_OVERFLOW, INT_SIZE, MAX_VALUE, etc.), and operators.  These are fundamental elements in C# programming, used for various purposes, including object manipulation, data structure management (HashMap, Hashtable, ConcurrentHashMap), file I/O operations, version control system interactions (Git commands), and general utility functions. The context sentences show their usage in different scenarios, such as iterators, data serialization, and command execution."
    }
  },
  {
    "c46": {
      "Unique tokens": [
        "Iterator",
        "offset",
        ",",
        "f",
        ".",
        "nBreaks",
        "sid",
        "j",
        "b",
        "k",
        "nItems",
        "0",
        ">",
        "rowIndex",
        "++",
        "kPtr",
        "len",
        "field_2_cell_offsets",
        "[",
        "col",
        "<=",
        "c",
        "<",
        "jj_la1",
        "{",
        "crns",
        "v",
        "25",
        "fis",
        "1024",
        "file",
        "e",
        "jj_2_rtns",
        "byte",
        "=",
        "oldIdx",
        ">=",
        "+=",
        ":",
        "this",
        ")",
        "cp",
        "int",
        "10",
        "numDecisions",
        "length",
        "&&",
        "skipped",
        "(",
        "true",
        "nRegions",
        "xf",
        "field_1_numcolors",
        "s",
        "1",
        "size",
        "ti",
        "Integer",
        "i",
        "functionImpls",
        "x",
        "weightedTerms",
        "-",
        "p",
        "!",
        "String",
        "pos",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Looping and Iteration",
        "Array Manipulation",
        "Data Processing",
        "Conditional Logic",
        "Byte Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements frequently used in data processing and algorithm implementation.  They include keywords (e.g., \"for\", \"if\", \"else\"), operators (e.g., \"+\", \"-\", \"<\", \">\", \"=\", \"++\", \"&&\", \"!\"), data types (e.g., \"int\", \"byte\", \"String\", \"Integer\"), array indexing (\"[]\"), method calls (\".\"), and control flow structures. The semantic tags reflect the common use cases observed in the provided code snippets, which involve iterating through arrays, processing data based on conditions, and manipulating byte arrays."
    }
  },
  {
    "c47": {
      "Unique tokens": [
        "slot",
        "",
        "[NTF]",
        "D",
        "to",
        "mu",
        "b",
        "FooterKey[",
        "~",
        "token",
        "2",
        "/>",
        "IndexRevision",
        ",fontIndex=",
        ">=prec}?",
        "ruleIndex",
        ")",
        "ord",
        "popMode",
        "PATH(",
        "item",
        "likeText",
        "boost",
        "getDirectory",
        "AnyObjectId[",
        "Action[",
        "ngram(",
        "epsilon",
        ",",
        "ALL",
        "[",
        "files",
        "ord=",
        "TermState",
        "end",
        "FALSE",
        "version=",
        "z",
        "state=",
        "payload",
        "actionIndex",
        "this",
        "BLOCK:",
        "name",
        "3(",
        "slot:",
        "action_",
        "scorer(",
        "fileName=",
        "_character",
        "FAST_",
        "\\\"",
        "weight",
        "Date",
        "size",
        "1",
        "output=",
        "listener",
        "output",
        "tag",
        ".",
        "arc=",
        "TRUE",
        "index",
        "$",
        "G",
        "pred_",
        "+",
        "*:*",
        "brToString",
        "Action:",
        "toString",
        "Publish",
        "context=",
        "=",
        "NOT",
        "more",
        "like:",
        ")[",
        "(",
        "()",
        "character=",
        "action",
        "n",
        ";",
        "type",
        "\"",
        "Z(",
        "path",
        "[DELETEDCHILD]",
        "input=",
        "ObjectDirectory[",
        "input",
        "context",
        "(fields=",
        "predIndex",
        "prefix",
        "get",
        "}",
        "'",
        "payload=",
        "{",
        "recordData",
        "text",
        "Reverse",
        "DrawingRecord[",
        "NotIgnored(",
        "weight(",
        ",delegate=",
        "precedence",
        "]",
        ":",
        "AbbreviatedObjectId[",
        "fsaState",
        "outputs",
        "value",
        "bypassTokenType",
        "skip",
        "fields",
        "NONE",
        "OneOrMoreOutputs(",
        "..",
        "del=",
        "a",
        "super"
      ],
      "Syntactic Label": "Object, Variable, Method, Operator, Literal",
      "Semantic Tags": [
        "Object Representation",
        "String Manipulation",
        "Data Structures",
        "Control Flow",
        "Program Output"
      ],
      "Description": "The tokens represent a diverse set of elements in C# programming.  'Object' refers to instances of classes (e.g., ObjectDirectory, TermState). 'Variable' represents data storage (e.g., slot, mu, weight). 'Method' signifies functions (e.g., toString, getDirectory). 'Operator' includes arithmetic (+), comparison (>=), logical (NOT), and string concatenation (+). 'Literal' denotes constant values (e.g., \"TRUE\", \"FALSE\", numbers). These tokens collectively demonstrate fundamental C# programming constructs used for object manipulation, data representation, and program logic. The context sentences show their usage in creating string representations of objects, which is a common practice for debugging and logging."
    }
  },
  {
    "c48": {
      "Unique tokens": [
        "indexDimensionCount",
        "getType",
        "getNumberOfInfoRecsForStrings",
        "nameAlreadyExists",
        "exactFirst",
        "peekNextClass",
        "shortValue",
        "getConstructor",
        "put",
        "rootArcs",
        "toArray",
        "storeTermVectors",
        "formatAsString",
        "chars",
        "edges",
        "<",
        "blockSize",
        "setObjectType",
        "grow",
        "point",
        "attributes",
        "getAccessKeyId",
        "root",
        ")",
        "length",
        "UNKNOWN",
        "available",
        "setFilter",
        "getRecordId",
        "compareTo",
        "-",
        "storeTermVectorPayloads",
        "EOF",
        "readString",
        "readShort",
        "storeTermVectorPositions",
        "getNumberOfCRNs",
        "getEntrySpan",
        "getKey",
        "byteStarts",
        "bytesUsed",
        "INT_BLOCK_MASK",
        "manufactureStrings",
        "addAll",
        "getName",
        "getLastSheetIdentifier",
        "bestQueries",
        "end",
        "read",
        "readRemainder",
        "==",
        "values",
        "charPositionInLine",
        "setMaxCodeLen",
        ">=",
        "setIgnoreSubmoduleMode",
        "map",
        "getField",
        "open",
        "hashCode",
        "weight",
        "size",
        "higherWeightsFirst",
        "getClass",
        "class",
        "shortToHex",
        "getAttributes",
        "getNext",
        "transform",
        "packedIntsVersion",
        "newInstance",
        "ensureCapacity",
        "remove",
        "omitNorms",
        ".",
        "getCode",
        "pointIndexDimensionCount",
        "index",
        "NUM_BYTES_OBJECT_REF",
        "wasEscaped",
        "DEFAULT_MAX_TOKEN_LENGTH",
        "docValuesType",
        "PROTECTION]",
        "pointDimensionCount",
        "equals",
        "readFully",
        "flush",
        "readInt",
        "cachedRootArcs",
        "readByte",
        "toString",
        "decisionToState",
        "dwpt",
        "add",
        "=",
        "isEmpty",
        "forward",
        "encodeASCII",
        "copyBytes",
        "maxDoc",
        "getCol",
        "next",
        "addAndGet",
        "assert",
        "init",
        "(",
        "getSourceSet",
        "lastSheetName",
        "reset",
        "tokenized",
        "concatenate",
        "freq",
        "newObjectReader",
        "diff",
        "dimensionCount",
        "tokenImage",
        "newObjectInserter",
        "term",
        "getAccessSecret",
        "indexOptions",
        ";",
        "getCanonicalName",
        "stored",
        "getChars",
        "attribute",
        "input",
        "0",
        "getBytesReader",
        "getMessage",
        "getRow",
        "get",
        "storeTermVectorOffsets",
        "start",
        "readAllContinuedRemainder",
        "dimensionNumBytes",
        "pointNumBytes",
        "case",
        "encode",
        "HEAD",
        "expectedTokenSequences",
        "{",
        "getIndexCode",
        "numDocs",
        "getChildById",
        "]",
        "oversize",
        "line",
        "readUShort",
        "getSecurityToken",
        ":",
        "currentToken",
        "bucketRelativeOffsets",
        "valuesRef",
        "toObjectId",
        "revision",
        "flushPending",
        "asSubclass",
        "getCharPositionInLine",
        "getNumDocsInRAM",
        "finish",
        "create",
        "count",
        "getLine",
        "getReverseEntries",
        "getParentFile",
        "exceptions",
        "a",
        "update",
        "info"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Text Processing",
        "Data Structures",
        "Object Serialization",
        "File I/O",
        "Algorithm"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including identifiers (e.g., indexDimensionCount, getNumberOfInfoRecsForStrings), methods (e.g., getType, getConstructor, put), operators (e.g., ., <, ==, =), keywords (e.g., if, for, while, new, public, class), and literals (e.g., 0, EOF).  The sentences show their usage in various contexts such as object instantiation, method calls, loop structures, conditional statements, and data manipulation.  The semantic tags reflect the overall functionality of the code snippets, which appear to be related to text processing, data structure management, object serialization, file I/O operations, and algorithmic implementations."
    }
  },
  {
    "c49": {
      "Unique tokens": [
        "{"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "AWS SDK",
        "Request Processing",
        "Command Execution",
        "Result Handling",
        "Resource Management"
      ],
      "Description": "These C# methods appear to be part of an AWS SDK, each handling a specific request to an AWS service.  They follow a pattern of receiving a request object, performing pre-execution actions (beforeClientExecution), executing the core operation (execute...), and returning a result object.  This structure is common in SDKs for interacting with cloud services, enabling resource management and automation."
    }
  },
  {
    "c50": {
      "Unique tokens": [
        "beforeClientExecution"
      ],
      "Syntactic Label": "Method",
      "Semantic Tags": [
        "Pre-processing",
        "Request Interception",
        "Middleware",
        "AOP",
        "Client-side logic"
      ],
      "Description": "The `beforeClientExecution` method acts as middleware, intercepting requests before they are sent to the AWS service.  It's likely used for pre-processing requests (e.g., adding headers, modifying parameters) or implementing cross-cutting concerns (e.g., logging, security checks) before the actual service execution. This is a common pattern in software design to separate concerns and improve code maintainability."
    }
  },
  {
    "c51": {
      "Unique tokens": [
        "_firstColumn",
        "off",
        "startRowNumber",
        "MAX_RECORD_LENGTH",
        "readVLong",
        "remainingBytes",
        "Lengths",
        "set",
        "length",
        "getNumberOfTransitions",
        "buffer",
        "blockLeft",
        "arraySize",
        "longs",
        "commonTrailingZeros",
        "-",
        "uniformCmd",
        "bytesRemaining",
        "pos",
        "basePayloadOffset",
        "blockCount",
        "limit",
        "data",
        "nFullMergedCellsRecords",
        "blocksToRead",
        "of",
        "blocks",
        "offset2",
        "getHeight",
        "len",
        "SIZE",
        "[",
        "currentBlockCardinality",
        "highShift",
        "end",
        "pOffset",
        "needsInput",
        "BPV_SHIFT",
        "iterations",
        "nLeftoverMergedRegions",
        "retLen",
        "oneByte",
        "origLen",
        "relativeOffsets",
        "termsDictOffsets",
        "srcCellRow",
        "delay",
        "findTerm",
        "cras",
        "return",
        "bytes",
        "--",
        "rOff",
        "leftInBuffer",
        "endRowNumber",
        "readByte",
        "uniformSkip",
        "final",
        "while",
        "maxDoc",
        "backWordPos",
        "getSectionCount",
        "termOffsets",
        "waitForPos",
        "bytesLeft",
        "in",
        "term",
        "findIndex",
        "hi",
        "PackedInts",
        "valueCount",
        "blockBytes",
        "colorDistance",
        "totalScore",
        "BytesRef",
        "textSize",
        "c1",
        "checkOffsetAndCount",
        "shortIndex",
        "reopenTimes",
        "maxTotMem",
        "&",
        "nextPtr",
        "uniformCnt",
        "lastSheetIndex",
        "firstSheetIndex",
        "_nRows",
        "writeBytes",
        "fromBlock",
        "C_64",
        "bufferLeft",
        "charCount",
        "bitLength",
        "Math",
        "docId",
        "++",
        "?",
        "hasOffsets",
        "numTerms",
        "blockSize",
        "grow",
        "getLastColumn",
        "formulaSize",
        "mid",
        "ENCLOSES",
        "b3",
        "offset",
        "endIndex",
        "bulkOperation",
        "decode",
        "phRuns",
        "<=",
        "decompressor",
        "numBlocks",
        "getIndexSize",
        "hasPayloads",
        "DEFAULT_BUCKET_SIZE",
        "getColumnIndex",
        "nRegions",
        "blockValue",
        "phoneticTextFirstCharacterOffset",
        "|=",
        "srcRowIndex",
        "packedIntsVersion",
        "b6",
        "currentBlock",
        "newBuffer",
        ".",
        "r2",
        "ENCODED_SIZE",
        "nextBlocks",
        "tf_hyper_max",
        "bufferOffset",
        "longIndex",
        "termsStart",
        "thisByte",
        "field",
        "endOffset",
        "getSize",
        "numElements",
        "=",
        "b5",
        "getTotalSize",
        "getWriteIndex",
        "rowCellSize",
        "b2",
        "sc",
        "row",
        "fragmentSize",
        "numberOfRuns",
        "rstartIndex",
        "min",
        "max",
        "0",
        "format",
        "_binaryExponent",
        "inflate",
        "System",
        "}",
        "hasPositions",
        "sizeOfElements",
        "setPosition",
        "%",
        "offsetEnd",
        "_hasPositions",
        "indexInterval",
        "remaining",
        "thisSheetRefIndex",
        "&&",
        "skipBytes",
        "username",
        "value",
        "nextValues",
        "ByteBlockPool",
        "score",
        "oldBitLen",
        "getEndOffset",
        "position",
        "startIndex",
        "indexIsCurrent",
        "token",
        "val",
        "bitsPerValue",
        "termBytesStart",
        "resLen",
        "<",
        "cc1",
        "inStream",
        "doubleCapacity",
        "toIndex",
        "part1",
        "append",
        "refCount",
        "skipBuffer",
        "modCount",
        "available",
        "child",
        "startOffset",
        "reopenCount",
        ",",
        "realTextLength",
        ">",
        "bytesUsed",
        "paddedLength",
        "docCount",
        "_hasPayloads",
        "encodedByteCount",
        "4",
        "formattingFontIndex",
        "p",
        "paddingSize",
        "realTextFirstCharacterOffset",
        "changeSkip",
        "bucketAbsoluteOffsets",
        "ArrayUtil",
        "otherInt",
        "getChildRecords",
        "k",
        "but",
        "freeByteBlocks",
        "INT_BLOCK_SIZE",
        "cdLen",
        "setLineWidth",
        "totalHits",
        "originalLength",
        "otherLong",
        "getRow1",
        "remainingBlocks",
        "addAndGet",
        "freeBlocks",
        "backID",
        "comparators",
        "minColorDistance",
        "numToCopy",
        "getRecordSize",
        "nvalues",
        "no",
        "getBufferStartIndex",
        "fromIndex",
        "\"",
        "b4",
        "level",
        "rowBlockSize",
        "sizeInBytes",
        "bufferLength",
        "cellRefOffset",
        "newSize",
        "Format",
        "byteUpto",
        "getActualSizeOfElements",
        "cmp",
        "lastSynSetID",
        "elsenumToCopy",
        "sstOffset",
        "cellOffsets",
        "numIndexTerms",
        "oversize",
        "_nColumns",
        "_hasOffsets",
        "count",
        "BYTE_BLOCK_MASK",
        "nextBuffer",
        "skip",
        "otherByte",
        "94",
        "idealIntArraySize",
        "stop",
        "0L",
        "valuesPerBlock",
        "sectionCount2",
        "threshold",
        "nextBlock",
        "_significand",
        "hash",
        "positions",
        "ctf",
        "cc2",
        "mMax",
        ")",
        "ord",
        "stv",
        "expectedModCount",
        "bufferUpto",
        "numTransitions",
        "needsDictionary",
        "finished",
        "readBytes",
        "if",
        "getRowIndex",
        "lstartIndex",
        "MAX_MERGED_REGIONS",
        "b0",
        "sizeIncludesHeaderSize",
        "*",
        "==",
        "compressed",
        "srcCellCol",
        "byteCount",
        ">=",
        "fieldIndex",
        "childBytesWritten",
        "BYTE_BLOCK_SIZE",
        "target",
        "newBlocks",
        "formattingOptions",
        "upto",
        "utf32State",
        "size",
        "1",
        "getPositionSpans",
        "fromOffsetInBlock",
        "currentBlockUpto",
        "throw",
        "w2",
        "index",
        "_remainingLength",
        "+",
        "compressedLength",
        "delta",
        "getMatchEnds",
        "16",
        "termBytesReader",
        "curWeight",
        "nextIndex",
        "r1",
        "(",
        "fill",
        "i",
        "holidays",
        "nextTokens",
        "getStartOffset",
        "getNumMatches",
        ";",
        "start",
        "b7",
        "b1",
        "mSize",
        "{",
        "_writeIndex",
        "ccid",
        "srcColumnIndex",
        "currentNumFrags",
        "pool",
        "]",
        "getRowBlockCount",
        "cmd",
        "bucketRelativeOffsets",
        "toBlock",
        "extendedDataSize",
        "pos1",
        "bufferPosition",
        "startIx",
        "refill",
        "removalIndex",
        "firstSize",
        "64",
        "shiftRight",
        "w1",
        "left"
      ],
      "Syntactic Label": "Variables, Methods, Keywords, Operators, Literals, Arrays",
      "Semantic Tags": [
        "Data Structures",
        "Data Processing",
        "Algorithm Implementation",
        "Input/Output",
        "Control Flow"
      ],
      "Description": "The tokens represent a mix of C# language elements used in various methods.  Variables store data, methods perform operations, keywords define control flow (e.g., while, if, for, return), operators manipulate data, literals provide constant values, and arrays store collections of data.  The code snippets show different algorithms and data processing techniques, including array manipulation, bitwise operations, string processing, and file I/O."
    }
  },
  {
    "c52": {
      "Unique tokens": [
        "Ref",
        "E",
        "char",
        "StringBuffer",
        "StringBuilder",
        "BitSet",
        "Format",
        "Collection",
        "Row",
        "ObjectId",
        "format",
        "Revision",
        "BytesRef",
        "ByteBuffer",
        "List",
        "Character",
        "<",
        "BigInteger",
        "long",
        "object",
        "date",
        "byte",
        "Object",
        "float",
        "short",
        "final",
        "Side",
        ")",
        "pFmt",
        "int",
        "Sort",
        "s",
        "(",
        "Repository",
        "File",
        "d",
        "o",
        "InputStream",
        "Date",
        "double",
        "Integer",
        "CharSequence",
        "record",
        "T",
        "FieldInfo",
        "a",
        "ByteOrder",
        "Function",
        "boolean",
        "String",
        "sort"
      ],
      "Syntactic Label": "C# Tokens and Data Types",
      "Semantic Tags": [
        "Data Structures",
        "Primitive Types",
        "Object-Oriented Programming",
        "Data Manipulation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a diverse set of C# elements, including primitive data types (e.g., char, int, double, byte, boolean), data structures (e.g., StringBuffer, StringBuilder, List, BitSet, ByteBuffer), keywords (e.g., ref, final), and identifiers that likely represent objects, methods, or variables within a C# program.  The context sentences show these tokens being used in various operations, such as string manipulation, mathematical calculations, data structure manipulation, and method calls.  The semantic tags reflect the broad functionality and purpose of the code snippets, which involve handling different data types, using various data structures, and performing operations common in C# programming."
    }
  },
  {
    "c53": {
      "Unique tokens": [
        "GetRelationalDatabaseLogEventsResult",
        "GetRelationalDatabaseSnapshotResult",
        "GetEmailTemplateResult",
        "GetDataSourceResult",
        "GetImportJobsResult",
        "GetVoiceConnectorOriginationResult",
        "getTemplate",
        "GetRestApiResult",
        "GetReusableDelegationSetResult",
        "GetExportSnapshotRecordsResult",
        "getDomain",
        "GetRevisionResult",
        "GetDeploymentResult",
        "GetLoadBalancerResult",
        "GetDefaultCreditSpecificationResult",
        "GetAutoSnapshotsResult",
        "GetSdkResult",
        "GetDeploymentGroupResult",
        "GetSmsChannelResult",
        "GetRelationalDatabaseResult",
        "GetProfileResult",
        "GetAuthorizerResult",
        "GetVpcLinksResult",
        "GetMetricWidgetImageResult",
        "GetQualificationTypeResult",
        "GetRelationalDatabaseParametersResult",
        "GetBlueprintsResult",
        "GetRoomSkillParameterResult",
        "GetChangeResult",
        "GetDomainNamesResult",
        "GetContactResult",
        "getEnvironment",
        "GetApiKeyResult",
        "GetUsagePlanResult",
        "getRules",
        "GetDetectorsResult",
        "GetOperationResult",
        "GetDisksResult",
        "GetGeoLocationResult",
        "GetConferenceProviderResult",
        "GetFileUploadURLResult",
        "GetCloudFormationStackRecordsResult",
        "GetMasterAccountResult",
        "GetApiMappingsResult",
        "GetRepositoryPolicyResult",
        "GetRelationalDatabasesResult",
        "GetSdkTypesResult",
        "GetTerminologyResult",
        "GetFederationTokenResult",
        "GetVoiceConnectorTerminationResult",
        "GetExportJobResult",
        "GetVoiceConnectorResult",
        "GetAuthorizersResult",
        "GetApiKeysResult",
        "GetNetworkResult",
        "GetMailboxDetailsResult",
        "GetSegmentExportJobsResult",
        "GetTypedLinkFacetInformationResult",
        "GetExclusionsPreviewResult",
        "GetDocumentationVersionsResult",
        "getTags",
        "GetSegmentVersionsResult",
        "getDocument",
        "GetIntegrationsResult",
        "getDirectory",
        "GetDocumentationVersionResult",
        "GetProxySessionResult",
        "GetVoiceTemplateResult",
        "GetDetectorVersionResult",
        "GetAlarmsResult",
        "GetUsagePlanKeyResult",
        "GetFilterResult",
        "GetModelTemplateResult",
        "GetClusterCredentialsResult",
        "GetLinkAttributesResult",
        "GetConsoleOutputResult",
        "GetBatchPredictionResult",
        "GetLexiconResult",
        "GetResourcesResult",
        "GetStatusResult",
        "GetInvitationConfigurationResult",
        "GetPublicKeyConfigResult",
        "GetResolverRulePolicyResult",
        "GetDeploymentsResult",
        "GetFaceDetectionResult",
        "GetSchemaAsJsonResult",
        "GetGlobalSettingsResult",
        "GetCurrentMetricDataResult",
        "GetAppliedSchemaVersionResult",
        "GetRouteResponsesResult",
        "GetJobManifestResult",
        "GetMetricDataResult",
        "GetDiskSnapshotsResult",
        "GetVpcLinkResult",
        "GetSearchSuggestionsResult",
        "GetDocumentResult",
        "GetConfigurationResult",
        "GetRoutesResult",
        "GetTrafficPolicyInstanceResult",
        "GetExportResult",
        "GetSegmentVersionResult",
        "getResources",
        "GetShippingLabelResult",
        "GetHostReservationPurchasePreviewResult",
        "GetBulkPublishDetailsResult",
        "GetDistributionConfigResult",
        "getSegment",
        "GetUsagePlanKeysResult",
        "GetVoiceChannelResult",
        "GetProposalResult",
        "GetMethodResponseResult",
        "GetQueryResultsResult",
        "GetDeploymentStrategyResult",
        "GetTemplateSummaryResult",
        "GetQueueAttributesResult",
        "GetVoiceConnectorTerminationHealthResult",
        "GetHealthCheckResult",
        "GetLabelDetectionResult",
        "GetHostedZoneCountResult",
        "GetRequestValidatorResult",
        "GetVoiceConnectorGroupResult",
        "GetStagesResult",
        "GetActiveNamesResult",
        "GetPolicyResult",
        "GetTagsResult",
        "GetQualificationScoreResult",
        "getExport",
        "GetBasePathMappingResult",
        "GetAssessmentReportResult",
        "GetSoftwareUpdatesResult",
        "getCurrentUser",
        "GetSkillGroupResult",
        "getConnection",
        "GetInvitationsCountResult",
        "GetMLModelResult",
        "getConfiguration",
        "GetAppsResult",
        "GetDocumentTextDetectionResult",
        "GetRelationalDatabaseLogStreamsResult",
        "GetApnsChannelResult",
        "getAttributes",
        "GetConfigurationSetResult",
        "GetContentModerationResult",
        "GetDocumentationPartResult",
        "GetJourneyResult",
        "GetHealthCheckStatusResult",
        "GetClientCertificatesResult",
        "GetVaultLockResult",
        "GetEventsConfigurationResult",
        "GetBlacklistReportsResult",
        "GetAttributesResult",
        "GetEndpointResult",
        "GetDeploymentInstanceResult",
        "GetRouteResponseResult",
        "GetSdkTypeResult",
        "GetModelVersionResult",
        "GetBasePathMappingsResult",
        "GetRoomResult",
        "GetEventStreamResult",
        "GetCognitoEventsResult",
        "GetOperationDetailResult",
        "GetStaticIpsResult",
        "GetCurrentUserResult",
        "GetDistributionResult",
        "GetDedicatedIpsResult",
        "GetResolverEndpointResult",
        "GetExportJobsResult",
        "GetAuthorizationTokenResult",
        "GetRelationalDatabaseBundlesResult",
        "GetSegmentImportJobsResult",
        "GetExternalModelsResult",
        "getMembers",
        "GetDocumentPathResult",
        "GetUsagePlansResult",
        "GetMembersResult",
        "GetDomainNameResult",
        "GetTextDetectionResult",
        "GetRelationalDatabaseBlueprintsResult",
        "GetApplicationRevisionResult",
        "GetCampaignVersionResult",
        "GetDocumentationPartsResult",
        "GetInsightRuleReportResult",
        "GetDirectoryResult",
        "GetStaticIpResult",
        "GetRulesResult",
        "GetIdentityPoolConfigurationResult",
        "GetResolverRuleAssociationResult",
        "GetApnsSandboxChannelResult",
        "GetIdentityPoolRolesResult",
        "GetEmailChannelResult",
        "GetClientCertificateResult",
        "GetGatewayResponseResult",
        "GetDomainDetailResult",
        "GetTemplateResult",
        "GetQueueUrlResult",
        "GetModelResult",
        "GetSnapshotBlockResult",
        "GetKeyPairsResult",
        "GetIdentityNotificationAttributesResult",
        "getModel",
        "GetAddressBookResult",
        "GetFacetResult",
        "GetMeetingResult",
        "GetLifecyclePolicyResult",
        "GetChannelsResult",
        "GetPasswordDataResult",
        "GetDeploymentConfigResult",
        "GetNodeResult",
        "GetDownloadUrlForLayerResult",
        "GetMetricStatisticsResult",
        "GetIdentityPoliciesResult",
        "GetDomainStatisticsReportResult",
        "GetVaultAccessPolicyResult",
        "GetStackPolicyResult",
        "GetConfigurationProfileResult",
        "GetCampaignActivitiesResult",
        "GetCustomVerificationEmailTemplateResult",
        "GetLifecyclePoliciesResult",
        "GetSegmentsResult",
        "GetBotResult",
        "GetRelationalDatabaseSnapshotsResult",
        "GetFindingsStatisticsResult",
        "GetNetworkProfileResult",
        "GetRegionsResult",
        "GetKeyPairResult",
        "getProfile",
        "GetConferencePreferenceResult",
        "GetSendStatisticsResult",
        "GetApplicationSettingsResult",
        "GetStreamingDistributionResult",
        "GetEmailIdentityResult",
        "GetVariablesResult",
        "GetQueryExecutionResult",
        "GetIntegrationResult",
        "GetSuppressedDestinationResult",
        "GetStageResult",
        "GetOutcomesResult",
        "GetLoadBalancerTlsCertificatesResult",
        "GetPredictionResult",
        "GetRelationalDatabaseEventsResult",
        "GetPhoneNumberOrderResult",
        "GetVaultNotificationsResult",
        "GetSmsTemplateResult",
        "GetSolutionMetricsResult",
        "GetCheckerIpRangesResult",
        "getNetwork",
        "GetCredentialsForIdentityResult",
        "GetRelationalDatabaseMetricDataResult",
        "GetInstancesResult",
        "GetRecordsResult",
        "getRevision",
        "GetUsageResult",
        "GetMediaResult",
        "getFilter",
        "GetConnectionResult",
        "GetDomainsResult",
        "GetPhoneNumberResult",
        "GetDetectorResult",
        "GetCampaignsResult",
        "GetLoadBalancersResult",
        "GetDiskSnapshotResult",
        "GetOperationsForResourceResult",
        "GetIdentityVerificationAttributesResult",
        "GetSendQuotaResult",
        "getStatus",
        "GetLoadBalancerMetricDataResult",
        "GetCampaignVersionsResult",
        "getApi",
        "GetBundlesResult",
        "GetSpeechSynthesisTaskResult",
        "GetConsoleScreenshotResult",
        "GetIPSetResult",
        "GetRecommendationsResult",
        "GetModelsResult",
        "GetEnvironmentResult",
        "GetImportJobResult",
        "GetIntegrationResponseResult",
        "GetAttendeeResult",
        "GetCampaignResult"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "Data Retrieval",
        "API Interaction",
        "Resource Management",
        "AWS SDK",
        "Service Integration"
      ],
      "Description": "These tokens represent methods in a C# AWS SDK likely designed to retrieve various resources or data from different AWS services.  Each method appears to take a request object as input and returns a result object, suggesting a common pattern for interacting with AWS APIs. The naming convention (e.g., GetRelationalDatabaseLogEventsResult) clearly indicates the purpose of each method, which is to retrieve specific data related to AWS resources."
    }
  },
  {
    "c54": {
      "Unique tokens": [
        "currentSubtree",
        "switch",
        "final",
        "synchronized",
        "while",
        "return",
        "try",
        "for",
        "!",
        "rptGroup",
        "contains",
        "states",
        "assert",
        "(",
        "blockBits",
        "if",
        "maxLevels"
      ],
      "Syntactic Label": "C# Keywords, Identifiers, and Operators",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Assertion",
        "Iteration",
        "Conditional Logic"
      ],
      "Description": "The tokens represent fundamental C# language constructs.  Keywords like `switch`, `while`, `return`, `try`, `for`, and `if` govern program flow and structure.  The `!` operator is a logical NOT. Identifiers like `currentSubtree`, `rptGroup`, `blockBits`, `maxLevels` represent variables or objects within the code's context. The `()` are used for method calls and grouping. The `contains` method is used for checking if a collection contains an element. The `assert` keyword is used for debugging purposes. These elements are crucial for implementing algorithms, handling errors, and controlling the execution path in C# programs."
    }
  },
  {
    "c55": {
      "Unique tokens": [
        "26",
        "17",
        "offset",
        "data",
        ",",
        "rawData",
        "row",
        "field_1_flag",
        "20",
        "w2",
        "field_8_row2",
        "getOptions",
        "0",
        "field_4_dy2",
        "but",
        "len",
        "2",
        "r",
        "col",
        "pd",
        "termBytesStart",
        "System",
        "}",
        "SECTION",
        "16",
        "shortRecord",
        "remainingBytes",
        "putShort",
        "18",
        "22",
        "12",
        "short",
        "field_3_dx1",
        "this",
        "field_2_flags",
        "name",
        ")",
        "4",
        "HEADER_SIZE",
        "24",
        "buf",
        "length",
        "10",
        "field_9_dy2",
        "s",
        "available",
        "child",
        "raw",
        "WARN",
        "getRecordId",
        "size",
        "getRecordSize",
        "1",
        "_formula1",
        "written",
        "buffer",
        "bs",
        "listener",
        "term",
        "8",
        "p",
        "field_3_uid",
        "field_4_row1",
        "14",
        "pos",
        "LittleEndian",
        "w1",
        "field_5_dy1",
        "field_4_rectY2"
      ],
      "Syntactic Label": "Variables, Data Structures, Methods, Operators, Literals",
      "Semantic Tags": [
        "Data Serialization",
        "Record I/O",
        "Data Structures",
        "Byte Manipulation",
        "Error Handling"
      ],
      "Description": "The tokens represent a mix of variables (e.g., offset, data, rawData), data structures (byte arrays, custom record structures), methods (serialize, fillFields, getRecordId, etc.), operators (arithmetic, bitwise, assignment), and literals (numbers, strings).  These are fundamental elements in C# used for data serialization, specifically for reading and writing binary data to and from byte arrays. The code snippets show serialization and deserialization of custom record structures, common in file formats or network protocols. Error handling is also present (e.g., exception handling in some methods). The use of LittleEndian indicates a specific byte order for data representation."
    }
  },
  {
    "c56": {
      "Unique tokens": [
        "null",
        "this",
        ".",
        "}",
        ")",
        "from",
        "==",
        "0",
        "!=",
        ";",
        "false"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Getter Methods",
        "Return Statements",
        "Object Access",
        "Boolean Logic",
        "Null Handling"
      ],
      "Description": "The tokens represent a common pattern in C# getter methods.  'this' refers to the current object instance. '.' is the member access operator. '}' and ')' are closing braces and parentheses, respectively. 'return' statements return values, which can be null, primitive types (int, long, boolean), or objects. '==' and '!=' are equality and inequality operators used for boolean comparisons. ';' is the statement terminator. 'false' is a boolean literal.  The overall semantic significance is the definition of getter methods that retrieve various data from an object, handling null values where appropriate."
    }
  },
  {
    "c57": {
      "Unique tokens": [
        ".",
        "(",
        ")",
        "null"
      ],
      "Syntactic Label": "Method parameters, Dot Operator, Opening Parenthesis, Closing Parenthesis, Null value",
      "Semantic Tags": [
        "Method invocation",
        "Request handling",
        "Asynchronous operations",
        "Null handling",
        "Resource Management"
      ],
      "Description": "The tokens represent common C# language constructs. The '.' (Dot Operator) is used for method calls, '(' and ')' (Parenthesis) define method parameters, and 'null' represents the absence of a value.  In the context of the provided code, these tokens are crucial for defining and invoking methods that handle requests, potentially asynchronous operations, and manage resources. The use of 'null' in the return value of nextPage suggests that there might be pagination involved in the API calls."
    }
  },
  {
    "c58": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Request Handling",
        "AWS SDK",
        "Client-Server Interaction",
        "API Calls"
      ],
      "Description": "The opening parenthesis '(' in C# is used to enclose parameters in method definitions and calls. In this context, it's part of the method signatures of numerous AWS SDK methods, indicating that each method accepts a request object as input.  These methods likely handle client-server interactions by sending requests to an AWS service and receiving a result. The semantic tags reflect the common pattern of using request objects to interact with AWS APIs."
    }
  },
  {
    "c59": {
      "Unique tokens": [
        "K",
        "RecordSizingVisitor",
        "SupBookRecord",
        "rewind",
        "Parser",
        "E",
        "char",
        "static",
        "Builder",
        "start",
        "getIndex",
        "long",
        "V",
        "public",
        "void",
        "byte",
        "UncalcedRecord",
        "DFAState",
        "short",
        "final",
        "int",
        "nextIndex",
        "RefErrorPtg",
        "Writer",
        "PredictionContextCache",
        "NLPTokenizerOp",
        "synchronized",
        "DecisionInfo",
        "TabIdRecord",
        "boolean",
        "String",
        "ExternalNameRecord"
      ],
      "Syntactic Label": "Methods and Class Members",
      "Semantic Tags": [
        "Object Access",
        "Data Retrieval",
        "State Modification",
        "Object Creation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a collection of C# methods and class members.  Many are getters and setters for various data fields within different classes.  Others are constructors, indicating object initialization.  The presence of `static` suggests static utility methods.  The diverse types of data (int, String, byte[], etc.) and class names (e.g., RecordSizingVisitor, NLPTokenizerOp) suggest a wide range of functionalities within a larger application, likely involving data structures and processing."
    }
  },
  {
    "c60": {
      "Unique tokens": [
        "GetFieldLevelEncryptionProfileConfigResult",
        "AddTagsToOnPremisesInstancesResult",
        "GetRestApisResult",
        "DeleteVoiceConnectorTerminationCredentialsResult",
        "ListMonitoringSchedulesResult",
        "ListLexiconsResult",
        "ListConfigurationRevisionsResult",
        "DescribeGlobalReplicationGroupsResult",
        "DescribeEC2InstanceLimitsResult",
        "AcceptTransitGatewayPeeringAttachmentResult",
        "DescribeAggregateIdFormatResult",
        "DeleteIntegrationResponseResult",
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult",
        "CreateGameSessionQueueResult",
        "UpdateAuditStreamConfigurationResult",
        "DescribeLoadBalancerPolicyTypesResult",
        "DeleteBaiduChannelResult",
        "DisableEnhancedMonitoringResult",
        "DescribeTransitGatewayPeeringAttachmentsResult",
        "DescribeAlarmsForMetricResult",
        "GetCloudFrontOriginAccessIdentityResult",
        "ListTypeRegistrationsResult",
        "ListQualificationRequestsResult",
        "ModifyDefaultCreditSpecificationResult",
        "DescribeScalingProcessTypesResult",
        "UpdateUserSecurityProfilesResult",
        "PutDedicatedIpWarmupAttributesResult",
        "DeletePublishingDestinationResult",
        "RejectTransitGatewayVpcAttachmentResult",
        "ListRoomMembershipsResult",
        "ListTrafficPolicyInstancesResult",
        "ExportTransitGatewayRoutesResult",
        "DescribeVpcClassicLinkDnsSupportResult",
        "SetLoadBalancerPoliciesForBackendServerResult",
        "DescribePublishingDestinationResult",
        "GetMediaForFragmentListResult",
        "ListBotsResult",
        "CreateFargateProfileResult",
        "CreateExclusionsPreviewResult",
        "DeleteCustomVerificationEmailTemplateResult",
        "ListJobsByStatusResult",
        "CreateLaunchTemplateVersionResult",
        "CancelDataRepositoryTaskResult",
        "RecognizeCelebritiesResult",
        "ListTargetsByRuleResult",
        "StartDocumentClassificationJobResult",
        "ModifyWorkspaceAccessPropertiesResult",
        "ListGameServersResult",
        "ModifyInstanceCreditSpecificationResult",
        "ReplaceIamInstanceProfileAssociationResult",
        "CreateVpcEndpointServiceConfigurationResult",
        "DescribeDBClusterBacktracksResult",
        "PutScheduledUpdateGroupActionResult",
        "DeleteLocalGatewayRouteResult",
        "DescribeInstanceCreditSpecificationsResult",
        "ResetFpgaImageAttributeResult",
        "PutConfigurationSetReputationOptionsResult",
        "ListDataSetsResult",
        "RemoveResourcePermissionResult",
        "ListJourneysResult",
        "DescribeInstanceEventNotificationAttributesResult",
        "DescribeUserHierarchyGroupResult",
        "UpdateBaiduChannelResult",
        "ModifyVpcEndpointServiceConfigurationResult",
        "ListReusableDelegationSetsResult",
        "CreateConfigurationSetTrackingOptionsResult",
        "AcceptTransitGatewayVpcAttachmentResult",
        "RemoveTagsFromStreamResult",
        "DescribeTrafficMirrorTargetsResult",
        "DescribeVpcClassicLinkResult",
        "SetAlarmStateResult",
        "CreateLocalGatewayRouteResult",
        "GetEbsDefaultKmsKeyIdResult",
        "DescribeDirectConnectGatewayAssociationProposalsResult",
        "DeleteEgressOnlyInternetGatewayResult",
        "ListSmartHomeAppliancesResult",
        "CreateDhcpOptionsResult",
        "DeleteApnsSandboxChannelResult",
        "GetQueryLoggingConfigResult",
        "CancelDomainTransferToAnotherAwsAccountResult",
        "SkipWaitTimeForInstanceTerminationResult",
        "UpdateAdmChannelResult",
        "UpdateClusterConfigResult",
        "GetJourneyExecutionMetricsResult",
        "ListBrokersResult",
        "ListVerifiedEmailAddressesResult",
        "DescribeOrderableClusterOptionsResult",
        "ExportClientVpnClientConfigurationResult",
        "SendBulkTemplatedEmailResult",
        "CreateIAMPolicyAssignmentResult",
        "DescribeLifecycleHookTypesResult",
        "DescribeFleetPortSettingsResult",
        "SendContactMethodVerificationResult",
        "ListTemplateVersionsResult",
        "ListInstanceGroupsResult",
        "UpdateImagePermissionsResult",
        "UpdateConfigurationSetEventDestinationResult",
        "ListRuleNamesByTargetResult",
        "DeleteTrafficMirrorSessionResult",
        "ModifyClusterSnapshotScheduleResult",
        "ListLabelingJobsResult",
        "ListAutoMLJobsResult",
        "DeleteHsmClientCertificateResult",
        "RejectDomainTransferFromAnotherAwsAccountResult",
        "GetReservedNodeExchangeOfferingsResult",
        "DescribeCacheParameterGroupsResult",
        "ModifyVpcEndpointServicePermissionsResult",
        "ListOutgoingTypedLinksResult",
        "UnassignPrivateIpAddressesResult",
        "ListMeetingsResult",
        "DeleteGameServerGroupResult",
        "UpdateUserRoutingProfileResult",
        "ListAttendeesResult",
        "GetQueueUrlResult",
        "UpdateObjectAttributesResult",
        "ListPolicyAttachmentsResult",
        "ListDataSourcesResult",
        "DeleteQueuedReservedInstancesResult",
        "UpdateGameServerResult",
        "RegisterInstanceEventNotificationAttributesResult",
        "ListStackSetOperationsResult",
        "DeleteGcmChannelResult",
        "DescribeDevicePolicyConfigurationResult",
        "TransferDomainToAnotherAwsAccountResult",
        "BatchCheckLayerAvailabilityResult",
        "GetApnsVoipSandboxChannelResult",
        "SetVaultAccessPolicyResult",
        "UpdateConfigurationSetTrackingOptionsResult",
        "ListFacetNamesResult",
        "ListQualificationTypesResult",
        "CreateLBCookieStickinessPolicyResult",
        "ModifyEbsDefaultKmsKeyIdResult",
        "getVariables",
        "GetApnsVoipChannelResult",
        "GetDASHStreamingSessionURLResult",
        "DescribeTransitGatewayRouteTablesResult",
        "ListAllowedNodeTypeModificationsResult",
        "UpdateServiceAccessPoliciesResult",
        "GetRecommenderConfigurationsResult",
        "DescribeGameSessionDetailsResult",
        "DeleteRecommenderConfigurationResult",
        "SetQueueAttributesResult",
        "RegisterOnPremisesInstanceResult",
        "PutImageScanningConfigurationResult",
        "UpdateUserPhoneConfigResult",
        "ResumeGameServerGroupResult",
        "ListReviewableHITsResult",
        "DisassociateSkillGroupFromRoomResult",
        "DeleteLaunchTemplateVersionsResult",
        "UpdateTrialComponentResult",
        "ListDashboardVersionsResult",
        "RejectTransitGatewayPeeringAttachmentResult",
        "DescribeDhcpOptionsResult",
        "GetReusableDelegationSetLimitResult",
        "AssociatePhoneNumbersWithVoiceConnectorGroupResult",
        "ListFlowDefinitionsResult",
        "ListPipelinesResult",
        "ListRepositoryAssociationsResult",
        "DeleteVpcPeeringAuthorizationResult",
        "ListManagedSchemaArnsResult",
        "ListEventBusesResult",
        "ListTrafficPolicyInstancesByHostedZoneResult",
        "DeleteApnsVoipSandboxChannelResult",
        "ListWebsiteCertificateAuthoritiesResult",
        "DescribeAutoScalingNotificationTypesResult",
        "ListLogPatternSetsResult",
        "AdvertiseByoipCidrResult",
        "DeleteDirectConnectGatewayAssociationProposalResult",
        "DeprovisionByoipCidrResult",
        "GetOpenIdTokenResult",
        "CreateFpgaImageResult",
        "SetRepositoryPolicyResult",
        "StartSmartHomeApplianceDiscoveryResult",
        "DeleteTransitGatewayPeeringAttachmentResult",
        "ApplySecurityGroupsToClientVpnTargetNetworkResult",
        "UpdateGameSessionQueueResult",
        "UpdateCompanyNetworkConfigurationResult",
        "ListWebsiteAuthorizationProvidersResult",
        "CreateTransitGatewayMulticastDomainResult",
        "CreateTrafficMirrorFilterResult",
        "ForgetSmartHomeAppliancesResult",
        "DeleteTransitGatewayMulticastDomainResult",
        "ModifyWorkspaceCreationPropertiesResult",
        "ListNotebookInstanceLifecycleConfigsResult",
        "DescribeEndpointConfigResult",
        "DeleteDirectoryConfigResult",
        "DeregisterInstancesFromLoadBalancerResult",
        "GetVoiceConnectorStreamingConfigurationResult",
        "CreateNetworkInterfacePermissionResult",
        "ListDedicatedIpPoolsResult",
        "ListEventSubscriptionsResult",
        "DescribeBrokerInstanceOptionsResult",
        "DisableAvailabilityZonesForLoadBalancerResult",
        "SearchLocalGatewayRoutesResult",
        "EnableOrganizationAdminAccountResult",
        "ListDeploymentGroupsResult",
        "DescribeSubscribedWorkteamResult",
        "SearchTransitGatewayMulticastGroupsResult",
        "SetTypeDefaultVersionResult",
        "UpdateTemplateActiveVersionResult",
        "ModifyInstanceMetadataOptionsResult",
        "PutEmailIdentityDkimSigningAttributesResult",
        "ListMeetingTagsResult",
        "DescribeExportImageTasksResult",
        "CreateAdditionalAssignmentsForHITResult",
        "DeleteMethodResponseResult",
        "ModifyInstanceCapacityReservationAttributesResult",
        "DeleteQueryLoggingConfigResult",
        "ListSecurityProfilesResult",
        "DeleteVaultAccessPolicyResult",
        "DeleteImagePermissionsResult",
        "ListIAMPolicyAssignmentsResult",
        "UpdateSecurityGroupRuleDescriptionsEgressResult",
        "GetApplicationDateRangeKpiResult",
        "GetCapacityReservationUsageResult",
        "UpdatePublishingDestinationResult",
        "DeleteConfigurationSetEventDestinationResult",
        "DescribeDataRepositoryTasksResult",
        "GetDeliverabilityTestReportResult",
        "DescribeJournalS3ExportResult",
        "StartGameSessionPlacementResult",
        "DisableTransitGatewayRouteTablePropagationResult",
        "DescribeSpotDatafeedSubscriptionResult",
        "GetEbsEncryptionByDefaultResult",
        "RemoveRoleFromDBInstanceResult",
        "GetPersonalizedRankingResult",
        "GetIdentityMailFromDomainAttributesResult",
        "ListHumanTaskUisResult",
        "ListHostedZonesResult",
        "ListUserGroupsResult",
        "UpdateTemplatePermissionsResult",
        "UpdateDomainEndpointOptionsResult",
        "DescribeInstanceTypeOfferingsResult",
        "ListApplicationSnapshotsResult",
        "UpdateConfigurationSetReputationMetricsEnabledResult",
        "UpdateRulesOfIpGroupResult",
        "PutAccountSettingDefaultResult",
        "ListEndpointConfigsResult",
        "ListOnPremisesInstancesResult",
        "ListOrganizationAdminAccountsResult",
        "ListClusterJobsResult",
        "CreateEndpointConfigResult",
        "SendTestEventNotificationResult",
        "GetQueueAttributesResult",
        "DeleteConfigurationProfileResult",
        "RemoveAllResourcePermissionsResult",
        "DeleteTrafficMirrorFilterRuleResult",
        "ListDistributionsResult",
        "CreateNetworkAclEntryResult",
        "ListTrialComponentsResult",
        "ListReviewPolicyResultsForHITResult",
        "DescribeLabelingJobResult",
        "FlushStageAuthorizersCacheResult",
        "ListProfilingGroupsResult",
        "AcceptReservedInstancesExchangeQuoteResult",
        "StartOutboundVoiceContactResult",
        "DescribeVpcEndpointServiceConfigurationsResult",
        "DescribeVpcEndpointServicePermissionsResult",
        "GetVoiceConnectorLoggingConfigurationResult",
        "ListTagsForResourcesResult",
        "UpdateServicePrimaryTaskSetResult",
        "PutEmailIdentityMailFromAttributesResult",
        "SetIdentityMailFromDomainResult",
        "CreateVPCAssociationAuthorizationResult",
        "CreateDataRepositoryTaskResult",
        "ListCampaignsResult",
        "DisassociatePhoneNumbersFromVoiceConnectorGroupResult",
        "SetIdentityHeadersInNotificationsEnabledResult",
        "ListResolverEndpointIpAddressesResult",
        "ListAccountSettingsResult",
        "DescribeDocumentClassificationJobResult",
        "CreateVpnConnectionRouteResult",
        "GetTrafficPolicyInstanceCountResult",
        "GetHealthCheckLastFailureReasonResult",
        "GetOpenIdTokenForDeveloperIdentityResult",
        "ReplaceTransitGatewayRouteResult",
        "DescribeReservedInstancesListingsResult",
        "GetCampaignDateRangeKpiResult",
        "SetLoadBalancerPoliciesOfListenerResult",
        "GetJourneyExecutionActivityMetricsResult",
        "ListS3ResourcesResult",
        "ListGroupMembersResult",
        "AddApplicationReferenceDataSourceResult",
        "CreateAppCookieStickinessPolicyResult",
        "SetIdentityPoolRolesResult",
        "ListJobsByPipelineResult",
        "ModifyFpgaImageAttributeResult",
        "SetIdentityFeedbackForwardingEnabledResult",
        "DeleteIAMPolicyAssignmentResult",
        "DeleteLocalGatewayRouteTableVpcAssociationResult",
        "DeleteFargateProfileResult",
        "DeleteMessageBatchResult",
        "ListTypeVersionsResult",
        "GetDeliverabilityDashboardOptionsResult",
        "DescribeTextTranslationJobResult",
        "CreateGameServerGroupResult",
        "GetTelemetryMetadataResult",
        "ListTrafficPolicyInstancesByPolicyResult",
        "CopyFpgaImageResult",
        "ListRoomsResult",
        "DescribeClassicLinkInstancesResult",
        "ListHealthChecksResult",
        "DisassociateS3ResourcesResult",
        "GetRawMessageContentResult",
        "StartMatchBackfillResult",
        "DeleteSnapshotCopyGrantResult",
        "DescribeIAMPolicyAssignmentResult",
        "ModifyVpcPeeringConnectionOptionsResult",
        "ListApplicationRevisionsResult",
        "EnableFastSnapshotRestoresResult",
        "GetDomainDeliverabilityCampaignResult",
        "DeleteVPCAssociationAuthorizationResult",
        "ResendContactReachabilityEmailResult",
        "CreateStreamingDistributionWithTagsResult",
        "DeleteAdmChannelResult",
        "PutAccountDedicatedIpWarmupAttributesResult",
        "DescribeSuggestersResult",
        "ListLabelingJobsForWorkteamResult",
        "PutConfigurationSetDeliveryOptionsResult",
        "DisassociateTransitGatewayRouteTableResult",
        "DescribeVpcEndpointConnectionNotificationsResult",
        "BatchCreateAttendeeResult",
        "UpdateDetectorVersionStatusResult",
        "DescribeDirectConnectGatewaysResult",
        "UpdateSecurityGroupRuleDescriptionsIngressResult",
        "ListHITsForQualificationTypeResult",
        "GetDashboardEmbedUrlResult",
        "ListJournalS3ExportsResult",
        "UnassignIpv6AddressesResult",
        "UpdateFieldLevelEncryptionConfigResult",
        "ListVPCAssociationAuthorizationsResult",
        "DescribeTerminationPolicyTypesResult",
        "UpdateApplicationSettingsResult",
        "DeleteAccessLogSettingsResult",
        "ListAssessmentRunAgentsResult",
        "GetTransitGatewayRouteTablePropagationsResult",
        "GetStreamingDistributionConfigResult",
        "ListDevelopmentSchemaArnsResult",
        "ListTaskDefinitionsResult",
        "DeleteSuppressedDestinationResult",
        "UpdateDirectoryConfigResult",
        "DeleteVpcEndpointServiceConfigurationsResult",
        "BatchPutScheduledUpdateGroupActionResult",
        "DeregisterTransitGatewayMulticastGroupSourcesResult",
        "ListTrafficPoliciesResult",
        "ListDeliveryStreamsResult",
        "StartCelebrityRecognitionResult",
        "DescribeCustomAvailabilityZonesResult",
        "DeleteNetworkInterfacePermissionResult",
        "ListHoursOfOperationsResult",
        "DeleteFolderContentsResult",
        "ListGameServerGroupsResult",
        "DeleteFieldLevelEncryptionProfileResult",
        "EnableVgwRoutePropagationResult",
        "ListCompatibleImagesResult",
        "TerminateInstanceInAutoScalingGroupResult",
        "ListFieldLevelEncryptionProfilesResult",
        "RemovePermissionResult",
        "DescribeSpotFleetRequestHistoryResult",
        "ListDomainDeliverabilityCampaignsResult",
        "ListDeploymentInstancesResult",
        "SearchAvailablePhoneNumbersResult",
        "ResetPersonalPINResult",
        "DescribeNetworkAclsResult",
        "ListCustomVerificationEmailTemplatesResult",
        "ListIPSetsResult",
        "GetGcmChannelResult",
        "ListBootstrapActionsResult",
        "DescribeCacheEngineVersionsResult",
        "ListGatewayGroupsResult",
        "DeleteUsageReportSubscriptionResult",
        "DescribeSnapshotCopyGrantsResult",
        "ListPhoneNumbersResult",
        "SetReceiptRulePositionResult",
        "SetVisibleToAllUsersResult",
        "ListSentimentDetectionJobsResult",
        "DeletePartnerEventSourceResult",
        "CreateSpotDatafeedSubscriptionResult",
        "CreateDeliverabilityTestReportResult",
        "DescribeCrossAccountAccessRoleResult",
        "DescribeNodeConfigurationOptionsResult",
        "ListDeploymentStrategiesResult",
        "ListDeploymentConfigsResult",
        "ListIncomingTypedLinksResult",
        "CancelReservedInstancesListingResult",
        "ListGitHubAccountTokenNamesResult",
        "CancelSpotInstanceRequestsResult",
        "ModifyTrafficMirrorFilterNetworkServicesResult",
        "GetSnowballUsageResult",
        "DeleteCorsConfigurationResult",
        "AssociatePhoneNumbersWithVoiceConnectorResult",
        "UpdateNotificationSettingsResult",
        "UpdateFleetPortSettingsResult",
        "DeleteCloudFrontOriginAccessIdentityResult",
        "DeleteRouteSettingsResult",
        "EnableEbsEncryptionByDefaultResult",
        "SetIdentityDkimEnabledResult",
        "DeleteConfigurationSetTrackingOptionsResult",
        "GetRelationalDatabaseMasterUserPasswordResult",
        "ListStackResourcesResult",
        "GetReservedInstancesExchangeQuoteResult",
        "StartDocumentTextDetectionResult",
        "DeleteVoiceConnectorStreamingConfigurationResult",
        "ListInvalidationsResult",
        "BatchSuspendUserResult",
        "CancelIngestionResult",
        "DescribeTransitGatewayMulticastDomainsResult",
        "ListStackSetOperationResultsResult",
        "UpdateGlobalSettingsResult",
        "ListFieldLevelEncryptionConfigsResult",
        "ListExperimentsResult",
        "CancelSpotFleetRequestsResult",
        "ListPublishedSchemaArnsResult",
        "UpdateApnsChannelResult",
        "UpdateApnsSandboxChannelResult",
        "ListTypedLinkFacetAttributesResult",
        "ListAttachedIndicesResult",
        "ListTypedLinkFacetNamesResult",
        "DeleteInsightRulesResult",
        "ListJournalS3ExportsForLedgerResult",
        "ListSkillsStoreCategoriesResult",
        "PutVoiceConnectorTerminationCredentialsResult",
        "ListConfigurationSetsResult",
        "PutManagedScalingPolicyResult",
        "ListConfigurationProfilesResult",
        "ListNodegroupsResult",
        "PutConfigurationSetSuppressionOptionsResult",
        "CreateTransitGatewayRouteResult",
        "DescribeEgressOnlyInternetGatewaysResult",
        "EnableTransitGatewayRouteTablePropagationResult",
        "UpdateIAMPolicyAssignmentResult",
        "ListDomainNamesResult",
        "GetJourneyDateRangeKpiResult",
        "DescribeComponentConfigurationRecommendationResult",
        "ChangeMessageVisibilityResult",
        "CheckDomainTransferabilityResult",
        "DescribeVpcsResult",
        "ListDatasetImportJobsResult",
        "DeleteNotebookInstanceLifecycleConfigResult",
        "UpdateGatewayResponseResult",
        "ListEventTrackersResult",
        "AcceptDomainTransferFromAnotherAwsAccountResult",
        "GetAssociatedIpv6PoolCidrsResult",
        "ModifySelfservicePermissionsResult",
        "DownloadDBLogFilePortionResult",
        "DeleteRouteRequestParameterResult",
        "DeleteUsagePlanKeyResult",
        "UpdateEndpointWeightsAndCapacitiesResult",
        "DeleteTransitGatewayVpcAttachmentResult",
        "ListSpeechSynthesisTasksResult",
        "ListPartnerEventSourcesResult",
        "DescribeFolderContentsResult",
        "GetAdmChannelResult",
        "GetIdentityDkimAttributesResult",
        "UpdateGcmChannelResult",
        "ListDocumentClassificationJobsResult",
        "EnableAvailabilityZonesForLoadBalancerResult",
        "PutInstancePublicPortsResult",
        "RegisterCrossAccountAccessRoleResult",
        "DeregisterInstanceEventNotificationAttributesResult",
        "DisassociateSigninDelegateGroupsFromAccountResult",
        "UpdateDomainContactPrivacyResult",
        "EnableVpcClassicLinkResult",
        "ListSubscribedWorkteamsResult",
        "DescribeAuditStreamConfigurationResult",
        "DescribeLocalGatewayRouteTablesResult",
        "DescribeFargateProfileResult",
        "ModifyTrafficMirrorFilterRuleResult",
        "DescribeFpgaImagesResult",
        "DeleteEndpointConfigResult",
        "ListKeyPhrasesDetectionJobsResult",
        "ReplaceRouteTableAssociationResult",
        "CreateTransitGatewayRouteTableResult",
        "RegisterTransitGatewayMulticastGroupSourcesResult",
        "DisableFastSnapshotRestoresResult",
        "DeregisterOnPremisesInstanceResult",
        "ListDashboardsResult",
        "DeleteSpotDatafeedSubscriptionResult",
        "DescribeFastSnapshotRestoresResult",
        "GetConfigurationSetEventDestinationsResult",
        "UpdateJourneyStateResult",
        "ListEventSourcesResult",
        "RemoveTagsFromOnPremisesInstancesResult",
        "ListRecipesResult",
        "UpdateDevicePolicyConfigurationResult",
        "ListInstanceFleetsResult",
        "ListFargateProfilesResult",
        "DeleteTrafficMirrorFilterResult",
        "CreateNotebookInstanceLifecycleConfigResult",
        "ListTrafficPolicyVersionsResult",
        "DescribeHostReservationOfferingsResult",
        "ListProvisionedCapacityResult",
        "DescribeTransitGatewayAttachmentsResult",
        "CreateImageBuilderStreamingURLResult",
        "CreateLabelingJobResult",
        "UpdatePhoneNumberSettingsResult",
        "UpdateCloudFrontOriginAccessIdentityResult",
        "DeleteVpcEndpointConnectionNotificationsResult",
        "ListMultipartUploadsResult",
        "WithdrawByoipCidrResult",
        "CreateTransitGatewayPeeringAttachmentResult",
        "ResetEbsDefaultKmsKeyIdResult",
        "ListWorkersWithQualificationTypeResult",
        "PutAccountSuppressionAttributesResult",
        "PutImageTagMutabilityResult",
        "CreateQueryLoggingConfigResult",
        "ListTrainingJobsForHyperParameterTuningJobResult",
        "ListQueryLoggingConfigsResult",
        "UpdateSignalingChannelResult",
        "DescribeSpotInstanceRequestsResult",
        "ListSignalingChannelsResult",
        "DeleteLoadBalancerTlsCertificateResult",
        "GetRecommenderConfigurationResult",
        "DescribeUserStackAssociationsResult",
        "DeleteTransitGatewayRouteTableResult",
        "ListRoutingProfilesResult",
        "UpdateNodegroupVersionResult",
        "DescribeScheduledInstanceAvailabilityResult",
        "CreateTrafficMirrorFilterRuleResult",
        "GetOnPremisesInstanceResult",
        "StartVpcEndpointServicePrivateDnsVerificationResult",
        "ListDeliverabilityTestReportsResult",
        "DeleteDeviceUsageDataResult",
        "DescribeTrafficMirrorFiltersResult",
        "CreateSignalingChannelResult",
        "DescribeElasticGpusResult",
        "ListQueueTagsResult",
        "DeleteDeploymentConfigResult",
        "RejectVpcEndpointConnectionsResult",
        "UpdateExpirationForHITResult",
        "DescribeIamInstanceProfileAssociationsResult",
        "ModifyVpcEndpointConnectionNotificationResult",
        "BatchDisassociateUserStackResult",
        "CreateConfigurationSetEventDestinationResult",
        "DescribeServiceAccessPoliciesResult",
        "DescribeClientVpnAuthorizationRulesResult",
        "DescribeOptionGroupOptionsResult",
        "ListAttendeeTagsResult",
        "ListIAMPolicyAssignmentsForUserResult",
        "UpdateApnsVoipSandboxChannelResult",
        "DescribeReservedDBInstancesOfferingsResult",
        "DescribeDomainEndpointOptionsResult",
        "SearchTransitGatewayRoutesResult",
        "ListCandidatesForAutoMLJobResult",
        "GetManagedScalingPolicyResult",
        "DescribeMetricCollectionTypesResult",
        "DeleteFpgaImageResult",
        "UpdateIntegrationResponseResult",
        "DescribeFpgaImageAttributeResult",
        "DeleteGameSessionQueueResult",
        "DescribeSpotPriceHistoryResult",
        "PutClusterCapacityProvidersResult",
        "ListHostedZonesByNameResult",
        "ChangeMessageVisibilityBatchResult",
        "DeleteTransitGatewayRouteResult",
        "IncreaseStreamRetentionPeriodResult",
        "AcceptVpcEndpointConnectionsResult",
        "CreateTransitGatewayVpcAttachmentResult",
        "CreateHITWithHITTypeResult",
        "BatchGetOnPremisesInstancesResult",
        "DeleteReusableDelegationSetResult",
        "ListStreamingDistributionsResult",
        "StartMonitoringMembersResult",
        "DescribeOrderableDBInstanceOptionsResult",
        "UpdateNotebookInstanceLifecycleConfigResult",
        "DisassociateTransitGatewayMulticastDomainResult",
        "ListDeadLetterSourceQueuesResult",
        "DeleteDhcpOptionsResult",
        "ListPhoneNumberOrdersResult",
        "RestoreAddressToClassicResult",
        "GetSignalingChannelEndpointResult",
        "DescribeUserHierarchyStructureResult",
        "CreatePublishingDestinationResult",
        "ListCodeRepositoriesResult",
        "ImportClientVpnClientCertificateRevocationListResult",
        "UpdateClusterSettingsResult",
        "UpdateContainerInstancesStateResult",
        "SetDesiredCapacityResult",
        "GetTransitGatewayAttachmentPropagationsResult",
        "CreatePresignedNotebookInstanceUrlResult",
        "ListReceiptRuleSetsResult",
        "ListDistributionsByWebACLIdResult",
        "UpdateApnsVoipChannelResult",
        "DescribeBatchPredictionsResult",
        "UpdateMethodResponseResult",
        "ListTopicsDetectionJobsResult",
        "ListSnapshotBlocksResult",
        "EnableVpcClassicLinkDnsSupportResult",
        "ListGeoLocationsResult",
        "ListEntitiesDetectionJobsResult",
        "BatchUnsuspendUserResult",
        "PutEmailIdentityFeedbackAttributesResult",
        "ListTemplateAliasesResult",
        "DescribeLaunchTemplateVersionsResult",
        "DescribeClientVpnEndpointsResult",
        "ReplaceNetworkAclEntryResult",
        "GetTransitGatewayRouteTableAssociationsResult",
        "GetGameSessionLogUrlResult",
        "DescribeLocalGatewayRouteTableVpcAssociationsResult",
        "ListBatchInferenceJobsResult",
        "ListEntityRecognizersResult",
        "CreateVpcEndpointConnectionNotificationResult",
        "SetLoadBalancerListenerSSLCertificateResult",
        "ListSecurityConfigurationsResult",
        "DisableVgwRoutePropagationResult",
        "AttachLoadBalancerTlsCertificateResult",
        "RetrieveDomainAuthCodeResult",
        "ModifyTransitGatewayVpcAttachmentResult",
        "PutConfigurationSetTrackingOptionsResult",
        "UpdateTrafficPolicyCommentResult",
        "UpdateTableReplicaAutoScalingResult",
        "CreateFieldLevelEncryptionConfigResult",
        "UpdateUserIdentityInfoResult",
        "StopLabelingJobResult",
        "DeleteVpcPeeringConnectionResult",
        "SetInstanceHealthResult",
        "DeleteFieldLevelEncryptionConfigResult",
        "StartLifecyclePolicyPreviewResult",
        "DescribeWorkspaceImagesResult",
        "ListThreatIntelSetsResult",
        "PutEmailIdentityDkimAttributesResult",
        "ListConfigurationHistoryResult",
        "DisableVpcClassicLinkDnsSupportResult",
        "DeleteTrafficMirrorTargetResult",
        "ListPublicKeysResult",
        "DescribeTableRestoreStatusResult",
        "SendAlexaOfferToMasterResult",
        "DisableEbsEncryptionByDefaultResult",
        "ListResourceDelegatesResult",
        "UpdateCodeRepositoryResult",
        "ListProfileTimesResult",
        "ListVoiceConnectorsResult",
        "ListAccessControlRulesResult",
        "AssociateS3ResourcesResult",
        "ListSkillsStoreSkillsByCategoryResult",
        "AssociateTransitGatewayRouteTableResult",
        "DescribeWorkspacesConnectionStatusResult",
        "DescribeLocalGatewayVirtualInterfaceGroupsResult",
        "GetHLSStreamingSessionURLResult",
        "DeleteRealtimeEndpointResult",
        "ListSolutionsResult"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "AWS SDK",
        "Result Handling",
        "Resource Management",
        "Cloud Services",
        "API Calls"
      ],
      "Description": "These tokens represent method names within an AWS SDK for various cloud services.  They follow a consistent naming pattern (verb + noun) indicating the action performed and the resource involved. The methods return a result object, suggesting a pattern of handling API responses and managing resources within the AWS ecosystem."
    }
  },
  {
    "c61": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Request Handling",
        "Input Processing",
        "Client-Server Interaction",
        "API Gateway"
      ],
      "Description": "The opening parenthesis '(' is used in C# to define the parameter list of methods. In this context, it signifies the start of the input parameters for various 'get' and 'create' methods, which are likely part of a client library interacting with a remote service (e.g., an API Gateway).  The parameters are likely requests to retrieve or create resources. The consistent structure suggests a pattern of request-response interaction."
    }
  },
  {
    "c62": {
      "Unique tokens": [
        "oprt",
        "rt",
        "f",
        "queries",
        "head",
        "bigger",
        "b",
        "property",
        "chars",
        "ve",
        "sheetName",
        "key2",
        "name2",
        "set",
        "tokenList",
        "matcher",
        "buffer",
        "termAtt",
        "externalBook",
        "subfilters",
        "data",
        "part2",
        "q",
        "sb",
        "stream",
        "args",
        "uri",
        "[",
        "updatedLexerActions",
        "lemmas",
        "name1",
        "enc",
        "wSpanTerm",
        "nameArg",
        "success",
        "s1",
        "pList",
        "anchor",
        "thisPath",
        "subset",
        "exports",
        "session",
        "upstreamId",
        "cras",
        "segmentsFile",
        "bytes",
        "recordName",
        "link",
        "ts",
        "objdb",
        "v",
        "fr",
        "range",
        "haystack",
        "relativePath",
        "raw",
        "comparator",
        "o",
        "dc",
        "db",
        "in",
        "arn",
        "smaller",
        "functionName",
        "optRecord",
        "viableAlts",
        "wb",
        "wtMode",
        "walk",
        "innerFunc",
        "avg",
        "leq",
        "states",
        "ListTokenSource",
        "e",
        "line",
        "notes",
        "commits",
        "expr",
        "packs",
        "normalizedPath",
        "fields",
        "bse",
        "subquery",
        "biffName",
        "vargs",
        "info",
        "ds",
        "to",
        "u",
        "rec",
        "pass",
        "tableArray",
        "cleaned",
        "aliased",
        "newBlock",
        "cell",
        "circle",
        "tokenSrc",
        "fileName",
        "wildcardText",
        "wbRecords",
        "excelFont",
        "ffl",
        "items",
        "openStream",
        "formatString",
        "aeSum",
        "ptgs",
        "last",
        "symbol",
        "lowerCaseStr",
        "filters",
        "ve1",
        "weight",
        "formula2",
        "targetImpl",
        "qm",
        ".",
        "actualCodec",
        "st",
        "expected",
        "blockRef",
        "ret",
        "field",
        "=",
        "key",
        "peel",
        "tab",
        "notesCommit",
        "clazz",
        "ite",
        "filler",
        "toBeAdded",
        "craNew",
        "res",
        "booleanNode",
        "crA",
        "ioe",
        "r",
        "src",
        "pending",
        "ch",
        "filenames",
        "text",
        "ppt",
        "serializedAtn",
        "bQuery",
        ":",
        "firstArg",
        "iter",
        "ru",
        "username",
        "value",
        "m",
        "subRecord",
        "dicts",
        "cvr",
        "a",
        "object",
        "generator",
        "position",
        "tags",
        "fullName",
        "formula1",
        "refs",
        "hashedOk",
        "old",
        "foundUnicode",
        "buf",
        "nr",
        "child",
        "e1",
        "node",
        "sectionText",
        "ent",
        "tw",
        "newArray",
        "bq",
        "realGroup",
        "spare",
        "try",
        "passage",
        "ud",
        "lexerAction",
        "newBackType",
        "files",
        "inputDirProp",
        "look",
        "ebrTarget",
        "prop",
        "file",
        "dateResMap",
        "map",
        "skipEofCheck",
        "rb",
        "rows",
        "needle",
        "request",
        "t",
        "exc",
        "temp",
        "p",
        "needParens",
        "craOld",
        "it",
        "factory",
        "rawData",
        "automata",
        "origNameRecord",
        "clauses",
        "response",
        "o2",
        "strkey",
        "positionsArray",
        "revWalk",
        "toSync",
        "filename",
        "I",
        "tracker",
        "gen",
        "record",
        "putty",
        "matchingDocs",
        "v_1",
        "n",
        "\"",
        "comp",
        "vocabularyIS",
        "qp",
        "secondFD",
        "now",
        "clausesList",
        "termText",
        "prefix",
        "sheet",
        "get",
        "out",
        "dg",
        "ptg",
        "prec",
        "dt",
        "bos",
        "cmds",
        "retctx",
        "rr",
        "array",
        "md",
        "cc",
        "maxEntLemmas",
        "parserInterp",
        "fanout",
        "outputList",
        "children",
        "alt",
        "analyzer",
        "resultRefs",
        "ctf",
        "reader",
        ")",
        "stv",
        "pictures",
        "str",
        "od",
        "result",
        "param",
        "ctx",
        "following",
        "if",
        "config",
        "region",
        "null",
        "wt",
        "weightedSpanTerm",
        "dtfmt",
        "frame",
        "otherState",
        "insideQuote",
        "hasListener",
        "values",
        "crB",
        "statuses",
        "name",
        "tokens",
        "objects",
        "ref",
        "mulRecs",
        "s",
        "la1tokens",
        "cur",
        "decision",
        "sp",
        "absoluteOffsets",
        "metaData",
        "dir",
        "streamName",
        "new",
        "analyzerName",
        "match",
        "orows",
        "parts",
        "matches",
        "tagName",
        "entries",
        "dateRes",
        "previous",
        "ext",
        "terms",
        "wpil",
        "next",
        "subtrees",
        "reference",
        "scratch",
        "ebr",
        "thisState",
        "bb",
        "refList",
        "internalBuffer",
        "dumpArray",
        "i",
        "phraseInfo",
        "contents",
        "w",
        "nextTokens",
        "part",
        "addedList",
        ";",
        "rowCells",
        "extNames",
        "userPassword",
        "actuallyDeletedFiles",
        "c",
        "arrayPtgs",
        "]",
        "positionSpans",
        "br",
        "entry",
        "arc",
        "update",
        "serialNumCalendar",
        "other",
        "initialized"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Opening Parenthesis, Closing Parenthesis, Array Access, Assignment Operator, Equality Operator",
      "Semantic Tags": [
        "Exception Handling",
        "List Manipulation",
        "Parsing",
        "Code Generation",
        "Text Processing"
      ],
      "Description": "The tokens represent a mix of data structures (objects, arrays), operators (dot operator for method calls, assignment, equality), and control flow (exception handling).  The code snippets involve list processing, string manipulation, parsing, and potentially code generation or compilation (as seen in the use of parsers and token streams).  These are common tasks in C# development, particularly in areas like compiler construction, text processing, and data manipulation."
    }
  },
  {
    "c63": {
      "Unique tokens": [
        "additionalParent",
        "f",
        "oldPos",
        "query",
        "startIndex",
        "version",
        "u",
        "sheetname",
        "b",
        "token",
        "suffix",
        "secondaryProgress",
        "docId",
        "element",
        "mrk",
        "upstream",
        "readTask",
        "loader",
        "interval",
        "objectType",
        "deltaDistance",
        "nameIndex",
        "minTargetSize",
        "<",
        "fat",
        "vocabulary",
        "hash",
        "ve",
        "byteIndex",
        "date",
        "sheetName",
        "codec",
        "pattern",
        ")",
        "ord",
        "buckets",
        "set",
        "originalText",
        "length",
        "startRow",
        "str",
        "cell",
        "preTag",
        "buffer",
        "startOffset",
        "tree",
        "bs",
        "cellref",
        "indexAnalyzer",
        "x",
        "fieldName",
        "pos",
        "xPoints",
        "config",
        "offset",
        ",",
        "base",
        "patternText",
        "q",
        "sb",
        "queryShape",
        "rowNumber",
        "commentRecord",
        "stream",
        "args",
        "fontName",
        ">",
        "first",
        "evaluationResult",
        "uri",
        "cce",
        "len",
        "stat2",
        "keyName",
        "fs",
        "destination",
        "end",
        "main",
        "x1",
        "fis",
        "utf8",
        "formatString",
        "validationType",
        "byteCount",
        "code",
        "Side",
        "name",
        "eval",
        "ref",
        "delegate",
        "trim",
        "Result",
        "ttype",
        "l",
        "strVal",
        "s",
        "resourceDesc",
        "s1",
        "target",
        "label",
        "ordinal",
        "t",
        "oneByte",
        "objectId",
        "arg",
        "size",
        "extRefIndex",
        "orig",
        "firstRow",
        "plainText",
        "output",
        "docData",
        "commit",
        "num",
        "wildcardquery",
        "frac",
        "toAppendTo",
        "include",
        ".",
        "passages",
        "relative",
        "bytes",
        "index",
        "col1",
        "source",
        "dir",
        "scaleX",
        "maxMergeCount",
        "IndexableFieldType",
        "id",
        "destCell",
        "delta",
        "resourceGroupName",
        "proxySelector",
        "password",
        "externalWorkbookNumber",
        "segmentName",
        "original",
        "word",
        "numBytes",
        "parser",
        "font",
        "v",
        "numberOfSheets",
        "newText",
        "minShingleSize",
        "t1",
        "field",
        "el",
        "pictureIndex",
        "terms",
        "sheetIndex",
        "container",
        "rp",
        "stats",
        "newLeaf",
        "key",
        "publicKeyId",
        "sessionID",
        "side",
        "groupField",
        "o",
        "state",
        "recognizer",
        "scheme",
        "dx1",
        "freq",
        "db",
        "rawBits",
        "fromField",
        "directory",
        "targetGen",
        "in",
        "stringValue",
        "resourceDescription",
        "fieldInfo",
        "currentVersion",
        "term",
        "n",
        "chan",
        "message",
        "fromIndex",
        "mode",
        "type",
        "valueCount",
        "output1",
        "path",
        "eqSkip",
        "row",
        "location",
        "accessKeyId",
        "crA",
        "newSize",
        "req",
        "input",
        "net",
        "master",
        "rowIndex",
        "prefix",
        "section",
        "format",
        "start",
        "out",
        "r",
        "c",
        "ch",
        "shifter",
        "sstOffset",
        "params",
        "lexer",
        "nameProposal",
        "text",
        "ccid",
        "comparisonOperator",
        "pStartDateVal",
        "capacity",
        "e",
        "ev",
        "pool",
        "line",
        "local",
        "cmd",
        "precedence",
        "spec",
        "agg",
        "pFmt",
        "revision",
        "iterator",
        "cellnum",
        "iter",
        "replacement",
        "value",
        "dimName",
        "m",
        "red",
        "rv",
        "count",
        "rc",
        "firstSheetIndex",
        "columnIndex",
        "nameOrSpec",
        "utf32",
        "words",
        "a",
        "rs",
        "fd",
        "object",
        "command",
        "other",
        "script"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Opening Parenthesis, Closing Parenthesis, Array Access, Assignment Operator, Keywords, Literals, Operators",
      "Semantic Tags": [
        "Data Structures",
        "Object Manipulation",
        "Input/Output Operations",
        "Control Flow",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a mix of fundamental C# programming constructs.  Variables store data, objects encapsulate data and methods, the dot operator accesses members, parentheses control operator precedence, array access retrieves elements, the assignment operator modifies variable values, keywords define program structure, literals provide constant values, and operators perform calculations and comparisons.  These elements are crucial for building any C# program, enabling the creation of algorithms and data structures to perform specific tasks."
    }
  },
  {
    "c64": {
      "Unique tokens": [
        "stop",
        "subStart",
        "format1",
        "minCol",
        "version",
        "la",
        "j",
        "token",
        "b",
        "idx",
        "docId",
        "field2val",
        "val",
        "bufferStartIndex",
        "gt",
        "ptr",
        "resLen",
        "numTerms",
        "sectionCount",
        "cc1",
        "remainingBytes",
        "hash",
        "positions",
        "nFrames",
        "firstCol",
        "k1",
        "streamId",
        "cc2",
        "nkeys",
        "toFree",
        "multiplier",
        "formulaSize",
        "mid",
        "skipBuffer",
        "length",
        "format2",
        "buffer",
        "expectedChecksum",
        "blockLeft",
        "result",
        "previousStop",
        "hours",
        "commonTrailingZeros",
        "x",
        "bytesRemaining",
        "shIx1",
        "oldlen",
        "sz",
        "pos",
        "b3",
        "aux",
        "actualChecksum",
        "thisLong",
        "oLastCol",
        "nRanges",
        "blockCount",
        "offset",
        "limit",
        "startpos",
        ",",
        "x0",
        "nIncomingArgs",
        "recSize",
        "endIdx",
        "offset2",
        "ebIx",
        "spacePos",
        "dataSize",
        "len",
        "thisDouble",
        "b0",
        "stopIndex",
        "ix",
        "byteOrder1",
        "[",
        "startIdx",
        "k2",
        "highShift",
        "pos2",
        "stopAt1",
        "end",
        "otherFloat",
        "numBlocks",
        "otherDouble",
        "srcCellCol",
        "retval",
        "lastLocalSheetIndex",
        "iNumber",
        "encodedByteCount",
        "lastCol",
        "startDateVal",
        "byteOrder2",
        "childBytesWritten",
        "success",
        "minRow",
        "s",
        "nRegions",
        "currentFont",
        "origLen",
        "bytesWritten",
        "right",
        "t",
        "compareRemaining",
        "upto",
        "utf32State",
        "size",
        "toCopy",
        "compare",
        "nArgs",
        "firstRow",
        "a1",
        "msgE",
        "output",
        "temp",
        "p",
        "srcCellRow",
        "lastEscape",
        "nInnerArgs",
        "months",
        "startMS",
        "columnIx",
        "iMode",
        "b6",
        ".",
        "otherInt",
        "r2",
        "index",
        "new",
        "k",
        "value1",
        "rOff",
        "id",
        "found",
        "firstInPath",
        "dn",
        "delta",
        "fValue",
        "thisPos",
        "col",
        "isNewline",
        "parts",
        "thisByte",
        "sep",
        "pow10",
        "v",
        "ret",
        "extBlockIndex",
        "lt",
        "width",
        "=",
        "height",
        "b5",
        "myPosition",
        "rowIx",
        "maxRow",
        "firstCh",
        "otherLong",
        "oldb",
        "next",
        "thisFloat",
        "r1",
        "key",
        "rate",
        "nextIndex",
        "specLen",
        "oFirstCol",
        "endDateVal",
        "d2",
        "d",
        "minColorDistance",
        "shift",
        "getMaxLevelsPossible",
        "nvalues",
        "bytesLeft",
        "i",
        "cnt",
        "in",
        "vals",
        "holidays",
        "functionCode",
        "n",
        "w",
        "subtotal",
        "elapsed",
        "thisInt",
        "curChar",
        "ri",
        "firstChar",
        "at",
        "hi",
        ";",
        "linkSize",
        "nPlaces",
        "definedNameIndex",
        "b2",
        "externalBookIndex",
        "b4",
        "colorDistance",
        "sc",
        "row",
        "localSheetIndex",
        "sizeInBytes",
        "startDateAsNumber",
        "newSize",
        "minutes",
        "nItems",
        "0",
        "removalIdx",
        "rowIndex",
        "cmp",
        "requiresSeek",
        "sIx",
        "remain",
        "start",
        "r",
        "d1",
        "c",
        "bottom",
        "c1",
        "sum",
        "ch",
        "remap",
        "otherPos",
        "col2",
        "inquote",
        "b1",
        "li",
        "msgB",
        "styleIndex",
        "top",
        "maxN",
        "fmt",
        "nChars",
        "offsetEnd",
        "denominator",
        "]",
        "factor",
        "cmd",
        "remaining",
        "testValue",
        "thisSheetRefIndex",
        "row2",
        "dgLoc",
        "pos1",
        "_input",
        "quoteCount",
        "payloads",
        "sheetNumber",
        "enumerator",
        "value",
        "m",
        "rc",
        "pathLength",
        "rnum",
        "number2",
        "oldBitLen",
        "score",
        "optionFlags",
        "otherByte",
        "a",
        "lastRow",
        "si",
        "ryr",
        "left",
        "writeBytes"
      ],
      "Syntactic Label": "Variables, Objects, Method calls, Dot Operator, Control Flow statements, Array Access, Assignment Operator, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Data Structures",
        "Data Manipulation",
        "Control Flow",
        "Exception Handling",
        "Object-Oriented Programming"
      ],
      "Description": "The tokens represent a mix of fundamental C# programming constructs.  Variables store data (e.g., `rowIndex`, `msgB`, `removalIdx`). Objects are instantiated and their methods are invoked using the dot operator (e.g., `row.getRowNumber()`, `RawParseUtils.tagMessage()`). Control flow is managed by `if` and `while` statements.  Exception handling is implemented using `try-catch` blocks and `throw` statements. Array access is used to manipulate arrays (e.g., `a[index]`). The assignment operator '=' assigns values to variables. Parentheses are used for grouping and method calls."
    }
  },
  {
    "c65": {
      "Unique tokens": [
        "count",
        "throws",
        "return",
        ")",
        "{",
        "getNumberOfSheets",
        "true"
      ],
      "Syntactic Label": "Keywords, identifiers, method names, parameters, boolean value, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Constructor Calls",
        "Exception Handling",
        "Object Creation",
        "Method Invocation",
        "Conditional Logic"
      ],
      "Description": "The tokens represent fundamental C# language elements.  'count', 'getNumberOfSheets' are identifiers; 'throws', 'return' are keywords; 'true' is a boolean literal; '(', ')' are parentheses used for method calls and constructor parameters. The context shows these tokens are used in constructors and methods, handling exceptions, and controlling program flow through conditional statements.  The semantic tags reflect the common operations performed in the provided code snippets."
    }
  },
  {
    "c66": {
      "Unique tokens": [
        "supported",
        "string='",
        "(null)",
        "and",
        "to",
        "TEXT",
        "alter",
        "element",
        "cannot",
        "wasn't",
        "called",
        "simulator",
        "equalsIgnoreCase",
        "Shared",
        "Table",
        "Expected",
        "seeking",
        "be",
        "nodeID=",
        "clone",
        "Sorry,",
        "Configure",
        ")",
        "failed",
        "invalidated",
        "str",
        "Returning",
        "revisions",
        "ATN",
        "formula",
        "serialize",
        "ONLY",
        "Formula",
        "can't",
        "must",
        "from",
        "String=",
        "@",
        "mark/reset",
        "%d",
        "clearing",
        "null",
        ",",
        "not",
        "implementation",
        "remote",
        "replicator",
        "supported!",
        "of",
        "workbook",
        "by",
        "labels",
        "insert",
        "CACHED",
        "X-",
        "getName",
        "Arrays",
        "publishing",
        "after",
        "false",
        "ONLY...convert",
        "Do",
        "last",
        "this",
        "used",
        "DEBUG",
        "true",
        "s",
        "yet",
        "IntervalSet",
        "for",
        "references",
        "At",
        "filter:",
        "3D",
        "isEnabled",
        "it",
        "Direct",
        ".",
        "readonly",
        "freeze()",
        "support",
        "Old",
        "found",
        "+",
        "but",
        "need",
        "does",
        "you",
        "is",
        "toString",
        "returns",
        "Label",
        "Coding",
        "This",
        "serialised",
        "kind",
        "(",
        "should",
        "message()",
        "release",
        "are",
        "succeeded",
        "record",
        "in",
        "string",
        "/",
        ";",
        "Remove",
        "\"",
        "MulRK",
        "Cannot",
        "determine",
        "subclasses",
        "the",
        "external",
        "get",
        "DFA.",
        "Error:",
        "text",
        "before",
        "call",
        "names",
        "converted",
        ":",
        "Non-Shared",
        "pFmt",
        "dummy",
        "READ",
        "deletions",
        "m",
        "code:",
        "x-",
        "a",
        "Records",
        "when"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "Data Serialization",
        "String Manipulation",
        "Method Implementation",
        "File I/O"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including keywords, operators, identifiers, and literals.  They are used in method signatures, method bodies, exception handling, string manipulation, and file I/O operations. The context sentences show various methods, many of which throw exceptions to handle unsupported operations or invalid states.  String manipulation is evident in the use of StringBuilder and string concatenation.  Data serialization is implied by methods involving byte arrays and LittleEndianOutput.  File I/O is suggested by the use of IOExceptions and file-related operations.  The overall code snippet appears to be part of a larger library or application dealing with data processing and potentially document handling."
    }
  },
  {
    "c67": {
      "Unique tokens": [
        "getInt",
        "USER_DICT_ENCODING",
        "DICTIONARY_RESOURCE_ATTRIBUTE",
        "and",
        "reverse",
        "maxSubwordSize",
        "USER_DICT_PATH",
        "CJKBigramFilter",
        "variant",
        "hyphenator",
        "RULEFILES",
        "analyzer",
        "DEFAULT_DELIMITER",
        "nfkc_cf",
        "DICTIONARY",
        "5",
        "<",
        "JapaneseIterationMarkCharFilter",
        "DICTIONARY_ATTRIBUTE",
        "task.max.depth.log",
        "delimiter",
        "DISCARD_COMPOUND_TOKEN",
        "expand",
        "pattern",
        ")",
        "set",
        "REVERSE",
        "PARAM_IGNORE_CASE",
        "tokArgs",
        "minSubwordSize",
        "^tokenizerFactory",
        "hangul",
        "toCharArray",
        "item",
        "freeze",
        "Integer",
        "DISCARD_PUNCTUATION",
        "boost",
        "ONLY_FIRST_WORD",
        "scriptCode",
        "must",
        "fieldName",
        "getChar",
        "if",
        "FORCE_FIRST_LETTER",
        "null",
        ",",
        "NORMALIZE_KANA_DEFAULT",
        "dictionary-resource",
        "NORMALIZE_KANA_PARAM",
        "args",
        "CompoundWordTokenFilterBase",
        ">",
        "JapaneseTokenizer",
        "MINIMUM_LENGTH_PARAM",
        "PARAM_AFFIX",
        "NBEST_COST",
        "types",
        "Arrays",
        "DECOMPOSE",
        "LEMMATIZER_MODEL",
        "DEFAULT_PRESERVE_ORIGINAL",
        "false",
        "FORMAT_WORDSET",
        "DEFAULT_MAX_WORD_COUNT",
        "itr",
        "NBEST_EXAMPLES",
        "DEFAULT_MODE",
        "true",
        "PathHierarchyTokenizer",
        "OK_PREFIX",
        "Mode",
        "minWordSize",
        "UnicodeSet",
        "for",
        "transliterator",
        "PARAM_LONGEST_ONLY",
        "IllegalArgumentException",
        "!",
        "require",
        "remove",
        "getBoolean",
        ".",
        "resourceName",
        "throw",
        "dir",
        "new",
        "analyzerName",
        "form",
        "k",
        "DEFAULT_MAX_TOKEN_LENGTH",
        "+",
        "id",
        "FORWARD",
        "preserveOriginal",
        "decompose",
        "hiragana",
        "EdgeNGramTokenFilter",
        "equals",
        "is",
        "dictionary",
        "Set",
        "DEFAULT_SKIP",
        "UCharacter",
        "forward",
        "isEmpty",
        "synonyms",
        "=",
        "LUCENE-6833).",
        "DEFAULT_MIN_WORD_SIZE",
        "DEFAULT_MAX_SUBWORD_SIZE",
        "strictAffixParsing",
        "replace",
        "onlyLongestMatch",
        "COMPOSE",
        "myanmarAsWords",
        "(",
        "NORMALIZE_KANJI_PARAM",
        "getLuceneMatchVersion",
        "direction",
        "valueOf",
        "ELAPSED",
        "ignoreCase",
        "mode",
        "compose",
        ";",
        "at",
        "\"",
        "KEEP",
        "Analyzer",
        "getInstance",
        "MAX_TOKEN_LENGTH",
        "normalizer",
        "maxGramSize",
        "attribute",
        "Normalizer2",
        "maxWordCount",
        "0",
        "han",
        "MIN_WORD_LENGTH",
        "minGramSize",
        "recursionCap",
        "cjkAsWords",
        "format",
        "get",
        "tempPath",
        "PARAM_DICTIONARY",
        "HANGUL",
        "MAX_WORD_COUNT",
        "JapaneseKatakanaStemFilter",
        "}",
        "'",
        "Unknown",
        "{",
        "filter",
        "taskLogStepAtt",
        "useWhitelist",
        "nbestExamples",
        "luceneMatchVersion",
        "outputUnigrams",
        "encoding",
        "tokenizerFactory",
        "nb",
        "iterator",
        "replacement",
        "FilteredNormalizer2",
        "parameters:",
        "skip",
        "CapitalizationFilter",
        "katakana",
        "flags",
        "Transliterator",
        "UProperty",
        "both:",
        "words",
        "lemmatizerModelFile",
        "replaceAll",
        "String",
        "DEFAULT_MIN_SUBWORD_SIZE",
        "KEEP_IGNORE_CASE"
      ],
      "Syntactic Label": "Methods and parameters",
      "Semantic Tags": [
        "Configuration",
        "Factory Methods",
        "Parameter Processing",
        "Resource Management",
        "Exception Handling"
      ],
      "Description": "The tokens represent methods used to retrieve and process configuration parameters (getInt, getBoolean, get), constants representing configuration keys (USER_DICT_ENCODING, DICTIONARY_RESOURCE_ATTRIBUTE), and parameters used in the configuration of various token filters and analyzers.  The code uses these tokens to build analyzers and filters for text processing in Lucene.  The frequent use of 'IllegalArgumentException' indicates robust error handling for invalid configurations."
    }
  },
  {
    "c68": {
      "Unique tokens": [
        "getMax",
        "getType",
        "notesAdd",
        "setRef",
        "weakCompareAndSet",
        "setReadOnly",
        "addIndexChangedListener",
        "setSkip",
        "getValuesCellRange",
        "log2",
        "toQueryString",
        "isForceUpdate",
        "detectedCharset",
        "newReader",
        "isDetectRenames",
        "isBorder",
        "setCachedResultTypeEmptyString",
        "isBatchMode",
        "setNamespaceAware",
        "clone",
        "hasAnchoringBounds",
        "isSymbolic",
        "addConfigChangedListener",
        "setThumbOffset",
        "getFetchedFrom",
        "length",
        "removePushRefSpec",
        "getQueryConfigHandler",
        "normaliseBaseTen",
        "getSourceCommitter",
        "removeFirstOccurrence",
        "setContextLines",
        "setOutputUnigrams",
        "createExplicitListConstraint",
        "setShowSeriesKey",
        "setFlushOnEnd",
        "rewind",
        "limit",
        "isAdjacentBefore",
        "getOffsetGap",
        "setCachedResultBoolean",
        "getDeltaBaseId",
        "precpred",
        "isShowSeriesKey",
        "unmappableCharacterAction",
        "setCommitNames",
        "getOldObjectId",
        "substring",
        "isWholeColumnReference",
        "getSheetName",
        "setCached",
        "addCluster",
        "end",
        "setPath",
        "main",
        "getRenameDetector",
        "setDeltaBaseAsOffset",
        "getActions",
        "pull",
        "isHorizontalBorder",
        "findFirstWithId",
        "isWhitespace",
        "isValidating",
        "isFormulaSame",
        "setDeltaCacheLimit",
        "setMaxDeltaDepth",
        "notesList",
        "getRegionId",
        "getAreaAt",
        "getResultTreeId",
        "reflog",
        "encodeText",
        "getPeeledObjectId",
        "commit",
        "averageBytesPerChar",
        "EmbeddedObjectRefSubRecord",
        "readFloat",
        "setLockMessage",
        "setUnknownFormulaData",
        "codePointAt",
        "format2DRefAsString",
        "isRenameDetectionEnabled",
        "serializeComplexPart",
        "setEnabled",
        "createBorderFormatting",
        "getSourceLine",
        "setGroupSort",
        "getRule",
        "getNameXPtg",
        "setUpdate",
        "getPositionIncrementGap",
        "readFully",
        "setMaxObjectSizeLimit",
        "getForwardBinaryHunk",
        "createCustomConstraint",
        "toString",
        "createPicture",
        "isRemote",
        "getLocalizedMessage",
        "getCachedBooleanValue",
        "setReuseObjects",
        "hasSourceData",
        "isRefLogIncludingResult",
        "tagList",
        "isThin",
        "writeByte",
        "reset",
        "setOldTree",
        "setMaxChainLength",
        "getSshSessionFactory",
        "FtPioGrbitSubRecord",
        "clear",
        "cloneRepository",
        "setIncludeMaxScore",
        "getLexerActionExecutor",
        "getReinterestingFlag",
        "isGroup",
        "getEntryLastModified",
        "setMaxCount",
        "BrazilianStemFilter",
        "getReading",
        "setReceivePack",
        "getReverseBinaryHunk",
        "setDerefTags",
        "setWorkingDirectoryMessage",
        "getInflectionType",
        "isDelete",
        "setCharAt",
        "offerLast",
        "setTokenSeparator",
        "submoduleUpdate",
        "writeDouble",
        "isExpectDataAfterPackFooter",
        "newPackParser",
        "getAccessKeySecret",
        "getLengthA",
        "removeLastChild",
        "getPhase",
        "requiresCommitBody",
        "containsKey",
        "HSSFClientAnchor",
        "inErrorRecoveryMode",
        "getExternalName",
        "newMerger",
        "createClientAnchor",
        "codePointBefore",
        "setBigFileThreshold",
        "tagDelete",
        "createExpandedDouble",
        "setPathFilter",
        "contains",
        "isPeeled",
        "checkShowJsonItemName",
        "getStrictHostKeyChecking",
        "info",
        "getShortRawValue",
        "hasTrackingRefUpdate",
        "updateFormulasAfterRowShift",
        "isRetainBody",
        "getResultContents",
        "getRate",
        "addFieldConfigListener",
        "getFirstPathElement",
        "getExpectedOldObjectId",
        "createPtg",
        "getLexicon",
        "formatAsString",
        "putChar",
        "createCellComment",
        "TokenOffsetPayloadTokenFilter",
        "getValue",
        "removePushURI",
        "RoaringDocIdSet",
        "setExpireAgeMillis",
        "getSegmentsFileName",
        "getRemoteUpdate",
        "getSharedContextCache",
        "isAllowThin",
        "setProgressMonitor",
        "getFloat",
        "setAll",
        "failed",
        "LbsDataSubRecord",
        "setPackedGitWindowSize",
        "newInserter",
        "branchRename",
        "withRoleSessionName",
        "addChangeListener",
        "setURI",
        "newBatchUpdate",
        "setFilePath",
        "setSheetHidden",
        "didFetchIncludeTags",
        "isSheetHidden",
        "isMainThread",
        "setFollowFileRenames",
        "insert",
        "averageCharsPerByte",
        "getRenameScore",
        "getExpectedTokens",
        "rm",
        "createHyperlink",
        "submoduleStatus",
        "setBinaryFileThreshold",
        "setLengthNormFactors",
        "clearShort",
        "openStream",
        "setMaxDocCharsToAnalyze",
        "getBeginB",
        "getRelativeValue",
        "yypushback",
        "stashList",
        "setName",
        "getStubWorkbook",
        "push",
        "setCreateEmptyCells",
        "submoduleSync",
        "getRenameDetectionType",
        "ceiling",
        "isExportAll",
        "disableRefLog",
        "submoduleAdd",
        "useTransparentBounds",
        "setPackedGitLimit",
        "getSurfaceFormString",
        "getProgressDrawable",
        "createEmptyTreeIterator",
        "TypeAsPayloadTokenFilter",
        "getSecondaryProgress",
        "setObjectId",
        "isExpectingOldObjectId",
        "atMinValue",
        "getLookaheadName",
        "get64BitNormalisedExponent",
        "readInt",
        "getRefCount",
        "escapeExtensionField",
        "add",
        "isEmpty",
        "setNeedBaseObjectIds",
        "getObject",
        "getGlobalListenerList",
        "setSheetName",
        "setDeltaBaseCacheLimit",
        "setStartCommit",
        "getRefLogMessage",
        "getDgg",
        "branchCreate",
        "sempred",
        "getFlagByBit",
        "newObjectReader",
        "diff",
        "setAllowNonFastForwards",
        "getNameIx",
        "hasPrevious",
        "isSuccess",
        "getBSERecord",
        "setReuseDeltas",
        "asReadOnlyBuffer",
        "getParent",
        "getUDFFinder",
        "getSignerName",
        "setSourcePrefix",
        "outputToString",
        "createFontFormatting",
        "isAbsolute",
        "isInvoke",
        "text",
        "setWorkingTreeIterator",
        "setPushAll",
        "setCompressionLevel",
        "capacity",
        "error",
        "getProgressMonitor",
        "isIndeterminate",
        "setBaseline",
        "isUser",
        "isUnmappable",
        "getFontFormatting",
        "isKanji",
        "create",
        "setStartTimeMillis",
        "submoduleInit",
        "getCell",
        "getShortValue",
        "setNotesRef",
        "getResultPath",
        "position",
        "getFormat",
        "putDouble",
        "setDSTSavings",
        "getDirCache",
        "getFontOfFormattingRun",
        "getOldPrefix",
        "setGroupDocsOffset",
        "getNameRecord",
        "footerLength",
        "setPushTags",
        "writeFloat",
        "getFilePointer",
        "branchList",
        "addPath",
        "writeLong",
        "setUploadPack",
        "getDouble",
        "lookupOrNull",
        "build",
        "available",
        "addUpdatedFile",
        "merge",
        "hasEntry",
        "countBytesWritten",
        "getBundleClass",
        "getFunctionName",
        "getSeverity",
        "setForce",
        "putLong",
        "getBATEntriesPerBlock",
        "setValue",
        "setDeltaSearchMemoryLimit",
        "getCreationTime",
        "isMerged",
        "order",
        "getDataCategoryLabels",
        "readBoolean",
        "toStringTree",
        "isVerticalBorder",
        "isUnknown",
        "read",
        "malformedInputAction",
        "getSaturation",
        "createFormulaListConstraint",
        "offerFirst",
        "metricFilterPattern",
        "getCalulatedPatchId",
        "setPerson",
        "getMergeResult",
        "setTraverseEmptyCells",
        "getValueFiller",
        "inContext",
        "isSheetVeryHidden",
        "getCustomPalette",
        "seekCeil",
        "getSortedDocValues",
        "status",
        "isOverflow",
        "getMode",
        "stashDrop",
        "getCharErrorDisplay",
        "getRenameCallback",
        "computeNorm",
        "wasDeltaAttempted",
        "getFailingResult",
        "writeChar",
        "getUnshallowFlag",
        "setWorkingTreeIt",
        "getXFAt",
        "getExternalBookRecord",
        "isError",
        "canExecute",
        "setOutputUnigramsIfNoShingles",
        "setHeads",
        "getConflictState",
        "setShort",
        "setDiffAlgorithm",
        "getOldPath",
        "getSourcePath",
        "isCaseSensitive",
        "isFastForward",
        "setSigned",
        "getAbsoluteFile",
        "addAndGet",
        "init",
        "getBehindCount",
        "setPatch",
        "write",
        "setIndexMessage",
        "isOutOfBounds",
        "newObjectInserter",
        "writeUTF",
        "makeDistanceValueSource",
        "setLastColumnRaw",
        "getPreferredSize",
        "textToBytesRef",
        "setBare",
        "getPreferredAuthentications",
        "getBinaryDocValues",
        "hasRevSort",
        "getRescorer",
        "getLucenePrefixTerm",
        "buildExtensionField",
        "numDataNodes",
        "notesRemove",
        "withId",
        "get",
        "setRetainBody",
        "getObjectId",
        "signString",
        "getExternalSheet",
        "readChar",
        "setMessage",
        "setHideObj",
        "getIndexOfFormattingRun",
        "setTabIdArray",
        "canHandle",
        "overheadPerValue",
        "setNewName",
        "setCreationTime",
        "setRefLogIdent",
        "getOldId",
        "getAltNumber",
        "getSignerType",
        "createCell",
        "setRunInBackground",
        "writeChars",
        "flip",
        "ramBytesUsed",
        "getResultStart",
        "blame",
        "setOldPrefix",
        "removeFetchRefSpec",
        "ObjectDirectoryInserter",
        "setDoubleValue",
        "getReturnState",
        "getSignerVersion",
        "reverse",
        "setTags",
        "toToken",
        "getAbbreviatedObjectId",
        "getEstimatedUniqueValues",
        "lazySet",
        "isFreezePane",
        "onFilterComplete",
        "getBorderFormatting",
        "setPaths",
        "createRichTextString",
        "getDataSize",
        "setBaselineTfFactors",
        "addRefsChangedListener",
        "getFractionalPart",
        "convertFromExternSheetIndex",
        "notesShow",
        "isDeltaCompress",
        "getCachedResultType",
        "getSortField",
        "isReuseAsIs",
        "setForceUpdate",
        "newSinkTokenStream",
        "getEndA",
        "setNonLocalizedMessage",
        "getAttributeFactory",
        "maxCharsPerByte",
        "isOutdated",
        "getProgress",
        "branchDelete",
        "putItem",
        "setOurCommitName",
        "getSignificantDecimalDigits",
        "setExpectedOldObjectId",
        "setTextComparator",
        "getIndeterminateDrawable",
        "getChar",
        "createDataFormat",
        "setExpectDataAfterPackFooter",
        "makeReadOnly",
        "getPatternFormatting",
        "setDeltaCompress",
        "toFormulaString",
        "setCacheMissesUntilFill",
        "getKey",
        "removeTransition",
        "isTraverseEmptyCells",
        "getInnerValueEval",
        "getEndB",
        "nativeOrder",
        "setRenameCallback",
        "toASCIIString",
        "nextOrd",
        "shouldBeRecursive",
        "setGroupDocsLimit",
        "name",
        "getNewId",
        "getFetchResult",
        "setWrapIfNotCachingTokenFilter",
        "getSourceAuthor",
        "size",
        "getFile",
        "isDirect",
        "getRef",
        "lsRemote",
        "isAllSet",
        "setTokenType",
        "getErrorHandler",
        "setKeyProgressIncrement",
        "tag",
        "setByte",
        "addCommand",
        "include",
        "wasEscaped",
        "fromJson",
        "setPackedGitOpenFiles",
        "checkout",
        "writeBoolean",
        "getChangeType",
        "setTagger",
        "getBeginA",
        "isUnderflow",
        "matches",
        "fromString",
        "setMaxDocFreqPct",
        "isOverridable",
        "writeInt",
        "clearByte",
        "setAllGroupHeads",
        "next",
        "getDataSecondaryCategoryLabels",
        "(",
        "setRemote",
        "getInflectionForm",
        "getQueryMaker",
        "setValueNoCopy",
        "deleteCharAt",
        "setAllowThin",
        "createPatternFormatting",
        "getSourceCommit",
        "getFieldAsString",
        "setSortWithinGroup",
        "getOldMode",
        "hasMetaDataChanges",
        "getSpreadsheetVersion",
        "getDefaultStopSet",
        "getPathElement",
        "setDryRun",
        "setNewTree",
        "isKnown",
        "indexOf",
        "getSheetEvaluator",
        "unsafeWrite",
        "isValidExcelDate",
        "setShowNameAndStatusOnly",
        "calcExtSSTRecordSize",
        "getPackFile",
        "isCheckEofAfterPackFooter",
        "isNoPrefix",
        "isPackedGitMMAP",
        "toObjectId",
        "setExportAll",
        "createFormulaEvaluator",
        "getCompressionLevel",
        "getCategoryLabelsCellRange",
        "finish",
        "hasNext",
        "createValidation",
        "isRefLogDisabled",
        "getLengthB",
        "getInterpolator",
        "setColorAtIndex",
        "setDeltaCacheSize",
        "toPrivateASCIIString",
        "getDirCacheEntry",
        "setOutputStream",
        "isPopupShowing"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "Object Creation",
        "Data Retrieval",
        "State Modification",
        "Event Handling",
        "Utility Functions"
      ],
      "Description": "The tokens represent methods in C#.  They are used for various purposes, including creating objects (e.g., `createFormulaEvaluator`, `createPicture`), retrieving data (e.g., `getLocalizedMessage`, `getCachedResultType`), modifying object state (e.g., `setReuseDeltas`, `setMaxDeltaDepth`), handling events (e.g., `addIndexChangedListener`, `addConfigChangedListener`), and providing utility functions (e.g., `log2`, `toString`). These methods are fundamental to object-oriented programming in C# and are essential for building complex applications."
    }
  },
  {
    "c69": {
      "Unique tokens": [
        "",
        "E:",
        "\u00ef",
        "\u044a",
        "u",
        "step1",
        "2",
        "?",
        "A",
        "<",
        "'.",
        "\u00f9",
        "\u00fb",
        "\\u0003",
        "\u043d",
        ")",
        "int",
        "10.0s,",
        "\u0435",
        "\u00e4",
        "\u043e",
        "&#x2F;",
        "2h",
        "x",
        "-",
        "@",
        "\u00f6",
        "3",
        "if",
        ",",
        "not",
        "\u00fc",
        "default",
        "<EOF>",
        ">",
        "\u0435\u043d",
        "len",
        "begin",
        "uri",
        "4.5m,",
        "ip",
        "substring",
        "[",
        "<=",
        "\\t",
        "\u00e1",
        "step2",
        "*",
        "end",
        "==",
        "with",
        "false",
        "z",
        "Atom",
        ">=",
        "\\r",
        "name",
        "eg:",
        "4",
        "\u00ec",
        "l",
        "s",
        "true",
        "\\\"",
        "t",
        "1",
        "Section",
        "F:",
        "0x005A",
        "p",
        "!",
        "\\'",
        "charAt",
        ".",
        "return",
        "throw",
        "--",
        "found",
        "new",
        "+",
        "(').",
        "escapeSpaces",
        "%n",
        "\u00ed",
        "O",
        "\u044f",
        "0x",
        "=",
        "isLetter",
        "\\u0000",
        "(got:",
        "(",
        "\u00e2",
        "d2",
        "endsWith",
        "o",
        "__",
        "i",
        "in",
        "no",
        "n",
        "\u00e0",
        "/",
        "\u00e5",
        "hexToInt",
        "!=",
        ";",
        "\"",
        "&quot;",
        "Z",
        "ROOT",
        "\\u00B7",
        "&#x27;",
        "0",
        "\u00f3",
        "format",
        "r",
        "or",
        "d1",
        "9",
        "ch",
        "'",
        "case",
        "}",
        "inquote",
        "Character",
        "{",
        "&gt;",
        "\\\\",
        "\u00e9",
        "y",
        "\u00ee",
        "%",
        "e",
        "sequence:",
        "]",
        "names",
        ":",
        "%%",
        "L:",
        "PERCENTS",
        "&&",
        "&lt;",
        "\u00fa",
        "m",
        "\\n",
        "_",
        "Invalid",
        "\u00f2",
        "a"
      ],
      "Syntactic Label": "Lexical Tokens and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "Conditional Logic",
        "Exception Handling",
        "Input/Output Operations",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, switch, case, return, throw), operators (+, -, ==, !=, <, >, <=, >=, ., ++, --, &&, ||, %, etc.), identifiers (variables, methods, classes), literals (numbers, strings, characters), and special symbols (parentheses, brackets, braces, etc.).  These tokens are fundamental building blocks of C# programs, used to construct various program structures and control program flow. The context sentences demonstrate their use in string manipulation (StringBuilder), conditional logic (if, switch), exception handling (throw), input/output operations (InputStream, String), and data structures (arrays, lists, maps)."
    }
  },
  {
    "c70": {
      "Unique tokens": [
        "PUT",
        "DELETE",
        "Client",
        ".",
        "}",
        ")",
        "HTTPS",
        "ProtocolType",
        "POST",
        "Server",
        "(",
        "StatusAPI",
        "GET",
        ";",
        "MethodType"
      ],
      "Syntactic Label": "HTTP Methods, Enum, Class Names, Method Calls, Protocol Type",
      "Semantic Tags": [
        "HTTP Protocol",
        "REST API",
        "Request Handling",
        "Method Specification",
        "API Design"
      ],
      "Description": "The tokens represent HTTP methods (GET, POST, PUT, DELETE) used in a RESTful API.  `MethodType` is likely an enum defining these methods. `ProtocolType` specifies the protocol (HTTPS). `Client` and `Server` might refer to client and server-side components. The tokens show method calls to set HTTP method and protocol types for API requests.  The dots (.) are dot operators used for method calls. The parentheses and curly braces are used for method calls and class definitions."
    }
  },
  {
    "c71": {
      "Unique tokens": [
        ",",
        "UnsupportedEncodingException",
        ".",
        "IOException",
        "return",
        "throw",
        "new",
        "writeShort",
        "out",
        "{",
        "readFully",
        "ExecutionException",
        "Streams",
        "writeLong",
        "RemoteException",
        "writeInt",
        "int",
        "LargeObjectException",
        "(",
        "write",
        "Exception",
        "Memory",
        "InterruptedException",
        "synchronized",
        "throws",
        "in",
        "n",
        "drain",
        "super",
        "if"
      ],
      "Syntactic Label": "C# language constructs and methods",
      "Semantic Tags": [
        "Input/Output Operations",
        "Exception Handling",
        "Data Serialization",
        "File Processing",
        "Synchronization"
      ],
      "Description": "The tokens represent a mix of C# keywords (return, throw, new, if, throws, synchronized), operators (., ,), exception types (IOException, UnsupportedEncodingException, LargeObjectException, ExecutionException, InterruptedException, RemoteException, Exception), and methods related to reading and writing data (read, write, readFully, writeShort, writeLong, writeInt, readByte, readUnsignedShort, readUTF, writeUTF, etc.).  These are fundamental elements in C# for handling I/O, exceptions, and data manipulation. The context shows various methods that perform read/write operations on different data types, handle exceptions, and use synchronization mechanisms (synchronized keyword).  The semantic tags reflect the core functionalities demonstrated in the code snippets."
    }
  },
  {
    "c72": {
      "Unique tokens": [
        "",
        "rhs",
        "stop",
        "null",
        ",",
        "err",
        ".",
        "return",
        "throw",
        "new",
        "b",
        "0",
        ">",
        "element",
        "?",
        "2",
        "use",
        "newObjectId",
        "ALL",
        "shape",
        "!",
        "exists",
        "clauses",
        "{",
        "v",
        "reason",
        "==",
        "false",
        "processor",
        "isEmpty",
        "=",
        "roleName",
        "this",
        "kid",
        ")",
        "4",
        "set",
        "&&",
        "true",
        "(",
        "wasNull",
        "value",
        "Constants",
        "tmpHeaders",
        "1",
        "result",
        "instanceof",
        "END",
        "-",
        "expectedOldObjectId",
        "complexData",
        "other",
        "!=",
        ";",
        "EmptyArray"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Exception Handling",
        "Conditional Logic",
        "Object Manipulation",
        "Null Handling",
        "Method Invocation"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Many are involved in exception handling (e.g., `throw new`, `catch`, `NullPointerException`), conditional logic (`if`, `==`, `!=`, `&&`), object manipulation (`.`, `new`, `instanceof`), null checks (`== null`, `!= null`), and method invocations (e.g., `isEmpty`, `remove`, `get`).  The presence of these tokens suggests the code performs various operations, including validation, object creation, and error handling."
    }
  },
  {
    "c73": {
      "Unique tokens": [
        "Node",
        "anyMatch",
        "setIndex",
        "put",
        "Query",
        "initDone",
        "getFormatString",
        "clone",
        "addBlock",
        "deleteDocument",
        "setAnchor",
        "isClone",
        "set",
        "matcher",
        "evaluateAny",
        "fromHexString",
        "growArray",
        "Integer",
        "findFunction",
        "newPrompt",
        "stream",
        "LOOK",
        "substring",
        "[",
        "addAll",
        "getIndex",
        "end",
        "setResult",
        "getObjectDatabase",
        "keySet",
        "releaseImpl",
        "immutableCopy",
        "for",
        "reflectWith",
        "commit",
        "setHeight",
        "getRawData",
        "searcher",
        "unpackValues",
        "log",
        "readFully",
        "flush",
        "toString",
        "final",
        "fresh",
        "getEntryCount",
        "writeByte",
        "reset",
        "clear",
        "Long",
        "getText",
        "findIndex",
        "onCreate",
        "getStringValue",
        "listeners",
        "binarySearch",
        "prefixToString",
        "cloneArray",
        "newMap",
        "close",
        "Values",
        "backingMap",
        "removeInternal",
        "getAllRefs",
        "findBounded",
        "parent",
        "collect",
        "containsKey",
        "visitRecord",
        "keep",
        "getTokenTypeMap",
        "parseFile",
        "getConstructor",
        "getRefs",
        "mayContainValue",
        "gc",
        "setLength",
        "getValue",
        "incRef",
        "getRuleNames",
        "grow",
        "HashSet",
        "peek",
        "Store",
        "elsedestination",
        "find",
        "serializeValue",
        "serialize",
        "Binary",
        "createRow",
        "pathToString",
        "fromObjectId",
        "decode",
        "appendReplacement",
        "resizeArrays",
        "fillRect",
        "ArrayList",
        "exact",
        "checkEOF",
        "seekPending",
        "subMap",
        "termArrays",
        "last",
        "newFactory",
        "deepCopyOf",
        "equalsTo",
        "endWrite",
        "setColor",
        "newInstance",
        "setState",
        "slice",
        "invoke",
        "util",
        "toAppendTo",
        ".",
        "createFont",
        "idBuffer",
        "addListener",
        "setProperty",
        "append0",
        "consume",
        "field",
        "getSize",
        "add",
        "=",
        "Document",
        "File",
        "hasPrevious",
        "createNewFile",
        "descendingSet",
        "getParent",
        "Builder",
        "getNameIndex",
        "Random",
        "endpoint",
        "AbstractSet",
        "or",
        "System",
        "nextPage",
        "writeContinue",
        "clearAttributes",
        "forInt",
        "forceMerge",
        "records",
        "pop",
        "create",
        "getCell",
        "unmodifiableMap",
        "endRead",
        "URI",
        "isPathPrefix",
        "Type",
        "toArray",
        "HashMap",
        "<",
        "StringType",
        "old",
        "getFilePointer",
        "copy",
        "append",
        "emit",
        "build",
        "downHeap",
        "entrySet",
        "getTree",
        "getDirectory",
        "getTokens",
        "dispatch",
        "setPropertyValue",
        "ff",
        "setValue",
        "setParams",
        "URIish",
        "Cell",
        "HasAll",
        "IOUtils",
        "Arrays",
        "isCancelled",
        "read",
        "readRemainder",
        "ensureMatch",
        "closeQuietly",
        "task",
        "getClass",
        "aBreak",
        "p",
        "Matcher",
        "parse",
        "remove",
        "enlargeBuffer",
        "abort",
        "equals",
        "setText",
        "dom",
        "slop",
        "safelyAllocate",
        "evaluate",
        "Entry",
        "elseparseEntry",
        "getDictionary",
        "Span",
        "doRename",
        "addAndGet",
        "assert",
        "init",
        "lock",
        "write",
        "appendNull",
        "addShape",
        "sort",
        "sizeOf",
        "lazyInit",
        "\"",
        "stopNow",
        "setParent",
        "createName",
        "ObjectId",
        "getRow",
        "get",
        "execute",
        "List",
        "beginTask",
        "listIterator",
        "readLine",
        "bos",
        "getTermEscaped",
        "iterator",
        "addRow",
        "getCharWidth",
        "appendTail",
        "createCell",
        "nextBuffer",
        "skip",
        "duplicate",
        "setRow",
        "removeCell",
        "stop",
        "alloc",
        "getCharClass",
        "ByteArrayOutputStream",
        "BitSet",
        "setOffset",
        "nextBlock",
        "previousIndex",
        "hash",
        "copyFrom",
        "afterRemove",
        ")",
        "startCommit",
        "InputSource",
        "startPoint",
        "getUByte",
        "ensureId",
        "Element",
        "println",
        "getCurrentState",
        "getOrDefault",
        "getKey",
        "registerRepository",
        "shouldBeRecursive",
        "responseMap",
        "name",
        "emptyList",
        "size",
        "resolve",
        "Link",
        "Map",
        "beginWrite",
        "onPreReceive",
        "getGeneration",
        "removeAt",
        "index",
        "new",
        "match",
        "weightToString",
        "Set",
        "previous",
        "connect",
        "getNextToken",
        "getAll",
        "writeInt",
        "next",
        "replace0",
        "putInt",
        "(",
        "fill",
        "i",
        ";",
        "Iterator",
        "getTarget",
        "State",
        "getFunctionIndex",
        "nextSlice",
        "containsCell",
        "LeafBucket",
        "channel",
        "currentEntry",
        "insert0",
        "indexOf",
        "onPostReceive",
        "start",
        "unsafeWrite",
        "encode",
        "setColumn",
        "copyOfRange",
        "getIndexReader",
        "createCommit",
        "refill",
        "hasNext",
        "_parseListeners",
        "process",
        "getFS",
        "subList",
        "String",
        "compareTo"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object-Oriented Programming",
        "Data Structures",
        "File I/O",
        "Exception Handling",
        "Concurrency"
      ],
      "Description": "The tokens represent a wide range of C# language features, including objects (e.g., Node, Document, File, HashMap, ArrayList, etc.), methods (e.g., add, remove, get, set, clone, etc.), operators (e.g., ., =, <, >, etc.), keywords (e.g., for, if, else, etc.), and data structures (e.g., List, Map, Set, etc.).  The code snippets demonstrate various programming concepts such as object-oriented programming, data structure manipulation, file I/O operations, exception handling, and potentially concurrency depending on the context of the full application.  The semantic tags reflect these key aspects of the code's functionality."
    }
  },
  {
    "c74": {
      "Unique tokens": [
        "",
        "subReaders",
        "1900",
        "f",
        "time,",
        "ellipsis",
        "UTF_8",
        "j",
        "b",
        "VALUE_INVALID",
        "variant",
        "suffix",
        "~",
        "rec",
        "BoostQuery",
        "++",
        "formatIndex",
        "?",
        "interval",
        "loader",
        "newObjectId",
        "<",
        "setLength",
        "0xffff",
        "HexDump",
        "Utility",
        "else",
        "getFormatString",
        "break",
        "short",
        "append",
        ")",
        "readNameValuePairs",
        "int",
        "set",
        "buf",
        "length",
        "flag",
        "CommonToken",
        "toHexString",
        "buffer",
        "Integer",
        "result",
        "DocMaker",
        "boost",
        "param",
        "getLineNumber",
        "-",
        "x",
        "recall",
        "println",
        "if",
        "3",
        "offset=",
        "makeDate",
        "data",
        "null",
        ",",
        "part2",
        "Illegal",
        "_externalNameRecords",
        "sb",
        "default",
        "unused",
        "args",
        ">",
        "spacePos",
        "uri",
        "field_3_strings",
        "substring",
        "[",
        "\\t",
        "policy",
        "*",
        "typeString",
        "==",
        ">=",
        "f2",
        "this",
        "name",
        "_formatter",
        "background:",
        "trim",
        "ErrorEval",
        "strVal",
        "s",
        "true",
        "\\\"",
        "AtomTransition",
        "parseInt",
        "1",
        "resourcePath",
        "ESCAPE_CHAR",
        "for",
        "Map",
        "output",
        "IllegalArgumentException",
        "p",
        "getNext",
        "suffixes",
        "!",
        "needParens",
        "newDoc",
        "charAt",
        "CFRecordsAggregate",
        "tag",
        "rule",
        "getBoolean",
        ".",
        "return",
        "char",
        "throw",
        "9999",
        "--",
        "new",
        "k",
        "trans",
        "ATNConfig",
        "+",
        "getLowFreqMinimumNumberShouldMatch",
        "getEntryObjectId",
        "Automaton",
        "f1",
        "rules",
        "parts",
        "is",
        "Set",
        "v",
        "points",
        "toString",
        "invalid",
        "SpatialArgs",
        "=",
        "isEmpty",
        "final",
        "many",
        "has",
        "getHighFreqMinimumNumberShouldMatch",
        "(",
        "eThis",
        "d",
        "write",
        "tracker",
        "i",
        "synonym",
        "in",
        "edx",
        "n",
        "/",
        "mode",
        "!=",
        ";",
        ")]",
        "\"",
        "hexToInt",
        "type",
        "determine",
        "switch",
        "err",
        "the",
        "max",
        "getParent",
        "input",
        "RawParseUtils",
        "0",
        "topmost",
        "format",
        "r",
        "newRef",
        "Locale",
        "c",
        "start",
        "ch",
        "'",
        "case",
        "}",
        "Unknown",
        "{",
        "text",
        "\\\\",
        "readLine",
        "%",
        "11",
        "widthsStrArray",
        "body",
        "]",
        "12",
        "line",
        "+=",
        ":",
        "spec",
        "&&",
        "value",
        "URISyntaxException",
        "rc",
        "subs",
        "an",
        "\\n",
        "defaultField",
        "->",
        "fields",
        "score",
        "_",
        "exceptions",
        "oldObjectId",
        "f0",
        "a",
        "rs",
        "object",
        "DELIM_CHAR",
        "md",
        "newPath"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "String Manipulation",
        "Exception Handling",
        "File I/O",
        "Data Structures",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language features, including variables, operators, keywords, and method calls.  The code snippets demonstrate string manipulation using StringBuilders, exception handling with try-catch blocks and explicit exception throwing, file I/O operations (reading and writing files), use of data structures like arrays, lists, and maps, and control flow using if-else statements, loops, and switch statements.  The semantic tags capture the essence of the code's functionality."
    }
  },
  {
    "c75": {
      "Unique tokens": [
        "vvY",
        "startIndex",
        "sheetname",
        "nameBuf",
        "2",
        "ptr",
        "green",
        "dx2",
        "ve",
        "k1",
        "sheetName",
        "_lastRow",
        "expr1",
        "namePos",
        ")",
        "ord",
        "expr2",
        "int",
        "startInclusive",
        "length",
        "1023",
        "result",
        "w3",
        "bs",
        "-",
        "x",
        "idPos",
        "pos",
        "xPoints",
        "3",
        "if",
        "getRowIndex",
        "offset",
        "returnTypeVE",
        "startpos",
        ",",
        "dy2",
        "valStart",
        "newSheetIndex",
        "tokenIndex",
        "arg2",
        "evaluationResult",
        "len",
        "mKeys",
        "stopIndex",
        "keyName",
        "y2",
        "end",
        "pOffset",
        "x1",
        "false",
        "srcColNum",
        "stateNumber",
        "srcCellCol",
        "getFirstSheetIndex",
        "ve1",
        "NUM_ERROR",
        "1",
        "extRefIndex",
        "_errorTitle",
        "p",
        "segmentSuffix",
        "srcCellRow",
        "srcRowIndex",
        "nameLen",
        ".",
        "w2",
        "index",
        "scaleX",
        "srcOffset",
        "x2",
        "+",
        "ve0",
        "dn",
        "textArg",
        "width",
        "expectedTokenSequencesVal",
        "posStart",
        "pictureIndex",
        "height",
        "sheetIndex",
        "arg0",
        "key",
        "freeBlocks",
        "d2",
        "d0",
        "srcRowNum",
        "dx1",
        "workbookName",
        "targetGen",
        "getFirstColumn",
        "DEFAULT_ARG3",
        "w",
        "refIndex",
        ">>",
        "mode",
        "pEndDateVal",
        ";",
        "\"",
        "arg1",
        "valueCount",
        "filterDbNameIndex",
        "startRuleIndex",
        "startColumn",
        "y1",
        "serialNumVE",
        "0",
        "scaleY",
        "rowIndex",
        "start",
        "d1",
        "mSize",
        "vvX",
        "dy1",
        "comparisonOperator",
        "srcColumnIndex",
        "externSheetIndex",
        "y",
        "pStartDateVal",
        "]",
        "dstOffset",
        "venumerator",
        "cellnum",
        "replacement",
        "getFirstRow",
        "count",
        "value",
        "yPoints",
        "inumberVE",
        "columnIndex",
        "19",
        "numberVE",
        "lookup_value",
        "a",
        "w1"
      ],
      "Syntactic Label": "Variables, identifiers, keywords, operators, method calls, literals, and punctuation",
      "Semantic Tags": [
        "Spreadsheet Data Manipulation",
        "Data Structures",
        "Formula Evaluation",
        "Error Handling",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements used in spreadsheet data manipulation.  Variables store data (e.g., rowIndex, sheetName, etc.). Identifiers name methods and classes. Keywords control program flow (e.g., if, while). Operators perform calculations and comparisons. Method calls interact with spreadsheet objects. Literals provide constant values. Punctuation structures the code.  The code handles errors and performs file I/O operations."
    }
  },
  {
    "c76": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "Input",
        "Method Invocation",
        "Client-side processing"
      ],
      "Description": "The token 'request' represents a parameter passed to numerous methods.  These methods appear to be part of an API Gateway or similar system, where each method handles a specific request type (e.g., GetCampaignActivitiesRequest, CreateModelRequest). The 'request' object carries the input data for each API call. The 'beforeClientExecution' function suggests pre-processing of the request before the main execution, which is a common pattern in API request handling."
    }
  },
  {
    "c77": {
      "Unique tokens": [
        "=",
        ")",
        "StringBuilder",
        "new",
        "("
      ],
      "Syntactic Label": "Object,Operator,Keyword",
      "Semantic Tags": [
        "String Manipulation",
        "Object Instantiation",
        "Stringbuilder",
        "Data Representation",
        "Program Output"
      ],
      "Description": "The tokens =,(,),new, and StringBuilder are essential in C#. '=' is the assignment operator.  '(' and ')' are used for method calls and object instantiation. 'new' is a keyword used for creating new objects. StringBuilder is a class used for efficient string manipulation, commonly used to build strings piece by piece before returning a final string. This is evident in the provided code snippets where StringBuilder objects are used to construct strings for various purposes, such as representing data structures or generating formatted output."
    }
  },
  {
    "c78": {
      "Unique tokens": [
        "",
        "\u0430",
        "uriPattern",
        "f",
        "CharsRefBuilder",
        "%dx%d]",
        "patternRuleIndex",
        "getHiddenTokensToRight",
        "sortedSetDocValues",
        "docFreq",
        "setLastFailedRefreshTime",
        "TokenizerFactory",
        "termsWithScoreCollector",
        "chars",
        "getExternalBookAndSheetName",
        "included",
        "sheetName",
        "getBoundingBox",
        "ecsMetadataServiceFetchCount",
        "(see",
        "calculateRamBytesUsed",
        "PointRangeQueryNode",
        "replaceLineBreaksWithSpace",
        "mvFunction",
        "length",
        "Ptg",
        "rowOffsetIx",
        "floatExc",
        "unSafeParser",
        "buffer",
        "CodecUtil",
        "Integer",
        "getComplexData",
        "textComparator",
        "termAtt",
        "Intersects",
        "nextFinalOutput",
        "field_9_zero4",
        "-",
        "x",
        "can't",
        "getFooterLines",
        "externalBook",
        "altNumber",
        "configs",
        "binaryDocValues",
        "caseOf",
        "max.doc.facets",
        "getExtbookIndexFromRefIndex",
        "nFullMergedCellsRecords",
        "getOffsetGap",
        "verifyPassword",
        "field_10_options",
        "altsets",
        "createSampledDocs",
        "_firstColumnIndex",
        "of",
        "EscherClientAnchorRecord",
        "args",
        "serializerClasses",
        "stat2",
        "[",
        "max.facet.depth",
        "isWholeColumnReference",
        "highShift",
        "multipleValuesPerDocument",
        "updatedLexerActions",
        "minVersion",
        "getDy1",
        "outGoingArgs",
        "findFirstWithId",
        "false",
        "keepTogetherSize",
        "lastCol",
        "searcherMgrLock",
        "getFirstSheetIndex",
        "nameArg",
        "synsetSize",
        "anchor",
        "thisPath",
        "prefixLength",
        "cfRules",
        "maxThreadCount",
        "OFFSET_WMFDATA",
        "file:",
        "i.getClass().getName()+",
        "ident",
        "ICU",
        "binaryExponent",
        "lf",
        "sessionToken",
        "getRefsByPrefix",
        "getPositionIncrementGap",
        "_lastDefinedRow",
        "know",
        "font",
        "pow10",
        "fr",
        "Supplied",
        "pictureIndex",
        "final",
        "rrIx",
        "_factory",
        "hssf",
        "reverseEndCommits",
        "jdk",
        "isHorizontallyFlipped",
        "cellRanges",
        "SpreadsheetVersion",
        "TermData",
        "it.",
        "in",
        "term",
        "Long",
        "currentExternSheetIx",
        "getDx1",
        "diffAlgorithm",
        "valueCount",
        "definedNameIndex",
        "startRuleIndex",
        "scratchInts",
        "wtMode",
        "maxCol",
        "18",
        "comparisonOperator",
        "field_10_indexOfColorValue",
        "e",
        "+=",
        "merge.scheduler",
        "caseType",
        "field_11_options2",
        "field_1_number_of_sheets",
        "inErrorRecoveryMode",
        "shouldProtectObjects",
        "indexDeletionPolicy",
        "lastSheetIndex",
        "firstSheetIndex",
        "charactersStr",
        "_conditionalFormattingTable",
        "dup",
        "vargs",
        "maxEdits",
        "_nRows",
        "otherRow",
        "subReaders",
        "badName",
        "and",
        "numDirtyChunks",
        "segmentInfo",
        "lemmatizerME",
        "getDeletionPolicy",
        "rec",
        "createXorVerifier1",
        "Math",
        "++",
        "colOffsetIx",
        "fat",
        "strText1",
        "getLastColumn",
        "formulaSize",
        "allocator",
        "disjuncts",
        "connectionTimeoutInMilliseconds",
        "cell",
        "find",
        "thisWbIndex",
        "setEscapementTypeModified",
        "Float",
        "sheetRefIndex",
        "PredictionContext",
        "nRanges",
        "_scenarioProtectRecord",
        "fieldInfos",
        "offset",
        "mapred.reduce.tasks",
        "TwoDEval",
        "not",
        "shouldRefresh",
        "_objectProtectRecord",
        "joined",
        "recordFactory",
        "_firstRow",
        "createCollectorMV",
        "rootContext",
        "setFollowFileRenames",
        "nextTokensContext",
        "getFontIndexAsInt",
        "totalMaxDoc",
        "maxBytesPerChar",
        "i).setValue(new",
        "InformationalMessage",
        "otherDouble",
        "ptgs",
        "this",
        "field_6_zero1",
        "getFontRecordAt",
        "org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy",
        "startDateVal",
        "field_2_minorTickType",
        "GB2312",
        "extRefIndex",
        "outputUnigramsIfNoShingles",
        "0x005A",
        "listener",
        "firstSheetName",
        "!",
        "formula2",
        "_firstCell",
        "maxDocFacets",
        "FontMetrics",
        "Packed64SingleBlock7",
        "promptKeyboardInteractive",
        "startMS",
        "CFRecordsAggregate",
        "toAppendTo",
        "field_8_zero3",
        ".",
        "field_4_rgbColor",
        "value1",
        "Rectangle",
        "getCol2",
        "t1",
        "blockIndex",
        "add",
        "=",
        "rowIx",
        "internalGetExcelDate",
        "oFirstRow",
        "followFileRenames",
        "arg0",
        "forTypeID",
        "decisionToDFA",
        "maxRetryTimes",
        "endDateVal",
        "_precedenceStack",
        "sampledDocs",
        "got",
        "getFirstRowNum",
        "getFirstColumn",
        "pathParamKey",
        "_rawData",
        "tieBreakLessThan",
        "externalBookIndex",
        "craNew",
        "_string",
        "crA",
        "field_1_UID",
        "SeekStatus",
        "0",
        "ptgs2",
        "tnode",
        "foundTerms",
        "ch",
        "}",
        "Packed64SingleBlock6",
        "references'",
        "params",
        "Character",
        "[(%d,%d)-(%d,%d):",
        "positionSpan",
        "text",
        "getCfRuleRecord",
        "max.doc.facets.dims",
        "ambigAlts",
        "thisSheetRefIndex",
        "SortedSetDocValues",
        "charactersStrArray",
        "forInt",
        "setFontCancellationModified",
        "estimatedMergeBytes",
        "cellnum",
        "writeIndexHeader",
        "_parentctx",
        "toUTF16",
        "\\n",
        "number2",
        "SansSerif",
        "was",
        "getSingleValue",
        "getEndOffset",
        "startRuleStartState",
        "evalSemanticContext",
        "getOldSymref",
        "token",
        "Formatter",
        "caseFoldLower",
        "formula1",
        "Area3DPtg",
        "<",
        "getHiddenTokensToLeft",
        "You",
        "field_2_verticalAlignment",
        "sfr",
        "field_5_x",
        "expr1",
        "sizeIsValid",
        "append",
        "field_1_horizontalAlignment",
        "_LOOK",
        "field_9_options1",
        "buildAutomata",
        "shIx2",
        "needsExclamation",
        "getLastRow",
        "ent",
        "formatter",
        "toField",
        "fni",
        "setCachedBooleanResult",
        "RamUsageEstimator",
        "scoreMode",
        ",",
        "dy2",
        "isNameMultiByte",
        "fra",
        "AlternateHandle",
        ">",
        "lexerAction",
        "thisDouble",
        "byteOrder1",
        "getFormulaFromTextExpression",
        "jj_ntk",
        "step2",
        "ebrTarget",
        "getWhen",
        "verticalPixelsPerPoint",
        "_cellType",
        "thumbnail",
        "isPartOfArrayFormulaGroup",
        "\\r",
        "fillerToken",
        "doesn't",
        "skipEofCheck",
        "4",
        "is16bit",
        "used",
        "FuzzyTermsEnum",
        "true",
        "is16Bit",
        "getClass",
        "stringsAreBlanks",
        "cell(s)",
        "formattingFontIndex",
        "newExtSheetIx",
        "recycleByteBlocks",
        "segmentSuffix",
        "mIndeterminate",
        "stringToUTF32",
        "changeSkip",
        "DistanceRangeQuery",
        "craOld",
        "frac",
        "getBoolean",
        "recycleIntBlocks",
        "allConfigsInRuleStopStates",
        "isPositionDependent",
        "credentials",
        "about",
        "0x0020",
        "getLowFreqMinimumNumberShouldMatch",
        "lexerActionExecutor",
        "but",
        "actualVersion",
        "_currentRowIndex",
        "isExternalReferences",
        "freeByteBlocks",
        "org.apache.lucene.index.ConcurrentMergeScheduler",
        "dictionary",
        "_promptTitle",
        "cloneStyleFrom",
        "segments_N",
        "lt",
        "ObjectProtectRecord",
        "stemDerivational",
        "oFirstCol",
        "freeBlocks",
        "indexSDP",
        "atLeastTwoFiltersNeeded",
        "lastSheetName",
        "endsWith",
        "recognizer",
        "buildFontHeightProperty",
        "booleanValue",
        "matchingDocs",
        "nextWrite",
        "svFunction",
        "firstScoreDoc",
        "makeDistanceValueSource",
        "_buildParseTrees",
        "mergeMaxNumSegments",
        "sizeOf",
        "!=",
        "\"",
        "getRowNum",
        "field_1_xAxisUpperLeft",
        "sizeInBytes",
        "input",
        "termText",
        "didSkipBytes",
        "out",
        "countsByTimeStepMSec",
        "ptg",
        "fontNameLen",
        "validateSecondArg",
        "primaryExtensions",
        "newRanges",
        "decodeInt32",
        "getCol1",
        "totalTermFreq",
        "indexCommit",
        "externSheetIndex",
        "_formula2",
        "outputUnigrams",
        "getValueIndex",
        "ExtSSTRecord",
        "docIDs",
        "countBlanks",
        "refNotResolved",
        "reuseFirst",
        "_currentRectangleGroup",
        "_nColumns",
        "fieldWeightedSpanTerms",
        "sheetNumber",
        "_hasOffsets",
        "getFirstRow",
        "_cbFContinued",
        "createCell",
        "field_3_stringHasMultibyte",
        "getSheet",
        "optionFlags",
        "String(password));continue;}}throw",
        "ruleName",
        "_unknownPreFormulaInt",
        "hasMultibyte",
        "si",
        "maxEntLemmas",
        "nBlank",
        "isBuiltin",
        "sectionCount2",
        "minCol",
        "getNumRuns",
        "field_4_background",
        "utf8SortedAsUTF16SortOrder",
        "CellRangeAddress",
        "OperandPtg",
        "bypassAltsAtnCache",
        "GenericTermsCollector",
        "scoreTimes1pTfn",
        "be",
        "_isLeft",
        ")",
        "expr2",
        "int",
        "setFlags",
        "w5",
        "((CredentialItem.StringType)",
        "str",
        "_isSingleCell",
        "startCommit",
        "writeContinueIfRequired",
        "isGitRepository",
        "copy(BytesRef,",
        "w3",
        "field_1_majorTickType",
        "must",
        "FormulaRecordAggregate",
        "range_lookup",
        "shIx1",
        "heightStr",
        "cloneStringIfRequired",
        "if",
        "null",
        "hasFreqs",
        "_externalNameRecords",
        "nOutGoingArgs",
        "deletionPolicyName",
        "numChunks",
        "getEndRowNumberForBlock",
        "fontName",
        "(str.equalsIgnoreCase(",
        "shape",
        "UnsupportedCharsetException",
        "getLastSheetIndexFromExternSheetIndex",
        "BytesRef)",
        "closeWhileHandlingException",
        "*",
        "newColumn",
        "==",
        "otherFloat",
        "crB",
        "expirationThresholdMilllis",
        "BinaryDocValues",
        "srcCellCol",
        "0.0",
        "minimumNumberShouldMatch",
        "lastLocalSheetIndex",
        "field_3_displayMode",
        "c2",
        "s",
        "newBlocks",
        "UnsupportedCredentialItem(uri,",
        "1",
        "size",
        "class",
        "getDy2",
        "_plsContinues",
        "isRowGroupCollapsed",
        "beginErrorCondition",
        "getRadius",
        "isRow",
        "getLastRowNum",
        "passedThroughNonGreedyDecision",
        "CFRuleBase",
        "hrow",
        "setSysConnectTimeout",
        "3999",
        "maxMergeCount",
        "new",
        "caseFoldTitle",
        "found",
        "+",
        "DocValuesTermsCollector",
        "Could",
        "password",
        "Occur",
        "msLeft",
        "matches",
        "flushInternal",
        "dateRes",
        "packingCancelledDuringObjectsWriting",
        "field_1_rectX1",
        "value2",
        "height",
        "Boolean.TRUE;}if",
        "is16bitEncoded",
        "wpil",
        "next",
        "thisFloat",
        "remainingData",
        "PointRangeQueryNodeBuilder",
        "thisState",
        "(",
        "StaticFontMetrics.getFontDetails",
        "specified",
        "needsInputCleaning",
        "willSoonExpire",
        "atLeastOnePatternIsRequired",
        "phraseInfo",
        "fromField",
        "i",
        "fromSearcher",
        "_unknownPostFormulaByte",
        "functionCode",
        "checkRange",
        "putUnicodeLE",
        "extBookIndex",
        "elapsed",
        "widthsStr",
        "func)",
        ";",
        "Iterator",
        "rowCells",
        "maxVersion",
        "getCurrentUserPassword",
        "lexerActions",
        "localSheetIndex",
        "IntsRefBuilder",
        "userPassword",
        "start",
        "shifter",
        "{",
        "isEqual",
        "arrayPtgs",
        "]",
        "mergeScheduler",
        "getNumericCellValue",
        "isAboveMinRep",
        "field_3_labelPosition",
        "extendedDataSize",
        "\u0438\u0449\u0430",
        "serializeUnicodeString",
        "getSheetIndex",
        "getHorizontalHold",
        "changed",
        "an",
        "createCollectorSV",
        "_parseListeners",
        "createInternalReferences",
        "getATNWithBypassAlts",
        "phoneticText",
        "(collectPredicates=",
        "String",
        "compareTo"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Lexical Analysis",
        "Parsing",
        "Code Generation",
        "Text Processing",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide variety of C# language elements, including identifiers, keywords, operators, and literals.  The context sentences show their use in different programming tasks, such as lexical analysis (tokenization), parsing (building parse trees), code generation (compiling to bytecode), text processing (string manipulation and highlighting), and data structure management (using objects like StringBuilder, lists, and sets).  The significance in the context of C# programming lies in their combined role in building and executing C# applications."
    }
  },
  {
    "c79": {
      "Unique tokens": [
        "Parser",
        "FST",
        ".",
        "Collection",
        "POIFSBigBlockSize",
        "Pair",
        "nvae",
        "List",
        "add",
        "Object",
        "final",
        "cr",
        "Terms",
        ")",
        "SegmentReadState",
        "int",
        "EscapeQuerySyntax",
        "NoViableAltException",
        "(",
        "FormulaShifter",
        "String",
        "java"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Parsing",
        "Data Structures",
        "Exception Handling",
        "File I/O",
        "Algorithm"
      ],
      "Description": "The tokens represent a variety of C# language elements including class names (Parser, FST, Pair), data structures (Collection, List), methods (add), operators (.), keywords (final, int, public, static), exceptions (NoViableAltException), and other identifiers.  The sentences show these elements used in various programming contexts, such as object instantiation, method calls, exception handling, and data manipulation.  The semantic tags reflect the overall functionality of the code snippets, which appear to be related to parsing, data structures, and algorithms."
    }
  },
  {
    "c80": {
      "Unique tokens": [
        "0xFF",
        "offset",
        "slice",
        "limit",
        "off",
        ",",
        "mValues",
        "asReadOnlyBuffer",
        ".",
        "getChars",
        "blocksOffset",
        "charAt",
        "location",
        "position",
        "to",
        "elementCount",
        "charCount",
        "SHORT",
        "b",
        "srcOffset",
        ">",
        "+",
        "CHAR",
        "0",
        "++",
        "2",
        "order",
        "start",
        "r",
        "resourceGroupName",
        "src",
        "c",
        "doubleCount",
        "chars",
        "mSize",
        "<",
        ";",
        "*",
        "SizeOf",
        "floatCount",
        "PackedInts",
        "byteCount",
        "=",
        "short",
        "]",
        "dst",
        "remaining",
        "FLOAT",
        "LONG",
        "dstStart",
        "newElements",
        ")",
        "backingArray",
        "dstOffset",
        "int",
        "array",
        "destOff",
        "_array",
        "length",
        "buf",
        "INT",
        "shortCount",
        "longCount",
        "(",
        "value",
        "count",
        "1",
        "DOUBLE",
        "valueOf",
        "i",
        "cnt",
        "from",
        "intCount",
        "object",
        "other",
        "valuesOffset"
      ],
      "Syntactic Label": "Buffer Manipulation Tokens and Methods",
      "Semantic Tags": [
        "Buffer Management",
        "Data Transfer",
        "Byte Manipulation",
        "Array Operations",
        "Exception Handling"
      ],
      "Description": "The tokens represent variables and methods related to buffer manipulation in C#.  They are used extensively in functions that read from and write to buffers (byte arrays, short arrays, int arrays, etc.).  The methods handle buffer offsets, limits, positions, and data transfer between buffers and arrays.  Exception handling is implemented to manage situations like buffer overflow and underflow."
    }
  },
  {
    "c81": {
      "Unique tokens": [
        "tag",
        ":",
        "this",
        "return",
        "}",
        "else",
        "ID",
        ";"
      ],
      "Syntactic Label": "C# language constructs",
      "Semantic Tags": [
        "Method Declaration",
        "Return Statement",
        "Conditional Statement",
        "Object Member Access",
        "Method Definition"
      ],
      "Description": "The tokens represent fundamental C# language elements.  'tag', 'ID', and other identifiers are used within method declarations and definitions. ':' is used in declarations. 'this' is used for object member access. 'return' indicates return statements. '}' and ';' are closing braces and semicolons, respectively. 'else' is part of conditional statements. These tokens are essential for defining methods, handling returns, and controlling program flow in C#."
    }
  },
  {
    "c82": {
      "Unique tokens": [
        "\"",
        "JGitInternalException",
        "null",
        "IOException",
        "IndexFormatTooNewException",
        "CorruptIndexException",
        "throw",
        "OutOfMemoryError",
        "MissingObjectException",
        "ioe",
        "new",
        "ServiceNotEnabledException",
        "IncorrectObjectTypeException",
        "ParseException",
        "e",
        "final",
        "EOFException",
        ")",
        "assert",
        "LargeObjectException",
        "(",
        "RepositoryNotFoundException",
        "IllegalStateException",
        "SneakyThrow",
        "IndexFormatTooOldException",
        "IllegalArgumentException"
      ],
      "Syntactic Label": "Exception Types, Keywords, and Operators",
      "Semantic Tags": [
        "Exception Handling",
        "Error Reporting",
        "Object Creation",
        "Conditional Logic",
        "Assertion"
      ],
      "Description": "The tokens represent various exception types in C#, keywords like \"throw\" and \"new\" for exception handling and object creation, and operators like \",\" and \"()\" for syntactic structure.  The context sentences show how these tokens are used to handle exceptions, report errors, create new exception objects, and implement conditional logic and assertions within methods.  This is crucial for robust C# programming to manage and respond to runtime errors effectively."
    }
  },
  {
    "c83": {
      "Unique tokens": [
        "dirIdx",
        "zzEndRead",
        "stop",
        "off",
        "midValue",
        "currentCount",
        "lastElement",
        "offset0",
        "srcCnt",
        "position",
        "one",
        "charCount",
        "valuesPerBlock",
        "nOther",
        "u",
        "j",
        "b",
        "raw_number",
        "idx",
        "secondaryProgress",
        "minValues",
        "numLeft",
        "++",
        "Math",
        "2",
        "u31",
        "val",
        "encodedTokenLen",
        "gt",
        "nextBlock",
        "ptr",
        "chars",
        "<",
        "rem",
        "blockSize",
        "currentSentence",
        "byteIndex",
        "grow",
        "old",
        "updateTop",
        "mMax",
        "oldIdx",
        "getCharacterPos",
        "rest",
        "toFree",
        ")",
        "ord",
        "cp",
        "mid",
        "expectedModCount",
        "headIndex",
        "bufferUpto",
        "length",
        "jw",
        "modCount",
        "flag",
        "totalSize",
        "startOffset",
        "comgen",
        "blockLeft",
        "result",
        "blockIdx",
        "currentRow",
        "oldLen",
        "-",
        "x",
        "bytesRemaining",
        "aux",
        "sz",
        "toBlockIndex",
        "pos",
        "numskipped",
        "minnk",
        "maxnk",
        "RamUsageEstimator",
        "alignedPos",
        "vOff",
        "offset",
        "limit",
        "maxformatid",
        ",",
        "base",
        "sb",
        "zzCurrentPos",
        "lastChar",
        ">",
        "_unused",
        "bytesUsed",
        "dataSize",
        "len",
        "maxSizeNeeded",
        "b0",
        "remainingInBlock",
        "isneg",
        "ix",
        "[",
        "<=",
        "getEnd",
        "expectedMark",
        "charIdx",
        "numToAppend",
        "currPtr",
        "end",
        "*",
        "bufferPos",
        "main",
        "==",
        "minAlt",
        "_limit",
        "rvalue",
        "getBeginIndex",
        "bufferSize",
        "keepTogetherSize",
        "actionIndex",
        "this",
        "48",
        "byteOffset",
        "fieldIndex",
        "lo",
        "number",
        "newLength",
        "l",
        "yychar",
        "success",
        "nRegions",
        "s",
        "true",
        "readHeader",
        "subFrom",
        "mark",
        "_dxMin",
        "size",
        "filePos",
        "upto",
        "1",
        "toCopy",
        "nArgs",
        "nextPos",
        "temp",
        "p",
        "currentCharIndex",
        "tailDirIdx",
        "getGeneration",
        "copyLength",
        "currentBlockUpto",
        ".",
        "intIdx",
        "--",
        "index",
        "prevPtr",
        "k",
        "nRows",
        "+",
        "zzStartRead",
        "nColumns",
        "_key",
        "offsetInBlock",
        "delta",
        "jt",
        "resultLength",
        "currentOffset",
        "col",
        "arr",
        "lastCharBufferStart",
        "termsStart",
        "expected",
        "codePointCount",
        "step",
        "nextSubtreePos",
        "blockRef",
        "matches",
        "v",
        "blkIdx",
        "yycolumn",
        "intUpto",
        "_value",
        "wasted",
        "ret",
        "nextLF",
        "blockOffset",
        "valuesOff",
        "propertiesCount",
        "endOffset",
        "originalLength",
        "nTerms",
        "=",
        "diagonalDist",
        "myPosition",
        "blockIndex",
        "-=",
        "endPosition",
        "maxRow",
        "textStart",
        "sheetIndex",
        "countNames",
        "xoffset",
        "tmp",
        "addAndGet",
        "(",
        "initialBspos",
        "recordSize",
        "d",
        "baseLen",
        "hashSize",
        "zzMarkedPos",
        "written",
        "nthPosition",
        "gen",
        "shift",
        "i",
        "nextWrite",
        "n",
        "w",
        "pos0",
        ">>",
        "lastCount",
        "findIndex",
        ";",
        "indexInBlock",
        "\"",
        "hi",
        "shortCellNum",
        "nextSlice",
        "numMarkers",
        "level",
        "binarySearch",
        "res",
        "channel",
        "location",
        "max",
        "min",
        "mask",
        "totalCount",
        "wtMode",
        "lt",
        "getBspos",
        "indexOf",
        "rowIndex",
        "cmp",
        "mProgress",
        "intStart",
        "remain",
        "get",
        "start",
        "eo",
        "pOff",
        "c",
        "pending",
        "textSize",
        "}",
        "maxEdits",
        "remap",
        "b1",
        "_writeIndex",
        "nextWriteGen",
        "msgB",
        "styleIndex",
        "markpos",
        "tailBlkIdx",
        "outPtr",
        "1024",
        "wholePart",
        "capacity",
        "offsetEnd",
        "e",
        "currentNumFrags",
        "]",
        "indexInterval",
        "+=",
        "remaining",
        "totalLength",
        "&",
        "pendingOff",
        "setBspos",
        "nextPtr",
        "shouldKeep",
        "count",
        "m",
        "value",
        "firstSize",
        "512",
        "otherPosition",
        "skip",
        "fallBack",
        "rnum",
        "getThreshold",
        "modeDiff",
        "optionFlags",
        "FieldInfo",
        "utf32",
        "a",
        "intOffset",
        "block",
        "maxScan",
        "charLimit",
        "left"
      ],
      "Syntactic Label": "Variables, Operators, Method Calls, Literals, Data Structures",
      "Semantic Tags": [
        "Data Processing",
        "Control Flow",
        "Data Structures",
        "Input/Output",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Variables store data (e.g., dirIdx, zzEndRead, etc.). Operators perform calculations and comparisons (e.g., +, -, ==, <, >). Method calls invoke functions (e.g., getCharacterPos, System.arraycopy). Literals represent constant values (e.g., 2, 1024, true). Data structures like arrays, lists, and maps are used to organize and manage data (e.g., array, records, formats). The code snippets demonstrate various programming constructs, including loops, conditional statements, and array manipulations, which are fundamental to C# programming."
    }
  },
  {
    "c84": {
      "Unique tokens": [
        "2016-06-07",
        "2010-05-08"
      ],
      "Syntactic Label": "Date Literal",
      "Semantic Tags": [
        "API Versioning",
        "Date",
        "Timestamp",
        "Version Control",
        "API Specification"
      ],
      "Description": "These tokens represent date literals, likely specifying API versions or timestamps within the context of the provided C# code.  The dates are used as parameters in the constructors of various request objects, suggesting they are part of the API versioning scheme or are used to identify specific versions of the API.  In the second example, \"2010-05-08\" appears to be a version number for an Amazon Identity Management API call."
    }
  },
  {
    "c85": {
      "Unique tokens": [
        "",
        "svm",
        "getType",
        "DICTIONARY_RESOURCE_ATTRIBUTE",
        "bounds",
        "position",
        "grams",
        "Vector",
        "Collection",
        "token",
        "b",
        "variant",
        "ByteBuffer",
        "termUpto",
        "<",
        "Pattern",
        "long",
        "recLen",
        "else",
        "field_1_zero",
        "_data",
        ")",
        "int",
        "xmax",
        "length",
        "apache",
        "buffer",
        "serialize",
        "result",
        "-",
        "Config",
        "println",
        "if",
        "config",
        "null",
        ",",
        "reuseFields",
        "Cell",
        "deletionPolicyName",
        ">",
        "first",
        "len",
        "iwConf",
        "Row",
        "shape",
        "[",
        "<=",
        "compile",
        "ArrayList",
        "==",
        "ldr",
        "byte",
        "inc",
        "Object",
        "bufferSize",
        ">=",
        "fieldNames",
        "seenOne",
        "this",
        "name",
        "ref",
        "Outputs",
        "lo",
        "atnStartState",
        "s",
        "true",
        "xmin",
        "size",
        "1",
        "double",
        "getClass",
        "SemanticContext",
        "for",
        "Token",
        "PositionTrackingVisitor",
        "toMerge",
        "output",
        "findAll",
        "StringTokenizer",
        "num",
        "boolean",
        "getPadding",
        "termsInfos",
        "getenv",
        "slice",
        "getBoolean",
        ".",
        "include",
        "return",
        "Class",
        "runData",
        "new",
        "form",
        "Comparator",
        "_format",
        "+",
        "interrupted",
        "match",
        "externalWorkbookNumber",
        "subRecordData",
        "equals",
        "TermMergeQueue",
        "v",
        "originalLength",
        "add",
        "=",
        "synonyms",
        "stem",
        "final",
        "while",
        "assert",
        "(",
        "File",
        "o",
        "in",
        "checkRange",
        "n",
        "ignoreCase",
        "fromIndex",
        "!=",
        ";",
        "type",
        "Iterator",
        "\"",
        "switch",
        "output1",
        "stored",
        "output2",
        "DateTools",
        "now",
        "0",
        "prefix",
        "get",
        "Record",
        "r",
        "List",
        "c",
        "System",
        "{",
        "oldToken",
        "call",
        "]",
        "+=",
        ":",
        "field_1_number_of_sheets",
        "random",
        "TransportProtocol",
        "count",
        "changed",
        "\\n",
        "subs",
        "poi",
        "flags",
        "StringHelper",
        "s0",
        "a",
        "String",
        "bigBlockSize",
        "queryNode"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Object-Oriented Programming",
        "Exception Handling",
        "File I/O"
      ],
      "Description": "The C# code snippets demonstrate various programming concepts. Tokens like keywords (if, else, for, while, switch, return), operators (=, +, -, ==, !=, <=, >=, +=), and special characters ([, ], (, ), {, }, ., <, >, \", :, ;) are used for control flow, data manipulation, and object interaction.  Data structures such as arrays, lists, and collections are used to store and manage data. Object-oriented programming principles are evident through the use of classes, methods, and objects. Exception handling is implemented using try-catch blocks and the throwing of exceptions. File I/O operations are performed using File objects and streams."
    }
  },
  {
    "c86": {
      "Unique tokens": [
        "stop",
        ".",
        "return",
        "throw",
        "workbook",
        "decode",
        "+",
        "len",
        "ptr",
        "<",
        "display",
        "flush",
        "==",
        "_limit",
        "false",
        "=",
        "seek",
        ">=",
        "Slice",
        "this",
        ")",
        "delegate",
        "assert",
        "str",
        "used",
        "(",
        "true",
        "arrays",
        "readOnly",
        "value",
        "state",
        "count",
        "_list",
        "x",
        "-",
        "n",
        "super",
        "pos"
      ],
      "Syntactic Label": "Method Return Statements, Variables,Operators,and other tokens",
      "Semantic Tags": [
        "Getter Methods",
        "Data Access",
        "State Management",
        "Boolean Logic",
        "Control Flow"
      ],
      "Description": "The tokens represent a collection of elements commonly found in C# getter methods, encompassing return statements, variable assignments, comparison operators, boolean values, and other control flow structures.  These tokens are crucial for data access, state management, and decision-making within the program's logic. The methods retrieve various data types (int, String, boolean, custom objects) and manage internal program state.  The boolean values and comparison operators facilitate conditional execution, while other tokens contribute to the overall functionality of the methods."
    }
  },
  {
    "c87": {
      "Unique tokens": [
        "",
        "position",
        "leaving",
        "remainingBits",
        "b",
        "++",
        "toArray",
        "?",
        "2",
        "ptr",
        "gc",
        "<",
        "previousIndex",
        "getValue",
        "requireNonNull",
        "else",
        "clone",
        "copy",
        ")",
        "length",
        "child",
        "markSupported",
        "result",
        "list",
        "formatter",
        "-",
        "oldValue",
        "pos",
        "if",
        "K",
        "offset",
        "limit",
        "null",
        ",",
        "sb",
        ">",
        "getKey",
        "Arrays",
        "*",
        "end",
        "V",
        "ArrayList",
        "==",
        "free",
        "false",
        ">=",
        "this",
        "_count",
        "delegate",
        "monitor",
        "label",
        "true",
        "mark",
        "upto",
        "size",
        "1",
        "output",
        "!",
        "remove",
        ".",
        "return",
        "getCode",
        "char",
        "throw",
        "UNSET_MARK",
        "index",
        "pm",
        "new",
        "id",
        "+",
        "OBJECT",
        "newTree",
        "bufferOffset",
        "voidLink",
        "flush",
        "v",
        "INSTANCE",
        "toString",
        "previous",
        "field",
        "=",
        "isEmpty",
        "next",
        "key",
        "resultStart",
        "advance",
        "assert",
        "(",
        "clear",
        "i",
        "in",
        "lineNumber",
        "n",
        "newParent",
        "/",
        "!=",
        ";",
        "type",
        "\"",
        "forwardCount",
        "StringBuffer",
        "now",
        "NUMERIC",
        "markedLastWasCR",
        "0",
        "objItr",
        "sourceStart",
        "start",
        "r",
        "out",
        "c",
        "}",
        "mSize",
        "{",
        "filter",
        "text",
        "starts",
        "current",
        "fmt",
        "parent",
        "pool",
        "]",
        "+=",
        ":",
        "iterator",
        "&&",
        "hasNext",
        "value",
        "logger",
        "a",
        "super",
        "lock",
        "other"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Method Invocation",
        "Object Manipulation",
        "Control Flow",
        "Data Structures",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords (if, else, return, throw), operators (+, -, ++, ==, !=, <, >, &&, etc.), method calls (e.g., append, toString, clone, equals, hashCode, etc.), object instantiations (new), and data structure usage (ArrayList, Arrays, StringBuffer, etc.).  The code snippets demonstrate various programming patterns, such as null checks, exception handling, method chaining, and data manipulation within different data structures. The semantic tags reflect the overall functionality of the code, which involves method calls, object manipulation, control flow statements, data structure usage, and utility functions."
    }
  },
  {
    "c88": {
      "Unique tokens": [
        "void"
      ],
      "Syntactic Label": "Method Modifier",
      "Semantic Tags": [
        "Method Declaration",
        "Access Modifier",
        "Procedure",
        "Void Return Type",
        "Method Definition"
      ],
      "Description": "The keyword 'void' in C# modifies method declarations, specifying that the method does not return a value.  It's a crucial part of defining a method's signature and behavior.  The examples show various methods (procedures) that perform actions without returning any specific data."
    }
  },
  {
    "c89": {
      "Unique tokens": [
        "7",
        "ERROR",
        "rec",
        "b",
        "CJKBigramFilter",
        "dsc",
        "2",
        "?",
        "TYPE_MALFORMED_INPUT",
        "5",
        "break",
        ")",
        "int",
        "RowRecord",
        "buf",
        "3",
        "if",
        "offset",
        "addUnknownRecord",
        "BOKMAAL",
        ",",
        "OR",
        "null",
        "_isError",
        "insertRow",
        "default",
        "[",
        "getName",
        "MODIFY",
        "==",
        "NE",
        "this",
        "continue",
        "4",
        "true",
        "DELETE",
        "1",
        "getClass",
        "for",
        "BLANK",
        "PLUS",
        "boolean",
        "!",
        "isBlank",
        ".",
        "return",
        "throw",
        "TRUE",
        "new",
        "+",
        "_value",
        "RENAME",
        "=",
        "final",
        "NYNORSK",
        "10",
        "(",
        "COPY",
        ";",
        "DBCellRecord",
        "\"",
        "0",
        "ADD",
        "CHILD_ANCHOR",
        "DConRefRecord",
        "r",
        "9",
        "'",
        "case",
        "BOOLEAN",
        "}",
        "inquote",
        "changeType",
        ":",
        "&&",
        "Constants",
        "NONE",
        "8",
        "w1"
      ],
      "Syntactic Label": "C# Tokens and Control Structures",
      "Semantic Tags": [
        "Control Flow",
        "Conditional Logic",
        "Switch Statements",
        "Exception Handling",
        "Object Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, for, switch, case, break, continue, return, throw), operators (==, !=, +, -, &&, |, !), data types (int, boolean, String, byte[]), identifiers (representing variables, methods, classes, constants), and control structures (switch, for, while, if-else). These elements are fundamental to C# programming and are used extensively in the provided code snippets to implement various functionalities, such as conditional logic, loops, exception handling, and object manipulation.  The semantic tags reflect the core programming concepts demonstrated in the code examples."
    }
  },
  {
    "c90": {
      "Unique tokens": [
        "getInt",
        "",
        "contextsField",
        "maxTokenPosition",
        "version",
        "exactFirst",
        "ellipsis",
        "b",
        "?",
        "threshold",
        "termsToFind",
        "bytesStartArray",
        "frozen",
        "Collections",
        "newElementArray",
        "<",
        "weightField",
        "fc",
        "clientProfile",
        "payloadField",
        "delimiter",
        "capacity=",
        "automaton",
        "ss",
        ")",
        "reA",
        "buf",
        "numStrings",
        "currentTokenVal",
        "preTag",
        "tree",
        "Formula",
        "Objects",
        "inject",
        "getChar",
        "clientProfile1",
        "PathFilter",
        "null",
        ",",
        "patternText",
        "privateKeySecret",
        "checkNonGreedyDecision",
        "removeGaps",
        "args",
        "captureState",
        "active",
        "[",
        "accessKeySecret",
        "Arrays",
        "MurmurHash",
        "BigInteger",
        "==",
        "fieldOp",
        "basicModel",
        "false",
        "byte",
        "this",
        "stop=",
        "map",
        "ref",
        "rows",
        "nRegions",
        "true",
        "requireFloat",
        "useRomaji",
        "stemmer",
        "nonNotesMergeStrategy",
        "longestOnly",
        "pre",
        "anchor",
        "|=",
        "higherWeightsFirst",
        "afterEffect",
        "temp",
        "p",
        "transform",
        "operator",
        "cacheRootArcs",
        "require",
        "createSpContainer",
        "factory",
        "getBoolean",
        ".",
        "return",
        "normMap",
        "cras",
        "ArrayUtil",
        "Thread",
        "sid",
        "index",
        "Class",
        "source",
        "new",
        "pm",
        "loose",
        "+",
        "getCredential",
        "lexerActionExecutor",
        "_escherContainer",
        "preserveOriginal",
        "numUniqueStrings",
        "is",
        "qqf",
        "createObjRecord",
        "engine",
        "fp",
        "expectedTokenSequencesVal",
        "field",
        "=",
        "url",
        "newElements",
        "noteMerger",
        "publicKeyId",
        "(",
        "hashSize",
        "RevTree",
        "dc",
        "db",
        "in",
        "stemClass",
        "getWildCardPattern",
        "start=",
        "at",
        "!=",
        ";",
        "\"",
        "type",
        "DVALRecord",
        "escape",
        "lexerActions",
        "channel",
        "accessKeyId",
        "encoder",
        "strings",
        "mask",
        "requireInt",
        "input",
        "0",
        "charFilterFactories",
        "get",
        "/=",
        "newFlag",
        "out",
        "c",
        "}",
        "FuncIx=",
        "getPattern",
        "postTag",
        "tokenImageVal",
        "nextToken",
        "atn",
        "capacity",
        "e",
        "pool",
        "]",
        "consumeAllTokens",
        "tokenizerFactory",
        ":",
        "docIDs",
        "ExtSSTRecord",
        "csn",
        "cmds",
        "packFile",
        "&&",
        "languages",
        "value",
        "Constants",
        "dedup",
        "normalization",
        "tokenFilterFactories",
        "FieldInfo",
        "post",
        "rs",
        "String",
        "other"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Factory Methods",
        "Object Serialization",
        "Process Management",
        "Data Structures",
        "Utility Functions"
      ],
      "Description": "The tokens represent a diverse set of C# language elements, including keywords, operators, method calls, object instantiations, and identifiers.  They are used in various contexts such as creating factory methods for tokenizer objects, managing processes, serializing data, and utilizing data structures like maps, lists, and arrays.  The semantic tags highlight the broader functionality of the code snippets, which are common in C# applications."
    }
  },
  {
    "c91": {
      "Unique tokens": [
        "DICTIONARY_RESOURCE_ATTRIBUTE",
        "illegal",
        "and",
        "getOperatorName",
        "bounds",
        "byteToHex",
        "Use",
        "DATA_SIZE",
        "rec",
        "variant",
        "suffix",
        "idx",
        "docId",
        ".autobreaks",
        "++",
        "2",
        "interval",
        "analyzer",
        "bufferStartIndex",
        "cannot",
        "DICTIONARY",
        "minTargetSize",
        "blockSize",
        "_numberOfFormulas",
        "inStream",
        "sfr",
        "be",
        "bucket",
        "codec",
        "'any'",
        "field_1_zero",
        "greater)",
        "append",
        ")",
        "buckets",
        "int",
        "firstSheetIndex:",
        "length",
        "override",
        "cell",
        "toHexString",
        "startOffset",
        "ctx",
        "-",
        "getSid",
        "actualChecksum",
        "if",
        ",",
        "not",
        "too",
        "Error",
        "recSize",
        "of",
        "default",
        "args",
        ">",
        "len",
        "MINIMUM_LENGTH_PARAM",
        "output.length=",
        "<=",
        "already",
        "getRange",
        "locale",
        "newColumn",
        "after",
        "LEMMATIZER_MODEL",
        "firstCell",
        "bufferSize",
        "byteCount",
        "this",
        "buffer.length=",
        "name",
        "tokens",
        "s",
        "upto",
        "1",
        "CFTAG_WINDOWS.",
        "Version",
        "for",
        "output",
        "docData",
        "IllegalArgumentException",
        ".",
        "support",
        ">=_p",
        "bytes",
        "actualCodec",
        "sid",
        "index",
        "_sfr",
        "+",
        "but",
        "length;assert",
        "does",
        "LevenshteinAutomata",
        "expected",
        "is",
        "numBytes",
        "points!",
        "parser",
        "toString",
        "which",
        "=",
        "docBase",
        "height",
        "final",
        "_outerContext",
        "(",
        "i",
        "in",
        "edx",
        "n",
        "Long",
        "/",
        "::",
        ";",
        "\"",
        "setDocDataField",
        "function",
        ",bytes.length=",
        "bounds:",
        "classNamesLocation",
        "row",
        "the",
        "docs,",
        "context",
        "0",
        "lastDocId",
        ",length=",
        "outside",
        "POI's",
        "ch",
        "}",
        "'",
        "case",
        "getTokenName",
        "implementations",
        "currentRevision",
        "numDocs",
        "_firstSheetIndex",
        "]",
        "line",
        "allow",
        ":",
        "commits",
        "remaining",
        "supported.",
        "instead",
        "&",
        "replacement",
        "AnalysisToolpack.registerFunction(String",
        "firstSheetIndex",
        "fields",
        "pt",
        "exceptions",
        "..",
        "):",
        "a",
        "CFHeaderBase",
        "unchecked"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "Assertion",
        "Input/Output Operations",
        "Data Structures",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language constructs.  Many tokens are part of control flow statements (if, else, while, for), exception handling (try, catch, throw), and assertions (assert).  Others are operators (+, -, *, /, =, ==, <, >, <=, >=), identifiers (method names, variable names), and data structure elements (arrays, lists, maps).  The code snippets demonstrate various operations, including string manipulation (using StringBuilder), file I/O, and data processing. The semantic tags reflect the overall functionality and purpose of the code, which involves handling exceptions, assertions, input/output operations, and data structures and string manipulation."
    }
  },
  {
    "c92": {
      "Unique tokens": [
        "",
        "0x80",
        ".",
        "throw",
        "bytes",
        "DATA_SIZE",
        "UNI_SUR_HIGH_START",
        "0",
        ">",
        "+",
        "128",
        "2",
        "[",
        "<=",
        "255",
        "'",
        "SMALL_RECORD_SIZE",
        "0xf0",
        "<",
        "blockSize",
        "UNI_SUR_LOW_END",
        "==",
        "%",
        "-=",
        "UNI_SUR_HIGH_END",
        ">=",
        ":",
        "HDR_SIZE",
        "this",
        ")",
        "ord",
        "4",
        "10",
        "length",
        "buf",
        "str",
        "&&",
        "s",
        "(",
        "0xc0",
        "UNI_SUR_LOW_START",
        "0xf8",
        "value",
        "1",
        "startOffset",
        "stage",
        "NAME_MASK",
        "ie",
        "-",
        "MAX_ARRAY_LENGTH",
        "n",
        "14",
        "pos",
        "!=",
        "3"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "String Manipulation",
        "Exception Handling",
        "Data Structures",
        "Control Flow"
      ],
      "Description": "The tokens represent a diverse set of C# language elements, including variables, operators, keywords, and literals.  They are used in various code snippets to perform operations on arrays, strings, handle exceptions, and manage control flow. The hex values (e.g., 0x80) likely represent special characters or codes within a specific data format. The context sentences show these tokens in use within methods, suggesting they are part of a larger class or library."
    }
  },
  {
    "c93": {
      "Unique tokens": [
        "checkGetBounds",
        "reverse",
        "df",
        "copyOf",
        "b",
        "Math",
        "0.0D",
        "HashMap",
        "Page",
        "<",
        "matchedEOF",
        "requireNonNull",
        "setItems",
        "getByResourceGroupWithServiceResponseAsync",
        "clone",
        "NaN",
        ")",
        "int",
        "PagedList",
        "w3c",
        "w3",
        "list",
        "checkConcurrentModification",
        "LittleEndianConsts",
        "Objects",
        "checkIndex",
        "IntBuffer",
        "null",
        "Hashtable",
        "obj",
        "Observable",
        "ConcurrentHashMap",
        "exit",
        "addAll",
        "rm",
        "Arrays",
        "MutableValueStr",
        "read",
        "==",
        "values",
        "checkPosition",
        "byte",
        "Object",
        "last",
        "this",
        "getProperty",
        "CopyOnWriteArrayList",
        "elementData",
        "toSet",
        "s",
        "setNextPageLink",
        "emptyList",
        "Constructor",
        "size",
        "WeakReference",
        "compare",
        "for",
        "beginWrite",
        "ensureCapacity",
        "slice",
        "createSheet",
        "remove",
        "endRead",
        "arraycopy",
        "IntegerList",
        ".",
        "OutOfMemory",
        "return",
        "Thread",
        "single",
        "interrupted",
        "log",
        "@SuppressWarnings",
        "ensureOpen",
        "LongBuffer",
        "toChars",
        "currentThread",
        "=",
        "final",
        "newElements",
        "@Overridepublic",
        "checkElementIndex",
        "addAndGet",
        "(",
        "fill",
        "valueOf",
        "_ctx",
        "isSupported",
        "unmodifiableList",
        "sort",
        "!=",
        ";",
        "\"",
        "Iterator",
        "err",
        "path",
        "E",
        "Completable",
        "page",
        "max",
        "min",
        "triggerExitRuleEvent",
        "doOrd",
        "toBlocking",
        "nanoTime",
        "PageImpl",
        "get",
        "out",
        "c",
        "checkOffsetAndCount",
        "System",
        "nsme",
        "listIterator",
        "_other",
        "body",
        "call",
        "_array",
        "MutableValueDouble",
        "String",
        "value",
        "skip",
        "beginRead",
        "checkPutBounds",
        "Double",
        "a",
        "super",
        "checkCallable",
        "array",
        "w1",
        "unchecked"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "Input/Output Operations",
        "Exception Handling",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Many are related to array manipulation using System.Array methods like `arraycopy`, `copyOfRange`, `sort`, and `checkOffsetAndCount`.  Data structures such as `HashMap`, `Hashtable`, `List`, and `PagedList` are used extensively.  Input/output operations are evident through `read`, `write`, `System.in`, `System.out`, and exception handling is shown with `try-catch` blocks and exceptions like `IOException`, `OutOfMemoryError`, `IllegalArgumentException`, etc.  Utility functions from `System`, `Math`, and `Objects` are also used."
    }
  },
  {
    "c94": {
      "Unique tokens": [
        ".",
        "new",
        "token",
        "0",
        "JJCalls",
        "QueryParserTokenManager",
        "StandardSyntaxParserTokenManager",
        "[",
        "tm",
        "jj_ntk",
        "}",
        "jj_la1",
        "jj_2_rtns",
        "=",
        "]",
        ")",
        "int",
        "length",
        "(",
        "1",
        "token_source",
        "i",
        "for",
        "Token",
        "-",
        "jj_gen",
        ";"
      ],
      "Syntactic Label": "Parser Initialization and Reinitialization Methods",
      "Semantic Tags": [
        "Parser Initialization",
        "Lexical Analysis",
        "Syntax Analysis",
        "Token Management",
        "Compiler Construction"
      ],
      "Description": "The tokens represent elements of C# code involved in initializing and reinitializing a parser, likely part of a compiler or interpreter.  The code uses a token manager (QueryParserTokenManager, StandardSyntaxParserTokenManager) to manage tokens, and the methods handle different input types (CharStream, token manager).  The `new Token()` suggests creating a new token object.  The loops initialize arrays (`jj_la1`), possibly for lookahead in parsing. `jj_2_rtns` might be related to handling nested calls. The overall structure is consistent with the initialization phase of a recursive descent parser or similar parsing technique."
    }
  },
  {
    "c95": {
      "Unique tokens": [
        "",
        "0xFF",
        "40",
        "30",
        "null",
        ",",
        "100",
        "39",
        "6",
        "256",
        "0x00",
        "0",
        "13",
        "+",
        "128",
        "2",
        "?",
        "\\0",
        "255",
        "}",
        ";",
        "{",
        "23",
        "false",
        "]",
        "0.0",
        ":",
        "48",
        "32",
        ")",
        "0x01",
        "4",
        "10",
        "&&",
        "1",
        "0xf",
        "i",
        "170",
        "64",
        "8",
        "3"
      ],
      "Syntactic Label": "Literals, Variables, Operators, Method invocations, Control flow statements, Data structures",
      "Semantic Tags": [
        "Data Processing",
        "Algorithm Implementation",
        "Data Structures",
        "Input/Output Operations",
        "Control Flow"
      ],
      "Description": "The tokens represent a mix of literals (numeric, hexadecimal, character, boolean), variables (arrays, integers), operators (arithmetic, logical, bitwise), method invocations (e.g., Array.sort, String.length), control flow statements (if, while, for, switch), and data structures (arrays, lists, hashtables).  These elements are fundamental to C# programming and are used extensively in various algorithms and data processing tasks. The code snippets demonstrate common programming patterns such as array manipulation, string processing, data serialization, and algorithm implementation (e.g., finding the kth largest element, calculating checksums)."
    }
  },
  {
    "c96": {
      "Unique tokens": [
        "1L",
        "Math",
        "2",
        "?",
        "chars",
        "offsets",
        "<",
        "getValue",
        "long",
        "reader",
        ")",
        "int",
        "fileTime",
        "length",
        "entrySet",
        "buffer",
        "Integer",
        "KB",
        "-",
        "Float",
        "3",
        "2L",
        "null",
        ",",
        ">",
        "<=",
        "Arrays",
        "*",
        "==",
        "values",
        ">=",
        "4",
        "8L",
        "size",
        "for",
        "Map",
        "LittleEndian",
        "nameLen",
        ".",
        "return",
        "bytes",
        "new",
        "_format",
        "+",
        "copyToLength",
        "actualSize",
        "mem",
        "=",
        "Entry",
        "10",
        "P_SIZE",
        "scratch",
        "(",
        "Long",
        "/",
        "sizeOf",
        "!=",
        ";",
        "LONG_SIZE",
        "formats",
        "sizeInBytes",
        "Reader",
        "0",
        "lengths",
        "docs",
        "}",
        "Character",
        "{",
        "current",
        "1024",
        "]",
        "+=",
        ":",
        "fst",
        "&&",
        "entry",
        "fields",
        "64",
        "8",
        "super",
        "BYTES",
        "update",
        "info"
      ],
      "Syntactic Label": "C# Tokens and Operators in methods",
      "Semantic Tags": [
        "Memory Management",
        "Data Serialization",
        "File I/O",
        "Data Structures",
        "Algorithm"
      ],
      "Description": "The tokens represent a wide variety of C# language constructs used in methods focused on memory management (ramBytesUsed), data serialization (serialize), file I/O (read/write operations), data structures (Maps, Arrays), and algorithms (hashing, checksum calculation).  The code snippets show various operations on byte arrays, integers, longs, and other data types, indicating data processing and manipulation within the context of a larger application.  The presence of methods like ramBytesUsed suggests a focus on resource management and efficiency."
    }
  },
  {
    "c97": {
      "Unique tokens": [
        "Multiset",
        "stop",
        "remove",
        "float",
        "cras",
        ".",
        "return",
        "try",
        "setError",
        "sb",
        "throw",
        "_string",
        "_text",
        "_isHorizontallyFlipped",
        "unread",
        "new",
        "doc",
        "unused",
        "field_2_cell_offsets",
        "@SuppressWarnings",
        "termsToFind",
        "out",
        "[",
        "freeByteBlocks",
        "}",
        "case",
        "System",
        "{",
        ";",
        "blockSize",
        "crns",
        "fstReader",
        "IndexDiff",
        "else",
        "checkNotClosed",
        "RuntimeException",
        "byte",
        "WeightedTerm",
        "Object",
        "=",
        "break",
        "field_1_number_crn_records",
        "IdentityHashMap",
        ":",
        "while",
        "rawDataContainer",
        "this",
        "final",
        "expand",
        "tokens",
        ")",
        "_cfHeaders",
        "int",
        "ss",
        "skipBuffer",
        "newLength",
        "perThread",
        "(",
        "TermStates",
        "state",
        "count",
        "buffer",
        "logger",
        "field_2_num_unique_strings",
        "unfiltered",
        "add",
        "_list",
        "intervals",
        "output",
        "temp",
        "s0",
        "+=",
        "_breaks",
        "_colors",
        "if"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "Exception Handling",
        "File I/O",
        "Object Manipulation",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"try\", \"catch\", \"if\", \"else\", \"while\" and \"for\" control program flow.  Data structures are used extensively, including arrays (\"byte[]\", \"int[]\", \"double[]\"), collections (\"List\", \"Map\", \"Set\"), and custom classes (\"Multiset\", \"WeightedTerm\", etc.).  The code demonstrates exception handling (\"throw\", \"catch\"), file I/O operations (implied by file paths and stream manipulation), and object manipulation using the dot operator (\".\").  The semantic tags capture the essence of these diverse functionalities."
    }
  },
  {
    "c98": {
      "Unique tokens": [
        "args",
        "get",
        "nameLen",
        "rawBits",
        ".",
        ")",
        "unused",
        "(",
        ";",
        "hdr"
      ],
      "Syntactic Label": "Variable, Method, Field, Dot Operator, Parenthesis, Semicolon",
      "Semantic Tags": [
        "Data Input",
        "Record Processing",
        "Object Serialization",
        "File Parsing",
        "Data Structures"
      ],
      "Description": "The tokens represent a mix of variable names (args, nameLen, rawBits, hdr), method calls (get, readShort, readInt, etc.), field access (using the dot operator '.'), parentheses for method calls and array indexing, and semicolons as statement terminators.  These are fundamental elements in C# used extensively in object-oriented programming and data processing. The context shows that the code is likely part of a system that reads and processes data from a binary file (RecordInputStream), populating various fields of custom record objects.  The semantic tags reflect this data-centric nature of the code."
    }
  },
  {
    "c99": {
      "Unique tokens": [
        "off",
        "f",
        "defaultSize",
        "patternRuleIndex",
        "b",
        "idx",
        "dateFormat",
        "docFreq",
        "lowerInclusive",
        "ptr",
        "chars",
        "long",
        "oneChar",
        "rowTo",
        "ruleIndex",
        "expand",
        "length",
        "passageLen",
        "Integer",
        "boost",
        "firstSheetNumber",
        "upperInclusive",
        "x",
        "from",
        "pos",
        "loadBalancerPort",
        "data",
        "limit",
        "numShapeIdsUsed",
        "base",
        "surface",
        "args",
        "len",
        "[",
        "fs",
        "tokenType",
        "end",
        "y2",
        "byte",
        "validationType",
        "actionIndex",
        "lastCol",
        "readerIndex",
        "number",
        "ttype",
        "subFrom",
        "s1",
        "InputStream",
        "colIx",
        "TimeZone",
        "commit",
        "operator",
        "rowFrom",
        "bytes",
        "isLessThan",
        "backwardId",
        "v",
        "regions",
        "pictureIndex",
        "range",
        "minCount",
        "maxDoc",
        "d",
        "AnyObjectId",
        "in",
        "archiveId",
        "term",
        "Long",
        "message",
        "mode",
        "type",
        "valueCount",
        "definedNameIndex",
        "Resolution",
        "E",
        "location",
        "numArgs",
        "holder",
        "CmpOp",
        "rowIndex",
        "BytesRef",
        "readAheadLimit",
        "fv",
        "lexState",
        "image",
        "prohibited",
        "passageStart",
        "firstSheetIndex",
        "columnIndex",
        "ofKind",
        "sheetNames",
        "minVocabSymbol",
        "to",
        "version",
        "maskValue",
        "docId",
        "numShapedUsed",
        "pv",
        "date",
        "msecStep",
        "exp",
        "fromUser",
        "multiplier",
        "currentOff",
        "offset",
        "cfs",
        "nBits",
        "exists",
        "cost",
        "inc",
        "bufferSize",
        "ptgs",
        "perMin",
        "weight",
        "Date",
        "srcRowIndex",
        "formula2",
        "packedIntsVersion",
        "nameLen",
        "maxDenominator",
        "instanceCount",
        ".",
        "FS",
        "is",
        "partNumber",
        "norm",
        "field",
        "endOffset",
        "rowIx",
        "arg0",
        "rate",
        "key",
        "maxNumTerms",
        "colTo",
        "detectBinary",
        "cnt",
        "errorCode",
        "refIndex",
        "Analyzer",
        "row",
        "fragmentSize",
        "min",
        "r",
        "offsetLimit",
        "inCore",
        "ch",
        "reason",
        "y",
        "exactDenom",
        "denominator",
        "relativeColumnIndex",
        "progress",
        "username",
        "value",
        "score",
        "termsFilePointer",
        "indexField",
        "object",
        "crossValidationRatio",
        "nper",
        "startIndex",
        "suffix",
        "postings",
        "codePointOffset",
        "interval",
        "val",
        "formula1",
        "bitsPerValue",
        "bucketSstOffset",
        "streamPos",
        "findTokens",
        "<",
        "relativeRowIndex",
        "append",
        "includeOrig",
        "startOffset",
        "freqs",
        "midIx",
        ",",
        "isProtected",
        "obj",
        ">",
        "nRules",
        "bytesUsed",
        "maxLevels",
        "use1904windowing",
        "fieldOp",
        "complexSize",
        "resolution",
        "enabled",
        "minSkipCount",
        "double",
        "status",
        "pathMode",
        "lastSheetNumber",
        "p",
        "boolean",
        "objectCount",
        "description",
        "dist",
        "tz",
        "Comparator",
        "id",
        "x2",
        "roundSeconds",
        "externalWorkbookNumber",
        "word",
        "o2",
        "docID",
        "externNameIndex",
        "sheetIndex",
        "Boolean",
        "QueryBuilder",
        "instancePort",
        "RevTree",
        "outermostPrecedenceReturn",
        "externIdx",
        "lastColumnNumber",
        "y1",
        "Directory",
        "RevCommit",
        "numberOfRegions",
        "scaleY",
        "prefix",
        "hidden",
        "out",
        "Lexer",
        "List",
        "totalTermFreq",
        "externSheetIndex",
        "precedence",
        "quoted",
        "positionSensitive",
        "readlimit",
        "sheetNumber",
        "estimatedSegmentSize",
        "maxTokenType",
        "count",
        "column",
        "defVal",
        "CharSequence",
        "skip",
        "until",
        "lastColumnIndex",
        "forwardId",
        "words",
        "maxScan",
        "array",
        "stop",
        "reverse",
        "counter",
        "StringBuilder",
        "alt",
        "element",
        "analyzer",
        "maxDocsToCache",
        "short",
        ")",
        "force",
        "ord",
        "int",
        "str",
        "tree",
        "seed",
        "wordId",
        "s2",
        "cacheScores",
        "initialPosition",
        "exportAll",
        "topN",
        "srcCellCol",
        "Object",
        "float",
        "ref",
        "delegate",
        "visibilityTimeout",
        "l",
        "label",
        "size",
        "fragCharSize",
        "returnState",
        "propertyValue",
        "Map",
        "letChildReport",
        "pipeSize",
        "thresh",
        "lowFreqCutoff",
        "treeId",
        "char",
        "shardIndex",
        "index",
        "queueControl",
        "delta",
        "col",
        "colFrom",
        "objType",
        "Set",
        "expiredHours",
        "forward",
        "maxCount",
        "height",
        "OutputStream",
        "operatorType",
        "i",
        "inCoreLimit",
        "ignoreCase",
        "arg1",
        "Counter",
        "subTo",
        "start",
        "c",
        "per",
        "ValueEval",
        "numPayloadsSeen",
        "srcColumnIndex",
        "]",
        "cmd",
        "maxElement",
        "phraseID",
        "subIndex",
        "defaultField",
        "T",
        "operands",
        "numberVE",
        "String",
        "FileMode",
        "initSize"
      ],
      "Syntactic Label": "Variables, parameters, and identifiers",
      "Semantic Tags": [
        "Data Structures",
        "Object Attributes",
        "Method Parameters",
        "Control Flow",
        "Data Processing"
      ],
      "Description": "The tokens represent a wide variety of elements in C# code.  'off', 'f', 'defaultSize', etc., are identifiers often used as variables or method parameters.  Their specific roles depend heavily on the surrounding code, but they generally represent data values or control aspects of the program's execution.  The context sentences show these tokens being used in method signatures, assignments, and conditional statements, indicating their use in defining objects, passing data, and controlling program flow.  In the context of C#, understanding these tokens is crucial for comprehending the data structures, object attributes, and logic of the program."
    }
  },
  {
    "c100": {
      "Unique tokens": [
        ".",
        "ArrayUtil",
        "EvaluationException",
        "CountUtils",
        "BoolEval",
        "BaseNumberUtils",
        "StatsLib",
        "DirectoryReader",
        "RefList",
        "StringUtil",
        "Math",
        "RawParseUtils",
        "Collections",
        "NB",
        "TextFunction",
        "Utils",
        "Imaginary",
        "NumericFunction",
        "AnimationUtils",
        "OperandResolver",
        "LocaleUtil",
        "LookupUtils",
        "NumberEval",
        "ErrorEval",
        "(",
        "DOMUtils",
        "Constants",
        "DateUtil",
        "CodecUtil",
        "ByteBlockPool",
        "ReaderUtil",
        "SystemReader",
        "_evaluator",
        "LittleEndian"
      ],
      "Syntactic Label": "Identifiers, Utility Classes, Operators, Exception Handling, Method Calls",
      "Semantic Tags": [
        "Data Processing",
        "String Manipulation",
        "Mathematical Operations",
        "Exception Handling",
        "File I/O"
      ],
      "Description": "The tokens represent a collection of C# identifiers that refer to utility classes (e.g., ArrayUtil, StringUtil, Math, RawParseUtils), operators (e.g., '.' for member access), exception handling (EvaluationException), and method calls. These elements are commonly used in C# programming for various tasks, including data processing, string manipulation, mathematical calculations, error handling, and file input/output operations.  The context sentences show these tokens being used in a variety of functions, suggesting a larger application or library."
    }
  },
  {
    "c101": {
      "Unique tokens": [
        "f",
        "mEdgeScaleY",
        "j",
        "Math",
        "distance",
        "++",
        "by-time",
        "deltaDistance",
        "searchTime",
        "mGlowScaleYFinish",
        "<",
        "mGlowAlpha",
        "getMRR",
        ")",
        "int",
        "length",
        "mGlowAlphaFinish",
        "-",
        "recall",
        "mEdgeAlpha",
        "mDuration",
        "if",
        ",",
        ">",
        "mrr",
        "mGlowAlphaStart",
        "stat2",
        "abs",
        "[",
        "docNamesExtractTime",
        "msec",
        "maxGoodPoints",
        "*",
        "==",
        "mEdgeAlphaFinish",
        "float",
        "queries!",
        "getCount",
        "pAt",
        "getAvp",
        "*=",
        "\\\"",
        "mEdgeAlphaStart",
        "1",
        "getPrecisionAt",
        "for",
        ".",
        "return",
        "+",
        "good",
        "countsByTime",
        "numGoodPoints",
        "step",
        "PULL_DISTANCE_GLOW_FACTOR",
        "pReleventSum",
        "=",
        "mStartTime",
        "PULL_DISTANCE_ALPHA_GLOW_FACTOR",
        "glowChange",
        "stats",
        "Fishy:",
        "assert",
        "docNameExtractTime",
        "(",
        "i",
        "no",
        "n",
        "MAX_ALPHA",
        "elapsed",
        ";",
        "\"",
        "max",
        "min",
        "mGlowScaleY",
        "0",
        "mPullDistance",
        "/=",
        "different",
        "}",
        "avg",
        "mGlowScaleYStart",
        "{",
        "getElapsed",
        "numPoints",
        "]",
        "+=",
        ":",
        "&&",
        "mEdgeScaleYFinish",
        "m",
        "count",
        "mEdgeScaleYStart",
        "PULL_DISTANCE_EDGE_FACTOR",
        "MAX_GLOW_HEIGHT"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Statistical Calculation",
        "Performance Measurement",
        "Data Aggregation",
        "Assertion",
        "String Manipulation"
      ],
      "Description": "The tokens represent a mix of variables, operators, method calls, and control flow statements within C# code snippets focused on statistical analysis and performance evaluation.  The code performs calculations (addition, division, averaging), uses assertions for error handling, and manipulates strings for output.  The semantic tags reflect the core functionalities observed across the provided code examples."
    }
  },
  {
    "c102": {
      "Unique tokens": [
        "paths",
        "field_3_width",
        "maxTokenPosition",
        "indexIsCurrent",
        "setDx2",
        "++",
        "docFreq",
        "_objRecord",
        "treeStart",
        "<",
        "setDx1",
        "delimiter",
        "break",
        "append",
        "pattern",
        "int",
        "length",
        "modCount",
        "cbHdrData",
        "components",
        "buffer",
        "_optRecord",
        "tree",
        "typeMatch",
        "allocate",
        "reserved",
        "inject",
        "group",
        "if",
        "null",
        "Hashtable",
        "try",
        "sb",
        "dictionaryFiles",
        "BlockTermState",
        "setAllocatedStorage",
        "CommonObjectDataSubRecord",
        "field_2_y",
        "bytesUsed",
        "wordFiles",
        "setFollowFileRenames",
        "stopTagFiles",
        "field_3_seriesNumber",
        "field_5_colourPaletteIndex",
        "encoderClass",
        "setLeaf",
        "Arrays",
        "getRunData",
        "end",
        "setHorizontalAlignment",
        "seekPending",
        "articlesFile",
        "fieldNames",
        "autoKiller",
        "payload",
        "this",
        "stringPattern",
        "field_3_weight",
        "ref",
        "Credential",
        "_numStrings",
        "rows",
        "pendingPairs",
        "decisions",
        "s",
        "DFA",
        "_children",
        "t",
        "for",
        "Token",
        "slice",
        ".",
        "return",
        "throw",
        "elementCount",
        "k",
        "groupsSeen",
        "grbitFrt",
        "stopTypesFiles",
        "preserveOriginal",
        "setDy2",
        "maxTokenCount",
        "bytesStart",
        "strkey",
        "_value",
        "toString",
        "commonWordFiles",
        "add",
        "=",
        "cod",
        "sheetIndex",
        "isf_sharedFeatureType",
        "while",
        "final",
        "field_2_top_col_gutter",
        "newElements",
        "stemDerivational",
        "key",
        "assert",
        "(",
        "d",
        "queue",
        "field_3_string",
        "initRevPool",
        "i",
        "term",
        "field_4_height",
        "ignoreCase",
        "setDy1",
        ";",
        "field_2_cell_offsets",
        "inputDir",
        "Iterator",
        "switch",
        "setString",
        "field_5_reserved",
        "max",
        "min",
        "0",
        "_options",
        "format",
        "r",
        "start",
        "idBuf",
        "List",
        "System",
        "}",
        "posTaggerModelFile",
        "case",
        "rgbHdrData",
        "_numUniqueStrings",
        "maxTokenLength",
        "{",
        "useWhitelist",
        "field_2_seriesIndex",
        "field_4_formatFlags",
        "setVerticalAlignment",
        "totalTermFreq",
        "pool",
        "consumeAllTokens",
        "remaining",
        ":",
        "currentToken",
        "numDecisions",
        "keepFile",
        "&&",
        "convertToEscherRecords",
        "treeEnd",
        "subtreeId",
        "replacement",
        "thread",
        "field_4_format",
        "field_4_last_col",
        "a",
        "fieldsData",
        "super",
        "replaceAll",
        "String",
        "hashHalfSize",
        "ids",
        "md",
        "maxCodeLength",
        "language"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "String Manipulation",
        "File I/O",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `for`, `while`, `switch`, `try`, `catch`, and `throw` control program flow. Data structures such as `List`, `Hashtable`, `Arrays`, `Dictionary`, `BitSet`, and `TreeSet` are used for data management. String manipulation is evident with tokens like `append`, `replaceAll`, `toString`, and string literals. File I/O operations are suggested by tokens related to file paths and streams. Exception handling is shown through `try`, `catch`, and exception types. The semantic tags capture the essence of these functionalities within the provided C# code snippets."
    }
  },
  {
    "c103": {
      "Unique tokens": [
        "offset",
        "stop",
        ",",
        "Ref",
        "E",
        "char",
        "URIish",
        "Cell",
        "min",
        "startIndex",
        "FS",
        "b",
        "Row",
        "xpath",
        "Properties",
        "val",
        "start",
        "BytesRef",
        "userData",
        "List",
        "green",
        "facetField",
        "title",
        "<",
        "newColumn",
        "text",
        "long",
        "V",
        "y",
        "ext",
        "byte",
        "expr1",
        "codec",
        "toIndex",
        "line",
        "short",
        "Object",
        "float",
        "final",
        "name",
        "int",
        "guess",
        "value",
        "red",
        "state",
        "double",
        "T",
        "output",
        "x",
        "Function",
        "boolean",
        "String",
        "part"
      ],
      "Syntactic Label": "Variables and Data Types",
      "Semantic Tags": [
        "Data Structures",
        "Primitive Types",
        "Object-Oriented Programming",
        "Data Processing",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a wide range of variables and data types commonly used in C# programming.  These include primitive types (int, long, float, double, byte, char, boolean), objects (String, Object, BytesRef, List, ObjectId, etc.), and identifiers representing variables and function names. The context sentences show these tokens being used in various data structures (arrays, lists), method parameters, and within the implementation of algorithms and data processing tasks.  The semantic tags reflect the overall usage of these tokens in the context of object-oriented programming and data manipulation within C#."
    }
  },
  {
    "c104": {
      "Unique tokens": [
        "0x15",
        "WORD_HIRAGANA",
        "TERM",
        "ENCODED_TYPE_TAG",
        "DOTLESS_YEH",
        "VALUE",
        "UNKNOWNRECORD",
        "OP_LE",
        "TEXT_LENGTH",
        "TYPE_UNMAPPABLE_CHAR",
        "ERROR",
        "MODIFIER_LETTER",
        "VALUE_INVALID",
        "NA",
        "LOWER",
        "DECIMAL",
        "DIV0",
        "ALEF_HAMZA_BELOW",
        "QUOTED",
        "EMOJI_SEQUENCE_STATUS",
        "HIRAGANA",
        "OP_EQ",
        "ATTRIBUTE",
        "OVERFLOW",
        "0x08",
        "NUMBER",
        "DAMMATAN",
        "LOWERCASE_LETTER",
        "OBJ_COMMIT",
        "LOCALELOCAL",
        "RAW",
        "REGULAR_FILE",
        "TYPE_COMMIT",
        ")",
        "REJECTED",
        "ALPHA",
        "NAME",
        "UNKNOWN",
        "REMOTE",
        "TITLE_FIELD",
        "ALEF_HAMZA_ABOVE",
        "FULLWIDTH_STRING",
        "INDIRECT",
        "KEY_PUSH",
        "DAMMA",
        "PLUS_LOOP_BACK",
        "ITEM_PATTERN",
        "WORD_NUMBER",
        "NOT_FOUND",
        "FATHA",
        "END",
        "RETRY",
        "BLOCK_START",
        "EOF",
        "NO_FONT",
        "NULL",
        "WORD_HANGUL",
        "INSIDE",
        "BLIP_PNG",
        "OR",
        "RANGEEX_START",
        "SURROGATE",
        ",",
        "OBJ_TREE",
        "OP_NE",
        "FILL_TYPE_SOLID",
        "OBJ_BLOB",
        "PACKED",
        "FOUND",
        "LETTER_NUMBER",
        "STAR_LOOP_ENTRY",
        "FULLWIDTH_NUMBER",
        "ALL",
        "45",
        "LOCAL",
        "NULL_INTERSECTION",
        "WILDCARD_STRING",
        "==",
        "OP_LT",
        "ALEF",
        "EXECUTABLE_FILE",
        "SHADDA",
        "WORD_KANA",
        "ENCLOSING_MARK",
        "code",
        "TEH_MARBUTA",
        "DIGIT",
        "NUM_ERROR",
        "NORMAL",
        "STATE_RECEDE",
        "BLIP_JPEG",
        "REJECTED_MISSING_OBJECT",
        "BLANK",
        "YEH",
        "NEW",
        "CREATE_NULL_AS_BLANK",
        "PLUS",
        "COMMON_DELIMITER",
        "YYINITIAL",
        "KEY_FETCH",
        "LPAREN",
        "QUOTE",
        "OTHER_NUMBER",
        "MOD_NOT",
        "IO_FAILURE",
        ".",
        "COMBINING_SPACING_MARK",
        "KASRATAN",
        "FAST_FORWARD",
        "IGNORE_ERRORS",
        "throw",
        "LOCALE",
        "LOCK_FAILURE",
        "UNDERFLOW",
        "REF_INVALID",
        "0x0A",
        "NO_MORE_DOCS",
        "NOT_ATTEMPTED",
        "SUM",
        "BLIP_EMF",
        "UPPER",
        "ENCODED_TYPE_BLOB",
        "OP_GE",
        "SEGMENTS",
        "[SHARED",
        "OTHER_LETTER",
        "RETURN_NULL_AND_BLANK",
        "FORMULA",
        "N_A",
        "NO_OUTPUT",
        "OBJ_TAG",
        "NOT",
        "WORD_EMOJI",
        "NYNORSK",
        "ALEF_MADDA",
        "RELATIVE",
        "BLIP_DIB",
        "STAR_LOOP_BACK",
        "WORD_IDEO",
        "NON_SPACING_MARK",
        "TYPE_OVERFLOW",
        "SUBWORD_DELIM",
        "NAME_INVALID",
        "PLUS_BLOCK_START",
        "STATE_PULL",
        "CARAT",
        "FATHATAN",
        ";",
        "\"",
        "ENCODED_TYPE_TREE",
        "AND",
        "SUBTOTAL",
        "ALL_LEGAL_ENCODER",
        "REJECTED_OTHER_REASON",
        "DELIMITER",
        "INTEGER",
        "STAR_BLOCK_START",
        "NUMERIC",
        "WORD_KATAKANA",
        "CREATE",
        "MINUS",
        "KASRA",
        "UPPERCASE_LETTER",
        "BLIP_PICT",
        "Unmappable-character",
        "RETURN_BLANK_AS_NULL",
        "BOOLEAN",
        "case",
        "FORCED",
        "BLIP_WMF",
        "ZERO",
        "DIV_ZERO",
        "AUTO_FOLLOW",
        "HEAD",
        "SINGLE",
        "SUKUN",
        "TITLECASE_LETTER",
        "ANY",
        "REF",
        "TYPE_BLOB",
        ":",
        "OP_NONE",
        "RANGEIN_START",
        "STRING",
        "DECIMAL_DIGIT_NUMBER",
        "WILDCARD_ESCAPE",
        "WORD_LETTER",
        "GITLINK",
        "NO_CHANGE",
        "OP_GT",
        "NUM",
        "&&",
        "STRING_NOT_PRESENT_LEN",
        "TREE",
        "ENCODED_TYPE_COMMIT",
        "SKIP_MISSING",
        "EMPTY",
        "TATWEEL",
        "TYPE_TREE",
        "CHOOSE",
        "WILDCARD_CHAR",
        "TYPE_TAG",
        "TYPE_UNDERFLOW"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Object Management",
        "Exception Handling",
        "Control Flow",
        "String Manipulation",
        "Data Processing"
      ],
      "Description": "The tokens represent a diverse set of C# language elements, including keywords (e.g., \"case\", \"switch\", \"throw\", \"return\"), operators (e.g., \"==\", \"+\", \".\", \"!\"), identifiers (e.g., \"lookupAny\", \"consume\", \"toString\", \"onPull\"), and literals (e.g., numbers, strings).  These tokens are used to construct various program structures, such as switch statements, conditional statements, loops, method calls, object creation, and exception handling. The semantic tags reflect the broad range of functionalities implemented using these tokens, encompassing object management, error handling, control flow mechanisms, string manipulation, and data processing operations."
    }
  },
  {
    "c105": {
      "Unique tokens": [
        "_ptgs",
        "f",
        "newId",
        "clean",
        "_nextIndex",
        "peeledObjectId",
        "oldId",
        "crc",
        "maxDeltaDepth",
        "length",
        "walker",
        "expectedOldObjectId",
        "pos",
        "limit",
        "rawPath",
        "missing",
        "deltaBaseCacheLimit",
        "daemon",
        "uri",
        "tagger",
        "_relativeDecimalExponent",
        "end",
        "defaultProvider",
        "false",
        "dataCategoryLabels",
        "regionEnd",
        "cardinality",
        "executor",
        "newHead",
        "getCellRange",
        "behindCount",
        "dryRun",
        "averageBytesPerChar",
        "mKeyProgressIncrement",
        "passwordVerifier",
        "canonicalName",
        "deltaSearchWindowSize",
        "field_1_hide_obj",
        "streamFileThreshold",
        "Host",
        "rightIds",
        "sessionToken",
        "forceUpdate",
        "storage",
        "UNSHALLOW",
        "elements",
        "seqName",
        "renameDetectionType",
        "db",
        "FormulaError",
        "signed",
        "promptText",
        "emailAddress",
        "message",
        "newState",
        "mode",
        "type",
        "deltaBase",
        "_externalBookRecord",
        "backingMap",
        "schemeSpecificPart",
        "top",
        "renameCallback",
        "requiresCommitBody",
        "entryCount",
        "field_1_calcmode",
        "12",
        "renameDetector",
        "regionStart",
        "rawOut",
        "newPack",
        "endA",
        "failingResult",
        "deltaCacheLimit",
        "getEffectivePort",
        "resultContents",
        "resultTree",
        "replacementChars",
        "constantName",
        "++",
        "refLogIdent",
        "oldPath",
        "pass",
        "globalListeners",
        "sequenceIndex",
        "peer",
        "WORD_COST",
        "beginB",
        "reuseDeltas",
        "totalSize",
        "reverseBinaryHunk",
        "repo",
        "_scenarioProtectRecord",
        "offset",
        "renameLimit",
        "requireEndImpl",
        "privateKeySecret",
        "shouldCreateEmptyCells",
        "RIGHT_ID",
        "first",
        "opaque",
        "averageCharsPerByte",
        "getName",
        "accessKeySecret",
        "timeout",
        "this",
        "_countRead",
        "host",
        "startWorkers",
        "fetchResult",
        "forwardBinaryHunk",
        ".",
        "user",
        "getTermText",
        "parser",
        "_value",
        "endOffset",
        "isEmpty",
        "configFile",
        "bundleClass",
        "getPrefix",
        "localName",
        "key",
        "publicKeyId",
        "removeFirstImpl",
        "trackingRefUpdate",
        "mThumbOffset",
        "state",
        "directory",
        "_in",
        "cnt",
        "resourceDescription",
        "valueSecure",
        "queryConfigHandler",
        "_rawData",
        "dataSecondaryCategoryLabels",
        "path",
        "acceptFormat",
        "retainBody",
        "0",
        "_errorEval",
        "_binaryExponent",
        "y",
        "capacity",
        "remaining",
        "hostName",
        "checkEofAfterPackFooter",
        "remoteName",
        "fragment",
        "getFontFormatting",
        "value",
        "score",
        "packedGitMMAP",
        "oldObjectId",
        "a",
        "headId",
        "object",
        "bigBlockSize",
        "expValue",
        "_formats",
        "_endIx",
        "position",
        "query",
        "startLine",
        "getFirstImpl",
        "fastForward",
        "<",
        "allowThin",
        "lineCount",
        "inputLength",
        "getAccessKeyId",
        "copy",
        "refCount",
        "buf",
        "deltaCompress",
        "legacyCredential",
        "startOffset",
        "oldValue",
        "group",
        "numNodes",
        "series",
        "desc",
        "indexId",
        ">",
        "bytesUsed",
        "batchUrl",
        "anchoringBounds",
        "_limit",
        "_highIx",
        "repository",
        "effectiveLocale",
        "newValue",
        "true",
        "enabled",
        "mark",
        "_fontName",
        "p",
        "indexReader",
        "expectDataAfterPackFooter",
        "factory",
        "thin",
        "credentials",
        "id",
        "lexerActionExecutor",
        "_offset",
        "overridable",
        "_countBytesWritten",
        "PACK_DELTA",
        "identityFile",
        "passphrase",
        "hitEndImpl",
        "strictHostKeyChecking",
        "cache",
        "currentState",
        "sharedContextCache",
        "getPreferredSize",
        "depth",
        "stopNow",
        "regionId",
        "accessKeyId",
        "refLogIncludeResult",
        "input",
        "port",
        "numDataNodes",
        "get",
        "mergeResult",
        "headerValue",
        "_formula",
        "sch",
        "removeLastImpl",
        "receivePack",
        "fSD",
        "bigFileThreshold",
        "count",
        "column",
        "flags",
        "deltaCacheSize",
        "command",
        "endB",
        "pointer",
        "dataValues",
        "REINTERESTING",
        "replacementBytes",
        "packedGitLimit",
        "matchingGroupHeads",
        "tzOffset",
        "noPrefix",
        "_lowIx",
        "newObjectId",
        "frozen",
        "_significand",
        "indexVersion",
        "newMode",
        "attributes",
        "reader",
        "LEFT_ID",
        "pattern",
        ")",
        "force",
        "pathFilter",
        "authority",
        "maxCharsPerByte",
        "_passwordRecord",
        "seed",
        "refLogMessage",
        "formatReferenceAsString",
        "null",
        "userAgentConfig",
        "remote",
        "getPatternFormatting",
        "begin",
        "nDeleted",
        "lockMessage",
        "locale",
        "groupCountImpl",
        "exportAll",
        "fetchedFrom",
        "defaultPredicate",
        "name",
        "charsetName",
        "delegate",
        "ref",
        "monitor",
        "srcRef",
        "decisions",
        "options",
        "s",
        "target",
        "FORMAT_OTHER",
        "1",
        "size",
        "_validationType",
        "nextPos",
        "getHostName",
        "threads",
        "pathOffset",
        "tag",
        "index",
        "password",
        "16",
        "remoteTrackingBranch",
        "nAdded",
        "scheme",
        "hide",
        "subscriptionId",
        "lastLength",
        "w",
        "beginA",
        "needleString",
        "start",
        "typeName",
        "c",
        "resultPath",
        "title",
        "mSize",
        "resourceBundle",
        "preferredAuthentications",
        "compressionLevel",
        "entry",
        "hasNext",
        "rawIn",
        "traverseEmptyCells",
        "update",
        "dgg",
        "newPath"
      ],
      "Syntactic Label": "Getter Methods",
      "Semantic Tags": [
        "Data Access",
        "Object State Retrieval",
        "Property Access",
        "API Design",
        "Information Retrieval"
      ],
      "Description": "The tokens represent getter methods in C#, providing access to the internal state of various objects.  They are crucial for encapsulating data and providing a controlled way to retrieve information from objects, which is a fundamental aspect of object-oriented programming. The methods return various data types, including primitive types (int, long, boolean), objects (ObjectId, String, etc.), and arrays (byte[])."
    }
  },
  {
    "c106": {
      "Unique tokens": [
        "2.0",
        "bounds",
        "row1",
        "6",
        "setDx2",
        "0x7FFFFFFF",
        "2",
        "xmid",
        "HSSFFont",
        "green",
        "dx2",
        "setDx1",
        "short",
        "gridH",
        ")",
        "int",
        "levelW",
        "length",
        "str",
        "setRow2",
        "find",
        "pref",
        "getMaxX",
        "1023",
        "0x00000001",
        "-",
        "x",
        "levelH",
        "addToAll",
        ",",
        "field_12_zero5",
        "getRed",
        "excelFont",
        "shape",
        "[",
        "255",
        "y2",
        "*",
        "ymax",
        "x1",
        "verticalPixelsPerPoint",
        "free",
        "false",
        "setCol2",
        "setFillColor",
        "getGreen",
        "s",
        "true",
        "xmin",
        "foreground",
        "right",
        "anchor",
        "1",
        "0x0001",
        "double",
        "getDy2",
        "for",
        ".",
        "col1",
        "new",
        "getBlue",
        "x2",
        "+",
        "setDy2",
        "getCol2",
        "font",
        "setShort",
        "width",
        "-=",
        "ymin",
        "=",
        "height",
        "getRow1",
        "ymid",
        "HSSFChildAnchor",
        "setRow1",
        "(",
        "d",
        "i",
        "setInt",
        "checkRange",
        "OFFSET_NOT_USED1",
        "setPoints",
        "hssfFont",
        "/",
        "setDy1",
        ";",
        "getMinY",
        "\"",
        "setLineStyle",
        "getMaxY",
        "gridW",
        "0x00000000",
        "y1",
        "0",
        "bottom",
        "}",
        "col2",
        "setLineStyleColor",
        "dy1",
        "top",
        "blue",
        "y",
        "12",
        "LINESTYLE_NONE",
        "row2",
        "setCol1",
        "red",
        "yPoints",
        "getMinX",
        "textbox",
        "getRow2",
        "Arial",
        "left"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Shape Drawing",
        "Spreadsheet Manipulation",
        "Color Management",
        "Font Formatting",
        "Data Serialization"
      ],
      "Description": "The tokens represent a mix of data types (int, short, double, boolean), variables (row1, col2, xPoints, yPoints), method calls (setAnchor, drawString, fillPolygon, findColor, etc.), constants (LINESTYLE_NONE, 0x7FFFFFFF), and operators (+, -, *, /, =, ., etc.).  These are used in the context of manipulating spreadsheet data (HSSF), drawing shapes, managing colors, and formatting fonts within a spreadsheet or similar document.  The methods suggest actions related to setting properties of shapes, text boxes, and cells, and the data types and variables are used to represent coordinates, colors, font styles, and other attributes. The serialization method suggests writing data to an output stream."
    }
  },
  {
    "c107": {
      "Unique tokens": [
        "null",
        ",",
        "rt",
        ".",
        "putCompressedUnicode",
        "0x00",
        "reserved2",
        "intValue",
        "StringUtil",
        "writeShort",
        ">",
        "0",
        "?",
        "val",
        "out",
        "if",
        "}",
        "getName",
        "fontNameLen",
        "{",
        "_regions",
        "else",
        "=",
        ":",
        "reserved1",
        ")",
        "0x01",
        "int",
        "length",
        "(",
        "writeByte",
        "write",
        "serialize",
        "for",
        "putUnicodeLE",
        "hasMultibyte",
        "boolean",
        "field_11_font_name",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in Serialization Methods",
      "Semantic Tags": [
        "Data Serialization",
        "Binary Data Output",
        "LittleEndian Encoding",
        "File Writing",
        "C# I/O Operations"
      ],
      "Description": "The tokens represent a variety of C# language constructs used within the context of serializing data to a LittleEndianOutput stream.  These include keywords (if, else, for), operators (=, !=, >, ., ), data types (int, boolean, byte[], String), method calls (e.g., writeShort, writeByte, writeInt, putUnicodeLE, putCompressedUnicode, serialize), and identifiers representing variables and fields. The overall semantic significance lies in the structured writing of binary data, likely for file storage or network transmission, using a specific byte order (LittleEndian). The StringUtil class suggests helper functions for string encoding and handling."
    }
  },
  {
    "c108": {
      "Unique tokens": [
        "\"",
        "JGitText",
        "ruleNames",
        "null",
        ",",
        ".",
        "try",
        "GroupQueryNode",
        "return",
        "EXTRA",
        "throw",
        "_frAggs",
        "toUpperCase",
        "FS",
        "new",
        ">",
        "+",
        "++",
        "?",
        "2",
        "unknownObjectType2",
        "opnds",
        "0x00FF",
        "'",
        "}",
        "getName",
        "<<",
        "equals",
        "{",
        ";",
        "16",
        "==",
        "false",
        "]",
        "MIN_VALUE",
        ":",
        "this",
        "append",
        ")",
        "int",
        "4",
        "buf",
        "getRowSumsBelow",
        "true",
        "(",
        "Repository",
        "d",
        "write",
        "value",
        "getFirstRow",
        "1",
        "\\n",
        "expectedChecksum",
        "NONE",
        "instanceof",
        "-",
        "8",
        "n",
        ".activecellrow",
        "typeHint",
        "HexDump",
        "!=",
        "if"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "File I/O",
        "Object Serialization",
        "String Manipulation",
        "Code Compilation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"try\", \"catch\", \"throw\", \"return\" are crucial for exception handling and control flow.  Tokens like \".\", \"+\", \"++\", \"==\", \"!=\" are operators for various operations.  The presence of \"StringBuilder\" indicates string manipulation. Tokens like \"new\", \"write\", \"serialize\" suggest object creation, file I/O, and data serialization.  The tokens \"compile\", \"tokenize\", \"ParseTree\" point to code compilation and parsing activities. The overall code snippets seem to deal with various aspects of data processing, potentially involving file I/O, string manipulation, and object serialization."
    }
  },
  {
    "c109": {
      "Unique tokens": [
        "\"",
        "null",
        "setError",
        "return",
        "needleString",
        "default",
        "elsecurLexState",
        "if",
        "}",
        "close",
        "case",
        "'",
        "{",
        "else",
        "=",
        "break",
        ":",
        ")",
        "int",
        "_pattern",
        "true",
        "(",
        "records",
        "size",
        "for",
        "END",
        "elsediff",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Conditional Logic",
        "Looping",
        "Data Structures",
        "Return Values"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `for`, `switch`, `case`, and `return` control program flow and implement conditional and iterative logic. Symbols such as `=`, `(`, `)`, `{`, `}`, `:` and `,` are essential for syntax and structure. Data types like `int` and `byte[]` define variables.  `null` represents the absence of a value. The identifiers (`needleString`, `_pattern`, etc.) are names given to variables and methods. The presence of `records` suggests the use of C# records. The overall code snippets demonstrate fundamental programming constructs in C#."
    }
  },
  {
    "c110": {
      "Unique tokens": [
        "executeGetExport",
        "executeGetTemplate",
        "executeGetTags",
        "executeCreateStage",
        "executeDeleteDocument",
        "removePermission",
        "executeDeleteUser",
        "executeUpdateTemplate",
        "executeCreateJob",
        "executeListTypes",
        "executeGetFacet",
        "executeListScripts",
        "executeDescribeAddress",
        "executeCreateDBInstance",
        "executeGetNode",
        "executeDeleteQueue",
        "executeUpdateFileSystem",
        "executeListStacks",
        "executeDescribeSolution",
        "executeUpdateStack",
        "executeGetProposal",
        "executeDescribeChangeSet",
        "executeCreateLag",
        "executeGetAccount",
        "executeDeleteRepository",
        "executeDeleteProfile",
        "executeGetJobOutput",
        "executeDeleteDomainName",
        "executeDeleteMessage",
        "executeGetDomains",
        "executeGetAddressBook",
        "executeUpdateDataSet",
        "executeDescribeRule",
        "executeUpdateIntegration",
        "executeDeleteResource",
        "executeGetApp",
        "executeDescribeStep",
        "sendMessage",
        "executeDeleteGlobalCluster",
        "executeDeleteFilter",
        "executeDeleteStack",
        "executeListAliases",
        "executeCreateParameterGroup",
        "listQueues",
        "executeGetSegments",
        "executeListShards",
        "executeDescribeOrganization",
        "executeUpdateNotebookInstance",
        "executeDeleteStream",
        "executeDeleteGraph",
        "executeDescribeIdentity",
        "executeGetInvalidation",
        "receiveMessage",
        "executeDescribeComponent",
        "executeDeletePreset",
        "executeCreateRoute",
        "executeCreateGameSession",
        "executeCreateFacet",
        "executeDeletePipeline",
        "executeDeleteFileSystem",
        "executeCreateIdentityPool",
        "executeCreateHIT",
        "executeListEnvironments",
        "executeCreateBot",
        "executeDeleteAuthorizer",
        "executeDeleteKeyPair",
        "executeListOperations",
        "executeCreateService",
        "executeListCollections",
        "deleteMessageBatch",
        "executeListApps",
        "executeDeleteSubnet",
        "executeUpdateModel",
        "executeGetVariables",
        "executeGetConfiguration",
        "executeGetApiKey",
        "executeUpdateCluster",
        "executeCreateAuthorizer",
        "executeDeleteMethod",
        "executeDeleteCluster",
        "executeUpdateConfiguration",
        "executeDeleteFleet",
        "executeGetModel",
        "executeCreateSubnet",
        "executeGetDirectory",
        "executeCreateApplication",
        "executeDeletePolicy",
        "executeDescribeBuild",
        "executeDescribeAlgorithm",
        "executeUpdateStage",
        "executeDescribeGroups",
        "scan",
        "getQueueAttributes",
        "executeGetProfile",
        "executeDescribeActivities",
        "executeGetBundles",
        "executeDeleteIdentityPool",
        "executeCreateNode",
        "executeListAttributes",
        "executeDeleteParameterGroup",
        "createQueue",
        "executeGetResource",
        "executeDescribeServices",
        "executeGetStage",
        "executeListSteps",
        "executeDescribeDataset",
        "executeCreateConfiguration",
        "executeGetStages",
        "executeCreateHostedZone",
        "executeCreateGlobalCluster",
        "executeUpdateSegment",
        "executeDeleteRoute",
        "executeDeleteHostedZone",
        "executeListClusters",
        "executeCreateDashboard",
        "executeDescribeIdentityPool",
        "executeDescribeDevice",
        "executeDeleteBackup",
        "executeDescribeMatchmaking",
        "executeListQueues",
        "executeUpdateBuild",
        "executeDeleteLoadBalancer",
        "executeCreateLoadBalancer",
        "executeGetInstanceState",
        "executeCreateFleet",
        "executeUpdateRecords",
        "executeDeleteArchive",
        "executeCreatePreset",
        "executeDescribeLoadBalancers",
        "executeUpdateScript",
        "executeDeleteLag",
        "executeCreateModel",
        "executeUpdateApi",
        "executeDeleteApi",
        "executeUpdatePipeline",
        "executeCreatePublicKey",
        "executeGetAuthorizer",
        "executeDescribeUpdate",
        "executeCreateInterconnect",
        "executeGetFolderPath",
        "executeCreateRelationalDatabase",
        "executeCreateProposal",
        "executeDeleteResolverRule",
        "executeDeleteService",
        "executeUpdateDevice",
        "executeDeleteDistribution",
        "executeListSkills",
        "executeDeleteDashboard",
        "executeDescribeStorage",
        "executeUpdateDataSource",
        "executeGetId",
        "executeListSchemas",
        "executeCreateObject",
        "executeListModels",
        "executeDescribeDataSource",
        "executeDeleteIntegration",
        "executeDeleteComponent",
        "executeDeleteAlgorithm",
        "executeCreateGraph",
        "executeListFindings",
        "executeGetNetwork",
        "executeGetDocument",
        "executeDeleteInstance",
        "executeGetHealthCheck",
        "executeGetInstance",
        "executeCreateAddress",
        "executeGetHIT",
        "executeDescribeStream",
        "executeUpdateSchema",
        "executeCreateSolution",
        "executeCreateVoiceConnector",
        "executeGetRules",
        "executeGetChange",
        "executeListGroups",
        "executeGetDetector",
        "executeUpdatePublicKey",
        "executeDeleteAddressBook",
        "executeDeleteSegment",
        "executeCreateVolume",
        "executeUpdateDestination",
        "executeUpdateIdentityPool",
        "executeDescribeFleets",
        "executeGetUser",
        "executeDescribeCertificates",
        "executeCreateRule",
        "executeCreateAccount",
        "executeDescribeCampaign",
        "executeGetUsage",
        "executeUpdateEnvironment",
        "executeCreateVault",
        "updateTable",
        "executeDescribePolicies",
        "executeDeleteSchema",
        "executeCreateDomainName",
        "executeCreateHealthCheck",
        "executeCreateBackup",
        "executeGetDigest",
        "executeListPresets",
        "executeDescribeHosts",
        "executeDescribeUsers",
        "executeUpdateResource",
        "executeCreateInvalidation",
        "executeDeleteDeliveryStream",
        "executeDeleteIdentities",
        "executeDeleteAlias",
        "executeCreateNamedQuery",
        "executeDeleteTags",
        "executeDescribeEndpoint",
        "executeDescribeGroup",
        "executeUpdateService",
        "executeDescribeCollection",
        "executeUpdateFilter",
        "executeListIndex",
        "executeCreateDeployment",
        "executeDescribeLedger",
        "executePredict",
        "executeDeleteVpc",
        "executeDescribeModel",
        "executeDescribeBackups",
        "executeDescribeSchema",
        "executeUpdateMember",
        "executeListMembers",
        "executeDeleteFolder",
        "executeCreateIntegration",
        "executeDeleteFaces",
        "executeGetConfigurationSet",
        "executeCreateDeliveryStream",
        "executeDescribeBroker",
        "executeUpdateComponent",
        "executeSearch",
        "executeDeleteIdentity",
        "executeDeleteComment",
        "executeCreateSchema",
        "executeGetStatus",
        "executeDescribeConfigurationSet",
        "executeListStreams",
        "executeUpdateDomainName",
        "executeCreateApp",
        "executeUpdateFleet",
        "executeDescribeSecurityGroups",
        "executeGetLoadBalancer",
        "executeDeletePhoneNumber",
        "executeDescribeInstances",
        "executeListTasks",
        "executeCreateAddressBook",
        "executeDescribeNotebookInstance",
        "executeGetLexicon",
        "executeDescribeAccount",
        "executeDeleteDBCluster",
        "executeUpdateFacet",
        "executeDeleteMember",
        "executeListMetrics",
        "executeGetLoadBalancers",
        "executeDescribeApp",
        "executeGetApi",
        "executeListFleets",
        "executeGetPhoneNumber",
        "executeGetDomainName",
        "executeCreateSnapshot",
        "executeDescribeLimits",
        "executeDeleteExpression",
        "executeDeleteFacet",
        "executeDescribeTemplate",
        "executeDescribeResource",
        "executeListOrganizations",
        "executeDeleteFleets",
        "executeGetChannels",
        "executeGetGateway",
        "executeDeleteDomain",
        "executeGetMedia",
        "executeUpdateRoom",
        "executeListInstances",
        "executeListRules",
        "executeUpdateExperiment",
        "executeCreateNetwork",
        "executeCreateInstances",
        "executeCreateMembers",
        "executeUpdateBot",
        "executeDescribeWorkspaces",
        "executeGetDeployments",
        "executeGetOperation",
        "executeCreateCluster",
        "executeCreateComment",
        "executeGetInstances",
        "executeDeleteLexicon",
        "executeCreateStack",
        "executeGetResolverRule",
        "executeDescribeSubnets",
        "executeCreateTags",
        "executeCreateSubnetGroup",
        "executeDeleteScript",
        "executeCreateResource",
        "executeListAlgorithms",
        "executeCreateDataSource",
        "executeListParts",
        "executeGetRelationalDatabase",
        "executeUpdateUser",
        "executeDescribeWorkflowExecution",
        "executeCreateApiKey",
        "sendMessageBatch",
        "executeUpdateRelationalDatabase",
        "executeUpdateGameSession",
        "executeCreateDetector",
        "executeGetIntegration",
        "executeDeleteConfigurationSet",
        "executeDescribeJob",
        "executeDescribeComments",
        "executeGetFilter",
        "executeDescribeParameters",
        "executeSelect",
        "executeUpdateProfile",
        "executeCreateCampaign",
        "executeUpdateGroup",
        "executeUpdatePhoneNumber",
        "executeCreateUser",
        "executeGetRevision",
        "executeGetEndpoint",
        "executeDescribeRegions",
        "executeUpdateJob",
        "executeCreateTemplate",
        "executeCreateSnapshots",
        "executeDeleteCollection",
        "executeDescribeProblem",
        "executeGetDataSource",
        "executeListUsers",
        "executeCreateImage",
        "executeDeleteDirectory",
        "executeGetConnection",
        "executeCreateKeyPair",
        "executeDescribeSnapshots",
        "executeUpdateLedger",
        "executeDeleteDevice",
        "executeDeleteApplication",
        "executeCreateAlias",
        "executeDeleteTrafficPolicy",
        "executeUpdateEvaluation",
        "executeCreateDataset",
        "executeGetMetricData",
        "executeCreateLabels",
        "executeDeleteStage",
        "executeDeleteModel",
        "executeCreateComponent",
        "executeCreateRepository",
        "executeCreateDBCluster",
        "executeDescribeExpressions",
        "executeGetRegions",
        "executeCreateConnection",
        "executeDeletePublicKey",
        "executeDeleteDataSet",
        "executeCreateLedger",
        "executeUpdateUsage",
        "executeDeleteDisk",
        "executeGetRoutes",
        "executeDeleteHIT",
        "executeDeleteCampaign",
        "executeUpdateAuthorizer",
        "executeUpdateNode",
        "executeDeleteEndpoint",
        "executeUpdateGateway",
        "executeDeleteRule",
        "executeGetRecords",
        "executeGetMethod",
        "executeCreateDirectConnectGateway",
        "executeGetModels",
        "executeCreateFolder",
        "executeGetPolicy",
        "executeCreateDistribution",
        "executeCreateResourceGroup",
        "executeDescribeStacks",
        "executeListImports",
        "executeListApplications",
        "executeListFilters",
        "executeDeleteConnection",
        "executeUpdateDetector",
        "executeDeleteExperiment",
        "executeDescribeEvents",
        "executeDeleteBroker",
        "executeDescribeEndpoints",
        "executeDescribeApplication",
        "executeGetResources",
        "executeDeleteNode",
        "executeDeleteRoom",
        "executeDeleteDBClusterSnapshot",
        "executeGetHostedZone",
        "executeUpdateVariable",
        "executeUpdateAddressBook",
        "executeListBuilds",
        "executeDescribeImages",
        "deleteMessage",
        "executeCreateStream",
        "executeListJobs",
        "executeCreateEvaluation",
        "executeCreateQueue",
        "executeGetDomain",
        "executeListUpdates",
        "executeDeleteChangeSet",
        "executeDeleteDirectConnectGateway",
        "executeGetContact",
        "executeCreateIndex",
        "changeMessageVisibility",
        "executeCreateApi",
        "executeDeleteContact",
        "executeDeleteEvent",
        "executeUpdateFolder",
        "executeGetPrediction",
        "executeDescribeConfiguration",
        "executeDescribeClusters",
        "executeCreateCollection",
        "executeGetMembers",
        "executeDeleteSnapshot",
        "executeDescribeUser",
        "executeDescribeDomains",
        "executeDeleteLabels",
        "executeUpdateResolverRule",
        "executeUpdateCampaign",
        "executeGetDisks",
        "executeGetRoom",
        "executeListAccounts",
        "executeGetAttributes",
        "executeUpdateDeployment",
        "executeCreateChangeSet",
        "executeUpdateAlias",
        "executeDeleteDeployment",
        "executeCreateProject",
        "executeGetDistribution",
        "executeCreateProfile",
        "executeListIdentities",
        "executeDescribeFindings",
        "executeListDeployments",
        "executeListRecords",
        "executeListExports",
        "executeListTags",
        "executeDescribeProjects",
        "executeListServices",
        "executeListNodes",
        "executeDescribeDomain",
        "executeCreateFileSystem",
        "executeDescribeLocations",
        "executeListDomains",
        "executeUpdateEndpoint",
        "executeDeleteNotebookInstance",
        "executeGetVoiceConnector",
        "executeGetApps",
        "executeCreateEndpoint",
        "executeDeleteVolume",
        "executeUpdateDomain",
        "executeGetDeployment",
        "listTables",
        "executeUpdateVoiceConnector",
        "executeCreateBuild",
        "executeDeleteAccount",
        "executeDeleteSolution",
        "executeDeleteAttributes",
        "executeDeleteTemplate",
        "executeUpdateSubnetGroup",
        "executeDescribeScript",
        "executeDeleteInterconnect",
        "executeDeleteBuild",
        "executeDescribeAddresses",
        "executeDescribeSessions",
        "executeDeleteDBInstance",
        "executeDescribeDeliveryStream",
        "executeGetTrafficPolicy",
        "executeUpdateBroker",
        "executeUpdateRoute",
        "executeGetCampaign",
        "executeDescribeCluster",
        "executeUpdateApplication",
        "executeListGateways",
        "describeTable",
        "executeCreateVpc",
        "executeCreateMember",
        "executeListDevices",
        "executeCreateContact",
        "executeUpdateDashboard",
        "executeGetKeyPair",
        "executeCreateDisk",
        "executeGetDevice",
        "executeUpdateLag",
        "executeGetSegment",
        "executeDescribeType",
        "executeDescribeTags",
        "executeGetEnvironment",
        "executeCreateGroup",
        "executeCreateNotebookInstance",
        "executeDeleteNetworkInterface",
        "executeDeleteLedger",
        "executeGetSdk",
        "executeListNetworks",
        "executeGetBot",
        "executeDeleteObject",
        "executeDeleteHealthCheck",
        "executeDescribeTasks",
        "executeDeleteSecurityGroup"
      ],
      "Syntactic Label": "Method Name",
      "Semantic Tags": [
        "Cloud Service Operations",
        "API Gateway",
        "Resource Management",
        "CRUD Operations",
        "AWS Service Integration"
      ],
      "Description": "These tokens represent methods in a C# AWS SDK client.  They are named according to the AWS API actions they execute, performing various Create, Read, Update, and Delete (CRUD) operations on different AWS resources. The methods likely handle requests and responses for interacting with various AWS services. The `execute...` prefix suggests a pattern of delegating the actual execution to another layer or component."
    }
  },
  {
    "c111": {
      "Unique tokens": [
        "contextsField",
        "off",
        "f",
        "_root",
        "patternRuleIndex",
        "ellipsis",
        "b",
        "digest",
        "rootArcs",
        "docFreq",
        "chars",
        "moreLikeFields",
        "termBytes",
        "k1",
        "sheetName",
        "ruleIndex",
        "expand",
        "isClone",
        "set",
        "length",
        "matcher",
        "margin",
        "preTag",
        "setOffendingToken",
        "_optRecord",
        "boost",
        "x",
        "from",
        "infos",
        "pos",
        "operatorInfix",
        "unlimited",
        "q",
        "indexedField",
        "uri",
        "len",
        "end",
        "main",
        "minVersion",
        "actionIndex",
        "readerIndex",
        "subFrom",
        "newHead",
        "semanticContext",
        "nonNotesMergeStrategy",
        "mainThread",
        "anchor",
        "leftColumn",
        "minFragCharSize",
        "provider",
        "bytes",
        "searcher",
        "preserveOriginal",
        "UNSHALLOW",
        "range",
        "workingTree",
        "subSlice",
        "db",
        "totalMissingCount",
        "in",
        "followState",
        "type",
        "valueCount",
        "encoder",
        "mask",
        "predIndex",
        "deepenNots",
        "includeLower",
        "segments",
        "operation",
        "errors",
        "parent",
        "tokenizerFactory",
        "fv",
        "image",
        "fields",
        "normalization",
        "fieldMatch",
        "to",
        "segmentInfo",
        "version",
        "securityToken",
        "bytesStartArray",
        "failingPaths",
        "blockSize",
        "weightField",
        "payloadField",
        "capacityIncrement",
        "automaton",
        "multiplier",
        "pendingUpdates",
        "offset",
        "fieldInfos",
        "privateKeySecret",
        "deserializationOptions",
        "nullValue",
        "totalMaxDoc",
        "accessKeySecret",
        "fieldNames",
        "bufferSize",
        "fragmentsBuilder",
        "charArray",
        "weight",
        "hashCode",
        "stemmer",
        "field_1_first_row",
        ".",
        "returnStates",
        "pm",
        "source",
        "boundaryChars",
        "phraseHighlight",
        "parser",
        "markLimit",
        "field",
        "endOffset",
        "=",
        "lambda",
        "docMap",
        "noteMerger",
        "maxNumTerms",
        "publicKeyId",
        "decisionToDFA",
        "ifSource",
        "directory",
        "state",
        "tokenSource",
        "strings",
        "min",
        "context",
        "falseSource",
        "offsetLimit",
        "fieldAnalyzers",
        "text",
        "trueSource",
        "y",
        "blockBits",
        "readUShort",
        "consumeAllTokens",
        "estimatedMergeBytes",
        "payloads",
        "field_2_first_col",
        "iter",
        "value",
        "objectIdPrefix",
        "minLength",
        "tokenFilterFactories",
        "score",
        "indexField",
        "endpointResolver",
        "strategy",
        "topRow",
        "className",
        "startIndex",
        "tags",
        "maxTokenPosition",
        "suffix",
        "postings",
        "val",
        "nameName",
        "bitsPerValue",
        "refs",
        "searchTime",
        "clientProfile",
        "delimiter",
        "buf",
        "maxBufferedBlocks",
        "deletePriorCommits",
        "startOffset",
        "freqs",
        "fieldName",
        "scoreMode",
        "desc",
        "bytesUsed",
        "maxLevels",
        "parents",
        "fieldOp",
        "repository",
        "longestOnly",
        "status",
        "afterEffect",
        "dirCache",
        "segmentSuffix",
        "factory",
        "bucketAbsoluteOffsets",
        "exclude",
        "inserter",
        "subSlices",
        "credentials",
        "activePane",
        "id",
        "lexerActionExecutor",
        "cherryPickedRefs",
        "attributeImpls",
        "maxTokenCount",
        "externalWorkbookNumber",
        "fieldDelimiter",
        "fragListBuilder",
        "deadEndConfigs",
        "credentialsProvider",
        "indexedBytes",
        "cache",
        "currentState",
        "tokenName",
        "slopFactor",
        "mergeMaxNumSegments",
        "sort",
        "depth",
        "escape",
        "normalizer",
        "accessKeyId",
        "parentsFilter",
        "doc",
        "input",
        "charFilterFactories",
        "sheet",
        "out",
        "acceptableOverheadRatio",
        "minimumKatakanaLength",
        "postTag",
        "accessSecret",
        "totalTermFreq",
        "precedence",
        "docIDs",
        "fst",
        "subs",
        "nextBuffer",
        "constant",
        "flags",
        "words",
        "post",
        "maxScan",
        "stop",
        "REINTERESTING",
        "reachesIntoOuterContext",
        "qf",
        "alt",
        "errCode",
        "analyzer",
        "truncated",
        "frozen",
        "_objRecord",
        "articles",
        "positions",
        "attributes",
        "topLevelParser",
        "reader",
        "pattern",
        "ord",
        "refSpecs",
        "wordType",
        "likeText",
        "appendUserAgent",
        "tmpOffsets",
        "ctx",
        "isExternal",
        "workers",
        "inject",
        "pivot",
        "shape",
        "facetEntries",
        "maxGoodPoints",
        "refreshDate",
        "httpClient",
        "values",
        "basicModel",
        "maxHorizontalContext",
        "rawQueryString",
        "lv",
        "branchNames",
        "label",
        "weightBySpanQuery",
        "useRomaji",
        "pre",
        "size",
        "markedPos",
        "opName",
        "propertyValue",
        "thresh",
        "passedThroughNonGreedyDecision",
        "include",
        "shardIndex",
        "dir",
        "index",
        "wasEscaped",
        "iwc",
        "honorIgnores",
        "_escherContainer",
        "defaultAnalyzer",
        "isCtxDependent",
        "engine",
        "recallPoints",
        "includeUpper",
        "phrasedQueryStringContents",
        "upperTerm",
        ";",
        "errMsg",
        "maxVersion",
        "lexerActions",
        "channel",
        "childQuery",
        "totalCount",
        "lowerTerm",
        "inOrder",
        "ErrorType",
        "subTo",
        "start",
        "c",
        "resultPath",
        "pool",
        "tmpDocs",
        "factor",
        "getIndexReader",
        "replacement",
        "languages",
        "dedup",
        "DEEPEN_NOT",
        "defaultField",
        "process",
        "patternTree",
        "traverseEmptyCells",
        "lock"
      ],
      "Syntactic Label": "Variables and parameters",
      "Semantic Tags": [
        "Object instantiation",
        "Data Structures",
        "Input Processing",
        "State Management",
        "Filtering"
      ],
      "Description": "The tokens represent variables and parameters used in various C# classes.  They are involved in creating objects, managing internal states, processing input streams (e.g., TokenStream), and filtering data.  The context shows these tokens are integral parts of the classes' functionalities, such as creating filters for token streams, managing attributes, and building queries."
    }
  },
  {
    "c112": {
      "Unique tokens": [
        "off",
        "blocksOffset",
        "j",
        "alt",
        "++",
        "2",
        "ptr",
        "blockSize",
        "currentSentence",
        ")",
        "int",
        "bufferUpto",
        "length",
        "blockIdx",
        "-",
        "pos",
        "3",
        "offset",
        "limit",
        "null",
        "ebIx",
        "len",
        "ix",
        "ip",
        "hitIndex",
        "toDirectoryIndex",
        "pos2",
        "newColumn",
        "4",
        "getColumnIndex",
        "nRegions",
        "s",
        "upto",
        "1",
        "34",
        "ie",
        "p",
        ".",
        "shardIndex",
        "--",
        "index",
        "k",
        "+",
        "srcIdx",
        "BYTE_BLOCK_SHIFT",
        "delta",
        "blkIdx",
        "=",
        "textStart",
        "next",
        "positionIndex",
        "(",
        "backID",
        "o",
        "i",
        "vals",
        "n",
        ">>",
        "ri",
        ";",
        "startRuleIndex",
        "externalBookIndex",
        "mbk",
        "level",
        "0",
        "rowIndex",
        "c",
        "9",
        "mSize",
        "li",
        "%",
        "]",
        "getNumColumns",
        "prompt",
        "24",
        "pos1",
        "33",
        "func",
        "value",
        "compIDX",
        "si",
        "valuesOffset"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Bitwise Operations",
        "Looping and Iteration",
        "Data Processing",
        "Control Flow"
      ],
      "Description": "The tokens represent a mix of C# keywords, operators, and identifiers commonly used in data processing and algorithm implementation.  The code snippets show various operations including array manipulation (System.arraycopy, array indexing), bitwise operations (>>, &, |), looping and iteration (for loops, while loops), and control flow (if-else statements).  The semantic tags capture the essence of these operations within the context of the provided code examples."
    }
  },
  {
    "c113": {
      "Unique tokens": [
        "limit",
        ",",
        ".",
        "return",
        "position",
        "charCount",
        "SHORT",
        "put",
        "CHAR",
        "get",
        "src",
        "doubleCount",
        "{",
        "*",
        "SizeOf",
        "floatCount",
        "FLOAT",
        "+=",
        "dst",
        "this",
        "LONG",
        ")",
        "longCount",
        "shortCount",
        "(",
        "DOUBLE",
        "byteBuffer",
        "instanceof",
        "intCount",
        "INT",
        ";"
      ],
      "Syntactic Label": "ByteBuffer Methods and Attributes",
      "Semantic Tags": [
        "Buffer Management",
        "Data Transfer",
        "Memory Management",
        "Primitive Type Handling",
        "Byte Buffer Manipulation"
      ],
      "Description": "The tokens represent methods and attributes related to the manipulation of ByteBuffers in C#.  The methods handle getting and putting primitive data types (int, char, float, double, long, short) into and out of the buffer.  Attributes like 'limit', 'position', and 'capacity' manage the buffer's state.  The code demonstrates efficient handling of primitive data types within a byte buffer, likely for memory-mapped files or network I/O."
    }
  },
  {
    "c114": {
      "Unique tokens": [
        "getInt",
        "setIndexFieldName",
        "alloc",
        "getType",
        "paths",
        "getErrorEval",
        "position",
        "to",
        "setIndex",
        "getWidth",
        "nextSetBit",
        "getCreationHelper",
        "b",
        "toQueryString",
        "getConstructor",
        "put",
        "distance",
        "toArray",
        "LT",
        "setEncoding",
        "asList",
        "formatAsString",
        "getBytes",
        "lessThan",
        "setLength",
        "<",
        "equalsIgnoreCase",
        "getValue",
        "toByteArray",
        "isDirectory",
        "incRef",
        "checkValue",
        "grow",
        "hasMoreElements",
        "clone",
        "getFilePointer",
        "getBoundingBox",
        "copy",
        "longValue",
        "copyFrom",
        "getStart",
        "append",
        ")",
        "getColumn",
        "reduce",
        "ord",
        "fetch",
        "newBlock",
        "set",
        "CellReference",
        "addAttribute",
        "getSimpleName",
        "createOutput",
        "find",
        "isNaN",
        "growArray",
        "entrySet",
        "Integer",
        "serialize",
        "Formula",
        "LittleEndianConsts",
        "withName",
        "Float",
        "getSid",
        "EOF",
        "canUnpop",
        "println",
        "getEncodedSize",
        "getRowIndex",
        "setValue",
        "createRow",
        "offset",
        ",",
        "setError",
        "Cell",
        "containsValue",
        "getResponseCode",
        ">",
        "decode",
        "toLowerCase",
        "setCellValue",
        "newEncoder",
        "getKey",
        "CharVector",
        "insert",
        "begin",
        "substring",
        "appendReplacement",
        "[",
        "getEnd",
        "addAll",
        "getName",
        "getIndex",
        "readLong",
        "typeString",
        "ArrayList",
        "mkdir",
        "checkEOF",
        "utf8",
        "getBeginIndex",
        "Paths",
        "float",
        "checkLength",
        "keySet",
        "this",
        "getPosition",
        "getField",
        "cardinality",
        "eval",
        "Term",
        "open",
        "getCount",
        "array",
        "NumberEval",
        "trim",
        "setMax",
        "CharToByteBufferAdapter",
        "subtract",
        "pack",
        "deepCopyOf",
        "setName",
        "claim",
        "getUShort",
        "getURL",
        "size",
        "getPort",
        "getClass",
        "double",
        "compare",
        "immutableCopy",
        "class",
        "StringTokenizer",
        "resolve",
        "getString",
        "Token",
        "findAll",
        "getNext",
        "push",
        "p",
        "extend",
        "targetImpl",
        "multiply",
        "listAll",
        "newInstance",
        "getChild",
        "beginWrite",
        "ensureCapacity",
        "codePointAt",
        "parse",
        "peekInt",
        "charAt",
        "remove",
        "isInRange",
        "Too",
        "getEntry",
        ".",
        "wasEscaped",
        "resetToEnd",
        "intValue",
        "id",
        "+",
        "split",
        "Pair",
        "match",
        "when",
        "consume",
        "equals",
        "getEmailAddress",
        "readFully",
        "wrap",
        "getConfig",
        "flush",
        "removeLast",
        "readInt",
        "startsWith",
        "getInputStream",
        "toString",
        "newText",
        "getDisplayName",
        "field",
        "getSize",
        "getHost",
        "add",
        "=",
        "userHome",
        "rehash",
        "safelyAllocate",
        "evaluate",
        "isEmpty",
        "getNextToken",
        "encodeASCII",
        "select",
        "Span",
        "dest",
        "setInput",
        "next",
        "setIntAt",
        "getAbsoluteFile",
        "key",
        "addAndGet",
        "replace",
        "scratch",
        "addLast",
        "computeIfAbsent",
        "putInt",
        "(",
        "lock",
        "File",
        "reset",
        "forName",
        "comparator",
        "write",
        "fill",
        "parseAny",
        "valueOf",
        "clear",
        "getEndIndex",
        "lastIndexOf",
        "mkdirs",
        "Long",
        "unmodifiableList",
        "getErrorDisplay",
        "getText",
        "factorial",
        "/",
        "incrementAndGet",
        "FileNotFoundException",
        "!=",
        "getID",
        "Iterator",
        "readInstance",
        "\"",
        "openInputStream",
        ";",
        "getInstance",
        "fieldNamesToString",
        "IntStream",
        "getChars",
        "Block",
        "stepSize",
        "mask",
        "getParent",
        "partition",
        "indexOf",
        "ObjectId",
        "getRow",
        "get",
        "BytesRef",
        "out",
        "unpop",
        "stopAnimation",
        "}",
        "close",
        "forEach",
        "encode",
        "listIterator",
        "removeInternal",
        "text",
        "name",
        "nextToken",
        "setColumn",
        "normalize",
        "numDocs",
        "collect",
        "e",
        "seek",
        "makePoint",
        "streamClosed",
        "oversize",
        "getNumColumns",
        "peekShort",
        "setVisibility",
        "appendArgs",
        "destroy",
        "containsKey",
        "getTermEscaped",
        "Impl",
        "hasMoreTokens",
        "toObjectId",
        "forInt",
        "PrintWriter",
        "OutputStreamWriter",
        "FileInputStream",
        "iterator",
        "setConfig",
        "hasNext",
        "value",
        "getLast",
        "binaryValue",
        "appendTail",
        "getSheet",
        "T",
        "beginRead",
        "getComponent",
        "duplicate",
        "setRow",
        "getCell",
        "contains",
        "nextElement",
        "postInvalidate",
        "update",
        "String",
        "other",
        "compareTo",
        "URI",
        "startAnimation"
      ],
      "Syntactic Label": "Methods and identifiers",
      "Semantic Tags": [
        "Data Processing",
        "Object Manipulation",
        "Utility Functions",
        "Input/Output Operations",
        "Data Structures"
      ],
      "Description": "The tokens represent a mix of methods (e.g., getInt, setIndexFieldName, alloc, getType) and identifiers (e.g., paths, position, to, b, distance, array, Integer, Float, File, String) commonly used in C# programming.  These tokens, within their context sentences, perform various actions such as retrieving data, setting values, allocating memory, type checking, file operations, string manipulation, and working with data structures.  The semantic tags reflect the broad range of functionalities involved in the code snippets."
    }
  },
  {
    "c115": {
      "Unique tokens": [
        "?",
        "]",
        "[",
        "T",
        "Experiment",
        "<",
        "extends"
      ],
      "Syntactic Label": "C# language constructs",
      "Semantic Tags": [
        "Generic Types",
        "Arrays",
        "Collections",
        "Type Constraints",
        "Data Structures"
      ],
      "Description": "These tokens represent fundamental C# language features.  '?' signifies a nullable type, ']' and '[' denote array bounds, 'T' is a generic type parameter, 'Experiment' appears to be a class name, '<' and 'extends' are used for generic type constraints and inheritance respectively.  Their combined usage suggests the code deals with collections, arrays, and potentially generic data structures."
    }
  },
  {
    "c116": {
      "Unique tokens": [
        "Iterator",
        "Status",
        "Transition",
        "Ref",
        "char",
        "FS",
        "Class",
        "Field",
        "ObjectId",
        "List",
        "Object",
        "Span",
        "Term",
        "Severity",
        "CharSequence",
        "Map",
        "Enumeration",
        "String",
        "FileMode",
        "Daemon"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c117": {
      "Unique tokens": [
        "queries",
        "position",
        "token",
        "selector=",
        "<",
        "rpt:",
        "getExternSheetIndex",
        "ends",
        "automaton",
        "append",
        ")",
        "ws",
        "getLineText",
        "getValueText",
        "child",
        "getSimpleName",
        "buffer",
        "Integer",
        "x",
        "_name",
        "service",
        "println",
        "3",
        "if",
        "region",
        "formatReferenceAsString",
        ",",
        "sb",
        "substring",
        "[",
        "selector",
        "_wholePart",
        "==",
        "this",
        "name",
        "getField",
        "s",
        "_firstMovedIndex",
        "1",
        "getClass",
        "accountId",
        "charAt",
        ".",
        "return",
        "line.separator",
        "newline",
        "+",
        "getEmailAddress",
        "points",
        "toString",
        "field",
        "add",
        "=",
        "final",
        "next",
        "(",
        "_lastMovedIndex",
        "i",
        "in",
        "term",
        "field_2_first_column_index",
        "message",
        "/",
        "getOffset",
        ";",
        "type",
        "\"",
        "getRepresentation",
        "filler",
        "getStringValue",
        "_representation",
        "max",
        "min",
        "0",
        "up",
        "get",
        "r",
        "toHex",
        "start",
        "System",
        "'",
        "}",
        "text",
        "newLine",
        "]",
        ":",
        "String",
        "firstColIx=",
        "Constants",
        "\\n",
        "starts",
        "HexDump"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "String Manipulation",
        "Object Representation",
        "File I/O",
        "Exception Handling",
        "Logging"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Many tokens are involved in string manipulation using StringBuilder, which is common for creating formatted output or processing text. Several tokens relate to object representation, particularly using the toString() method for debugging or logging.  There are tokens related to file I/O operations (e.g., FSDirectory), exception handling (e.g., throws IOException), and logging (e.g., System.err.println). The code snippets show various programming patterns, including method calls, string concatenation, conditional statements, and loop structures."
    }
  },
  {
    "c118": {
      "Unique tokens": [
        "util",
        ",",
        ".",
        ">",
        ")",
        "in",
        "<",
        "String",
        "java",
        "lang"
      ],
      "Syntactic Label": "Constructor Parameters",
      "Semantic Tags": [
        "Object Creation",
        "Parameter Passing",
        "Data Structures",
        "Type Declaration",
        "Java Interop"
      ],
      "Description": "These tokens represent elements within constructor parameters lists in C#.  They show the use of Java's `java.util` package (specifically `List` and `Date`) within C# code, indicating interoperability between the two languages.  The tokens `String`, `java`, `lang`, `util`, `,`, `.` and `>` are part of the type declarations and parameter lists, showing how data is passed to the constructors to initialize objects. The commas separate parameters, the dot operator is used for accessing the java.util package, and the angle brackets are used for generic type parameters."
    }
  },
  {
    "c119": {
      "Unique tokens": [
        "get",
        "buffer",
        "arr",
        "i",
        ".",
        "inputDirProp",
        "score",
        ")",
        "append",
        "nameIndex",
        "nameWithDotGit",
        ".string_",
        "DICTIONARY_ATTRIBUTE",
        "(",
        ";"
      ],
      "Syntactic Label": "Method parameters, local variables, method names, object member access, method calls, array indexing, assignment, variable declaration",
      "Semantic Tags": [
        "File processing",
        "Data Structures",
        "String manipulation",
        "Object manipulation",
        "Control flow"
      ],
      "Description": "The tokens represent various C# language constructs.  'get', 'append', and other tokens are method names. 'buffer', 'arr', 'inputDirProp', 'score', 'nameIndex', 'nameWithDotGit' are variable names. '.' is the member access operator.  'i' is a loop counter. '(' and ')' are parentheses. ';' is a statement terminator.  The code snippets show examples of file I/O, string manipulation, object creation and usage, and array processing.  The semantic tags reflect these operations."
    }
  },
  {
    "c120": {
      "Unique tokens": [
        "addChar",
        "createSubRecord",
        "isPrecedenceDecision",
        "peekNextClass",
        "MAX_VALUE",
        "isAcceptState",
        "BoostQuery",
        "put",
        "toArray",
        "2",
        "edges",
        "HIRAGANA",
        "<",
        "fstReader",
        "predicateIndex",
        "root",
        "getPropertyValueEnum",
        "reader",
        "ruleIndex",
        "append",
        "PendingInput",
        ")",
        "getAuthorIdent",
        "getTokenSource",
        "YES",
        "set",
        "Store",
        "length",
        "build",
        "NAME",
        "RecallPoint",
        "toCharArray",
        "setOffendingToken",
        "TermsEnumWithSlice",
        "boost",
        "isTerminating",
        "DATE",
        "-",
        "indexAnalyzer",
        "pos",
        "nextDoc",
        "if",
        ",",
        "encodeInt16",
        "FST",
        "maxDepthLogStart",
        "PROP",
        "Field",
        "decode",
        "len",
        "uri",
        "substring",
        "[",
        "<=",
        "addAll",
        "closeWhileHandlingException",
        "read",
        "getShortMessage",
        "parseFormat",
        "hasPayloads",
        "getSheetIdentifier",
        "getStartIndex",
        "maxHorizontalContext",
        "DFAState",
        "payload",
        "name",
        "open",
        "getBackgroundColorString",
        "decRef",
        "weight",
        "getWeight",
        "parseInt",
        "size",
        "rollback",
        "getClass",
        "class",
        "BODY",
        "maxShingleSize",
        "for",
        "MultiPostingsEnum",
        "getNext",
        "suffixes",
        "decision",
        "getChild",
        "getGeneration",
        "parse",
        "Arc",
        "copyTo",
        "slice",
        "getChildContainers",
        ".",
        "return",
        "IOException",
        "synset",
        "ATNDeserializer",
        "unexpectedEndOfInput",
        "source",
        "new",
        "getExternalBookRecord",
        "searcher",
        "UNDERFLOW",
        "+",
        "getInterpreter",
        "getChannel",
        "split",
        "Pair",
        "rules",
        "equals",
        "expected",
        "dictionary",
        "contexts",
        "parser",
        "NAME_FIELD",
        "v",
        "precedenceDfa",
        "getInputStream",
        "toString",
        "previous",
        "field",
        "forward",
        "=",
        "add",
        "isEmpty",
        "LATEST",
        "terms",
        "openResource",
        "DEFAULT_TOKEN_CHANNEL",
        "encodeASCII",
        "queryAnalyzer",
        "replace",
        "next",
        "decisionToDFA",
        "Document",
        "(",
        "setMergePolicy",
        "getAttribute",
        "fill",
        "state",
        "clear",
        "i",
        "modBy",
        "minimumMatchingmElements",
        "w",
        "ParserException",
        "getText",
        "PendingOutputs",
        ";",
        "type",
        "\"",
        "getInstance",
        "path",
        "formatRawCellContents",
        "MOD_NONE",
        "tokenStream",
        "min",
        "0",
        "getBytesReader",
        "getMessage",
        "predIndex",
        "DATE_FIELD",
        "get",
        "getObjectId",
        "opnds",
        "noHEADExistsAndNoExplicitStartingRevisionWasSpecified",
        "c",
        "}",
        "close",
        "case",
        "listIterator",
        "{",
        "getStopIndex",
        "top",
        "outputUnigrams",
        "subSequence",
        "local",
        ":",
        "remaining",
        "BODY_FIELD",
        "transition",
        "image",
        "fst",
        "toObjectId",
        "SCRIPT",
        "getCharPositionInLine",
        "create",
        "NONE",
        "exceptions",
        "8",
        "s0",
        "fieldsData",
        "update",
        "requiresFullContext",
        "predicate"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Lexical Analysis",
        "Parsing",
        "Code Generation",
        "Compiler Design",
        "Regular Expressions"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including identifiers, keywords, operators, and literals.  Their usage within the context sentences reveals their syntactic roles in various programming constructs such as method calls, conditional statements, loops, object creation, exception handling, and string manipulation. The semantic significance lies in their collective contribution to the overall functionality of the C# code, which appears to involve tasks such as text processing, data structures, and potentially compiler or interpreter components."
    }
  },
  {
    "c121": {
      "Unique tokens": [
        "",
        "unused1",
        "mValues",
        "_columnIndex",
        "MB",
        "patternRuleIndex",
        "NO_BOUND",
        "defaultDistErrPct",
        "0.5D",
        "currentScore",
        "rowTo",
        "sheetName",
        "ruleIndex",
        "poi.log.level",
        "passageLen",
        "getClipboardFormatTag",
        "arraySize",
        "-",
        "bytesRemaining",
        "toBlockIndex",
        "bytesAfterHeader",
        "fromBound",
        "DistanceUtils",
        "_rowIndex",
        "_firstColumnIndex",
        "len",
        "tabid",
        "[",
        "0x00FF",
        "getSheetName",
        "y2",
        "end",
        "appendPos",
        "_relativeDecimalExponent",
        "capacityParameters",
        "w4",
        "regionEnd",
        "lastCol",
        "getFirstSheetIndex",
        "_nameNumber",
        "colIx",
        "anchor",
        "_reserved1Short",
        "DEFAULT_PATH_SIZE",
        "_evaluator",
        "srcCellRow",
        "ePowNegX",
        "rowFrom",
        "ISO_8859_1",
        "lastRow",
        "col1",
        "grbitFrt",
        "valueLongBits",
        "pow10",
        "width",
        "totalWork",
        "pictureIndex",
        "newElements",
        "1000.0d",
        "formulaText2",
        "totalMissingCount",
        "boosts",
        "fracPart",
        "DEFAULT_ARG3",
        "docFreqThresh",
        "followState",
        "_size",
        "currentExternSheetIx",
        "getMinY",
        "valueCount",
        "nativeId",
        "rowIndex",
        "includeLower",
        "comparisonOperator",
        "arcAngle",
        "ascending",
        "1024",
        "getNumberOfDocuments",
        "fv",
        "testValue",
        "docName",
        "getDefaultRowHeight",
        "lastSheetIndex",
        "EvaluationTracker",
        "i_num",
        "columnIndex",
        "8",
        "indexFieldName",
        "[--mixed",
        "_nRows",
        "distErrPct",
        "field_2_link1",
        "tempMergeFiles",
        "to",
        "version",
        "?",
        "field_3_zero",
        "getRowNumber",
        "numTerms",
        "nameIndex",
        "pv",
        "segGraph",
        "_errorStyle",
        "firstCol",
        "chrA",
        "getLastColumn",
        "getFontpos",
        "beginB",
        "_tokenStartLine",
        "getRecordId",
        "masterUserPassword",
        "sheetRefIndex",
        "startTerm",
        "offset",
        "sundaysPast",
        "arg2",
        "_reserved0Int",
        "toDirectoryIndex",
        "getFirstCol",
        "byteValueCount",
        "arg3",
        "_numberOfRegions",
        "srcColNum",
        "firstCell",
        "bufferSize",
        "4095L",
        "this",
        "allStopWords",
        "delCount",
        "getColumnIndex",
        "collectionStats",
        "sessionStartedTimeInMilliSeconds",
        "readerBase",
        "softDelCount",
        "copyOfHeads",
        "note",
        "field_1_first_row",
        "srcRowIndex",
        ".",
        "_text",
        "invalidTimeout",
        "sid",
        "idBuffer",
        "getLastSheetName",
        "byteBlockCount",
        "maxCachedBytes",
        "getPtgClass",
        "_reserved0",
        "fromInclusive",
        "withTableName",
        "labelValues",
        "totalTimeMS",
        "formulaText1",
        "_value",
        "rowIx",
        "arg0",
        "_channel",
        "colTo",
        "toIx",
        "propertyIsAlreadyNonNull",
        "currentPayloadScore",
        "commitGen",
        "rand.seed",
        "dx1",
        "getFirstColumn",
        "unused2",
        "/",
        "inPtr",
        "subsection",
        "getNumberOfOperands",
        "row",
        "getXfpos",
        "dictionaryFile",
        "maxNumberOfBits",
        "_binaryExponent",
        "oldSize",
        "_propertyValue",
        "255L",
        "saturdaysPast",
        "tokenImageVal",
        "skipMustBeNonNegative",
        "exactDenom",
        "capacity",
        "getTokenIndex",
        "relativeColumnIndex",
        "indeterminate",
        ":",
        "%.2f",
        "row2",
        "_lastColumnIndex",
        "field_2_first_col",
        "4294967295L",
        "getXFIndex",
        "termsFilePointer",
        "fillColor",
        "bigBlockSize",
        "valuesOffset",
        "field_1_stream_pos",
        "formulaColumn",
        "composeFrac",
        "lastRowIndex",
        "nper",
        "nBreaks",
        "stopTags",
        "nPoints",
        "arearef",
        "postings",
        "LOWER",
        "bitsPerValue",
        "<",
        "onlyOneFetchSupported",
        "getExternSheetIndex",
        "nonWeekendHolidays",
        "lineCount",
        "1099511628211L",
        "fromIx",
        "65535L",
        "firstColumnIndex",
        "relativeRowIndex",
        "DEFAULT_SUFFIX",
        "append",
        "getColumn",
        "refCount",
        "collapseRow",
        "DEFAULT_ARG4",
        "getLastRow",
        "minElement",
        "recordType",
        "_fontIndex",
        "INCLUSIVE",
        "_arrayValues",
        "extensionFieldDelimiter",
        "scoreMode",
        "missingUnderBits",
        ",",
        "dy2",
        "511L",
        "maxNumSegments",
        "maxLevels",
        "use1904windowing",
        "relLastRowIx",
        "docCount",
        "mergeRounds",
        "_workbook",
        "italic",
        "_limit",
        "field_1_label_index",
        "fillerToken",
        "31L",
        "maxShingleSize",
        "aBreak",
        "relFirstColIx",
        "formulaRow",
        "dist",
        "_engineId",
        "numRecordedBits",
        "3600",
        "docValuesGen",
        "intValue",
        "x2",
        "actualSize",
        "rule2",
        "resourceGroupName",
        "externalWorkbookNumber",
        "ram",
        "setSize",
        "docID",
        "getValidationType",
        "lowValidIx",
        "sheetIndex",
        "sizeLimit",
        "shift",
        "getCharIndex",
        "field_2_bucket_sst_offset",
        "iObjectKind",
        "mergeMaxNumSegments",
        "postingsArray",
        "recordId",
        "\"",
        "y1",
        "tokenSeparator",
        "toBound",
        "newSize",
        "field_1_reserved",
        "receiptHandle",
        "bookIndex",
        "byteUpto",
        "maxCountMustBeNonNegative",
        "900",
        "sensitiveInputCells",
        "0xFFFFL",
        "getRow",
        "get",
        "_sid",
        "(%.2f",
        "acceptableOverheadRatio",
        "col2",
        "dedicatedCapacityName",
        "tf_base",
        "dy1",
        "totalTermFreq",
        "lineStyleColor",
        "field_1_index_extern_sheet",
        "topologicalSortRequired",
        "_nColumns",
        "sheetNumber",
        "_input",
        "mergeTimeMS",
        "getFirstRow",
        "count",
        "getSheet",
        "lastColumnIndex",
        "1000.0",
        "_colWidth",
        "maxNumBytes",
        "row1",
        "variantType",
        "abbreviationLengthMustBeNonNegative",
        "qf",
        "formatIndex",
        "dx2",
        "getPathString",
        ")",
        "_firstrow",
        "_xfIndex",
        "srcCell",
        "_firstRowIndex",
        "w3",
        "roleSessionDurationSeconds",
        "must",
        "real_num",
        "getRowIndex",
        "TOPO",
        "null",
        "firstRowIndex",
        "withAttributesToGet",
        "fieldInfosGen",
        "pivot",
        "mKeys",
        "otherState",
        "_sheetRefIndex",
        "isBlipId",
        "relLastColIx",
        "*",
        "x1",
        "==",
        "toExclusive",
        "delGen",
        "getBeginIndex",
        "srcCellCol",
        "stateNumber",
        "maxHorizontalContext",
        "minimumNumberShouldMatch",
        "1023L",
        "functionIndex",
        "elementData",
        "_reserved2Byte",
        "contextMustBeNonNegative",
        "visibilityTimeout",
        "_emptyCellAllowed",
        "field_2_subex_len",
        "field_13_border_styles1",
        "size",
        "1",
        "firstRow",
        "propertyValue",
        "pipeSize",
        "relFirstRowIx",
        "--soft",
        "UTF16LE",
        "field_3_link2",
        "isSameObject",
        "throw",
        "shardIndex",
        "readTimeMS",
        "w2",
        "index",
        "queueControl",
        "advise",
        "+",
        "honorIgnores",
        "Occur",
        "colFrom",
        "isCtxDependent",
        "numUniqueStrings",
        "hStart",
        "highValidIx",
        "charsStart",
        "field_1_anchorId",
        "includeUpper",
        "numWords",
        "mbPerSec",
        "minShingleSize",
        "expectedTokenSequencesVal",
        "commonSuffixRef",
        "maxCount",
        "height",
        "r1",
        "remainingData",
        "upperTerm",
        "(",
        "srcRowNum",
        "getSizeOfElements",
        "getExternalWorkbookNumber",
        "getEndIndex",
        "VERSION_CURRENT",
        "rule1",
        "getStartOffset",
        "beginA",
        ";",
        "stripHyphen",
        "arg1",
        "sortTimeMS",
        "getFunctionIndex",
        "translationAmount",
        "extIx",
        "start",
        "c",
        "posTaggerModelFile",
        "per",
        "numPayloadsSeen",
        "getLastCol",
        "wholePart",
        "srcColumnIndex",
        "numDocs",
        "evaluationListener",
        "weekStartOn",
        "ordinals",
        "maxElement",
        "field_2_zero",
        "rc",
        "invokingState",
        "simpleCompareResult",
        "getMinX",
        "maxNumUniqueValues",
        "20000",
        "desiredMaxSaturation",
        "rownum",
        "attributesToGet",
        "lemmatizerModelFile",
        "_tokenStartCharIndex",
        "w1",
        "_tokenStartCharPositionInLine"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c122": {
      "Unique tokens": [
        "offset",
        "it",
        ".",
        "--",
        "index",
        "j",
        "k",
        "b",
        "0",
        "keys",
        "parentIds",
        "rowIndex",
        "++",
        "r",
        "col",
        "c",
        "<=",
        "ptr",
        "exists",
        "<",
        "{",
        "text",
        "iterations",
        "=",
        "]",
        ">=",
        "+=",
        ":",
        ")",
        "int",
        "carray",
        "rval",
        "l",
        "&&",
        "s",
        "true",
        "(",
        "needle",
        "pList",
        "newParents",
        "count",
        "_interp",
        "i",
        "in",
        "-",
        "n",
        "a",
        "startA",
        ";"
      ],
      "Syntactic Label": "Variables,Loop counters,Array indexing,Operators,Method parameters",
      "Semantic Tags": [
        "Array Manipulation",
        "Iteration",
        "Data Processing",
        "Offset Management",
        "Decoding/Encoding"
      ],
      "Description": "The tokens represent variables, loop counters (i, j, k), array indexing (e.g., blocks[blocksOffset++]), operators (+, ++, --, <, <=, >, >=, =, +=, &&), and method parameters (e.g., blocks, blocksOffset, values, valuesOffset, iterations).  These are fundamental elements in C# for processing data within arrays, often involving iterative decoding or encoding operations. The frequent use of offset variables suggests operations on byte arrays or other data structures where the starting position is crucial."
    }
  },
  {
    "c123": {
      "Unique tokens": [
        "offset",
        "null",
        "switch",
        "path",
        ".",
        "fillBuf",
        "max",
        "endIndex",
        "dir",
        "newSize",
        "startIndex",
        "args",
        "0",
        ">",
        "id",
        "idx",
        "maxLevels",
        "actualVersion",
        "+",
        "leftInBuffer",
        "forceUpdate",
        "[",
        "currentBlockCardinality",
        "isReuseAsIs",
        "<",
        "{",
        "end",
        "highlightBackground",
        "_arrayValues",
        "==",
        "isSpace",
        "ldr",
        "byteCount",
        "isExportOk",
        "append",
        ")",
        "length",
        "assert",
        "&&",
        "flag",
        "(",
        "synSetID",
        "raw",
        "predSucceeds",
        "fixedTime",
        "Exception",
        "t",
        "sizeLimit",
        "buffer",
        "lastSheetIndex",
        "db",
        "Integer",
        "prefixLength",
        "catch",
        "synchronized",
        "i",
        "tieBreakerMultiplier",
        "REPEAT_EXHAUST",
        "n",
        "block",
        "!",
        "typeHint",
        "!=",
        "if"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Assertions",
        "Exception Handling",
        "Operators"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `switch`, `if`, `catch`, and `for` control program flow.  `offset`, `null`, `path`, `buffer`, `array`, etc., are identifiers often used with data structures (arrays, objects).  `assert` is used for runtime assertions.  `Exception` and `catch` blocks handle exceptions.  Various operators (`+`, `-`, `>`, `<`, `==`, `!=`, `&&`, `|`) perform operations on data."
    }
  },
  {
    "c124": {
      "Unique tokens": [
        "0xFF",
        "0x80",
        "40",
        ",",
        "byte4",
        "blocksOffset",
        "0L",
        "7",
        "6",
        "0x00",
        ">>>",
        "15",
        "blocks",
        "b",
        "++",
        "2",
        "c",
        "if",
        "5",
        ";",
        "16",
        "255L",
        "long",
        "byte1",
        "values",
        "12",
        "65535L",
        "byte2",
        "final",
        "48",
        "0x04",
        "32",
        "0x7f",
        ")",
        "0x01",
        "block0",
        "4",
        "10",
        "valuesOffset",
        "byte5",
        "byte0",
        "24",
        "0xff",
        "1",
        "shift",
        "byte6",
        "block2",
        "for",
        "16777215L",
        "63",
        "8",
        "block",
        "56",
        "block1",
        "3",
        "byte3"
      ],
      "Syntactic Label": "Literals, Variables, Operators, Control Flow Statements, Array Access",
      "Semantic Tags": [
        "Data Encoding",
        "Data Decoding",
        "Bit Manipulation",
        "Array Processing",
        "Data Structures"
      ],
      "Description": "The tokens represent a mix of hexadecimal and decimal literals, variable names (e.g., blocks, values, byte0), bitwise operators (>>>, |, &), control flow statements (if, for), array access (blocks[blocksOffset++]), and increment operators (++).  These are used in C# methods to perform low-level data encoding and decoding operations, often involving bit manipulation to pack and unpack data within byte arrays and integer arrays. The code demonstrates efficient handling of data within arrays, utilizing bitwise operations for compact data representation and processing."
    }
  },
  {
    "c125": {
      "Unique tokens": [
        "arg1",
        "configs",
        "formVE",
        "returnTypeVE",
        ",",
        "Analyzer",
        "vedenominator",
        "col_index",
        "arg2",
        "sst",
        "serialNumVE",
        "SheetRefEvaluator",
        "CellRangeAddress",
        "ValueEval",
        "table_array",
        "textArg",
        "placesVE",
        "arg0",
        "venumerator",
        "CellReference",
        "EscherRecordFactory",
        "inumberVE",
        "ATNConfigSet",
        "numberVE",
        "lookup_value",
        "range_lookup"
      ],
      "Syntactic Label": "Function Arguments, Objects, Variables",
      "Semantic Tags": [
        "Spreadsheet Calculation",
        "Formula Evaluation",
        "Error Handling",
        "Data Type Conversion",
        "Cell Referencing"
      ],
      "Description": "The tokens represent function arguments, objects, and variables used in a spreadsheet calculation library.  They are involved in evaluating formulas, handling errors (EvaluationException), converting data types (e.g., double, string, boolean), and referencing cells (CellRangeAddress, CellReference). The code appears to be part of a library that provides functionality similar to spreadsheet applications like Excel, handling various formula types and data types."
    }
  },
  {
    "c126": {
      "Unique tokens": [
        "RecordFactory",
        "MultiTrie",
        "HSSFPolygon",
        "GetChangeRequest",
        "f",
        "lookContext",
        "newDocumentBuilder",
        "_childRecords",
        "CellEvaluationFrame",
        "posTaggerModels",
        "CharsRefBuilder",
        "BaseNumberUtils",
        "getSequentialSubReaders",
        "updateFormulaResult",
        "CellRangeAddressList",
        "MutableObjectId",
        "facetEntry",
        "FormulaCellCacheEntry",
        "HSSFPicture",
        "HSSFConditionalFormattingRule",
        "BoundedMap",
        "DirCacheEntry",
        "PackedReaderIterator",
        "CowSubList",
        "assertHaveReader",
        "BooleanQuery",
        "clone",
        "IndexWriter",
        "PagedBytesDataInput",
        "FieldsReader",
        "OpenNLPPOSFilter",
        "popMode",
        "MergeStrategy",
        "getQueryConfigHandler",
        "ScenarioProtectRecord",
        "FormulaPair",
        "BundleFetchConnection",
        "escherRecords",
        "EditList",
        "AreaI",
        "CFRuleRecord",
        "PathFilter",
        "CRNBlock",
        "atnSimulator",
        "q",
        "FileRepository",
        "HSSFFormulaParser",
        "Charset",
        "CharVector",
        "SrndQuery",
        "RevTag",
        "[",
        "childRecord",
        "LookupResult",
        "field_2_unknownFormulaData",
        "FunctionMetadata",
        "createRowVector",
        "RuleContext",
        "BitField",
        "evaluateFunc",
        "MatchNoDocsQuery",
        "jumpDrawablesToCurrentState",
        "eval",
        "nerModels",
        "ReverseLinkIterator",
        "SubRecord",
        "LL1Analyzer",
        "setUpstreamName",
        "_evaluationListener",
        "IntervalSet",
        "for",
        "BootstrapActionConfig",
        "_evaluator",
        "sf",
        "SearcherTracker",
        "StandardQueryConfigHandler",
        "QueryNodeProcessor",
        "SSTRecord",
        "IntegerList",
        "getDFAStrings",
        "_valuesAgg",
        "notifyUpdateCell",
        "KeepWordFilter",
        "OpenNLPLemmatizerFilter",
        "oldProcessor",
        "isDocumentEntry",
        "getNameXPtg",
        "IntMapper",
        "BufferedIndexInput",
        "fr",
        "createPicture",
        "HSSFSimpleShape",
        "Explanation",
        "taxonomyWriter",
        "@OverrideResult",
        "scan",
        "hssf",
        "bookEvaluator",
        "fromRuleContext",
        "parseAny",
        "getResourceBundleObject",
        "newName",
        "FontFamily",
        "addAnyChild",
        "db",
        "FormulaError",
        "SST",
        "requires",
        "DoubleBuffer",
        "ConstantValueParser",
        "PrecedencePredicate",
        "PositiveIntOutputs",
        "DBCellRecord",
        "createIndexableFields",
        "dbf",
        "E",
        "updateImpl",
        "TaxonomyReader",
        "SimpleTextTermVectorsReader",
        "EscherDgRecord",
        "BytesRef",
        "_externalBookRecord",
        "SimpleFieldWriter",
        "ContinueRecord",
        "_tracker",
        "parseRKs",
        "e",
        "getIndexWriter",
        "area",
        "FieldIndexData",
        "_definedNames",
        "addCellRangeAddress",
        "HSSFClientAnchor",
        "SearchGroup",
        "OpenNLPOpsFactory",
        "_sheet",
        "convertToEscherRecords",
        "_mainSpgrContainer",
        "program",
        "func",
        "AbbreviatedObjectId",
        "lemmatizerOp",
        "fillRoundRect",
        "TopSrndQuery",
        "SharedFormula",
        "CharBuffer",
        "ParseTreePatternMatcher",
        "visitRecord",
        "TermsReader",
        "_conditionalFormattingTable",
        "usableBitSetSizes",
        "enterRecursionRule",
        "HSSFTextbox",
        "_tableArray",
        "LazyRefEval",
        "DocumentSummaryInformation",
        "_sewb",
        "DimensionsRecord",
        "rec",
        "FileEntry",
        "BoostQuery",
        "UDFFinder",
        "getRuleInvocationStack",
        "charFilter",
        "TokenMgrError",
        "PayloadHelper",
        "segGraph",
        "BlendedTermQuery",
        "DigestOutputStream",
        "FieldConfig",
        "RoaringDocIdSet",
        "DocumentBuilder",
        "TSTNode",
        "ParallelPostingsArray",
        "FacetLabel",
        "HSSFListener",
        "_formulaCellCache",
        "cell",
        "taxonomyReader",
        "FormulaRecord",
        "cf",
        "QueryValueSource",
        "onClearCachedValue",
        "MultiTrie2",
        "PredictionContext",
        "HSSFShapeGroup",
        "sameClassAs",
        "theErrorHandler",
        "builder",
        "PatternKeywordMarkerFilter",
        "recurseClearCachedFormulaResults",
        "subMap",
        "CowIterator",
        "matchImpl",
        "this",
        "HSSFConditionalFormatting",
        "allStopWords",
        "TaxonomyWriter",
        "_interp",
        "MessageDigest",
        "RecordInputStream",
        "getSpecificBuiltinRecord",
        "findNextImpl",
        "_evaluationFrames",
        "SegmentCommitInfo",
        "CFRecordsAggregate",
        ".",
        "ProtectRecord",
        "TopLevelQuery",
        "debug",
        "TermStatistics",
        "chooseSingleElementFromAreaInternal",
        "DocFreqValueSource",
        "elserenameDetector",
        "IndexEnum",
        "IntersectTermsEnum",
        "escapeExtensionField",
        "XSSFCellStyle",
        "decisionToState",
        "makeRoomLRU",
        "=",
        "FloatBuffer",
        "DocumentBuilderFactory",
        "ShingleFilter",
        "delegateFieldsProducer",
        "FieldCacheSource",
        "SegmentInfo",
        "peel",
        "fstEnum",
        "getFacetEntries",
        "state",
        "SrndBooleanQuery",
        "runAndMaybeStats",
        "descendingSet",
        "Analyzer",
        "getRefDatabase",
        "row",
        "getDataFormatStringCache",
        "RawParseUtils",
        "attributesNode",
        "FormatRecord",
        "Record",
        "r",
        "requireCanDoUpdate",
        "getDescendants",
        "FieldsQuery",
        "RevFilter",
        "filter",
        "getNotSupportedFunctionNames",
        "error",
        "buildFieldConfig",
        "ParseCancellationException",
        "ReadWriteHeapByteBuffer",
        "QueryNode",
        "processIteration",
        "AttrPtg",
        "pollLastEntry",
        "visitIfPresent",
        "LargeObjectException",
        "xf",
        "create",
        "JapanesePartOfSpeechStopFilter",
        "TermRangeQuery",
        "newPostingsArray",
        "readUnicodeString",
        "FacetEntry",
        "IntList",
        "PositionSpan",
        "getReflogReader",
        "getSortedTransitions",
        "CompareResult",
        "InputMismatchException",
        "CryptoFunctions",
        "SSTDeserializer",
        "FunctionEval",
        "ReadWriteShortArrayBuffer",
        "encodedTypeString",
        "getFieldQuery",
        "<",
        "HSSFCellStyle",
        "TermVectorsReader",
        "delegatePostingsFormat",
        "ParallelTask",
        "_LOOK",
        "Operator",
        "removeOneOccurrence",
        "buf",
        "child",
        "SpanQueryObjectBuilder",
        "IntToByteBufferAdapter",
        "chunkerModels",
        "CellCacheEntry",
        "AttributeSource",
        "getTaxonomyWriter",
        "PostingsWriterBase",
        "group",
        "QueryPhraseMap",
        "RamUsageEstimator",
        "DoubleToByteBufferAdapter",
        "HunkHeader",
        "SupBookRecord",
        ",",
        "SimpleTextStoredFieldsReader",
        "URIish",
        "_sre",
        "DocumentInputStream",
        "ParserRuleContext",
        ">",
        "DirCacheIterator",
        "getRawCollationKey",
        "toEditList",
        "_workbook",
        "getSubCells",
        "getFunctionByIndex",
        "TokenStream",
        "CharacterBuffer",
        "CharToByteBufferAdapter",
        "QueryObjectBuilder",
        "ErrorEval",
        "pack",
        "RevFlagSet",
        "AggregatingUDFFinder",
        "t",
        "CoderResult",
        "getTerms",
        "newDocumentSummaryInformation",
        "CredentialItem",
        "IndexableField",
        "emptyMap",
        "p",
        "ReadWriteDirectByteBuffer",
        "HTMLStripCharFilter",
        "replaceOrRegister",
        "rule",
        "BATBlock",
        "CustomProperty",
        "posix_fadvise",
        "GrowableWriter",
        "SummaryInformation",
        "SegGraph",
        "id",
        "BoundedKeySet",
        "navigableKeySet",
        "PathSuffixFilter",
        "idfExplain",
        "ForkedEvaluationCell",
        "FileKey",
        "ClassID",
        "createAddInFunctions",
        "CharArrayIterator",
        "CompiledAutomaton.getTermsEnum",
        "getTokenArrayValues",
        "LexerATNSimulator",
        "cloneStyleFrom",
        "ObjectProtectRecord",
        "ReadWriteFloatArrayBuffer",
        "OpenReaderTask",
        "ParseTreeListener",
        "OperandResolver",
        "InterfaceHdrRecord",
        "BlankEval",
        "RevTree",
        "ReadWriteDoubleArrayBuffer",
        "tracker",
        "LongToByteBufferAdapter",
        "record",
        "MutableFPNumber",
        "FloatToByteBufferAdapter",
        "ReInit",
        "readPlain",
        "ExternalNameRecord",
        "RenameDetector",
        "OffsetArea",
        "postingsArray",
        "\"",
        "HSSFRow",
        "RevCommit",
        "MatchAllDocsQuery",
        "QRelJudgement",
        "mProgressDrawable",
        "theEntityResolver",
        "MutableEntry",
        "EntrySet",
        "SharedFormulaGroup",
        "MultiFunction",
        "NGramDistance",
        "DVRecord",
        "shallowSizeOf",
        "PackedObjectInfo",
        "SerializingRecordVisitor",
        "FileNameMatcher",
        "getFirstChildElement",
        "getFirstRow",
        "biSegGraph",
        "absRowIx",
        "LittleEndianOutputStream",
        "StringCharacterIterator",
        "sentenceModels",
        "cc",
        "FuzzySet",
        "evaluatorForFunction",
        "PhraseWildcardQuery",
        "PropertyIDMap",
        "UTF8Byte",
        "WriteAccessRecord",
        "createExtendedFormat",
        "FacetResult",
        "CellRangeAddress",
        "getPOSTaggerModel",
        "HSSFWorkbook",
        "RecordFormatException",
        "FreeRefFunction",
        "reader",
        "setQueryConfigHandler",
        "SpanQueryBuilder",
        ")",
        "GeohashUtils",
        "PasswordRecord",
        "tokenizerModels",
        "RevFlag",
        "KeySet",
        "result",
        "must",
        "FormulaRecordAggregate",
        "getRootMap",
        "HSSFName",
        "ExtendedFormatRecord",
        "RefList",
        "PersonIdent",
        "clientProfile1",
        "createSegGraph",
        "LazyAreaEval",
        "TermInfo",
        "SkipRevFilter",
        "unregisterAndCloseRepository",
        "infixToString",
        "shape",
        "NoteMap",
        "getInnerValueEval",
        "ListIterator",
        "MutableValueBool",
        "TreeFilter",
        "getRunData",
        "name",
        "getOrCreateUpdatableCell",
        "FileIterator",
        "NumberEval",
        "FuncPtg",
        "getEscherContainer",
        "SetKeywordMarkerFilter",
        "splitSentences",
        "getGnumericPart",
        "pollFirstEntry",
        "SheetRangeEvaluator",
        "DecisionInfo",
        "BoundSheetRecord",
        "_iBook",
        "DVConstraint",
        "ByteVector",
        "CFRuleBase",
        "HSSFShape",
        "theContentHandler",
        "visitContainedRecords",
        "getDecisionInfo",
        "QueryConfigHandler",
        "TerminalNodeImpl",
        "seekFloor",
        "ObjectIdSubclassMap",
        "loadSshSessionFactory",
        "convertSharedFormulas",
        "ArrayPtg",
        "SnowballStemmer",
        "runningParallelTasks",
        "getSortedObjectList",
        "RkRec",
        "mIndeterminateDrawable",
        "ReadWriteIntArrayBuffer",
        "SpanPositionRangeQuery",
        "next",
        "PropertySetFactory",
        "(",
        "ReadWriteCharArrayBuffer",
        "getRomanization",
        "perField",
        "NameRecord",
        "HSSFComment",
        "i",
        "DedicatedCapacityInner",
        "BiSegGraph",
        "drawRoundRect",
        ";",
        "EscherRecord",
        "postingsReader",
        "ProcessBuilder",
        "FontRecord",
        "writer",
        "createExternSheetRefEvaluator",
        "ReadWriteLongArrayBuffer",
        "stateRegistry",
        "nextTermsHash",
        "parseTimeZoneOffset",
        "theDTDHandler",
        "MaxCountRevFilter",
        "LinearOffsetRange",
        "ObjectToPack",
        "CharArraySet",
        "fieldsConsumer",
        "tokenizer",
        "c",
        "ValueEval",
        "STRATEGIES",
        "FunctionMetadataRegistry",
        "ParseTree",
        "SlicedIndexInput",
        "FSDirectory",
        "DocumentEntry",
        "getWriteProtect",
        "NormalisedDecimal",
        "DateFormatTokenizer",
        "ScriptBootstrapActionConfig",
        "removeChildRecord",
        "ListenerHandle",
        "indexSearcher",
        "TernaryTree",
        "createColumnVector",
        "block",
        "checkCallable",
        "other",
        "ShortToByteBufferAdapter",
        "DFASerializer"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c127": {
      "Unique tokens": [
        "subReaders",
        "_formats",
        "additionalParent",
        "stop",
        "paths",
        "mValues",
        "f",
        "_buf",
        "originalText",
        "queries",
        "outputList",
        "IndexFileNames",
        "head",
        "heap",
        "rec",
        "b",
        "suffix",
        "element",
        "++",
        "eq",
        "chars",
        "offsets",
        "currentSentence",
        "vocabulary",
        "positions",
        "newBuffers",
        "lines",
        "ft",
        "bigBlockSize",
        "boundsheets",
        "codec",
        "getFilePointer",
        "reader",
        "chargroup",
        "allocator",
        ")",
        "instance",
        "overflowBuffer",
        "conflictingPaths",
        "cp",
        "newBlock",
        "levelW",
        "rowRecord",
        "apache",
        "buf",
        "str",
        "cell",
        "flag",
        "averages",
        "components",
        "length",
        "[/FEATURE",
        "nr",
        "subAgg",
        "org",
        "formula",
        "buffer",
        "node",
        "result",
        "ent",
        "bs",
        "list",
        "_list",
        "walker",
        "ctx",
        "_output",
        "functions",
        "intSet",
        "subfilters",
        "levelH",
        "_colors",
        "IntBlockPool",
        "config",
        "fieldInfos",
        "region",
        "data",
        ",",
        "usedCells",
        "base",
        "q",
        "sb",
        "queryShape",
        "commentRecord",
        "IOUtils",
        "altsets",
        "stream",
        "args",
        "blocks",
        "unused",
        "keys",
        "existing",
        "sentenceStarts",
        "uri",
        "mKeys",
        "encodedData",
        "tagger",
        "frame",
        "active",
        "[",
        "Arrays",
        "parents",
        "formatString",
        "values",
        "file",
        "crB",
        "byte",
        "Paths",
        "ptgs",
        "_breaks",
        "deflater",
        "buffers",
        "this",
        "fieldIndex",
        "intPool",
        "ConfigurationKeys",
        "tokens",
        "ivalues",
        "name",
        "rb",
        "ref",
        "rows",
        "mulRecs",
        "newLength",
        "ints",
        "decisions",
        "snapshot",
        "s",
        "task",
        "t",
        "ids",
        "lists",
        "termsDictOffsets",
        "orig",
        "extensionKey",
        "intervals",
        "output",
        "docData",
        "commit",
        "p",
        "shortToHex",
        "matchOffsets",
        "_firstCell",
        "removed",
        "_values",
        "mtp",
        "ruleNames",
        "slice",
        "currentBlock",
        ".",
        "ArrayUtil",
        "metaData",
        "dir",
        "bytes",
        "ENCODED_SIZE",
        "new",
        "k",
        "id",
        "+",
        "trace",
        "match",
        "jt",
        "delta",
        "orows",
        "alts",
        "parts",
        "original",
        "blockRef",
        "matches",
        "v",
        "spans",
        "cells",
        "entries",
        "previous",
        "ext",
        "field",
        "elements",
        "initialBlocks",
        "array1",
        "=",
        "field_pictureData",
        "commentRecords",
        "url",
        "haystack",
        "terms",
        "merges",
        "dest",
        "config2",
        "tmp",
        "key",
        "intStarts",
        "scratch",
        "(",
        "raw",
        "transitions",
        "bb",
        "directory",
        "other",
        "state",
        "termOffsets",
        "i",
        "in",
        "fieldInfo",
        "vals",
        "term",
        "smaller",
        "addedList",
        "postingsArray",
        ";",
        "\"",
        "formats",
        "rowCells",
        "untrackedFolders",
        "tries",
        "path",
        "lst",
        "shared",
        "mbk",
        "Block",
        "res",
        "extNames",
        "crA",
        "attribute",
        "input",
        "0",
        "parentIds",
        "bbox",
        "prefix",
        "format",
        "get",
        "tokenizer",
        "r",
        "out",
        "start",
        "lastReturned",
        "src",
        "units",
        "ptg",
        "lastEntryReturned",
        "}",
        "c",
        "params",
        "Character",
        "style",
        "backingMap",
        "filenames",
        "text",
        "array2",
        "concatenated",
        "current",
        "currentRevision",
        "zbuf",
        "e",
        "pool",
        "line",
        "encoding",
        "cmd",
        "_definedNames",
        "commits",
        "spec",
        ":",
        "pFmt",
        "docStarts",
        "_array",
        "_input",
        "br",
        "iterator",
        "outputs",
        "records",
        "newParents",
        "iter",
        "xf",
        "prefixes",
        "entry",
        "value",
        "Constants",
        "phraseCandidate",
        "subs",
        "otherBuffer",
        "defaultField",
        "fields",
        "normalizedPath",
        "poi",
        "Tree",
        "argv",
        "defaultPalette",
        "s0",
        "a",
        "block",
        "indexField",
        "refEval",
        "starts",
        "rs",
        "array",
        "mcr",
        "TYPE_TREE"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Opening Parenthesis, Closing Parenthesis, Array Access Operator, Assignment Operator, Increment Operator, Equality Operator, Semicolon",
      "Semantic Tags": [
        "Data Structures",
        "File Processing",
        "Text Processing",
        "Algorithm Implementation",
        "Object Serialization"
      ],
      "Description": "The tokens represent a mix of data structures (arrays, lists, maps), file processing (IOUtils, Paths), text processing (string manipulation, tokenization), algorithm implementation (loops, conditional statements), and object serialization (byte arrays, object IDs).  The code snippets showcase various C# programming constructs and techniques used in different contexts, such as data manipulation, file I/O, and algorithm design. The dot operator is used extensively for method invocation on objects.  The special characters play their standard syntactic roles in C# syntax."
    }
  },
  {
    "c128": {
      "Unique tokens": [
        "AND",
        "isInRange",
        ".",
        "eof",
        "peekNextClass",
        "indexOf",
        "uri",
        "get",
        "equals",
        "getClipboardFormat",
        "matches",
        "states",
        "RandomAccess",
        "isEmpty",
        "=",
        "remaining",
        "getFilter",
        ")",
        "length",
        "getNumberOfTransitions",
        "(",
        "getUShort",
        "endsWith",
        "hasNext",
        "tokenized",
        "state",
        "AtomTransition",
        "size",
        "isNaN",
        "getMinX",
        "instanceof",
        "StarLoopEntryState",
        "getSid",
        "indexOptions"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Method Invocation",
        "String Manipulation",
        "Data Structures",
        "Conditional Logic",
        "Input/Output Operations"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include logical operators (AND), method calls using the dot operator (.), string manipulation methods (indexOf, endsWith, equals), data structure operations (isEmpty, size, length), conditional statements (if, else), and input/output operations (read, write).  These tokens and their usage are fundamental to C# programming, enabling various functionalities such as data processing, string manipulation, and control flow."
    }
  },
  {
    "c129": {
      "Unique tokens": [
        "Term",
        "(",
        "Parser"
      ],
      "Syntactic Label": "Constructor Parameters",
      "Semantic Tags": [
        "Object Creation",
        "Constructor Injection",
        "Parameter Initialization",
        "Class Instantiation",
        "Dependency Injection"
      ],
      "Description": "The tokens represent parameters within constructor declarations in C#.  They define the input values used to initialize the object's state upon creation.  The semantic tags highlight the core aspects of this code: creating new objects, passing dependencies to constructors, and setting up initial values for object properties. This is a fundamental concept in object-oriented programming, crucial for managing object lifecycles and dependencies."
    }
  },
  {
    "c130": {
      "Unique tokens": [
        "describeInstances",
        "describeHsmClientCertificates",
        "describeReservedDBInstances",
        "listClusters",
        "listJobs",
        "describeAddresses",
        "describeSpotInstanceRequests",
        "listPresets",
        "describeStacks",
        "listDomainNames",
        "describeDBSecurityGroups",
        "describeCacheParameterGroups",
        "describeInterconnects",
        "describeVolumes",
        "describeCustomerGateways",
        "describeReservedCacheNodes",
        "describeAutoScalingGroups",
        "describeEvents",
        "describeTags",
        "describeDBSnapshots",
        "describeClusterParameterGroups",
        "describeInternetGateways",
        "describeConversionTasks",
        "describeImages",
        "describeVirtualInterfaces",
        "describeSubnets",
        "describeSpotPriceHistory",
        "describeDhcpOptions",
        "describeClusterSubnetGroups",
        "listPipelines",
        "deleteSpotDatafeedSubscription",
        "listOperations",
        "describeClusterSnapshots",
        "describeBundleTasks",
        "describeAvailabilityZones",
        "describeDBInstances",
        "describeRegions",
        "describeDBParameterGroups",
        "describeVpcs",
        "describeSnapshots",
        "listReusableDelegationSets",
        "describeReservedNodeOfferings",
        "describeReservedDBInstancesOfferings",
        "describeScalingActivities",
        "getSendStatistics",
        "describeVolumeStatus",
        "describeClusters",
        "describeAutoScalingNotificationTypes",
        "listVerifiedEmailAddresses",
        "describeNetworkAcls",
        "getHostedZoneCount",
        "describeNotificationConfigurations",
        "describeCacheSubnetGroups",
        "describeHsmConfigurations",
        "describeMetricCollectionTypes",
        "describeDomains",
        "describeCacheEngineVersions",
        "listApplications",
        "describeWorkspaces",
        "describeAutoScalingInstances",
        "describeCacheSecurityGroups",
        "listHostedZones",
        "describeReplicationGroups",
        "describePlacementGroups",
        "describeReservedNodes",
        "describeReservedInstancesModifications",
        "allocateAddress",
        "listTables",
        "describeTerminationPolicyTypes",
        "describeOrderableClusterOptions",
        "describeVpnGateways",
        "describeWorkspaceDirectories",
        "describeLaunchConfigurations",
        "describeAccountLimits",
        "describeAccountAttributes",
        "describeScheduledActions",
        "describeVirtualGateways",
        "listStreams",
        "listDomains",
        "describeEventSubscriptions",
        "describeAlarms",
        "describeInstanceStatus",
        "describeWorkspaceBundles",
        "describeCacheClusters",
        "describeSpotDatafeedSubscription",
        "describeJobFlows",
        "getSendQuota",
        "describeDBSubnetGroups",
        "listGeoLocations",
        "listStacks",
        "describePolicies",
        "describeKeyPairs",
        "describeAlarmHistory",
        "describeLoadBalancerPolicyTypes",
        "listIdentities",
        "describeReservedInstancesListings",
        "describeLoadBalancerPolicies",
        "describeSecurityGroups",
        "describeLoadBalancers",
        "listHealthChecks",
        "describeEventCategories",
        "describeClusterVersions",
        "createInternetGateway",
        "describeReservedInstancesOfferings"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "Cloud Resource Management",
        "AWS API Gateway",
        "Metadata Access",
        "Resource Description",
        "System Administration"
      ],
      "Description": "These tokens represent methods in a C# AWS SDK, likely designed for interacting with various AWS services.  Each method appears to retrieve descriptive information or perform actions related to managing different AWS resources (e.g., instances, volumes, security groups). The pattern of each method taking a request object and returning a result object is consistent with the AWS SDK design pattern."
    }
  },
  {
    "c131": {
      "Unique tokens": [
        "public",
        "byte",
        "final",
        "synchronized",
        "E",
        "int",
        "long",
        "boolean",
        "String",
        "File",
        "ObjectId"
      ],
      "Syntactic Label": "C# Keywords and Data Types",
      "Semantic Tags": [
        "Access Modifiers",
        "Data Types",
        "Concurrency",
        "Data Structures",
        "Object Identifiers"
      ],
      "Description": "The tokens represent a mix of C# keywords that define access levels (public), control thread synchronization (synchronized), and indicate immutability (final), along with several built-in data types (byte, int, long, boolean, String, File) and a custom type ObjectId.  These are fundamental elements in C# programming, crucial for structuring code, managing data, and handling concurrency."
    }
  },
  {
    "c132": {
      "Unique tokens": [
        "",
        "elseoffset2",
        "stop",
        "packed",
        "off",
        "mValues",
        "f",
        "df",
        "queries",
        "outputList",
        "maxFacetDepth",
        "tags",
        "j",
        "b",
        "isFirstLine",
        "indexIsCurrent",
        "secondaryProgress",
        "dsc",
        "termUpto",
        "refs",
        "pass",
        "ptr",
        "resLen",
        "currentSentence",
        "remainingBytes",
        "hash",
        "positions",
        "nFrames",
        "ctf",
        "k1",
        "inStream",
        "_protectRecord",
        "reopenLock",
        "root",
        "multiplier",
        "sizeIsValid",
        "ord",
        "int",
        "refCount",
        "w5",
        "expectedModCount",
        "foundUnicode",
        "length",
        "bufferUpto",
        "shapes",
        "str",
        "set",
        "refSpecs",
        "nr",
        "decoder",
        "needsExclamation",
        "buffer",
        "vlst",
        "w3",
        "sectionText",
        "result",
        "bq",
        "bytesRemaining",
        "thisLong",
        "oldlen",
        "pos",
        "_passwordRecord",
        "round",
        "costs",
        "_scenarioProtectRecord",
        "offset",
        "fieldInfos",
        "spare",
        "wbRecords",
        "scratchSegment",
        "endIndex",
        "credentials",
        "_firstColumnIndex",
        "dtfmt",
        "offset2",
        "_objectProtectRecord",
        "ud",
        "first",
        "excelFont",
        "len",
        "thisDouble",
        "mKeys",
        "waitingGen",
        "[",
        "inSection",
        "insideQuote",
        "currentBlockCardinality",
        "maxDims",
        "policy",
        "currPtr",
        "look",
        "updatedLexerActions",
        "end",
        "lemmas",
        "otherFloat",
        "hex",
        "arg3",
        "seekPending",
        "w4",
        "otherDouble",
        "aeSum",
        "retval",
        "byteCount",
        "last",
        "numRuns",
        "keepTogetherSize",
        "payload",
        "name",
        "tokens",
        "skipEofCheck",
        "stopWords",
        "success",
        "bytesWritten",
        "s",
        "la1tokens",
        "true",
        "filters",
        "pList",
        "didIndexNext",
        "ve1",
        "lastRightID",
        "upto",
        "anchor",
        "size",
        "|=",
        "msg",
        "arg",
        "lastFormats",
        "exc",
        "Link",
        "intervals",
        "listener",
        "docData",
        "temp",
        "p",
        "absoluteOffsets",
        "resolved",
        "columnIx",
        "incrementOpen",
        "currentBlock",
        "forwardPos",
        ".",
        "otherInt",
        "serialNum",
        "subSlices",
        "w2",
        "prevPtr",
        "index",
        "--",
        "found",
        "k",
        "analyzerName",
        "_recStream",
        "bytes",
        "closed",
        "setClass",
        "lf",
        "loose",
        "new",
        "firstInPath",
        "_currentRowIndex",
        "ve0",
        "link",
        "thisPos",
        "bufferOffset",
        "ts",
        "parts",
        "thisByte",
        "clauses",
        "blockRef",
        "pow10",
        "recallPoints",
        "ret",
        "getInputStream",
        "dateRes",
        "entryForNullKey",
        "numSyllables",
        "totalHits",
        "positionsArray",
        "field",
        "=",
        "backIndex",
        "uniformSkip",
        "otherLong",
        "terms",
        "prior",
        "samplingRate",
        "next",
        "thisFloat",
        "remainingData",
        "backWordPos",
        "indexSDP",
        "maxUsedMem",
        "write",
        "backID",
        "d",
        "comparator",
        "state",
        "shift",
        "tracker",
        "waitForPos",
        "notesCommit",
        "lastDateFormat",
        "i",
        "clazz",
        "_ctx",
        "n",
        "w",
        "subtotal",
        "functionCode",
        "part",
        "elapsed",
        "addedList",
        "thisInt",
        "functionName",
        ";",
        "hi",
        "hadoopConfig",
        "linkSize",
        "filler",
        "postingsReader",
        "waitTimeSec",
        "sc",
        "level",
        "encoder",
        "res",
        "vocabularyIS",
        "sizeInBytes",
        "userPassword",
        "newSize",
        "now",
        "doc",
        "0",
        "cmp",
        "r",
        "out",
        "tnode",
        "c",
        "pending",
        "start",
        "_binaryExponent",
        "currentFont",
        "src",
        "avg",
        "params",
        "ch",
        "ptg",
        "prec",
        "text",
        "current",
        "e",
        "taxoWriter",
        "arrayPtgs",
        "denominator",
        "cmd",
        "+=",
        "remaining",
        "bos",
        "mState",
        "_currentRectangleGroup",
        "trie",
        "revision",
        "_input",
        "quoteCount",
        "_lastColumnIndex",
        "termOrd",
        "enumerator",
        "mSecondaryProgress",
        "retctx",
        "_parentctx",
        "uniformCnt",
        "nextValues",
        "count",
        "rc",
        "invokingState",
        "removalIndex",
        "value",
        "lastPosition",
        "optionFlags",
        "otherByte",
        "_tokenFactorySourcePair",
        "a",
        "bse",
        "block",
        "biffName",
        "backPos",
        "w1",
        "info",
        "left"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c133": {
      "Unique tokens": [
        "\"",
        "slice",
        "null",
        ",",
        ".",
        "return",
        "sb",
        "throw",
        "--",
        "new",
        "appendCoreFlags",
        "+",
        "rowIndex",
        "[/IFMT]",
        "?",
        "1000L",
        "segString",
        "r",
        "[",
        "if",
        "}",
        "{",
        "wrap",
        "getConfig",
        "v",
        "hash",
        "==",
        "INSTANCE",
        "_other",
        "e",
        "add",
        "]",
        "=",
        ":",
        "this",
        "newElements",
        "writeChecksum",
        ")",
        "append",
        "set",
        "&&",
        "true",
        "parseEntry",
        "(",
        "legacyCredential",
        "Constants",
        "other",
        "1",
        "status",
        "result",
        "absRowIx",
        "sharedContextCache",
        "columnIndex",
        "handle",
        "_evaluator",
        "-",
        "a",
        "absColIx",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Object Creation",
        "Method Invocation",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords (if, return, throw), operators (+, -, ==, !=, &&), object creation (new), method invocations (append, get, set, etc.), data structure usage (arrays, lists, maps), and special symbols (parentheses, brackets, braces).  These tokens and their arrangement within the sentences reveal the structure and logic of the C# code, encompassing control flow, exception handling, object manipulation, and data processing."
    }
  },
  {
    "c134": {
      "Unique tokens": [
        "=",
        "break",
        ":",
        "if",
        "return",
        "}",
        ")",
        "true",
        "int",
        "-",
        "{",
        "!",
        "(",
        ";",
        "false"
      ],
      "Syntactic Label": "C# language constructs and operators",
      "Semantic Tags": [
        "Control Flow",
        "Boolean Logic",
        "Assignment",
        "Iteration",
        "Conditional Statements"
      ],
      "Description": "The tokens represent fundamental C# language elements.  '=','{','}',';','(',')' are basic syntax components. 'if', 'return', and 'break' control program flow. '!', '&&', and boolean literals ('true', 'false') handle boolean logic. 'int' is a data type. The '-' operator is used for arithmetic operations. These elements are essential for creating functions that perform conditional logic, iterative processes, and return values."
    }
  },
  {
    "c135": {
      "Unique tokens": [
        "public"
      ],
      "Syntactic Label": "Access Modifier",
      "Semantic Tags": [
        "Access Control",
        "Object-Oriented Programming",
        "Encapsulation",
        "Method Declaration",
        "API Design"
      ],
      "Description": "The `public` keyword is an access modifier in C#. It specifies that the methods declared after it are accessible from any other class or code within the application.  This is crucial for designing APIs and controlling access to the functionality of a class. In the context provided, all the methods are public, suggesting they are part of a publicly accessible API."
    }
  },
  {
    "c136": {
      "Unique tokens": [
        "Iterator",
        "Counter",
        "Parser",
        "Directory",
        "f",
        "FST",
        "char",
        "Collection",
        "Config",
        "Reader",
        "ObjectId",
        "Message",
        "SortedSet",
        "Lexer",
        "List",
        "Query",
        "<",
        "long",
        "Scorable",
        "Distribution",
        "Session",
        "byte",
        "Similarity",
        "Object",
        "float",
        "short",
        "TermsEnum",
        "final",
        "Throwable",
        "OutputStream",
        "Calendar",
        "int",
        "CellReference",
        "Facets",
        "Sheet",
        "Sort",
        "s",
        "Repository",
        "InputStream",
        "Fields",
        "File",
        "Checksum",
        "Path",
        "Writer",
        "Bits",
        "double",
        "CharSequence",
        "flags",
        "Token",
        "Map",
        "..",
        "boolean",
        "String",
        "AreaReference"
      ],
      "Syntactic Label": "Constructor parameters",
      "Semantic Tags": [
        "Object instantiation",
        "Class Initialization",
        "Data Structures",
        "Parameter Passing",
        "Exception Handling"
      ],
      "Description": "The tokens represent various data types and identifiers used as parameters in constructors across numerous C# classes.  These constructors initialize objects of different classes, often involving data structures like Maps, Lists, and Sets.  The code also demonstrates exception handling using constructs like `NullPointerException` and `IllegalArgumentException` to ensure data integrity and robustness."
    }
  },
  {
    "c137": {
      "Unique tokens": [
        "supported",
        "expect",
        "Benchmark",
        "Explicit",
        "cannot",
        "A",
        "clone",
        "document",
        "Parent",
        "set",
        "length",
        "buffer",
        "-",
        "Unhandled",
        "from",
        "range:",
        "It",
        "data",
        "base",
        "missing",
        "of",
        "specifiy",
        "Did",
        "supplied",
        "use",
        "Only",
        "Point,",
        "size:",
        "pre-increment",
        "after",
        "Failed",
        "released.",
        "open",
        "number",
        "snapshot",
        "DEBUG",
        "compare",
        "for",
        "method",
        "session",
        "commit",
        "closer",
        "operator",
        "property!",
        "return",
        "buffersize",
        "support",
        "information",
        "executed",
        "The",
        "creating",
        "built-in",
        "differnt",
        "<error",
        "null!",
        "know",
        "bytesStart",
        "specified.",
        "as",
        "range",
        "Metadata",
        "RefCount",
        "are",
        "in",
        "Requested",
        "got:",
        "Assume",
        "without",
        "at",
        "type",
        "termination",
        "function",
        "currently",
        "[]",
        "rowIndex",
        "than",
        "Call",
        "Workbook.",
        "Error:",
        "backwards",
        "greater",
        "Not",
        "seek",
        "type:",
        "Can",
        "belong",
        "ID",
        "length():",
        "change",
        "columnIndex",
        "may",
        "Ignoring",
        "and",
        "to",
        "one",
        "version",
        "2",
        "Message",
        "pass",
        "Specified",
        "called",
        "parameter",
        "value:",
        "Shared",
        "(got",
        "parsing",
        "resource",
        "passed",
        "acquired",
        "fetch",
        "failed",
        "cell",
        "find",
        "formula",
        "list",
        "configuration",
        "between",
        "offset",
        "not",
        "argument",
        "first",
        "exceeds",
        "<=",
        "Are",
        "SheetIndex:",
        "how",
        "Decoded",
        "placeholder",
        "with",
        "this",
        "15min",
        "Term",
        "code",
        "yet",
        "Duplicate",
        "listener",
        "lexical",
        "workbook?",
        "is",
        "expected",
        "clipRect",
        "invalid",
        "field",
        "more",
        "setUpstream.",
        "constructed",
        "state",
        "Cannot",
        "path",
        "row",
        "the",
        "0",
        "format",
        "trying",
        "outside",
        "or",
        "Unknown",
        "modify",
        "text",
        "unexpected",
        "role",
        "returned",
        "error",
        "call",
        ":",
        "&&",
        "value",
        "interior",
        "bytesID",
        "a",
        "was",
        "java.io.Closeable",
        "unchecked",
        "have",
        "query",
        "PostingsFormat",
        "token",
        "only",
        "<",
        "You",
        "Conversion:",
        "se",
        "copy",
        "NaN",
        "statement",
        "instance",
        "defined",
        "child",
        "components",
        "node",
        "Formula",
        "Position:",
        "Illegal",
        "Cell",
        ">",
        "from=",
        "already",
        "full",
        "read",
        "please",
        "file",
        "small.",
        "back",
        "on",
        "Style",
        "can",
        "No",
        "boolean",
        "IOException",
        "id",
        "closed",
        "valid",
        "but",
        "does",
        "Tag",
        "assign",
        "'area_num'",
        "multi",
        "evaluate",
        "Entry",
        "should",
        "write",
        "record",
        "zero",
        "no",
        "avoiding",
        "during",
        "duration",
        "\"",
        "Parser",
        "contain",
        "out",
        "collector",
        "'",
        "precedence",
        "(pos=",
        "instead",
        "Missing",
        "yet)",
        "iterator",
        "copyArea",
        "There",
        "array",
        "(0..",
        "via",
        "elements.",
        "element",
        "1Hr",
        "be",
        "byteStart",
        ")",
        "endEvaluate",
        "least",
        "must",
        "sheetIndex:",
        "null",
        "too",
        "leaks.",
        "Error",
        "workbook",
        "Mark",
        "Unable",
        "shape",
        "==",
        "values",
        "offset:",
        "required",
        ">=",
        "name",
        "construct",
        "allowed",
        "1",
        "Configuration",
        "size",
        "CFTAG_WINDOWS.",
        "Version",
        "mismatch",
        "_values",
        "name.",
        "unchanged.",
        "empty",
        "index",
        "new",
        "found",
        "Incomplete",
        "+",
        "trace",
        "you",
        "attached",
        "startEvaluate",
        "Coding",
        "This",
        "non-equality",
        "sessionID",
        "(",
        "specified",
        "VERSION_CURRENT",
        ";",
        "shared",
        "account",
        "higher.",
        "AWS",
        "start",
        "style",
        "clause",
        "DocumentEntry",
        "names",
        "matching",
        "stack",
        "size=",
        "allowable",
        "parameters:",
        "an",
        "choice",
        "Invalid",
        "never",
        "update",
        "initialized"
      ],
      "Syntactic Label": "Exception Handling and Control Flow",
      "Semantic Tags": [
        "Exception Handling",
        "Input Validation",
        "Resource Management",
        "Control Flow",
        "Configuration"
      ],
      "Description": "The code snippets demonstrate exception handling using `IllegalArgumentException`, `RuntimeException`, `IOException`, `NullPointerException`, `IllegalStateException`, and `UnexpectedPropertySetTypeException`.  They also showcase control flow using `if`, `else`, `switch`, and loops.  Resource management is evident in methods that handle resource acquisition and release.  Input validation is performed on method parameters.  Configuration is handled through the use of Map<String,String> arguments."
    }
  },
  {
    "c138": {
      "Unique tokens": [
        "",
        "(compressionMode=",
        "UTF_8",
        "maxTokenCount=",
        "b",
        "getCurrentToken",
        "arearef",
        "toArray",
        "MAX_RECORD_LENGTH",
        "2",
        "?",
        "areaRef",
        "formula1",
        "bitsPerValue",
        "<",
        "long",
        "firstCol",
        "sheetName",
        ",size=",
        "short",
        "DefaultFileModeStrategy",
        "modified",
        "objRecord",
        "append",
        ")",
        "set",
        "length",
        "isDeleteOK",
        "cf",
        "ctx",
        "-",
        "maxDocsPerChunk=",
        "TOPO",
        "null",
        ",",
        "encryptionMaterials",
        "reading,",
        ">",
        "bytesUsed",
        "shape",
        "[",
        "<=",
        "sec.",
        "isBlipId",
        "*",
        "parents",
        "sorting,",
        "==",
        "false",
        "sre",
        ">=",
        "bsr",
        "this",
        "AssociationFacetField(dim=",
        "lastCol",
        "name",
        "cardinality",
        "maxMergeSizeBytes",
        "true",
        "merging),",
        "size",
        "1",
        "msg",
        "class",
        "MAX_BLOCK_SIZE",
        "firstRow",
        "StandardCharsets",
        "p",
        "complexData",
        "EXCEL2007",
        "AreaReference",
        "tz",
        ".",
        "sid",
        "index",
        "credentials",
        "new",
        "searcher",
        "id",
        "+",
        "rule2",
        "st",
        "segmentOptimizationEnabled",
        "v",
        "INSTANCE",
        "pageSize",
        "elements",
        "slop",
        "url",
        "sheetIndex",
        "(",
        "state",
        "SpreadsheetVersion",
        "in",
        "externIdx",
        "DEFAULT_MAX_SHINGLE_SIZE",
        "/",
        "!=",
        ";",
        "\"",
        "path",
        "ipv4-associations/",
        "childWeight",
        "input",
        "bookIndex",
        "0",
        "sheet",
        "getRow",
        "lookup",
        "c",
        "acceptableOverheadRatio",
        "}",
        "field_14_border_styles2",
        "(bitsPerValue=",
        "1024",
        "]",
        ":",
        "&",
        "profile",
        "&&",
        "dictFile",
        "EXCEL97",
        "columnIndex",
        "sheetNames",
        "lastRow",
        "String",
        "other"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Spreadsheet Data Processing",
        "Formula Evaluation",
        "Conditional Formatting",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements including keywords, operators, identifiers, and literals.  They are used in the context of spreadsheet data processing, formula evaluation, conditional formatting, and file I/O operations.  The code snippets show methods for creating and manipulating spreadsheet objects, evaluating formulas, applying conditional formatting rules, and reading/writing data to files.  The semantic tags reflect the high-level functionality of the code, focusing on the domain and purpose of the operations."
    }
  },
  {
    "c139": {
      "Unique tokens": [
        "",
        "0xFF",
        "0x80",
        ".",
        ">>>",
        "+",
        "<<",
        "0x3",
        "52",
        "%",
        "byte",
        "12",
        "+=",
        ")",
        "0x01",
        "&",
        "|=",
        "0x07FF",
        "-",
        ">>",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Bitwise Operations",
        "Data Decoding",
        "Data Encoding",
        "Byte Manipulation",
        "Integer Arithmetic"
      ],
      "Description": "The tokens represent a combination of C# operators and hexadecimal literals used extensively in bitwise operations, data decoding and encoding processes.  They manipulate bytes and integers at a low level, often for tasks such as data serialization, deserialization, or working with binary data formats.  The hex literals (e.g., 0xFF, 0x80) are used as bit masks. Operators like >>>, <<, +, |, &, |=, %, /, != perform bit shifting, addition, bitwise OR, AND, OR assignment, modulo, division, and inequality comparisons. These are fundamental to working with binary data structures and algorithms in C#."
    }
  },
  {
    "c140": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Client-Server Interaction",
        "Input Data"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK, likely interacting with an API Gateway. Each method takes a request object as input, processes it (potentially using a 'beforeClientExecution' pre-processing step), and then executes a corresponding operation (e.g., 'executeCreateDeployment'). The semantic tags highlight the role of 'request' in this client-server communication pattern, where it carries data from the client to the AWS service."
    }
  },
  {
    "c141": {
      "Unique tokens": [
        "LittleEndianOutput",
        "ByteBuffer",
        "out",
        "in",
        ")",
        "LittleEndianInput"
      ],
      "Syntactic Label": "Data Serialization Methods and Parameters",
      "Semantic Tags": [
        "Data Serialization",
        "Binary Data",
        "Little Endian Encoding",
        "Output Stream",
        "Input Stream"
      ],
      "Description": "The tokens represent methods and parameters involved in serializing data using a LittleEndianOutput stream.  LittleEndianOutput and LittleEndianInput are classes likely handling binary data serialization in little-endian format.  The 'out' and 'in' parameters are common conventions for output and input streams, respectively.  The 'ByteBuffer' suggests potential use of byte buffers for data manipulation. The methods consistently use the LittleEndianOutput stream to write various data types (shorts, bytes, ints, etc.), indicating a binary serialization process."
    }
  },
  {
    "c142": {
      "Unique tokens": [
        "",
        "(0..",
        "supported",
        "stop",
        "and",
        "bounds",
        "one",
        "to",
        "have",
        "version",
        "bigger",
        "corruption",
        "128",
        "2",
        "(resource",
        "cannot",
        "Specified",
        "called",
        "initialized",
        "mergedDocs",
        "requested",
        "parameter",
        "<",
        "indexed",
        "comparisons",
        "Given",
        "was:",
        "(got",
        "Wrote",
        "docid",
        "formulas",
        "OLE2",
        "be",
        "define",
        "codec",
        "copy",
        "passed",
        "document",
        "statement",
        ")",
        "expr2",
        "failed",
        "set",
        "length",
        "str",
        "Connection",
        "cell",
        "integer",
        "find",
        "formula",
        "buffer",
        "least",
        "8.0",
        "configuration",
        "-",
        "must",
        "can't",
        "from",
        "AttributeSource",
        "secret",
        "EOF",
        "numDocs=",
        "config",
        "offset",
        "instances",
        "null",
        "having",
        "not",
        "timed",
        "too",
        "characters",
        "missing",
        "overflow?",
        "of",
        "stream",
        "Mark",
        ">",
        "by",
        "supplied",
        "decode",
        "len",
        "use",
        "Unable",
        "Private",
        "<=",
        "255",
        "Only",
        "full",
        "'between'",
        "end",
        "docCount",
        "minVersion",
        "read",
        "==",
        "reused",
        "character",
        "after",
        "file",
        "with",
        "Failed",
        "byte",
        ">=",
        "positive",
        "this",
        "created",
        "expired",
        "cellLoc",
        "number",
        "Sheet",
        "header=",
        "code",
        "used",
        "field.",
        "ordinal",
        "allowed",
        "1",
        "size",
        "[1,",
        "that",
        "compare",
        "end:",
        "for",
        "literals",
        "can",
        "Public",
        "DFAs",
        "pair",
        "produced",
        "srcLen",
        "passwordVerifier",
        "include",
        ".",
        "return",
        "Max",
        "retry",
        "Secret.",
        "empty",
        "index",
        "+",
        "valid",
        "closed",
        "but",
        "times",
        "match",
        "Could",
        "header",
        "is",
        "numBytes",
        "release()",
        "being",
        "provide",
        "bytesStart",
        "invalid",
        "simple",
        "field",
        "Unexpected",
        "connect",
        "=",
        "range",
        "coding",
        "while",
        "Min",
        "contract",
        "allowed.",
        "key",
        "has",
        "less",
        "tokenized",
        "directory",
        "segment",
        "parallel",
        "0,",
        "in",
        "got",
        "zero",
        "no",
        "later.",
        "shingle",
        "string",
        "java",
        "range,",
        "at",
        ";",
        "type",
        "\"",
        "function",
        "Cannot",
        "stored",
        "Directory",
        "shared",
        "max",
        "the",
        "input",
        "0",
        "parameters",
        "IndexCommits",
        "rowIndex",
        "contain",
        "than",
        "sure",
        "ECS",
        "start",
        "or",
        "different",
        "out",
        "BytesRef",
        "'",
        "}",
        "snapshots",
        "into",
        "greater",
        "255:",
        "null.",
        "ASCII",
        "precedence",
        "call",
        "error",
        "tasks",
        "actual",
        "Missing",
        "number:",
        "been",
        "records",
        "allowable",
        "ID",
        "int[]",
        "value",
        "parameters:",
        "an",
        "Stream",
        "fields",
        "prevent",
        "really",
        "XLS",
        "ASCII,",
        "may",
        "a",
        "subquery",
        "lastRow",
        "same",
        "[got",
        "Key"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Exception Handling",
        "Input Validation",
        "Parameter Handling",
        "File I/O",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide variety of C# language elements, including keywords, operators, identifiers, and literals.  The code snippets demonstrate exception handling (using try-catch blocks and throwing exceptions), input validation (checking parameter values and lengths), parameter handling (passing parameters to methods), file I/O (reading and writing to files), and the use of data structures (arrays, maps, and custom classes). The semantic tags reflect the common operations and functionalities performed by the code."
    }
  },
  {
    "c143": {
      "Unique tokens": [
        "public",
        "int",
        "final",
        "static"
      ],
      "Syntactic Label": "Access Modifiers, Return Type, Non-access modifiers",
      "Semantic Tags": [
        "Access Control",
        "Data Type Definition",
        "Method Declaration",
        "Static Methods",
        "Immutability"
      ],
      "Description": "These tokens are fundamental in C# for defining methods.  'public' controls access, 'int' and 'double' specify return types, 'static' indicates methods belong to the class itself rather than instances, and 'final' (in Java, equivalent to 'readonly' in C#) suggests immutability of variables within the method."
    }
  },
  {
    "c144": {
      "Unique tokens": [
        "",
        "getInt",
        "_modeStack",
        "f",
        "_root",
        "className",
        "to",
        "workingTreeIndex",
        "startIndex",
        "patternRuleIndex",
        "version",
        "qf",
        "b",
        "securityToken",
        "alt",
        "suffix",
        "AtomicReference",
        "docFreq",
        "?",
        "postings",
        "val",
        "analyzer",
        "nameName",
        "bitsPerValue",
        "Collections",
        "refs",
        "truncated",
        "chars",
        "articles",
        "requireNonNull",
        "firstCol",
        "k1",
        "sheetName",
        "old",
        "cal",
        "reader",
        "ruleIndex",
        "objRecord",
        "pattern",
        ")",
        "expand",
        "multiplier",
        "HashSet",
        "int",
        "set",
        "length",
        "buf",
        "str",
        "HSSFAnchor",
        "matcher",
        "wordType",
        "margin",
        "addAttribute",
        "entrySet",
        "innerIter",
        "boost",
        "list",
        "BufferedChecksum",
        "ctx",
        "Objects",
        "-",
        "o:",
        "repo",
        "fieldName",
        "from",
        "secret",
        "pos",
        "operatorInfix",
        "keyId",
        "infos",
        "if",
        "createURI",
        "scoreMode",
        "offset",
        "config",
        "null",
        "unlimited",
        "q",
        "firstRowIndex",
        "spContainer",
        "indexedField",
        "IOUtils",
        "of",
        "args",
        "pivot",
        ">",
        "decode",
        "nRules",
        "len",
        "maxLevels",
        "shape",
        "[",
        "distribution",
        "newForwardType",
        "end",
        "parents",
        "main",
        "readRemainder",
        "==",
        "DEFAULT_BLOCK_SIZE",
        "minVersion",
        "values",
        "fieldOp",
        "BufferedReader",
        "byte",
        "fieldNames",
        "bufferSize",
        "keySet",
        ">=",
        "rawQueryString",
        "actionIndex",
        "this",
        "fragmentsBuilder",
        "repository",
        "readerIndex",
        "grid",
        "evaluator",
        "complexSize",
        "subFrom",
        "s",
        "label",
        "semanticContext",
        "newHead",
        "useNaturalLanguageFormulasFlag",
        "Date",
        "note",
        "1",
        "size",
        "tmpHeaders",
        "opName",
        "IntervalSet",
        "propertyValue",
        "decision=",
        "ae",
        "queryID",
        "p",
        "thresh",
        "description",
        "provider",
        "slice",
        "qqNames",
        "180",
        "RefComparator",
        ".",
        "return",
        "resourceName",
        "re",
        "boolToInt",
        "char",
        "subSlices",
        "returnStates",
        "index",
        "dir",
        "bytes",
        "new",
        "--",
        "dce",
        "CherryPickStatus",
        "id",
        "+",
        "searcher",
        "removeTop",
        "defaultAnalyzer",
        "defaultConfig",
        "phraseHighlight",
        "externalWorkbookNumber",
        "isCtxDependent",
        "parser",
        "fragListBuilder",
        "regions",
        "deadEndConfigs",
        "field",
        "add",
        "=",
        "newSegmentSuffix",
        "range",
        "as",
        "lambda",
        "docMap",
        "scan",
        "credentialsProvider",
        "indexedBytes",
        "maxNumTerms",
        "ifSource",
        "cache",
        "kind",
        "(",
        "subSlice",
        "o",
        "directory",
        "state",
        "EMPTY_SOURCE",
        "getQueryMaker",
        "clear",
        "i",
        "pathElements",
        "in",
        "instanceof",
        "tokenName",
        "slopFactor",
        "followState",
        "tokenSource",
        "EncodingMode",
        "string",
        "!=",
        ";",
        "type",
        "\"",
        "stripHyphen",
        "State",
        "normalizer",
        "row",
        "childQuery",
        "tokenStream",
        "mask",
        "sourceBuffer",
        "parentsFilter",
        "doc",
        "input",
        "context",
        "0",
        "_recordCreatorsById",
        "inOrder",
        "predIndex",
        "termText",
        "sheet",
        "falseSource",
        "get",
        "start",
        "r",
        "offsetLimit",
        "c",
        "}",
        "fieldAnalyzers",
        "getPattern",
        "operation",
        "text",
        "ATNDeserializationOptions",
        "trueSource",
        "totalTermFreq",
        "errors",
        "capacity",
        "parent",
        "precedence",
        "+=",
        ":",
        "image",
        "fst",
        "HttpClientFactory",
        "profile",
        "payloads",
        "iter",
        "replacement",
        "dirCacheIndex",
        "value",
        "subs",
        "constant",
        "defaultField",
        "fields",
        "normalization",
        "score",
        "patternTree",
        "flags",
        "fieldMatch",
        "64",
        "DEFAULT_CHANNEL",
        "idArray",
        "a",
        "words",
        "super",
        "imap",
        "object",
        "indexField",
        "other",
        "maxScan",
        "strategy"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Structures",
        "Exception Handling",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language constructs.  Many are identifiers for objects (e.g., `AtomicReference`, `HashSet`, `BufferedReader`), methods (e.g., `getInt`, `requireNonNull`, `append`, `createURI`), or data structures (e.g., `Map`, `List`, `Set`).  The tokens `if`, `==`, `!=`, `>`, `>=` are used for control flow, while `try`, `catch` handle exceptions. The semantic tags reflect the overall functionality of the code snippets, which involve creating objects, calling methods, using various data structures, handling exceptions, and controlling the flow of execution."
    }
  },
  {
    "c145": {
      "Unique tokens": [
        "",
        "f",
        "PLACEHOLDER",
        "0L",
        "UTF_8",
        "b",
        "2",
        "val",
        "bitsPerValue",
        "getBytes",
        "chars",
        "getTime",
        "_flags",
        "1.0",
        "getValue",
        "long",
        "oneChar",
        "SizeOf",
        "getLong",
        "toByteArray",
        "MIN_VALUE",
        "short",
        "dst",
        "_data",
        ")",
        "int",
        "length",
        "buf",
        "str",
        "toCharArray",
        "buffer",
        "Integer",
        "bs",
        "-",
        "x",
        "ByteOrder",
        "Float",
        "fieldName",
        "sz",
        "valueOffset",
        "offset",
        "data",
        "null",
        ",",
        "UTF-16BE",
        "readShort",
        "_codepage",
        "blocks",
        "args",
        ">",
        "toIntExact",
        "[",
        "readLong",
        "inum",
        "locale",
        "csq",
        "==",
        "utf8",
        "false",
        "byte",
        "byteCount",
        "lnum",
        "this",
        "name",
        "getColWidth",
        "field_1_precision",
        "enc",
        "getCount",
        "4",
        "ints",
        "l",
        "idOffset",
        "oneByte",
        "s",
        "true",
        "field_1_index",
        "mark",
        "LA",
        "1",
        "size",
        "field_1_units",
        "getMode",
        "CHARSET_1252",
        ".",
        "toHexByteArray",
        "char",
        "idBuffer",
        "index",
        "bytes",
        "sid",
        "new",
        "id",
        "getCodepage",
        "+",
        "delta",
        "Client",
        "tokenStart",
        "16",
        "v",
        "readUnsignedShort",
        "_value",
        "toString",
        "getMaxChange",
        "elements",
        "LocaleUtil",
        "scratch",
        "lock",
        "(",
        "raw",
        "d",
        "o",
        "directory",
        "freq",
        "field_1_recalc",
        "valueOf",
        "i",
        "Long",
        "_rawData",
        "\"",
        "0xFF",
        "path",
        "level",
        "getCharCount",
        "max",
        "holder",
        "0",
        "getWindowing",
        "getIterations",
        "_reserved",
        "c",
        "ch",
        "}",
        "mutex",
        "{",
        "recordData",
        "e",
        "]",
        "field_1_margin",
        "dnum",
        "LONG",
        ":",
        "BIG_ENDIAN",
        "&",
        "String",
        "bufferPosition",
        "fnum",
        "value",
        "count",
        "flags",
        "Double",
        "8",
        "a",
        "INT",
        "other",
        "getBackup",
        "getDefault"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Data Serialization",
        "Input/Output Operations",
        "String Manipulation",
        "Numeric Operations",
        "Method Calls"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including variables, literals, operators, method calls, and keywords.  They are used in various methods to perform tasks such as data serialization (using LittleEndianOutput), string manipulation (using StringBuilder and String methods), numeric operations (conversions between data types), and input/output operations (reading and writing bytes and other data types). The methods demonstrate common programming patterns in C#, such as method overriding, exception handling, and using helper classes for specific tasks (e.g., LocaleUtil, ModifiedUtf8)."
    }
  },
  {
    "c146": {
      "Unique tokens": [
        "",
        "INFO",
        "state.",
        "REINTERESTING",
        "and",
        "createAnchorFromEscher",
        "StringUtil",
        "Math",
        "getObjRecord",
        "?",
        "initialSize",
        "Collections",
        "<",
        "blockSize",
        "dx2",
        "long",
        "requireNonNull",
        "report",
        "old",
        "checksum",
        "append",
        ")",
        "int",
        "~non~std~err(",
        "set",
        "length",
        "threadName",
        "legacyCredential",
        "currentTokenVal",
        "archiveSize",
        "_amountToMove",
        "masterUserPassword",
        "Integer",
        "result",
        "isExternal",
        "cellref",
        "Objects",
        "-",
        "OBJECT_TYPE_PICTURE",
        "createCFAggregate",
        "3",
        "PredictionContext",
        "K",
        "data",
        "null",
        ",",
        "dy2",
        "getSubRecords",
        "EscherContainerRecord",
        "sb",
        "checkNonGreedyDecision",
        "spContainer",
        "IOUtils",
        "CommonObjectDataSubRecord",
        "args",
        "workbook",
        ">",
        "getFormula2",
        "bytesUsed",
        "EscherOptRecord",
        "activeCellRow",
        "tagger",
        "[",
        "<=",
        "totalMaxDoc",
        "DirectTrackingAllocator",
        "childRecord",
        "==",
        "false",
        "keySet",
        "this",
        "parsePersonIdent",
        "ref",
        "name",
        "nameB",
        "array",
        "HSSFRichTextString",
        "true",
        "emptyList",
        "cacheSize",
        "1",
        "size",
        "file:",
        "p",
        "WikipediaTokenizer",
        "complexData",
        "LittleEndian",
        "OK",
        "getCachedContext",
        "slice",
        "CFRecordsAggregate",
        ".",
        "return",
        "empty",
        "author",
        "NUM_BYTES_OBJECT_REF",
        "new",
        "id",
        "+",
        "getInterpreter",
        "cherryPickedRefs",
        "dBInstanceClass",
        "maxTokenCount",
        "isCtxDependent",
        "original",
        "equals",
        "parser",
        "16",
        "engine",
        "UNSHALLOW",
        "RECORD_ID",
        "includeUpper",
        "expectedTokenSequencesVal",
        "add",
        "=",
        "code=",
        "another,",
        "phrasedQueryStringContents",
        "visited",
        "scan",
        "key",
        "hssf",
        "decisionToDFA",
        "_m",
        "upperTerm",
        "masterUsername",
        "filename",
        "(",
        "AttributeFactory",
        "raw",
        "NUM_BYTES_ARRAY_HEADER",
        "d",
        "comparator",
        "o",
        "state",
        "recognizer",
        "dx1",
        "VERTICAL_ALIGNMENT_TOP",
        "record",
        "i",
        "sharedContextCache",
        "in",
        "tokenImage",
        "dfa",
        "message",
        "string",
        "ARCS_FOR_DIRECT_ADDRESSING",
        "/",
        "mergeMaxNumSegments",
        "!=",
        ";",
        "\"",
        "builtInName",
        "valueCount",
        "path",
        "E",
        "strings",
        "nativeId",
        "input",
        "context",
        "0",
        "lowerTerm",
        "committer",
        "get",
        "r",
        "execute",
        "newFlag",
        "src",
        "includeLower",
        "c",
        "}",
        "case",
        "acceptableOverheadRatio",
        "'",
        "tokenImageVal",
        "OBJECT_TYPE_COMBO_BOX",
        "dy1",
        "alignObjectSize",
        "capacity",
        "e",
        "getChildById",
        "]",
        "getSet",
        "consumeAllTokens",
        ":",
        "activeCellCol",
        "lexState",
        "dBInstanceIdentifier",
        "sheetNumber",
        "estimatedMergeBytes",
        "&&",
        "TOKENS_ONLY",
        "value",
        "m",
        "HORIZONTAL_ALIGNMENT_LEFT",
        "getMutable",
        "DEEPEN_NOT",
        "parsed",
        "T",
        "minimumLength",
        "hasMultibyte",
        "rs",
        "super",
        "allocatedStorage",
        "command",
        "other",
        "unchecked"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Structures",
        "Control Flow",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords (e.g., \"public\", \"if\", \"return\"), operators (e.g., \".\", \"=\", \"==\"), identifiers (e.g., \"removeShape\", \"idFor\", \"AttributeFactory\"), data structure usage (e.g., \"Collections\", \"List\", \"HashMap\"), and method invocations (e.g., \".append\", \".get\", \".create\"). The semantic tags reflect the common operations performed in the code snippets, which involve creating objects, calling methods, manipulating data structures, controlling program flow, and performing file input/output operations.  These are fundamental aspects of C# programming."
    }
  },
  {
    "c147": {
      "Unique tokens": [
        "=",
        ")"
      ],
      "Syntactic Label": "Assignment Operator and Closing Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Request Object",
        "Method Call",
        "Return Value",
        "AWS SDK"
      ],
      "Description": "The '=' operator assigns the modified request object to the request parameter. The ')' closes the method's parameter list.  This pattern is common in AWS SDKs where a request object is modified before being passed to an execution method. The return statement then returns the result of the execution."
    }
  },
  {
    "c148": {
      "Unique tokens": [
        "setUserName",
        "setMessageBody",
        "buildBaseTree",
        "setTargetDBInstanceIdentifier",
        "setTags",
        "?",
        "setItems",
        "setCookieName",
        "setIfMatch",
        ")",
        "_position",
        "mCurrentAlpha",
        "setStorage",
        "setAttributeValue",
        "setVersionLabel",
        "setAvailabilityZone",
        "setAction",
        "setFilterName",
        "formatter",
        "-",
        "setCreateDate",
        "if",
        "setValue",
        "null",
        "setHadoopJarStep",
        "_sheetIndex",
        "setValues",
        "setProvisionedThroughput",
        ">",
        "setPrefix",
        "setParameterValue",
        "markedLineNumber",
        "setPolicyName",
        "setWriteCapacityUnits",
        "setDescription",
        "setDBSnapshotIdentifier",
        "==",
        "false",
        ">=",
        "setProtect",
        "this",
        "skipToNextByte",
        "_highIx",
        "delegate",
        "setEnvironmentName",
        "setName",
        "setBody",
        "setInstanceId",
        "setStrategy",
        "setTagKeys",
        ".",
        "return",
        "setCookieExpirationPeriod",
        "+",
        "parser",
        "setScriptBootstrapAction",
        "_value",
        "=",
        "setTemplateName",
        "mEndAlpha",
        "(",
        "setAcceptFormat",
        "childListener",
        "setCallerReference",
        "setAttribute",
        "!=",
        ";",
        "setVaultName",
        "0",
        "setInstances",
        "}",
        "_re",
        "setInstanceCount",
        "{",
        "setReceiptHandle",
        "setType",
        "]",
        ":",
        "_sheetIdentifier",
        "&&",
        "setItemName",
        "count",
        "setSerialNumber",
        "setLimit",
        "setOriginAccessIdentity",
        "setCreationDateTime",
        "_isQuoted"
      ],
      "Syntactic Label": "Method calls, variable assignments, and operators",
      "Semantic Tags": [
        "Object manipulation",
        "Data processing",
        "Control flow",
        "Method invocation",
        "State management"
      ],
      "Description": "The tokens represent a mix of C# method calls (setXXX methods), variable assignments (=), operators (==, !=, +, -, &&, >, >=), and other language constructs (if, return, null, this).  These are fundamental elements in C# programming, used for setting object properties, performing comparisons, controlling program flow, and returning values. The context sentences show these tokens being used in various methods, suggesting data processing and object state management within a larger application."
    }
  },
  {
    "c149": {
      "Unique tokens": [
        "stop",
        "off",
        "blocksOffset",
        "position",
        "to",
        "charCount",
        "tags",
        "inEnd",
        "suffix",
        "element",
        "docFreq",
        "initialSize",
        "val",
        "ptr",
        "doubleCount",
        "long",
        "startB",
        "short",
        "ruleIndex",
        ")",
        "int",
        "length",
        "srcOff",
        "numStrings",
        "pos",
        "offset",
        "limit",
        ",",
        "base",
        "blocks",
        "len",
        "[",
        "probs",
        "end",
        "iterations",
        "floatCount",
        "values",
        "byte",
        "srcCellCol",
        "byteCount",
        "Object",
        "float",
        "bufferSize",
        "dstStart",
        "name",
        "lo",
        "newLength",
        "minSize",
        "double",
        "p",
        "srcCellRow",
        "intCount",
        "srcRowIndex",
        "boolean",
        "srcLen",
        "endRow",
        "char",
        "index",
        "k",
        "srcOffset",
        "srcRow",
        "charsStart",
        "numWords",
        "dest",
        "destOff",
        "longCount",
        "shortCount",
        "sizeLimit",
        "state",
        "cnt",
        "wordOffset",
        "inPtr",
        "maxVersion",
        "location",
        "channel",
        "rowIndex",
        "srcCol",
        "start",
        "srcColumnIndex",
        "capacity",
        "nChars",
        "]",
        "charsLen",
        "dstOffset",
        "value",
        "count",
        "column",
        "columnIndex",
        "String",
        "startA",
        "valuesOffset"
      ],
      "Syntactic Label": "Array Indices, Variables, Data Types, Operators, Method Parameters",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Processing",
        "Bytecode Operations",
        "Numeric Operations",
        "Buffer Management"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Many are array indices and variables used to process data within arrays of various types (byte, int, long, float, double, char, boolean).  Operators like +, -, >>>, &, |, ^, ==, etc., are used for bitwise, arithmetic, and comparison operations. Method parameters show that functions are designed to work with arrays and perform operations on them.  The presence of buffer-related terms (offset, length, bufferSize) suggests that the code handles data buffers efficiently."
    }
  },
  {
    "c150": {
      "Unique tokens": [
        "getInt",
        "",
        "Got",
        ".fittopage",
        "7",
        "startIndex",
        "Math",
        "2",
        "colOffsetIx",
        "?",
        "MAX_BUF",
        "cannot",
        "DEFAULT_FILLER_TOKEN",
        "minTargetSize",
        "<",
        "parameter",
        "else",
        "bytesPerElement",
        "be",
        ")",
        "int",
        "length",
        "buf",
        "extra",
        "calculated",
        "(must",
        "buffer",
        "least",
        "Integer",
        "-",
        "must",
        "JRE_IS_64BIT",
        "sz",
        "if",
        "3",
        "offset",
        "offset=",
        "data",
        "null",
        ",",
        "not",
        "termLength",
        "of",
        "default",
        "args",
        ">",
        "exceeds",
        "packetSizeMustBeAtMost",
        "maxIn",
        "[",
        "FixedBitSet",
        "<=",
        "Arrays",
        "==",
        "false",
        "byte",
        ">=",
        "this",
        "HDR_SIZE",
        "fillerToken",
        "codePoints",
        "4",
        "pAt",
        "FuzzyTermsEnum",
        "true",
        "allowed",
        "1",
        "maxShingleSize",
        "size",
        "prefixLength",
        "maxExpansions",
        "transpositions",
        "for",
        "outputUnigramsIfNoShingles",
        "inc.length=",
        "putByte",
        "IllegalArgumentException",
        "MAX_ARRAY_LENGTH",
        "!",
        "LittleEndian",
        "currentBlock",
        "getBoolean",
        ".",
        "return",
        "Max",
        "throw",
        "automata",
        "0x7ffffffc",
        "bytes",
        "index",
        "new",
        "+",
        "rules",
        "LevenshteinAutomata",
        "is",
        "sheetEvaluators",
        "readFully",
        "16",
        "minShingleSize",
        "posStart=",
        "=",
        "isEmpty",
        "range",
        "final",
        "ShingleFilter",
        "Min",
        "(",
        "is16BitFlag",
        "IllegalStateException",
        "valueOf",
        "cnt",
        "i",
        "in",
        "os",
        "no",
        "negative:",
        "chan",
        "getBufferStartIndex",
        "DEFAULT_MIN_SHINGLE_SIZE",
        "0x7ffffff8",
        "DEFAULT_MAX_SHINGLE_SIZE",
        ">>",
        "shingle",
        "at",
        ";",
        "!=",
        "\"",
        "JGitText",
        ",bytes.length=",
        "tokenSeparator",
        "switch",
        "bounds:",
        "putUShort",
        "the",
        "max",
        "maxGramSize",
        "newSize",
        "0",
        ",length=",
        "0x7ffffffe",
        "than",
        "format",
        "get",
        "r",
        "out",
        "_endIndex",
        "outside",
        "System",
        "}",
        "wmfImageLength",
        "<<",
        "case",
        "Unknown",
        "{",
        "_writeIndex",
        "text",
        "greater",
        "maximum",
        "DEFAULT_TOKEN_SEPARATOR",
        "nChars",
        "outputUnigrams",
        "]",
        ":",
        "remaining",
        "maxBytesPerChar:",
        "&",
        "(too",
        "MAXIMUM_SUPPORTED_DISTANCE",
        "allowable",
        "Constants",
        "parameters:",
        "blockSize+1:",
        "Invalid",
        "minIn",
        "ramBytesUsed",
        "[0,",
        "..",
        "8",
        "minimumLength",
        "block",
        "maxEdits"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Input Validation",
        "Exception Handling",
        "Data Structures",
        "Array Manipulation",
        "Bitwise Operations"
      ],
      "Description": "The tokens represent a mix of C# keywords, operators, and identifiers.  Many tokens are involved in input validation, checking for null values, negative values, and array bounds.  Exception handling is prominent with the use of `IllegalArgumentException` and `IllegalStateException`.  Data structures like arrays (`byte[]`, `char[]`) and bitsets (`FixedBitSet`) are used.  Several tokens perform array manipulation, including `System.arraycopy`.  Bitwise operations (`>>`, `&`, `|`) are used for efficient manipulation of bit-level data."
    }
  },
  {
    "c151": {
      "Unique tokens": [
        "ROMAJI_PARAM",
        "?",
        "2",
        "asList",
        "<",
        "short",
        "append",
        ")",
        "length",
        "getSimpleName",
        "currentTokenVal",
        "result",
        "PATTERN",
        ",",
        "args",
        "[",
        "getName",
        "INJECT",
        "==",
        "file",
        "false",
        "name",
        "s",
        "semanticContext",
        "true",
        "getClass",
        "queryID",
        "p",
        "Multiset",
        "include",
        ".",
        "return",
        "exclude",
        "char",
        "bytes",
        "new",
        "+",
        "getInterpreter",
        "EscherSpgrRecord",
        "getEmailAddress",
        "field",
        "=",
        "notASCIIString",
        "PRESERVE_ORIGINAL",
        "decisionToDFA",
        "(",
        "PROTECTED_TOKENS",
        "state",
        "n",
        "/",
        "recordId",
        ";",
        "\"",
        "JGitText",
        "path",
        "ROOT",
        "context",
        "0",
        "lowerTerm",
        "POS_TAGGER_MODEL",
        "CHUNKER_MODEL",
        "get",
        "c",
        "}",
        "'",
        "getVocabulary",
        "atn",
        "_other",
        "]",
        "ENCODER_ATTR",
        "csn",
        "value",
        "getWorkbook",
        "getListenerType",
        "Tree",
        "_functionIndex",
        "DELIMITER_ATTR"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Structures",
        "Control Flow",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Keywords like \"public\", \"if\", \"return\", and \"new\" control program flow and object creation.  Operators like \".\", \"+\", \"=\", and \"==\" perform operations. Identifiers such as \"ROMAJI_PARAM\", \"maxTokenLength\", and \"EscherSpgrRecord\" refer to variables, methods, and classes.  The tokens demonstrate various aspects of C# syntax, including object-oriented programming, data structure manipulation, and control flow mechanisms."
    }
  },
  {
    "c152": {
      "Unique tokens": [
        "DescribeKeyPhrasesDetectionJobRequest",
        "StopTransformJobRequest",
        "ExportSnapshotRequest",
        "UpdateObjectAttributesRequest",
        "GetSegmentVersionRequest",
        "ListReviewableHITsRequest",
        "AssociateIpGroupsRequest",
        "PutResolverRulePolicyRequest",
        "DisassociateDelegateFromResourceRequest",
        "UpdateBaiduChannelRequest",
        "DeleteDBSubnetGroupRequest",
        "ModifyDBClusterEndpointRequest",
        "UpdateUserPhoneConfigRequest",
        "GetFieldLevelEncryptionProfileConfigRequest",
        "AssociatePhoneNumberWithUserRequest",
        "DeleteHsmClientCertificateRequest",
        "DeregisterTaskDefinitionRequest",
        "DescribeIpGroupsRequest",
        "CreateClusterParameterGroupRequest",
        "DescribeFileSystemsRequest",
        "DescribeEndpointRequest",
        "GetVoiceConnectorLoggingConfigurationRequest",
        "ListTrafficPolicyInstancesRequest",
        "DeleteLaunchConfigurationRequest",
        "PutScalingPolicyRequest",
        "PutEmailIdentityDkimSigningAttributesRequest",
        "ModifyReplicationGroupRequest",
        "UpdateApiRequest",
        "PutLifecycleConfigurationRequest",
        "ResumeGameServerGroupRequest",
        "ModifyAvailabilityZoneGroupRequest",
        "GetModelVersionRequest",
        "RebootInstancesRequest",
        "CreateDatasetGroupRequest",
        "InvokeEndpointRequest",
        "CancelExportTaskRequest",
        "PutAccountSendingAttributesRequest",
        "DescribeResourceRequest",
        "CreateModelVersionRequest",
        "GetApnsSandboxChannelRequest",
        "CancelConversionTaskRequest",
        "CreateIpGroupRequest",
        "DeleteLoadBalancerTlsCertificateRequest",
        "UpdateServicePrimaryTaskSetRequest",
        "DescribeDatasetImportJobRequest",
        "RestoreDBInstanceFromDBSnapshotRequest",
        "UpdateFieldLevelEncryptionConfigRequest",
        "DisassociateMemberFromGroupRequest",
        "ListDeploymentGroupsRequest",
        "UpdateStackInstancesRequest",
        "DeleteGameServerGroupRequest",
        "ListDeliveryStreamsRequest",
        "DescribeStackInstanceRequest",
        "DescribeLoadBalancerAttributesRequest",
        "ListVoiceConnectorsRequest",
        "StopInstanceRequest",
        "ModifyDBClusterParameterGroupRequest",
        "ModifyOptionGroupRequest",
        "UpdateEmailChannelRequest",
        "GetObjectAttributesRequest",
        "CreateRelationalDatabaseSnapshotRequest",
        "BatchUnsuspendUserRequest",
        "StopProcessingJobRequest",
        "GetDeploymentGroupRequest",
        "ListGroupsRequest",
        "CreateHsmConfigurationRequest",
        "GetSmsChannelRequest",
        "PollForActivityTaskRequest",
        "UpdatePipelineStatusRequest",
        "UpdateAuditStreamConfigurationRequest",
        "CreateDiskSnapshotRequest",
        "ListSentimentDetectionJobsRequest",
        "DeleteCacheSubnetGroupRequest",
        "CreateClusterSnapshotRequest",
        "ListJourneysRequest",
        "GetQueueAttributesRequest",
        "CreateDetectorVersionRequest",
        "DescribeInstancesRequest",
        "PutAutoScalingPolicyRequest",
        "GetConfigurationRequest",
        "GetDiskSnapshotRequest",
        "GetApnsVoipChannelRequest",
        "DeleteClientCertificateRequest",
        "ImportApiRequest",
        "SetRepositoryPolicyRequest",
        "RegisterUserRequest",
        "ModifyDBSnapshotRequest",
        "GetInstancesRequest",
        "UpdateUserProfileRequest",
        "DeleteApnsChannelRequest",
        "ListOnPremisesInstancesRequest",
        "StopTrainingJobRequest",
        "DescribePlacementGroupsRequest",
        "AddApplicationVpcConfigurationRequest",
        "CreateDBClusterEndpointRequest",
        "CreateInstanceSnapshotRequest",
        "DeleteMatchmakingConfigurationRequest",
        "UpdateVoiceChannelRequest",
        "CreateDatasetImportJobRequest",
        "GetImportJobRequest",
        "DeleteVaultAccessPolicyRequest",
        "IncreaseNodeGroupsInGlobalReplicationGroupRequest",
        "CreateHsmClientCertificateRequest",
        "GetCampaignsRequest",
        "CreateGroupRequest",
        "DeleteApiRequest",
        "DescribeSecurityConfigurationRequest",
        "ListCampaignsRequest",
        "ExecutePolicyRequest",
        "RemoveTagsFromResourceRequest",
        "DescribeClassicLinkInstancesRequest",
        "CreateDiskFromSnapshotRequest",
        "DeleteGlobalReplicationGroupRequest",
        "CreateLaunchConfigurationRequest",
        "DeleteDirectoryConfigRequest",
        "CopyOptionGroupRequest",
        "GetBlueprintsRequest",
        "DescribeSubnetGroupsRequest",
        "GetResolverRulePolicyRequest",
        "SetLoadBalancerListenerSSLCertificateRequest",
        "RegisterInstanceEventNotificationAttributesRequest",
        "DeleteEventsConfigurationRequest",
        "AttachPolicyRequest",
        "DeleteTaskSetRequest",
        "UpdateRuntimeConfigurationRequest",
        "RestoreDBClusterFromSnapshotRequest",
        "SetVaultAccessPolicyRequest",
        "GetTrafficPolicyRequest",
        "GetExportJobsRequest",
        "DecreaseNodeGroupsInGlobalReplicationGroupRequest",
        "PutEmailIdentityDkimAttributesRequest",
        "SetDataRetrievalPolicyRequest",
        "DeleteAttributesRequest",
        "GetImportJobsRequest",
        "DescribeComponentConfigurationRequest",
        "DisassociateGlobalReplicationGroupRequest",
        "DeregisterOnPremisesInstanceRequest",
        "StartKeyPhrasesDetectionJobRequest",
        "PutIdentityPolicyRequest",
        "RebootInstanceRequest",
        "UpdateUserRoutingProfileRequest",
        "UpdateAdmChannelRequest",
        "DeleteDBClusterParameterGroupRequest",
        "ListDeploymentInstancesRequest",
        "StopInstancesRequest",
        "ExportClientVpnClientConfigurationRequest",
        "ReimportApiRequest",
        "UpdateThreatIntelSetRequest",
        "UpdateRestApiRequest",
        "CreateLabelingJobRequest",
        "DescribeUserProfileRequest",
        "DescribeDocumentClassificationJobRequest",
        "DescribeClusterParameterGroupsRequest",
        "DescribeOrganizationConfigurationRequest",
        "DisassociateIamInstanceProfileRequest",
        "UpdateProfilingGroupRequest",
        "CreateReusableDelegationSetRequest",
        "DescribeResourceGroupsRequest",
        "UpdateAutoScalingGroupRequest",
        "GetApnsVoipSandboxChannelRequest",
        "UpdateSignalingChannelRequest",
        "ListIdentityPoolsRequest",
        "DeleteEndpointConfigRequest",
        "DeregisterInstanceEventNotificationAttributesRequest",
        "UpdateTemplateActiveVersionRequest",
        "DescribeDBSnapshotAttributesRequest",
        "FailoverGlobalReplicationGroupRequest",
        "GetVoiceChannelRequest",
        "GetConfigurationProfileRequest",
        "DeleteRealtimeEndpointRequest",
        "UpdateEndpointRequest",
        "AddTagsToOnPremisesInstancesRequest",
        "UpdateJobRequest",
        "BatchSuspendUserRequest",
        "UpdateStackSetRequest",
        "StopNotebookInstanceRequest",
        "DescribeFleetInstancesRequest",
        "DescribeContainerInstancesRequest",
        "CreateRealtimeEndpointRequest",
        "ReadJobRequest",
        "CreateCacheParameterGroupRequest",
        "StopEntitiesDetectionJobRequest",
        "DeleteNotificationConfigurationRequest",
        "UpdateFleetAttributesRequest",
        "DeleteDBParameterGroupRequest",
        "DescribeAccountAttributesRequest",
        "InitiateJobRequest",
        "UpdateCompanyNetworkConfigurationRequest",
        "DeleteDBClusterSnapshotRequest",
        "DeleteInstanceSnapshotRequest",
        "CreateAutoScalingGroupRequest",
        "DeleteVoiceConnectorStreamingConfigurationRequest",
        "UpdateNotebookInstanceLifecycleConfigRequest",
        "DeleteDetectorVersionRequest",
        "DeleteConfigurationProfileRequest",
        "DescribeAuditStreamConfigurationRequest",
        "CreateProfilingGroupRequest",
        "RunInstancesRequest",
        "UpdateComponentConfigurationRequest",
        "ListTrafficPolicyInstancesByPolicyRequest",
        "CancelBundleTaskRequest",
        "AssociateIamInstanceProfileRequest",
        "DeleteParameterGroupRequest",
        "ListProcessingJobsRequest",
        "DeletePlacementGroupRequest",
        "AssociateDelegateToResourceRequest",
        "ModifyVpnTunnelCertificateRequest",
        "CreateTrainingJobRequest",
        "CreateDeploymentGroupRequest",
        "ListJobsRequest",
        "DeleteRepositoryPolicyRequest",
        "DeleteFargateProfileRequest",
        "CreateDBSnapshotRequest",
        "DeleteLoadBalancerPolicyRequest",
        "CreateReplicationGroupRequest",
        "GetLinkAttributesRequest",
        "AssociateDeviceWithNetworkProfileRequest",
        "RemoveAutoScalingPolicyRequest",
        "StartSpeechSynthesisTaskRequest",
        "PutNotificationConfigurationRequest",
        "DeleteBaiduChannelRequest",
        "ListTransformJobsRequest",
        "DeleteReusableDelegationSetRequest",
        "GetPublicKeyConfigRequest",
        "DescribeFileSystemPolicyRequest",
        "DescribeDBInstancesRequest",
        "ListTrainingJobsForHyperParameterTuningJobRequest",
        "PutInvitationConfigurationRequest",
        "UpdateSkillGroupRequest",
        "DeleteCorsConfigurationRequest",
        "CreateInstancesFromSnapshotRequest",
        "GetHealthCheckStatusRequest",
        "DescribeLifecycleConfigurationRequest",
        "CreatePlacementGroupRequest",
        "DescribeInstanceStatusRequest",
        "CreateRecommenderConfigurationRequest",
        "UpdateClientCertificateRequest",
        "UpdateDetectorVersionStatusRequest",
        "ListInstanceGroupsRequest",
        "PutFileSystemPolicyRequest",
        "GetVaultAccessPolicyRequest",
        "UpdateHITReviewStatusRequest",
        "DescribeGlobalReplicationGroupsRequest",
        "AddTagsToResourceRequest",
        "PutRecordBatchRequest",
        "GetCurrentUserRequest",
        "CreateThreatIntelSetRequest",
        "PutAttributesRequest",
        "PutLifecyclePolicyRequest",
        "GetSpeechSynthesisTaskRequest",
        "GetApnsChannelRequest",
        "GetManagedScalingPolicyRequest",
        "GetIPSetRequest",
        "DescribeFleetAttributesRequest",
        "UpdateModelVersionRequest",
        "DeleteIPSetRequest",
        "DeleteStackInstancesRequest",
        "DescribeIdentityProviderConfigurationRequest",
        "DeleteNotebookInstanceLifecycleConfigRequest",
        "GetProfileRequest",
        "DescribeFargateProfileRequest",
        "DeleteEmailChannelRequest",
        "SearchSkillGroupsRequest",
        "DeleteUserProfileRequest",
        "GetLifecyclePolicyRequest",
        "GetNetworkProfileRequest",
        "ListDetectorsRequest",
        "CreateClientVpnEndpointRequest",
        "UpdateMatchmakingConfigurationRequest",
        "ValidateConfigurationRequest",
        "DescribeTransformJobRequest",
        "GetDetectorVersionRequest",
        "ModifyCacheParameterGroupRequest",
        "CreateJobRequest",
        "DescribeClusterSubnetGroupsRequest",
        "DeleteFileSystemPolicyRequest",
        "DeletePolicyRequest",
        "ListAutoMLJobsRequest",
        "CreateUserProfileRequest",
        "ModifyDBProxyTargetGroupRequest",
        "DeleteFieldLevelEncryptionProfileRequest",
        "DeleteRelationalDatabaseSnapshotRequest",
        "UpdateClusterConfigRequest",
        "GetStatusRequest",
        "GetSkillGroupRequest",
        "DeleteEndpointRequest",
        "CreateCompilationJobRequest",
        "DescribeJobRequest",
        "PutEmailIdentityMailFromAttributesRequest",
        "ListBotsRequest",
        "DescribeLoggingStatusRequest",
        "DeleteApplicationVpcConfigurationRequest",
        "DescribeEntitiesDetectionJobRequest",
        "UpdateGcmChannelRequest",
        "DeleteScalingPolicyRequest",
        "DescribeOptionGroupsRequest",
        "PutImageScanningConfigurationRequest",
        "UpdateResourceRequest",
        "CreateResourceRequest",
        "RestoreTableFromClusterSnapshotRequest",
        "GetAttributesRequest",
        "UpdateApnsVoipChannelRequest",
        "CreateAutoMLJobRequest",
        "GetRelationalDatabaseBlueprintsRequest",
        "CancelImportTaskRequest",
        "DescribeInstanceEventNotificationAttributesRequest",
        "SignOutUserRequest",
        "RebalanceSlotsInGlobalReplicationGroupRequest",
        "ModifyGlobalReplicationGroupRequest",
        "BatchPutAttributesRequest",
        "StartNotebookInstanceRequest",
        "RemoveManagedScalingPolicyRequest",
        "ExportApiRequest",
        "GetRestApiRequest",
        "CreateFieldLevelEncryptionProfileRequest",
        "CreateVoiceConnectorGroupRequest",
        "CancelJobRequest",
        "ListVoiceConnectorGroupsRequest",
        "CreateDataRepositoryTaskRequest",
        "DescribeReservedInstancesRequest",
        "CreateSubnetGroupRequest",
        "GetEventsConfigurationRequest",
        "DescribeSolutionVersionRequest",
        "GetIdentityVerificationAttributesRequest",
        "DisassociateIpGroupsRequest",
        "DeleteApnsVoipSandboxChannelRequest",
        "DeleteQueuedReservedInstancesRequest",
        "GetRepositoryPolicyRequest",
        "DeleteApnsSandboxChannelRequest",
        "SearchTransitGatewayMulticastGroupsRequest",
        "DeleteIpGroupRequest",
        "SetTypeDefaultVersionRequest",
        "GetAdmChannelRequest",
        "DeleteResourceRequest",
        "DeactivateUserRequest",
        "UpdateGatewayGroupRequest",
        "DescribeHyperParameterTuningJobRequest",
        "GetAppliedSchemaVersionRequest",
        "RemoveTagsFromOnPremisesInstancesRequest",
        "ListBatchInferenceJobsRequest",
        "StartDominantLanguageDetectionJobRequest",
        "DeleteDeploymentConfigRequest",
        "RunTaskRequest",
        "GetVoiceConnectorGroupRequest",
        "DescribeNotebookInstanceRequest",
        "DescribeEndpointConfigRequest",
        "DeleteProfileRequest",
        "DescribeTableRestoreStatusRequest",
        "CreateVpcEndpointServiceConfigurationRequest",
        "ListJobsByStatusRequest",
        "ListGameServerGroupsRequest",
        "CreateGlobalReplicationGroupRequest",
        "DeleteTrafficPolicyRequest",
        "DeleteClusterSnapshotRequest",
        "CreateEndpointConfigRequest",
        "ListDashboardsRequest",
        "CreateClusterSubnetGroupRequest",
        "DeleteDiskSnapshotRequest",
        "ListNotebookInstancesRequest",
        "CreateWorkGroupRequest",
        "GetDistributionConfigRequest",
        "CreateConfigurationProfileRequest",
        "DeleteThreatIntelSetRequest",
        "GenerateClientCertificateRequest",
        "ModifyClusterSnapshotRequest",
        "RegisterTaskDefinitionRequest",
        "PutEmailIdentityFeedbackAttributesRequest",
        "CreateBatchInferenceJobRequest",
        "DeleteGcmChannelRequest",
        "ModifyClusterParameterGroupRequest",
        "CreateInstanceExportTaskRequest",
        "ListCandidatesForAutoMLJobRequest",
        "CreateDBClusterSnapshotRequest",
        "UnmonitorInstancesRequest",
        "CopyDBClusterSnapshotRequest",
        "DeleteMessageBatchRequest",
        "SetStackPolicyRequest",
        "CreateLaunchTemplateVersionRequest",
        "DescribeAutoScalingInstancesRequest",
        "ModifyClusterSubnetGroupRequest",
        "PollForDecisionTaskRequest",
        "GetSegmentImportJobsRequest",
        "UpdateDocumentVersionRequest",
        "ListLabelingJobsRequest",
        "UpdateContactAttributesRequest",
        "GetStackPolicyRequest",
        "GetIdentityNotificationAttributesRequest",
        "GetQueryLoggingConfigRequest",
        "DeleteProjectVersionRequest",
        "ListContainerInstancesRequest",
        "GetEndpointRequest",
        "UpdateApnsVoipSandboxChannelRequest",
        "DeleteVoiceConnectorGroupRequest",
        "DeleteAutoSnapshotRequest",
        "UpdateGroupRequest",
        "UpdateDocumentationVersionRequest",
        "CreateNetworkProfileRequest",
        "ResetCacheParameterGroupRequest",
        "PutManagedScalingPolicyRequest",
        "DeleteRecommenderConfigurationRequest",
        "DescribeCacheParameterGroupsRequest",
        "DescribeRuntimeConfigurationRequest",
        "DescribeProcessingJobRequest",
        "CreateSolutionVersionRequest",
        "CreateEndpointRequest",
        "CreateRestApiRequest",
        "DescribeAutoScalingGroupsRequest",
        "ListTopicsDetectionJobsRequest",
        "CreateImportJobRequest",
        "DeleteNotebookInstanceRequest",
        "DeleteProfilingGroupRequest",
        "CreateStackInstancesRequest",
        "ListDatasetImportJobsRequest",
        "AssociateSkillWithSkillGroupRequest",
        "DescribeBatchInferenceJobRequest",
        "DeleteGatewayGroupRequest",
        "GetResolverEndpointRequest",
        "DescribeBatchPredictionsRequest",
        "DescribeUserRequest",
        "DescribeDBProxyTargetGroupsRequest",
        "ModifyInstanceGroupsRequest",
        "GetDeploymentInstanceRequest",
        "DescribeReservedDBInstancesRequest",
        "RunScheduledInstancesRequest",
        "DeleteDBClusterEndpointRequest",
        "CopyDBParameterGroupRequest",
        "CreateUserRequest",
        "BatchGetDeploymentTargetsRequest",
        "CreateNotebookInstanceLifecycleConfigRequest",
        "GetTrafficPolicyInstanceRequest",
        "ResetDBClusterParameterGroupRequest",
        "GetRecommenderConfigurationRequest",
        "GetGcmChannelRequest",
        "PutRestApiRequest",
        "PutVoiceConnectorLoggingConfigurationRequest",
        "CreateFieldLevelEncryptionConfigRequest",
        "CreateAppCookieStickinessPolicyRequest",
        "TerminateJobFlowsRequest",
        "StartProjectVersionRequest",
        "DescribeLoadBalancerTargetGroupsRequest",
        "DescribeConfigurationRequest",
        "DescribeDatasetGroupRequest",
        "DeleteDeploymentGroupRequest",
        "UpdateClusterVersionRequest",
        "DeleteSnapshotRequest",
        "StartDocumentClassificationJobRequest",
        "GetDomainsRequest",
        "ListClusterJobsRequest",
        "UpdateSmsChannelRequest",
        "DeleteFieldLevelEncryptionConfigRequest",
        "AddApplicationInputProcessingConfigurationRequest",
        "DescribeAutoMLJobRequest",
        "DeleteFlowDefinitionRequest",
        "CreateDeploymentConfigRequest",
        "GetOnPremisesInstanceRequest",
        "GetInvitationConfigurationRequest",
        "CreateHyperParameterTuningJobRequest",
        "CreateSkillGroupRequest",
        "DisassociatePhoneNumbersFromVoiceConnectorGroupRequest",
        "CreateLoadBalancerTlsCertificateRequest",
        "CopyDBClusterParameterGroupRequest",
        "StartSentimentDetectionJobRequest",
        "DescribeInterconnectsRequest",
        "ListObjectAttributesRequest",
        "DescribeLabelingJobRequest",
        "UntagResourceRequest",
        "CreateProfileRequest",
        "UpdateNetworkProfileRequest",
        "SendMessageBatchRequest",
        "ModifyVpcEndpointServiceConfigurationRequest",
        "DescribeStackSetRequest",
        "SignalResourceRequest",
        "GetDataEndpointRequest",
        "DeleteIdentityPolicyRequest",
        "ImportInstanceRequest",
        "DescribeStackResourceRequest",
        "DeregisterContainerInstanceRequest",
        "AddInstanceGroupsRequest",
        "ListRoomMembershipsRequest",
        "CreateMatchmakingConfigurationRequest",
        "StopProjectVersionRequest",
        "DescribeDBParameterGroupsRequest",
        "ListHITsRequest",
        "CreateSignalingChannelRequest",
        "CreateApplicationSnapshotRequest",
        "DeleteSecurityConfigurationRequest",
        "CopyDBSnapshotRequest",
        "PurchaseScheduledInstancesRequest",
        "ResetDBParameterGroupRequest",
        "CreateTaskSetRequest",
        "ListGraphsRequest",
        "GetVoiceConnectorStreamingConfigurationRequest",
        "DeleteAutoScalingGroupRequest",
        "UpdateVoiceConnectorGroupRequest",
        "GetStreamingDistributionConfigRequest",
        "GetDataRetrievalPolicyRequest",
        "CreateFargateProfileRequest",
        "CancelDataRepositoryTaskRequest",
        "DescribeReplicationGroupsRequest",
        "GetApiRequest",
        "GetPolicyRequest",
        "DeleteDatasetGroupRequest",
        "CreateLoadBalancerPolicyRequest",
        "CreateNotebookInstanceRequest",
        "ListFacetAttributesRequest",
        "CreateInstancesRequest",
        "DeleteQueryLoggingConfigRequest",
        "ListTypedLinkFacetAttributesRequest",
        "UpdateRulesOfIpGroupRequest",
        "DetachLoadBalancerTargetGroupsRequest",
        "ListWorkGroupsRequest",
        "GetIdentityMailFromDomainAttributesRequest",
        "DescribeGroupRequest",
        "LookupPolicyRequest",
        "LogoutUserRequest",
        "DescribeWorkspacesConnectionStatusRequest",
        "GetEmailChannelRequest",
        "CreateFlowDefinitionRequest",
        "UpdateDeploymentGroupRequest",
        "UpdateVirtualInterfaceAttributesRequest",
        "CreateIPSetRequest",
        "ModifyReplicationGroupShardConfigurationRequest",
        "TagResourceRequest",
        "StartExportTaskRequest",
        "GetClientCertificateRequest",
        "ListInstancesRequest",
        "RegisterOnPremisesInstanceRequest",
        "GetDetectorsRequest",
        "StartTopicsDetectionJobRequest",
        "CreateLifecyclePolicyRequest",
        "TerminateInstanceInAutoScalingGroupRequest",
        "GetBlockPublicAccessConfigurationRequest",
        "ListUserGroupsRequest",
        "GetDeploymentConfigRequest",
        "PutAccountSuppressionAttributesRequest",
        "UpdateApnsChannelRequest",
        "StopLabelingJobRequest",
        "DeleteVoiceChannelRequest",
        "BatchGetDeploymentInstancesRequest",
        "CreateParameterGroupRequest",
        "ModifyReservedInstancesRequest",
        "DescribeUserHierarchyGroupRequest",
        "BatchGetOnPremisesInstancesRequest",
        "CreateApiRequest",
        "ChangeMessageVisibilityBatchRequest",
        "DisassociateSkillFromSkillGroupRequest",
        "UpdateNotebookInstanceRequest",
        "CreateQueryLoggingConfigRequest",
        "CreateConfigurationRequest",
        "DeleteNetworkProfileRequest",
        "UpdateEndpointsBatchRequest",
        "CopyClusterSnapshotRequest",
        "CreateResourceGroupRequest",
        "DescribeScheduledInstancesRequest",
        "GetDocumentationVersionRequest",
        "CopySnapshotRequest",
        "GetCampaignVersionRequest",
        "CreateSnapshotRequest",
        "GetSegmentExportJobsRequest",
        "DescribeLocalGatewayVirtualInterfaceGroupsRequest",
        "ModifyDBSubnetGroupRequest",
        "MonitorInstancesRequest",
        "DeleteAdmChannelRequest",
        "ImportRestApiRequest",
        "DescribeFlowDefinitionRequest",
        "DetachInstancesRequest",
        "CreateDocumentationVersionRequest",
        "DeleteWorkGroupRequest",
        "DescribeSpotFleetInstancesRequest",
        "GetRelationalDatabaseSnapshotRequest",
        "UpdateProfileRequest",
        "DisableUserRequest",
        "DeleteApplicationInputProcessingConfigurationRequest",
        "BundleInstanceRequest",
        "DescribeApplicationSnapshotRequest",
        "PutDedicatedIpWarmupAttributesRequest",
        "GetFieldLevelEncryptionProfileRequest",
        "DescribeSentimentDetectionJobRequest",
        "PutEventsConfigurationRequest",
        "DeleteSkillGroupRequest",
        "ListGatewayGroupsRequest",
        "DescribeTaskDefinitionRequest",
        "DescribeDBClusterParameterGroupsRequest",
        "ModifyVpcEndpointRequest",
        "ListCompilationJobsRequest",
        "StopAutoMLJobRequest",
        "CreateDBParameterGroupRequest",
        "DeleteUserRequest",
        "GetIdentityDkimAttributesRequest",
        "StartTextTranslationJobRequest",
        "GetIdentityPoolConfigurationRequest",
        "SetQueueAttributesRequest",
        "CreateResolverEndpointRequest",
        "StartInstancesRequest",
        "BatchGetDeploymentGroupsRequest",
        "ImportSnapshotRequest",
        "UpdateDirectoryConfigRequest",
        "DeleteInstanceRequest",
        "UpdateIPSetRequest",
        "AttachLoadBalancerTlsCertificateRequest",
        "DetachPolicyRequest",
        "AssociatePhoneNumbersWithVoiceConnectorGroupRequest",
        "BatchUpdateUserRequest",
        "ListEntitiesDetectionJobsRequest",
        "UpdateNodegroupVersionRequest",
        "DescribeGroupsRequest",
        "ListProfilingGroupsRequest",
        "UpdateOrganizationConfigurationRequest",
        "StartEntitiesDetectionJobRequest",
        "CreateTransformJobRequest",
        "ResetClusterParameterGroupRequest",
        "DescribeDBClusterSnapshotAttributesRequest",
        "AttachInstancesRequest",
        "UpdateLifecyclePolicyRequest",
        "CreateStackSetRequest",
        "ListDocumentClassificationJobsRequest",
        "AttachLoadBalancerTargetGroupsRequest",
        "ModifyClientVpnEndpointRequest",
        "GetExportJobRequest",
        "StartInstanceRequest",
        "UpdateWorkGroupRequest",
        "UpdateSubnetGroupRequest",
        "GetReusableDelegationSetRequest",
        "ModifyDBParameterGroupRequest",
        "ListVaultsRequest",
        "EnableUserRequest",
        "DeleteRuleVersionRequest",
        "RemoveAttributesRequest",
        "UpdateTaskSetRequest",
        "DescribeParameterGroupsRequest",
        "UpdateConfigurationRequest",
        "DeleteResolverEndpointRequest",
        "DescribeTextTranslationJobRequest",
        "BatchDeleteAttributesRequest",
        "DeleteTrafficPolicyInstanceRequest",
        "UpdateDevicePolicyConfigurationRequest",
        "UpdateTrafficPolicyInstanceRequest",
        "DeleteRestApiRequest",
        "ListKeyPhrasesDetectionJobsRequest",
        "ModifyInstanceCapacityReservationAttributesRequest",
        "UpdateDashboardPublishedVersionRequest",
        "GetInstanceSnapshotRequest",
        "ListRoomsRequest",
        "UpdateApnsSandboxChannelRequest",
        "GetSignalingChannelEndpointRequest",
        "DescribeDBSubnetGroupsRequest",
        "ConfirmProductInstanceRequest",
        "DeleteClusterParameterGroupRequest",
        "CreateGameServerGroupRequest",
        "PutAccountDedicatedIpWarmupAttributesRequest",
        "DescribeDevicePolicyConfigurationRequest",
        "ListAttributesRequest",
        "CreateLBCookieStickinessPolicyRequest",
        "StopTextTranslationJobRequest"
      ],
      "Syntactic Label": "Request Objects",
      "Semantic Tags": [
        "AWS SDK",
        "API Gateway",
        "Cloud Services",
        "Resource Management",
        "Request Handling"
      ],
      "Description": "These tokens represent request objects used in various AWS SDKs (likely for services like EC2, S3, etc.).  They are parameters passed to methods that interact with cloud services, enabling management and interaction with different AWS resources. The methods all follow a pattern of taking a request object as input and returning a result object."
    }
  },
  {
    "c153": {
      "Unique tokens": [
        "CompareResult",
        "EvaluationException",
        "Collection",
        "FontCharset",
        "SimpleFraction",
        "IndexReaderContext",
        "PageOrder",
        "ByteBuffer",
        "TokenizerFactory",
        "CellRangeAddress",
        "CodePointCharStream",
        "<",
        "ContinuableRecordOutput",
        "Pattern",
        "PackIndex",
        "BreakIterator",
        "ErrPtg",
        "int",
        "RowRecord",
        "Encoder",
        "Ptg",
        "ReaderIterator",
        "HSSFAnchor",
        "FormulaShifter",
        "BlankRecord",
        "ObjectInserter",
        "EditList",
        "CellValue",
        "IntBuffer",
        "CFRuleRecord",
        "round",
        "PredictionContext",
        "PersonIdent",
        "PathFilter",
        "SupBookRecord",
        "CloseGuard",
        "BoolEval",
        "Cell",
        "QualityStats",
        "InitCommand",
        "SrndQuery",
        "TermGroupFacetCollector",
        "NoteMap",
        "TreeFilter",
        "compile",
        "IndexWriterConfig",
        "TopFieldDocs",
        "FunctionMetadata",
        "FuncVarPtg",
        "BitField",
        "Proxy",
        "DFAState",
        "ValueVector",
        "Reporter",
        "CharacterBuffer",
        "FuncPtg",
        "ISignatureComposer",
        "ErrorEval",
        "CoderResult",
        "InternalWorkbook",
        "IntervalSet",
        "SemanticContext",
        "IndexableField",
        "Token",
        "BoundSheetRecord",
        "PrintOrientation",
        "ChartDataSource",
        "ExpandedDouble",
        "DVConstraint",
        "CloneCommand",
        "CFRecordsAggregate",
        "FontUnderline",
        "BATBlock",
        "IndexDeletionPolicy",
        "PagedBytesDataOutput",
        "FontDetails",
        "TopDocs",
        "Automaton",
        "DefaultProfile",
        "Signer",
        "Decoder",
        "TaxonomyWriterCache",
        "PathSuffixFilter",
        "FileKey",
        "LongBuffer",
        "wrap",
        "FloatBuffer",
        "RkRec",
        "Explanation",
        "Packed64SingleBlock",
        "SingletonPredictionContext",
        "IndexCommit",
        "File",
        "CharFilterFactory",
        "FontFamily",
        "IndexSearcher",
        "InternalSheet",
        "FormulaError",
        "DoubleValuesSource",
        "JGitText",
        "ScoreCachingWrappingScorer",
        "Counter",
        "ParsePathType",
        "CmpOp",
        "TaxonomyReader",
        "ShortBuffer",
        "HashFunction",
        "ObjectToPack",
        "ObjectId",
        "CharArraySet",
        "Git",
        "getRow",
        "SessionToken",
        "BytesRef",
        "ValueEval",
        "RevFilter",
        "NumberRecord",
        "Inflater",
        "ContentSource",
        "SharedValueManager",
        "PrintCellComments",
        "BOFRecord",
        "BufferSize",
        "NormalisedDecimal",
        "QueryNode",
        "OpenSshConfig",
        "AttrPtg",
        "IntsRef",
        "create",
        "AbbreviatedObjectId",
        "TermRangeQuery",
        "CharBuffer",
        "getCell",
        "DoubleBuffer",
        "FuzzySet"
      ],
      "Syntactic Label": "Classes, Objects, Methods, Variables, Operators",
      "Semantic Tags": [
        "Data Structures",
        "Data Processing",
        "Utility Functions",
        "Exception Handling",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Classes such as `CompareResult`, `EvaluationException`, `Collection`, etc., define data structures and functionality. Objects are instances of these classes. Methods like `valueOf`, `create`, `get`, etc., perform specific operations. Variables store data. Operators such as `<` and `==` facilitate comparisons and logical operations.  The code snippets demonstrate various utility functions, data processing techniques, exception handling mechanisms, and algorithm implementations."
    }
  },
  {
    "c154": {
      "Unique tokens": [
        ",",
        "comp",
        ".",
        "return",
        "ScoreDoc",
        "secondFD",
        "tieBreaker",
        "0",
        "first",
        ">",
        "cmp",
        "shardHits",
        "[",
        "if",
        "}",
        "<",
        "{",
        "*",
        "firstFD",
        "=",
        "]",
        "final",
        "FieldDoc",
        ")",
        "int",
        "secondScoreDoc",
        "(",
        "fields",
        "score",
        "compIDX",
        "second",
        "firstScoreDoc",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in Sorting and Comparison Methods",
      "Semantic Tags": [
        "Comparison Logic",
        "Custom Sorting",
        "Data Structures",
        "Object-Oriented Programming",
        "Algorithm"
      ],
      "Description": "The tokens represent a combination of C# language constructs (keywords like if, return, operators like <, >, =, !=, and array access [] ), and custom data structures (ScoreDoc, FieldDoc, ShardRef). These are used within methods that implement custom comparison logic for sorting objects, likely within a larger data processing or search algorithm.  The code snippets show different approaches to comparing objects based on multiple criteria (fields) and tie-breakers. The methods use object properties (score, fields) and arrays to perform comparisons and return boolean results indicating the relative order of objects."
    }
  },
  {
    "c155": {
      "Unique tokens": [
        "off",
        "defaultValue",
        "charCount",
        "b",
        "idx",
        "val",
        "chars",
        "green",
        "blockSize",
        "long",
        "toIndex",
        "short",
        "dst",
        "ruleIndex",
        ")",
        "int",
        "buf",
        "length",
        "str",
        "buffer",
        "pos",
        "IntBuffer",
        "offset",
        "data",
        ",",
        "endIndex",
        "blocks",
        "args",
        ">",
        "len",
        "files",
        "[",
        "end",
        "byte",
        "float",
        "byteCount",
        "Object",
        "byteOffset",
        "name",
        "charSequence",
        "ints",
        "s",
        "charArray",
        "double",
        "srcRowIndex",
        "intCount",
        ".",
        "char",
        "bytes",
        "index",
        "srcOffset",
        "arr",
        "LongBuffer",
        "o2",
        "FloatBuffer",
        "shortCount",
        "longCount",
        "(",
        "d",
        "o",
        "state",
        "cnt",
        "i",
        "w",
        "fromIndex",
        "location",
        "ShortBuffer",
        "start",
        "byteOrder",
        "c",
        "src",
        "ch",
        "invokingStateNumber",
        "beginIndex",
        "blue",
        "srcColumnIndex",
        "]",
        "value",
        "count",
        "red",
        "CharSequence",
        "CharBuffer",
        "..",
        "String",
        "array",
        "DoubleBuffer"
      ],
      "Syntactic Label": "Variables, Array indexing, Method parameters, Method calls, Operators",
      "Semantic Tags": [
        "Buffer Manipulation",
        "Data Input/Output",
        "Array Processing",
        "String Manipulation",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of elements in C# code, primarily focused on manipulating data buffers (ByteBuffer, CharBuffer, etc.), arrays, and strings.  Many tokens are indices or offsets used to access specific elements within arrays or buffers.  The '.' operator signifies method calls, common in object-oriented programming for data processing.  The methods themselves often involve reading, writing, inserting, or deleting data from various buffer types.  The semantic tags reflect the core functionalities observed in the provided code snippets."
    }
  },
  {
    "c156": {
      "Unique tokens": [
        "getMaxLevels",
        "crossValidationRatio",
        "distanceSquared",
        "constraint",
        "SLL_ATNTransitions=",
        "addString",
        "startIndex",
        "getWidth",
        "securityToken",
        "StringUtil",
        "consumeAllTokens=",
        "++",
        "docFreq",
        "2",
        "srv",
        "interval",
        "HashMap",
        "<",
        "long",
        "requireNonNull",
        "firstCol",
        "sheetName",
        "else",
        "be",
        "getFormatString",
        "cal",
        "clone",
        "setBoolean",
        "toBookSheetColumn",
        "topLevelParser",
        "short",
        "[entries=",
        ")",
        "getColumn",
        "HashSet",
        "peek",
        "queryScorer",
        "length",
        "cell",
        "getTimeInMillis",
        "pos=",
        "deletePriorCommits",
        "node",
        "startOffset",
        "bs",
        "Formula",
        "cf",
        "-",
        "if",
        "SupBookRecord",
        "null",
        ",",
        "numShapeIdsUsed",
        "CRNBlock",
        "data",
        "getBigBlockSize",
        "realTextLength",
        "sb",
        "maxCacheMB=",
        "stream",
        "fontName",
        ">",
        "deserializationOptions",
        "[",
        "addAll",
        "fs",
        "tokenType",
        "end",
        "*",
        "getFormatIndex",
        "mac",
        "==",
        "indexCode",
        "ArrayList",
        "exportAll",
        "xfs",
        "tokenCount",
        "false",
        "maxHorizontalContext",
        "sre",
        "getDefaultOptions",
        "bsr",
        "this",
        "name",
        "CopyOnWriteArrayList",
        "grid",
        "array",
        "LL_Fallback=",
        "LL_ATNTransitions=",
        "true",
        "phoneticTextFirstCharacterOffset",
        "Date",
        "1",
        "LL_lookahead=",
        "minSkipCount",
        "firstRow",
        "for",
        "field_4_formatstring",
        "ae",
        "ambiguities=",
        "setTokenType",
        "!",
        "lowFreqCutoff",
        "realTextFirstCharacterOffset",
        "count=",
        "_lastSheetIndex",
        "index=",
        ".",
        "IOException",
        "return",
        "re",
        "shardIndex",
        "new",
        "ccis",
        "k",
        "getLastRowIndex",
        "value=",
        "+",
        "TermStats{",
        "iwc",
        ",blocks=",
        "honorIgnores",
        "externalWorkbookNumber",
        "field_3_sheet_names",
        "isCtxDependent",
        "is",
        "FacetEntry{",
        "dels=",
        "fieldDelimiter",
        "v",
        "-=",
        "add",
        "=",
        "maxCount",
        "height",
        "url",
        "Boolean",
        "myanmarAsWords",
        "(",
        "getLastColumnIndex",
        "outermostPrecedenceReturn",
        "_width",
        "sharedContextCache",
        "in",
        "docFreqThresh",
        "getBuiltinFormat",
        "extBookIndex",
        "decodedTermText='",
        "rule1",
        "Long",
        "/",
        "PackWriter.State[",
        "!=",
        ";",
        "::",
        "\"",
        "ssVersion",
        "wb",
        "numberOfRegions",
        "blockShift=",
        "markedLastWasCR",
        "0",
        "termText",
        "rowIndex",
        "_options",
        "cjkAsWords",
        "getRow",
        "get",
        "subTo",
        "r",
        "format",
        "sheet",
        "System",
        "}",
        "[activeBytes=",
        "case",
        "{",
        "getNumberOfSheets",
        "field_3_hasMultibyte",
        "nameValPairs",
        "totalTermFreq",
        "serializer",
        "_firstSheetIndex",
        "_isAddInFunctions",
        "]",
        "+=",
        ":",
        "drawingGroupId",
        "isExternal=",
        "headerBlock",
        "createExternalReferences",
        "SLL_lookahead=",
        "revision",
        "estimatedSegmentSize",
        "&&",
        "maxTokenType",
        "pop",
        "rr",
        "HSSFDataFormat",
        "count",
        "create",
        "m",
        "lastSheetIndex",
        "frag2",
        "firstSheetIndex",
        "score",
        "hasMultibyte",
        "a",
        "sheetNames",
        "other"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Method Calls",
        "Data Structures",
        "Control Flow",
        "Object Attributes",
        "Data Processing"
      ],
      "Description": "The tokens represent a mix of method calls (e.g., getMaxLevels, addString, getWidth), data structures (e.g., HashMap, HashSet, ArrayList), control flow statements (e.g., if, for, else), object attributes (e.g., crossValidationRatio, distanceSquared, securityToken), and other elements involved in data processing and manipulation within a C# program.  The context sentences show these tokens being used in various ways, such as initializing objects, performing calculations, and controlling program flow."
    }
  },
  {
    "c157": {
      "Unique tokens": [
        "]",
        "buf",
        "(",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Array Indexing",
        "Bitwise Operations",
        "Data Decoding",
        "Control Flow",
        "Exception Handling"
      ],
      "Description": "The tokens represent fundamental C# language elements used in array manipulation, bitwise operations for data transformation, control flow structures (loops and conditional statements), and exception handling mechanisms.  The context shows these tokens are integral parts of methods that decode byte arrays into various data types (int, long), often involving bit shifting and masking operations.  The use of exceptions demonstrates robust error handling in the code."
    }
  },
  {
    "c158": {
      "Unique tokens": [
        "}",
        ";"
      ],
      "Syntactic Label": "Statement Terminator and Block Terminator",
      "Semantic Tags": [
        "Method Definition",
        "Code Structure",
        "Control Flow",
        "Method Termination",
        "Scope Delimitation"
      ],
      "Description": "In C#, the semicolon (;) terminates statements, while the closing curly brace (}) terminates code blocks such as method bodies or loops.  These tokens are fundamental to C#'s syntax, defining the structure and flow of the program. In the provided examples, they are crucial for correctly defining the scope and termination of numerous methods."
    }
  },
  {
    "c159": {
      "Unique tokens": [
        "",
        "to",
        "rec",
        "b",
        "Math",
        "++",
        "ptr",
        "<",
        "else",
        "inStream",
        "append",
        ")",
        "int",
        "buf",
        "cell",
        "buffer",
        "CodecUtil",
        "result",
        "-",
        "pos",
        "if",
        "null",
        ",",
        "try",
        "sb",
        "addCell",
        "of",
        ">",
        "nRules",
        "[",
        "hasListener",
        "==",
        "false",
        "RuntimeException",
        ">=",
        "seenOne",
        "this",
        "))",
        "continue",
        "field_5_dbcells",
        "atnStartState",
        "t",
        "for",
        "p",
        "boolean",
        "!",
        "addInternal",
        "ris",
        "currentBlock",
        ".",
        "return",
        "arraycopy",
        "throw",
        "--",
        "new",
        "k",
        "+",
        "copied",
        "lastCharBufferStart",
        "header",
        "elsebuf",
        "isRoot",
        "recallPoints",
        "initCause",
        "=",
        "final",
        "ATTR(baxcel)",
        "assert",
        "(",
        "eThis",
        "o",
        "IllegalStateException",
        "db",
        "n",
        "!=",
        ";",
        "\"",
        "wmfImage",
        "path",
        "0",
        "c",
        "System",
        "}",
        "ch",
        "{",
        "e",
        "appendCharString",
        "]",
        "+=",
        ":",
        "deserialize",
        "_input",
        "&&",
        "logger"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "File I/O",
        "Data Structures",
        "Exception Handling",
        "Assertions"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `for`, `try`, `catch`, and `continue` control program flow.  `inStream`, `append`, `arraycopy`, and `System.arraycopy` are used for file I/O and data manipulation.  Data structures like `StringBuilder`, `ArrayList`, `HashMap`, `Arrays`, and `List` are used to store and manage data.  `RuntimeException`, `IllegalStateException`, and `IOException` handle exceptions.  `assert` statements are used for runtime assertions."
    }
  },
  {
    "c160": {
      "Unique tokens": [
        "RRType",
        "InvalidationBatch",
        "f",
        "domainName",
        "userName",
        "className",
        "policyName",
        "Collection",
        "noteOn",
        "RevBlob",
        "token",
        "errCode",
        "ifMatch",
        "securityToken",
        "Message",
        "nameName",
        "vpcId",
        "analyzer",
        "hits",
        "<",
        "Storage",
        "dBParameterGroupName",
        "serverCertificateId",
        "certificateId",
        "sheetName",
        "attributeValue",
        "queueNamePrefix",
        "exclusiveStartTableName",
        "bucket",
        "ChangeStatus",
        "notesRef",
        "refName",
        "cookieExpirationPeriod",
        "environmentName",
        "ruleIndex",
        "consistentRead",
        "pattern",
        ")",
        "volumeId",
        "selectExpression",
        "bgpAsn",
        "customerGatewayId",
        "uploadPack",
        "ChangeBatch",
        "preTag",
        "Integer",
        "protocol",
        "maskedField",
        "queueUrl",
        "parameterValue",
        "shapeField",
        "fieldName",
        "secret",
        "resourceId",
        "keyId",
        "HealthCheck",
        "wordId",
        "loadBalancerPort",
        "targetDBInstanceIdentifier",
        "sNSTopic",
        ",",
        "remote",
        "PlacementStrategy",
        "URIish",
        "serialNumber",
        "cidrBlock",
        "instanceGroupId",
        "fontName",
        "uri",
        "filePath",
        "logStreamName",
        "policyDocument",
        "[",
        "imageId",
        "pEntityName",
        "originAccessIdentity",
        "keyName",
        "tokenType",
        "cacheParameterGroupName",
        "destination",
        "itemName",
        "device",
        "V",
        "secretAccessKey",
        "sourcePrefix",
        "errorMessage",
        "parameterName",
        "subject",
        "snapshotId",
        "rawQueryString",
        "topicArn",
        "revstr",
        "JobParameters",
        "name",
        "fillerToken",
        "macAddress",
        "resourceDesc",
        "provisionedThroughput",
        "label",
        "bookName",
        "s",
        "ImageAttributeName",
        "enabled",
        "publicIp",
        "dBSnapshotIdentifier",
        "subString",
        "slaveInstanceType",
        "changeBatch",
        "msg",
        "status",
        "dBParameterGroupFamily",
        "accountId",
        "versionLabel",
        "output",
        "qqName",
        "qfield",
        "Map",
        "commit",
        "firstSheetName",
        "boolean",
        "logGroupName",
        "queryID",
        "tableName",
        "description",
        "callerReference",
        "applicationName",
        "theValue",
        "federatedUserId",
        "isQuoted",
        "ruleNames",
        "instanceCount",
        "VaultNotificationConfig",
        "certificateBody",
        "resourceName",
        "requestId",
        "char",
        "NameIdentifier",
        "dir",
        "jobFlowId",
        "TopDocs",
        "source",
        "id",
        "Destination",
        "ICredentialProvider",
        "jobId",
        "password",
        "vaultNotificationConfig",
        "externalWorkbookNumber",
        "cacheParameterGroupFamily",
        "privateKey",
        "stringToSign",
        "serverCertificateName",
        "messageBody",
        "strUrl",
        "ProvisionedThroughput",
        "sSLCertificateId",
        "storage",
        "fieldDelimiter",
        "reservedInstancesOfferingId",
        "InstanceAttributeName",
        "StatusType",
        "productCode",
        "ext",
        "filterName",
        "field",
        "ourCommitName",
        "hostedZoneId",
        "range",
        "attributeName",
        "Boolean",
        "SnapshotAttributeName",
        "domain",
        "key",
        "retentionInDays",
        "pResolvedValue",
        "myanmarAsWords",
        "filename",
        "eTag",
        "lastSheetName",
        "workbookName",
        "db",
        "uploadId",
        "tokenName",
        "archiveId",
        "arn",
        "product",
        "errorCode",
        "term",
        "Long",
        "distributionId",
        "availabilityZone",
        "promptText",
        "message",
        "action",
        "string",
        "functionName",
        "AttributeAction",
        "type",
        "errMsg",
        "Analyzer",
        "path",
        "Directory",
        "Parser",
        "publicKeyMaterial",
        "regionId",
        "dNSName",
        "accessKeyId",
        "Number",
        "attribute",
        "receiptHandle",
        "termText",
        "prefix",
        "ObjectId",
        "cjkAsWords",
        "format",
        "endpoint",
        "Revision",
        "BytesRef",
        "jobParameters",
        "vpnGatewayId",
        "characterClassName",
        "templateName",
        "oldUrl",
        "postTag",
        "dBSecurityGroupDescription",
        "icredential",
        "instanceType",
        "body",
        "Body",
        "noteData",
        "ScriptBootstrapActionConfig",
        "sourceDBInstanceIdentifier",
        "filterPattern",
        "cacheSecurityGroupName",
        "vaultName",
        "newUrl",
        "image",
        "masterInstanceType",
        "theKey",
        "groupName",
        "dBInstanceIdentifier",
        "revision",
        "receivePack",
        "Repository",
        "loadBalancerName",
        "filepattern",
        "username",
        "value",
        "detailMessage",
        "cookieName",
        "healthCheck",
        "blob",
        "T",
        "defaultField",
        "ruleName",
        "instanceId",
        "dBSecurityGroupName",
        "..",
        "indexField",
        "String",
        "authenticateOnUnsubscribe",
        "subscriptionArn",
        "strategy"
      ],
      "Syntactic Label": "Constructor Parameters",
      "Semantic Tags": [
        "Object Creation",
        "Request Handling",
        "Data Initialization",
        "API Interaction",
        "Parameter Passing"
      ],
      "Description": "These tokens represent parameters passed to constructors of various classes.  They are essential for initializing objects with necessary data, often used in handling requests and interactions with APIs. The parameters define the state of the newly created objects, which are then used in the application's logic."
    }
  },
  {
    "c161": {
      "Unique tokens": [
        "commands",
        "{",
        "(",
        ")"
      ],
      "Syntactic Label": "Constructor Parameters, Opening Brace, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Constructor Definition",
        "Object Instantiation",
        "Parameter Passing",
        "Control Flow",
        "Exception Handling"
      ],
      "Description": "These tokens are fundamental to C# class definitions and method implementations.  'commands' appears to be a collection of commands, likely used in a version control or similar system. '{' initiates a code block, typically within a method or class. '(' and ')' denote function parameters and method calls. The context shows these tokens are used in constructors, which are special methods used to initialize objects.  The use of 'if' statements within the constructors indicates conditional logic and exception handling, which is crucial for robust code."
    }
  },
  {
    "c162": {
      "Unique tokens": [
        "filterDbNameIndex",
        "startRuleIndex",
        ",",
        "rowIndex",
        "activeCellRow",
        "col",
        "srcRowIndex",
        "srcColumnIndex",
        "externSheetIndex",
        "stateNumber",
        "srcCellCol",
        "posStart",
        "int",
        "srcOff",
        "srcRowNum",
        "columnIndex",
        "srcCellRow",
        "refIndex",
        "lastRow"
      ],
      "Syntactic Label": "Integer Variables and Parameters",
      "Semantic Tags": [
        "Spreadsheet Cell Coordinates",
        "Function Arguments",
        "Spreadsheet Data Evaluation",
        "Error Handling",
        "Data Processing"
      ],
      "Description": "These tokens represent integer variables and parameters commonly used in spreadsheet formula evaluation.  They often denote row and column indices within a spreadsheet, serving as input to functions that process or evaluate data from spreadsheet cells. The frequent appearance of 'EvaluationException' handling suggests these functions are designed to robustly handle various data types and potential errors during calculation."
    }
  },
  {
    "c163": {
      "Unique tokens": [
        "pointer",
        "subReaders",
        "_formats",
        "cellRefs",
        "packed",
        "mValues",
        "vvY",
        "to",
        "startIndex",
        "b",
        "token",
        "children",
        "++",
        "interval",
        "ByteBuffer",
        "refs",
        "eq",
        "chars",
        "edges",
        "getMatchStarts",
        "blockSize",
        "payloadIndex",
        "positions",
        "ctf",
        "analyzerNames",
        "else",
        "sheetName",
        "cleaned",
        "nkeys",
        "getChildren",
        "dst",
        "longArray",
        "disjuncts",
        ")",
        "_cfHeaders",
        "originalText",
        "length",
        "buf",
        "decoder",
        "inBounds",
        "buffer",
        "result",
        "list",
        "newArray",
        "-",
        "content",
        "nRanges",
        "data",
        "null",
        ",",
        "wildcardText",
        "base",
        "passage",
        "scratchSegment",
        "desc",
        "blocks",
        "args",
        "footerLineKeyChars",
        "keys",
        "sentenceStarts",
        "phRuns",
        "mKeys",
        "newCapacity",
        "files",
        "[",
        "tailBlock",
        "Arrays",
        "specs",
        "updatedLexerActions",
        "read",
        "lemmas",
        "values",
        "termArrays",
        "byte",
        "Object",
        "ptgs",
        "buffers",
        "this",
        "fieldIndex",
        "tokens",
        "s",
        "charArray",
        "target",
        "upto",
        "size",
        "1",
        "termsDictOffsets",
        "plainText",
        "intervals",
        "output",
        "temp",
        "_iBook",
        "p",
        "suffixes",
        "segmentSuffix",
        "_firstCell",
        "shortArray",
        "_evaluationFrames",
        "ruleNames",
        "absoluteOffsets",
        "_externalBookBlocks",
        "cras",
        ".",
        "ArrayUtil",
        "currentBlock",
        "returnStates",
        "bytes",
        "bufferedDocs",
        "wasEscaped",
        "new",
        "analyzerName",
        "loose",
        "+",
        "_recs",
        "attributeImpls",
        "getArray",
        "rules",
        "freeByteBlocks",
        "header",
        "parts",
        "newPositions",
        "word",
        "cells",
        "getInputStream",
        "getSize",
        "badBuffer",
        "=",
        "array1",
        "terms",
        "wpil",
        "titleBuffer",
        "stats",
        "key",
        "remainingData",
        "(",
        "ArrayUtils",
        "raw",
        "tab",
        "internalBuffer",
        "comparators",
        "segment",
        "directory",
        "termOffsets",
        "nvalues",
        "i",
        "in",
        "term",
        ";",
        "\"",
        "rowCells",
        "tries",
        "output1",
        "path",
        "lexerActions",
        "strings",
        "output2",
        "0",
        "prefix",
        "format",
        "_xfs",
        "idBuf",
        "params",
        "Character",
        "nameProposal",
        "{",
        "text",
        "vvX",
        "current",
        "larray",
        "arrayPtgs",
        "pool",
        "line",
        "]",
        "cmd",
        "kv",
        "prompt",
        "docStarts",
        "cmds",
        "scratchBuffer",
        "cbuf",
        "payloads",
        "records",
        "username",
        "value",
        "nextValues",
        "inputBuffer",
        "subs",
        "ByteBlockPool",
        "otherBuffer",
        "field_4_name",
        "fields",
        "_rectangleGroups",
        "lowerBuffer",
        "utf32",
        "a",
        "resultBuffer",
        "vargs",
        "array",
        "rarray",
        "info"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "String Manipulation",
        "File I/O",
        "Exception Handling",
        "Algorithm"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including variables, objects, arrays, operators, keywords, and method calls.  The code snippets demonstrate various operations such as string manipulation, data structure manipulation, file I/O, exception handling, and algorithmic logic.  The semantic tags reflect the diverse functionalities present in the code examples."
    }
  },
  {
    "c164": {
      "Unique tokens": [
        "public",
        "Object",
        "Ref",
        "final",
        "synchronized",
        "T",
        "ArrayList",
        "int",
        "static",
        "Class",
        "String",
        "@Override",
        "ObjectId"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c165": {
      "Unique tokens": [
        "field_1_addMenuCount",
        "offset",
        "FontRecord",
        ".",
        "return",
        "sb",
        "char",
        "_rowRecords",
        "new",
        "_offset",
        "fieldsConsumer",
        "_children_names",
        "out",
        "_innerIter",
        "}",
        ";",
        "{",
        "_value",
        "else",
        "add",
        "=",
        "names",
        "copyOfRange",
        "]",
        "this",
        ")",
        "tokens",
        "_array",
        "buf",
        "(",
        "buffer",
        "synchronized",
        "for",
        "getItemInternal",
        "removeFromBothMaps",
        "-",
        "absColIx",
        "array",
        "if"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Method Parameters",
        "Method Return",
        "Object Instantiation",
        "Control Flow",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language features.  'field_1_addMenuCount', 'offset', 'FontRecord', etc., are identifiers, likely representing variables or class names. '.' is the member access operator. 'return' is a keyword indicating method return values. 'new' is used for object instantiation. 'if', 'else', 'for' are control flow keywords.  '[]', '()', '{}' are brackets and parentheses.  '=', '-', '+' are operators. 'sb', 'buf', 'array', etc., are identifiers, likely representing variables. 'synchronized' is a keyword for thread safety. The code snippets show various methods performing different operations, including data manipulation, object creation, and conditional logic."
    }
  },
  {
    "c166": {
      "Unique tokens": [
        "_lastSheetIndex",
        "null",
        ".",
        "return",
        "sb",
        "throw",
        "finally",
        "replacementChars",
        "new",
        "_isVerticallyFlipped",
        "default",
        "MAXIMUM_CAPACITY",
        "r",
        "System",
        "}",
        "if",
        "PackIndexV1",
        "Arrays",
        "<",
        "{",
        "fillParams",
        "_numberOfFormulas",
        "field_2_sheet_table_index",
        "setLength",
        "else",
        "sessions",
        "current",
        "false",
        "[/DATALABEXT]",
        "capacity",
        "retval",
        "break",
        "=",
        "final",
        "this",
        ":",
        "while",
        "append",
        ")",
        "MINIMUM_CAPACITY",
        "roundUpToPowerOfTwo",
        "maxTermWeight",
        "assert",
        "modCount",
        "flag",
        "(",
        "true",
        "skipped",
        "_currentlyEvaluatingCells",
        "_functionsByName",
        "s",
        "value",
        "m",
        "state",
        "tab",
        "replacement",
        "t",
        "termState",
        "i",
        "in",
        "for",
        "tokenImage",
        "_fieldInfos",
        "s0",
        "fieldsData",
        "readBytes",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Object Manipulation",
        "Data Structures",
        "Exception Handling",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `for`, `while`, `return`, `throw`, `finally` control program flow.  The dot operator (`.`) is used for member access.  `new` is used for object instantiation.  `StringBuilder` objects (`sb`) are used for string manipulation.  Arrays (`Arrays`) are used for data storage.  The symbols `=`, `(`, `)`, `{`, `}` are used for assignment, method calls, and code blocks.  `null` represents the absence of a value.  Other tokens suggest data structures, error handling, and other programming constructs."
    }
  },
  {
    "c167": {
      "Unique tokens": [
        "to",
        "startIndex",
        "formatIndex",
        "++",
        "interval",
        "ptr",
        "NB",
        "field_2_textLength",
        "<",
        "long",
        "field_3_unicode_len",
        "expression_len",
        "short",
        "nCRNs",
        "rPtr",
        ")",
        "int",
        "length",
        "available",
        "flag",
        "getNumDbcells",
        "x",
        "from",
        "nFuncs",
        "if",
        ",",
        "valStart",
        "endIndex",
        "len",
        "cchName",
        "field_3_strings",
        "colonPos",
        "[",
        "expAdj",
        "taxoCommitGen",
        "byte",
        "float",
        "bPtr",
        "f2",
        "success",
        "s",
        "nextOnChannel",
        "size",
        "double",
        "boolean",
        "nameLen",
        "frac",
        "prevOnChannel",
        "char",
        "dir",
        "k",
        "codePointCount",
        "valueLongBits",
        "field_5_num_refs",
        "v",
        "points",
        "precedenceDfa",
        "=",
        "cchDefPivotStyle",
        "final",
        "next",
        "(",
        "transitions",
        "is16BitFlag",
        "i",
        "nValues",
        "n",
        ";",
        "field_4_name_length",
        "0",
        "numChars",
        "d1",
        "cchDefListStyle",
        "taxoGen",
        "msgB",
        "nChars",
        "]",
        "indexGen",
        "field_5_comment_length",
        "flags",
        "f0",
        "FileMode"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Operators",
        "Data Types",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including data types (int, long, byte, float, double, boolean, char), operators (++ , < , = , , ), keywords (if, for, final, public, static, void, boolean, return, assert, try, catch, finally), and identifiers (e.g., fromIndex, toIndex, val, message, etc.). These elements are fundamental to C# programming and are used to define variables, control program flow, perform operations, and interact with files (FileMode). The semantic tags reflect the diverse functionalities present in the code snippets, encompassing data structure manipulation, control flow mechanisms, operator usage, data type declarations, and file I/O operations."
    }
  },
  {
    "c168": {
      "Unique tokens": [
        "wmfImage",
        ",",
        "newBuffer",
        ".",
        "return",
        "ArrayUtil",
        "j",
        "0",
        "+",
        "len",
        "++",
        "maxLevels",
        "ip",
        "delta",
        "[",
        "orows",
        "ptr",
        "}",
        "keyStart",
        "roundNumber",
        "points",
        "==",
        "INFO_LEN",
        "]",
        "thumbnail",
        "=",
        "rPtr",
        "append",
        ")",
        "slices",
        "tmp",
        "int",
        "length",
        "s",
        "(",
        "o",
        "hdr",
        "1",
        "\\n",
        "size",
        "orig",
        "i",
        "operands",
        "instanceof",
        "rollBufferSize",
        "-",
        "temp",
        "x",
        "suffixes",
        "p",
        "pos",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Array Manipulation",
        "Exception Handling",
        "String Manipulation",
        "Data Structures",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including variables, arrays, operators, keywords, and method calls.  The code snippets demonstrate array manipulation (System.arraycopy, array resizing), exception handling (try-catch blocks, throwing exceptions), string manipulation (StringBuilder), data structures (arrays, lists), and control flow (loops, conditional statements).  These are fundamental aspects of C# programming, crucial for building robust and efficient applications."
    }
  },
  {
    "c169": {
      "Unique tokens": [
        "field_8_adtl_palette_options",
        "field_3_color_palette_index",
        "field_6_underline",
        "_reserved2",
        "mEdgeScaleY",
        "_hasFreqs",
        "jj_expentries",
        "osVersion2",
        "field_7_comment_text",
        "field_3_color3",
        "_significand",
        "<",
        "mGlowAlpha",
        "field_5_super_sub_script",
        ")",
        "field_2_attributes",
        "field_7_family",
        "_isxdiSort",
        "field_6_border_options",
        "osVersion1",
        "-",
        "mEdgeAlpha",
        "field_11_font_name",
        "field_5_indention_options",
        ",",
        "IOUtils",
        "field_1_font_height",
        ">",
        "mGlowAlphaStart",
        "field_3_cell_options",
        "shape",
        "[",
        "field_2_color2",
        "field_5_sheetname",
        "_hasPayloads",
        "0x1B873593",
        "c2",
        "BASE_RAM_BYTES_USED",
        "mEdgeAlphaStart",
        "field_2_format_index",
        ".",
        "0xCC9E2D51",
        "new",
        "field_1_color1",
        "+",
        "field_1_shapeIdMax",
        "field_3_numShapesSaved",
        "field_4_color4",
        "_citmShow",
        "add",
        "=",
        "field_4_alignment_options",
        "classID2",
        "final",
        "0xE6546B64",
        "(",
        "field_9_zero",
        "in",
        "_grbit2",
        "_isxdiShow",
        "classID1",
        "r_mark_regions",
        "\"",
        "mGlowScaleY",
        "field_4_bold_weight",
        "field_7_palette_options",
        "field_8_charset",
        "field_9_fill_palette_options",
        "_subtotalName",
        "mPullDistance",
        "field_6_name_text",
        "sectionCount1",
        "_hasPositions",
        "]",
        "_hasOffsets",
        "field_1_font_index",
        "field_2_blipTypeMacOS",
        "field_5_comment_length",
        "token_source",
        "shiftRight"
      ],
      "Syntactic Label": "Data Fields",
      "Semantic Tags": [
        "Data Representation",
        "Record Structures",
        "Data Deserialization",
        "File I/O",
        "Data Structures"
      ],
      "Description": "These tokens represent data fields within C# record structures.  The code demonstrates deserialization of data from a RecordInputStream, populating these fields.  This is common in file I/O operations where data is read from a stream and parsed into objects. The semantic tags reflect the core functionality of reading and representing data within a structured format."
    }
  },
  {
    "c170": {
      "Unique tokens": [
        "",
        "paths",
        "nBreaks",
        "?",
        "progressMonitor",
        "field_2_textLength",
        "<",
        "blockSize",
        "dirSize",
        "hash",
        "sheetName",
        "codec",
        "short",
        "SheetRangeIdentifier",
        "root",
        "automaton",
        ")",
        "ord",
        "length",
        "cell",
        "buffer",
        "Integer",
        "list",
        "-",
        "repo",
        "ProgressMonitor",
        "nFuncs",
        "subfilters",
        "fileName",
        "offset",
        "null",
        ",",
        "patternText",
        "q",
        "sb",
        "args",
        "field_6_expression_len",
        ">",
        "lexerAction",
        "EscherOptRecord",
        "field_3_strings",
        "[",
        "BooleanModifiersQueryNodeProcessor",
        "expAdj",
        "end",
        "==",
        "DEFAULT_PRESERVE_ORIGINAL",
        "byte",
        "sourceSet",
        "this",
        "createFormat",
        "name",
        "ref",
        "array",
        "s",
        "true",
        "1",
        "class",
        "orig",
        "termState",
        "Map",
        "POINT(",
        "!",
        "packedIntsVersion",
        "existingTerm",
        "proto",
        ".",
        "IOException",
        "return",
        "source",
        "newline",
        "new",
        "+",
        "trace",
        "delta",
        "expected",
        "original",
        "dictionary",
        "parser",
        "precedenceDfa",
        "SnowballStemmer",
        "=",
        "RuleBasedTransliterator",
        "maxTermWeight",
        "many",
        "CRNRecord",
        "field_1_string_len",
        "(",
        "d",
        "freq",
        "diff",
        "rawBits",
        "i",
        "in",
        "instanceof",
        "product",
        "createFromStrings",
        "!=",
        ";",
        "type",
        "\"",
        "field_1_string_length",
        "PathFilterGroup",
        "ignoreSubmoduleMode",
        "E",
        "res",
        "RevCommit",
        "0",
        "BooleanQuery2ModifierNodeProcessor",
        "format",
        "r",
        "start",
        "out",
        "spanPosRange(",
        "c",
        "formulaTokenLen",
        "}",
        "'",
        "segments",
        "{",
        "text",
        "DVRecord",
        "capacity",
        "e",
        "]",
        ":",
        "&&",
        "field_1_numcolors",
        "value",
        "poi",
        "_isxvd",
        "weightedTerms",
        "words",
        "a",
        "s0",
        "rs",
        "other"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Instantiation",
        "Method Invocation",
        "Control Flow",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (public, class, if, else, return, new, etc.), operators (+, -, ==, !=, ., etc.), identifiers (paths, nBreaks, progressMonitor, etc.), data types (int, byte[], String, List, Map, etc.), and symbols (, ;, {, }, (, ), [, ], etc.).  These tokens are used to construct various program structures, such as class definitions, method implementations, conditional statements, loops, object instantiations, method invocations, and data manipulation. The semantic tags reflect the common operations performed in the code snippets, including creating objects, calling methods, controlling program flow, using data structures, and performing file I/O operations."
    }
  },
  {
    "c171": {
      "Unique tokens": [
        "",
        "field_8_adtl_palette_options",
        "MAX_ROW",
        "BYTES_TO_WRITE_BEFORE_CANCEL_CHECK",
        "REJECTED_NONFASTFORWARD",
        "OVERLAP",
        "GROUP1_REAL_SIGN",
        "INT_SIZE",
        "MAX_VALUE",
        "TERMS_EXTENSION",
        "UTF_8",
        "VALUE_INVALID",
        "b",
        "0x00",
        "NO_PACKS",
        "DATA_SIZE",
        "BOOST_ERROR_MESSAGE",
        "VBA_PROJECT",
        "MAX_RECORD_LENGTH",
        "NOT_CALCULATED",
        "REJECTED_CURRENT_BRANCH",
        "MAX_PATH_LENGTH",
        "AUTHORITY_ENCODER",
        "_VBA_PROJECT",
        "NUMBER",
        "1_000_000",
        "TOO_MANY_BOOLEAN_CLAUSES",
        "PULL_TIME",
        "BYTE2",
        "...",
        ")",
        "upgraded",
        "0x01",
        "append",
        "REGULAR_FILE",
        "R_REMOTES",
        "DEFAULT_NUMTERMS",
        "EMPTY_INSTANCE",
        "length",
        "KEY_UPLOADPACK",
        "STATE_PULL_DECAY",
        "field_6_border_options",
        "DEFAULT_ARG4",
        "CONFIG_SUBMODULE_SECTION",
        "C_2_POW_19",
        "ATTR(semiVolatile)",
        "DEFAULT_UPLOAD_PACK",
        "sz",
        "if",
        "field_5_indention_options",
        "field_3_outline_style_level",
        ",",
        "0xFEE0",
        "COMPLEX_NUMBER_PATTERN",
        "OBJ_TREE",
        "EXTERNALBOOK",
        "FOUND",
        "OBJECT_ID_LENGTH",
        "NAMEDRANGE",
        "R_HEADS",
        "MAX_MERGED_REGIONS",
        "NORMALIZE_KANJI_DEFAULT",
        "R_TAGS",
        "field_3_reserved",
        "PULL_GLOW_BEGIN",
        "ldr",
        "MAX_ECS_METADATA_FETCH_RETRY_TIMES",
        "false",
        "byte",
        "FILL__FILLTYPE",
        "FORMAT_WORDSET",
        "SIN_COS_MAX_VALUE_FOR_INT_MODULO",
        "REPORT",
        "field_2_encoded_url",
        "KEY_URL",
        "DEFAULT_BUCKET_SIZE",
        "HELD_EDGE_SCALE_Y",
        "NEXT_LEVEL_ARRAY",
        "MAX_ITERATION_COUNT",
        "DEFAULT_MINIMUM_LENGTH",
        "BYTE_BLOCK_SIZE",
        "NUM_ERROR",
        "DELETE",
        "TERMS_VERSION_START",
        "field_2_format_index",
        "REJECTED_MISSING_OBJECT",
        "MAX_BUCKETS",
        "PULL_EDGE_BEGIN",
        "commit",
        "field_1_record_type",
        "CONFIG_KEY_UPDATE",
        "CFTAG_WINDOWS",
        "R_STASH",
        "AUTOMATON_TYPE",
        ".",
        "return",
        "throw",
        "field_3_sheet_name",
        "LOCK_FAILURE",
        "SSH_DIR",
        "END_OF_CHAIN",
        "NUM_BYTES_OBJECT_REF",
        "NO_INTERSECTION",
        "+",
        "GET",
        "NOT_ATTEMPTED",
        "bufferOffset",
        "field_1_xf_index",
        "AUTO_DETECT_MERGES_AND_THREADS",
        "TERMS_CODEC_NAME",
        "DOT_GIT_EXT",
        "RULE_STOP",
        "_not_used_2",
        "INT_BLOCK_SIZE",
        "UPPER_CASE",
        "RECORD_ID",
        "SEGMENTS",
        "toString",
        "EMPTY_CONTINUE_RECORD_ARRAY",
        "FORMULA",
        "QUERY_TREE_BUILDER_TAGID",
        "MOVE_DONT_RESIZE",
        "=",
        "COMMA_PATTERN",
        "KEY_TAGOPT",
        "BUILTIN_PRINT_AREA",
        "OFFSET_FONT_FORMATING_END",
        "FIELD_DATE_RESOLUTION_MAP",
        "CODEC_NAME",
        "(",
        "MAX_NUMBER_OF_PLACES",
        "INVALID_ALT_NUMBER",
        "FLAG_FLIPHORIZ",
        "VERSION_CURRENT",
        "FILL_TYPE_PICTURE",
        "in",
        "SIN_COS_INDEXER",
        "B_continue_stemming_noun_suffixes",
        "STATE_PULL",
        "TITLE_CASE",
        "ignoreCase",
        "CARAT",
        ";",
        "\"",
        "EMPTY_RETURN_STATE",
        "r_standard_suffix",
        "r_more_than_one_syllable_word",
        "FILL__PATTERNTEXTURE",
        "STANDARD_PALETTE_SIZE",
        "switch",
        "INPUT_TYPE",
        "field_2_builtin_style",
        "field_4_name_length",
        "_option_flags",
        "LOG_BASE_10_OF_2_TIMES_2_POW_20",
        "attribute",
        "OBJECT_ID_STRING_LENGTH",
        "OFFSET_NOT_USED2",
        "TERMS_INDEX_EXTENSION",
        "field_7_palette_options",
        "0",
        "field_9_fill_palette_options",
        "GB2312_CHAR_NUM",
        "LIVEDOCS_EXTENSION",
        "DATE_RESOLUTION",
        "FLAG_FLIPVERT",
        "DIV_ZERO",
        "}",
        "USER_DATA",
        "MAX_RADIX",
        "DEFAULT_PASSWORD",
        "FIRST_COLOR_INDEX",
        "SIN_COS_TABS_SIZE",
        "{",
        "0xBB",
        "FORMAT_SNOWBALL",
        "SINGLE",
        "TERMS_VERSION_CURRENT",
        "LEVEL_SIZE_ARRAY",
        "]",
        "field_2_frt_cell_ref_flag",
        ":",
        "GIT_SSH",
        "0xEF",
        "0xBF",
        "ANY_DIFF",
        "&&",
        "OFFSET_FONT_NAME",
        "field_1_font_index",
        "KEY_TIMEOUT",
        "MAX_COL",
        "EXCEL97",
        "OFFSET_NOT_USED3",
        "DEFAULT_CHANNEL",
        "OBJECT_TYPE_OVAL",
        "PADDING",
        "DOT_GIT",
        "DEFAULT_RECEIVE_PACK",
        "INVALID_STATE_NUMBER"
      ],
      "Syntactic Label": "Identifiers, Keywords, Operators, Literals, Special Characters",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Exception Handling",
        "File I/O",
        "String Manipulation"
      ],
      "Description": "The tokens represent a mix of C# identifiers (e.g., field_8_adtl_palette_options, MAX_ROW), keywords (e.g., if, switch, return, throw), operators (e.g., ., +, =, &&), literals (e.g., 0x00, 1_000_000, false), and special characters (e.g., (, ), {, }, [, ], ., ,).  These tokens are used in various C# code snippets to build data structures, control program flow, handle exceptions, perform file I/O operations, and manipulate strings. The semantic tags reflect the diverse functionalities of the code segments."
    }
  },
  {
    "c172": {
      "Unique tokens": [
        "",
        "bytesEqual",
        "position",
        "j",
        "alt",
        "ge",
        "?",
        "resource",
        "name2",
        "break",
        ")",
        "instance",
        "cp",
        "length",
        "Integer",
        "isPrecedenceFilterSuppressed",
        "Float",
        "getId",
        "service",
        "if",
        "region",
        "offset",
        "null",
        ",",
        "statsEqual",
        "obj",
        ">",
        "[",
        "selector",
        "Arrays",
        "parents",
        "==",
        "false",
        "stateNumber",
        "actionIndex",
        "this",
        "descriptor",
        "le",
        "name",
        "ref",
        "c2",
        "equalsTo",
        "s",
        "semanticContext",
        "true",
        "hashCode",
        "anchor",
        "appendStatus",
        "getClass",
        "returnState",
        "propertyValue",
        "p",
        "!",
        "so",
        "complexData",
        ".",
        "return",
        "throw",
        "returnStates",
        "Password",
        "equals",
        "font",
        "dropLF",
        "Predicate",
        "=",
        "terms",
        "equalSoFar",
        "getRow1",
        "ibm",
        "rval",
        "Document",
        "(",
        "endsWith",
        "o",
        "instanceof",
        "arn",
        "action",
        "term",
        "Arn",
        "icu",
        "!=",
        ";",
        "type",
        "\"",
        "path",
        "lexerActions",
        "partition",
        "context",
        "c",
        "escherComplexProperty",
        "}",
        "{",
        "parent",
        "numDocs",
        "e",
        "]",
        ":",
        "^",
        "&&",
        "value",
        "getS3Object",
        "Constants",
        "m",
        "a",
        "other",
        "escherSimpleProperty",
        "when"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Object Comparison",
        "Conditional Logic",
        "Method Invocation",
        "Data Structures",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, return, throw), operators (==, !=, =, ., &&, !), data types (Integer, Float, String, boolean), object instances, method calls (e.g., equals, getClass, getRow1, etc.), and control flow structures.  These elements are fundamental to building C# programs, enabling object comparisons, conditional execution, method invocation, data manipulation, and error handling. The context sentences show various uses of these tokens in methods that perform equality checks, object manipulation, conditional logic, and exception handling."
    }
  },
  {
    "c173": {
      "Unique tokens": [
        "limit",
        ",",
        ".",
        "location",
        "--",
        "endIdx",
        "j",
        "0",
        ">",
        "++",
        "len",
        "jumpTable",
        "<=",
        "header",
        "codePointCount",
        "<",
        "{",
        "end",
        "ctf",
        "25",
        "iterations",
        "_numberOfRegions",
        ">=",
        "cmd",
        "append",
        ")",
        "PColor",
        "slices",
        "int",
        "10",
        "length",
        "&&",
        "s",
        "(",
        "true",
        "_interp",
        "1",
        "size",
        "buffer",
        "i",
        "in",
        "exceptions",
        "-",
        "n",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Loop Control",
        "Data Processing",
        "String Manipulation",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements including variables, loop counters, operators, method calls, data types, and control flow structures.  The sentences show common programming patterns such as loops (for), conditional statements (if), string manipulation (StringBuilder), array processing, and exception handling (try-catch).  These elements are fundamental to C# programming and are used extensively in various applications."
    }
  },
  {
    "c174": {
      "Unique tokens": [
        "getDoubleValuesSource",
        "getInt",
        "decrementAndGet",
        "distanceSquared",
        "copyOf",
        "_columnIndex",
        "UTF_8",
        "bitLength",
        "writeShort",
        "put",
        "getValueString",
        "isSame",
        "toArray",
        "checkReadPrimitiveTypes",
        "BoundedMap",
        "asList",
        "utf8ToString",
        "setLength",
        "getIx",
        "addFirstImpl",
        "putShort",
        "remainingBytes",
        "termBytes",
        "getLong",
        "field='*'",
        "ModifiedUtf8",
        "writeFloat",
        "baselineTf",
        "sameProperties",
        "Streams",
        "assertNotFinished",
        "positionImpl",
        "floatToRawIntBits",
        "floatToIntBits",
        "copy",
        "toText",
        "writeLong",
        "writeBytes",
        "<matchNoDocsQueryNode/>",
        ")",
        "unmodifiableCollection",
        "deleteCharAt0",
        "compareUnsigned",
        "refCount",
        "writeContinueIfRequired",
        "fromHexString",
        "getConsumingCells",
        "putOrderedObject",
        "toEpochMilli",
        "checkConcurrentModification",
        "doubleToLongBits",
        "checkIndex",
        "putLong",
        "Float",
        "needBaseObjectIds",
        "I(n)",
        "valueOffset",
        "getObjectCount",
        "null",
        "getOffsetGap",
        "0x7",
        "_externalNameRecords",
        "unmodifiableSet",
        "pokeInt",
        "_rowIndex",
        "field_3_rks",
        "toIntExact",
        "intBitsToFloat",
        "sync",
        "ConcurrentHashMap",
        "[",
        "readBoolean",
        "addAll",
        "nativeOrder",
        "ZEROID_STR",
        "Arrays",
        "readLong",
        "read",
        "ArrayList",
        "readSingleByte",
        "utf8",
        "checkPosition",
        "shouldBeRecursive",
        "getWrappedAnalyzer",
        "this",
        "readUByte",
        "distanceSortKey",
        "getLastModifiedInstant",
        "CopyOnWriteArrayList",
        "lastFailedRefreshTime",
        "NumberEval",
        "emptySet",
        "ErrorEval",
        "writingNotPermitted",
        "decodeUTF",
        "addLastImpl",
        "upto",
        "appendDouble",
        "double",
        "compare",
        "[numDocs=",
        "NO_MERGES",
        "for",
        "RefsChangedListener",
        "I(ne)",
        "computeNorm",
        "readFloat",
        "limitImpl",
        "innerGet",
        "writeChar",
        "ensureCapacity",
        "codePointAt",
        "rint",
        "StandardDirectoryReader.ReaderCommit(",
        "arraycopy",
        "encodeBytes",
        ".",
        "CHARSET_1252",
        "primitiveTypes",
        "pokeLong",
        "appendLong",
        "TERM:",
        "OBJECT",
        "MurmurHash2",
        "+",
        "DefaultSetHolder",
        "appendInt",
        "lowerKey",
        "log",
        "validateDirs",
        "writeBoolean",
        "append0",
        "consume",
        "ensureOpen",
        "_ulrOutput",
        "getPositionIncrementGap",
        "Ens",
        "codePointCount",
        "readFully",
        "currentTimeMillis",
        "peekLong",
        "messageWriter",
        "flush",
        "readInt",
        "INSTANCE",
        "readByte",
        "toString",
        "longBitsToDouble",
        "RandomAccessInput(",
        "isEmpty",
        "messageBuffer",
        "doubleToRawLongBits",
        "=",
        "EMPTY_OBJECTID_LIST",
        "Boolean",
        "writeInt",
        "reverse0",
        "addAndGet",
        "putInt",
        "(",
        "writeByte",
        "removeFirst",
        "write",
        "d",
        "primitiveData",
        "writeFieldValues",
        "NoMergePolicy",
        "shouldSkipEncryptionOnCurrentRecord",
        "valueOf",
        "isSupported",
        "Long",
        "writeUTF",
        "unmodifiableList",
        "removeFirstOccurrenceImpl",
        "readPlain",
        "sort",
        ";",
        "JGitText",
        "TooManyBasicQueries",
        "\"",
        "readDouble",
        "skipByReading",
        "getInstance",
        "binarySearch",
        "protectedArrayOffset",
        "_string",
        "ceilingKey",
        "term='*'/>",
        "Number",
        "insert0",
        "IntegralToString",
        "0xFFFFFFFFL",
        "0xcbf29ce484222325L",
        "getBundleFor",
        "get",
        "prevAccept",
        "unsafeWrite",
        "System",
        "setLongValue",
        "close",
        "setCharAt",
        "refreshIntervalInMillSeconds",
        "encode",
        "{",
        "readChar",
        "writeDouble",
        "orderImpl",
        "readLine",
        "bufferStart",
        "decodeTS",
        "appendFloat",
        "higherKey",
        "copyValueOf",
        "numDocs",
        "checkWritePrimitiveTypes",
        "typedGetter",
        "field_7_parsed_expr",
        "subSequence",
        "compareAndSwapObject",
        "peekShort",
        "getCachedBytes",
        "deltaBaseAsOffset",
        "backingArray",
        "RealToString",
        "codePointBefore",
        "removeLastImpl",
        "String",
        "create",
        "writeChars",
        "getListenerType",
        "Double",
        "0f",
        "drain",
        "checkCallable",
        "compareTo",
        "getDefault"
      ],
      "Syntactic Label": "Method Names and Variables",
      "Semantic Tags": [
        "Input/Output Operations",
        "Data Transformation",
        "Data Structures",
        "Utility Functions",
        "Concurrency Control"
      ],
      "Description": "The tokens represent a mix of method names and variables used in various C# functionalities.  Methods like `putDouble`, `readInt`, `writeUTF` suggest operations related to data input/output and transformation.  Variables and types such as `ByteBuffer`, `ConcurrentHashMap`, `ArrayList` indicate the use of different data structures.  Methods like `checkCallable`, `checkConcurrentModification`, and the use of `ConcurrentHashMap` hint at concurrency control mechanisms.  The overall code snippet appears to be a collection of utility functions and data handling routines."
    }
  },
  {
    "c175": {
      "Unique tokens": [
        "\"",
        "IOError",
        "UnsupportedEncodingException",
        "err",
        "IOException",
        "EvaluationException",
        "throw",
        "finally",
        "eof",
        "Error",
        "new",
        "throwIndexOutOfBoundsException",
        "InvalidRefNameException",
        "rethrowAlways",
        "IncorrectObjectTypeException",
        "UnsupportedOperationException",
        "CowSubList",
        "IndexOutOfBoundsException",
        "ParseException",
        "NegativeArraySizeException",
        "RuntimeException",
        "EOFException",
        "NullPointerException",
        "ErrorEval",
        "(",
        "Exception",
        "RepositoryNotFoundException",
        "IllegalStateException",
        "Version",
        "catch",
        "ArrayIndexOutOfBoundsException",
        "IllegalArgumentException",
        "ParserException",
        "NoSuchElementException"
      ],
      "Syntactic Label": "Exception Handling Keywords and Classes",
      "Semantic Tags": [
        "Exception Handling",
        "Error Management",
        "Runtime Exceptions",
        "Input Validation",
        "Resource Management"
      ],
      "Description": "The tokens represent various exception classes in C# used for handling errors and exceptional situations during program execution.  Keywords like \"throw\", \"catch\", and \"finally\" are integral parts of C#'s exception handling mechanism.  The code snippets demonstrate how these exceptions are thrown to signal errors and how they are caught and handled to prevent program crashes.  The semantic tags highlight the importance of robust error management and resource handling in C# applications."
    }
  },
  {
    "c176": {
      "Unique tokens": [
        "EscherRecord",
        "SegmentCommitInfo",
        "it",
        "char",
        "BitSet",
        "--",
        "k",
        "Trie",
        "LexerAction",
        "e",
        "byte",
        "=",
        "short",
        "final",
        "while",
        "int",
        "(",
        "d",
        "t",
        "double",
        "i",
        "CredentialItem",
        "for",
        "String",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Processing",
        "Looping and Iteration",
        "Conditional Statements",
        "Data Structures",
        "Primitive Data Types"
      ],
      "Description": "The tokens represent a mix of C# keywords (e.g., while, for, final, int, byte, short, double, char), operators (=, --), data types (int, byte, char, double, short, String, BitSet), and identifiers (e.g., EscherRecord, SegmentCommitInfo, CredentialItem, Trie, LexerAction).  These tokens are used in various methods that perform data processing, often involving looping and iteration (for, while loops), conditional checks (if statements), and manipulation of data structures (arrays, BitSet, Trie). The semantic tags reflect the common operations performed in the code snippets."
    }
  },
  {
    "c177": {
      "Unique tokens": [
        "\"",
        "Formatting]",
        "(missing:",
        ".rowsumsrigt=",
        ".",
        "return",
        "sb",
        "byteToHex",
        "separator",
        "k",
        "+",
        "++",
        ".author",
        "field_6_name_text",
        "Add-In",
        "[",
        ".comment",
        "}",
        ";",
        "getValue",
        "toString",
        "FORMULA",
        "=",
        "performDataValidation",
        "append",
        ")",
        "field_7_rowInputRow",
        "(",
        "_dxMin",
        "buffer",
        "\\n",
        "Integer",
        "i",
        "field_3_flags",
        "getTokens",
        "shortToHex",
        "[/NOTE]",
        "if",
        "type"
      ],
      "Syntactic Label": "String Manipulation and Data Representation",
      "Semantic Tags": [
        "String Formatting",
        "Data Serialization",
        "Hexadecimal Conversion",
        "Object Representation",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a combination of string manipulation techniques (using StringBuilder, append, +, \\n), data representation (hexadecimal conversion using functions like shortToHex, byteToHex, Integer.toHexString), and conditional logic (if statements) to create string representations of various data structures and objects.  The overall goal is to serialize data into a human-readable string format, often for debugging or logging purposes.  The use of StringBuilder is efficient for string concatenation in C#."
    }
  },
  {
    "c178": {
      "Unique tokens": [
        "readUByte",
        ")",
        "readShort",
        "readInt",
        "(",
        "readByte",
        "readString"
      ],
      "Syntactic Label": "Method Calls",
      "Semantic Tags": [
        "Data Deserialization",
        "Binary Data Processing",
        "File Input",
        "Record Reading",
        "Data Structures"
      ],
      "Description": "These tokens represent method calls to read different data types (byte, short, int, string) from a RecordInputStream in C#.  This is common in scenarios where binary data needs to be deserialized from a file or stream into C# objects. The methods are used to populate fields of various record classes, suggesting a data structure representing spreadsheet or file format data."
    }
  },
  {
    "c179": {
      "Unique tokens": [
        "lst",
        ".",
        "res",
        "r",
        "Collections",
        "System",
        "INSTANCE",
        "clone",
        "maxAgeSec",
        "=",
        "this",
        "ref",
        "s",
        "(",
        "subSlice",
        "phoneticTextFirstCharacterOffset",
        "t",
        "o",
        "rc",
        "logger",
        "result",
        "other",
        ";"
      ],
      "Syntactic Label": "Object, Variable, Method, Dot Operator, Assignment Operator, Parenthesis, Semicolon",
      "Semantic Tags": [
        "Object Instantiation",
        "Constructor",
        "Member Access",
        "Object Initialization",
        "Method Chaining"
      ],
      "Description": "The tokens represent a variety of syntactic elements common in C# object-oriented programming.  'lst', 'res', 'r', 's', 't', 'o', etc., are likely variable names. '.' is the dot operator for member access.  'this' refers to the current instance of a class. '=' is the assignment operator.  '()', '{' and '}' are used for method calls and code blocks. ';' is the semicolon, which terminates statements.  The context sentences show the creation and initialization of various objects using constructors, setting member variables, and potentially method chaining."
    }
  },
  {
    "c180": {
      "Unique tokens": [
        "\"",
        "arg1",
        "null",
        ",",
        ".",
        "return",
        "sb",
        "E",
        "now",
        "input",
        ">",
        "+",
        "0",
        "++",
        "?",
        "collator",
        "ALL",
        "}",
        "<",
        "{",
        "==",
        "false",
        "stateNumber",
        "]",
        ":",
        "this",
        "_ref",
        ")",
        "4",
        "&&",
        "true",
        "(",
        "o",
        "value",
        "size",
        "1",
        "->",
        "SystemReader",
        "-",
        "rule1",
        "lock",
        "other",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Method Declaration",
        "Method Implementation",
        "Object Instantiation",
        "Control Flow",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (public, static, return, if, else, etc.), operators (+, -, ==, !=, &&, etc.), identifiers (method names, variable names, class names), symbols ({, }, (, ), [, ], ., etc.), and literals (null, 0, 1, 4, true, false, etc.).  These tokens are used in various syntactic structures such as method declarations, method implementations, object instantiations, control flow statements (if-else, loops), and data structure manipulations (arrays, collections). The semantic significance lies in the overall functionality of the code snippets, which appear to be related to data processing, object manipulation, and potentially algorithm implementation."
    }
  },
  {
    "c181": {
      "Unique tokens": [
        "",
        "off",
        "position",
        "to",
        "charCount",
        "inEnd",
        "getWidth",
        "b",
        "idx",
        "suffix",
        "++",
        "2",
        "?",
        "threshold",
        "interval",
        "1000L",
        "eq",
        "ptr",
        "numTerms",
        "doubleCount",
        "5",
        "<",
        "blockSize",
        "hash",
        "nFrames",
        "lines",
        "chrA",
        "startB",
        "short",
        "Short",
        "ruleIndex",
        "pattern",
        ")",
        "cp",
        "int",
        "length",
        "buf",
        "modCount",
        "available",
        "lastDot",
        "Integer",
        "boost",
        "getChildCount",
        "-",
        "bytesRemaining",
        "from",
        "sz",
        "aux",
        "pos",
        "left",
        "3",
        "numberOfWords",
        "offset",
        "limit",
        "data",
        ",",
        "base",
        "characters",
        "getHeight",
        ">",
        "BLOCK_SIZE",
        "len",
        "maxSizeNeeded",
        "maxLevels",
        "mKeys",
        "order",
        "<=",
        "maxDims",
        "end",
        "*",
        "bufferPos",
        "de",
        "read",
        "iterations",
        "floatCount",
        "t0",
        "_limit",
        "timeout",
        "bufferSize",
        "byteCount",
        "nNames",
        "this",
        "tokens",
        "hLen",
        "getCount",
        "monitor",
        "newLength",
        "l",
        "nRegions",
        "s",
        "upto",
        "size",
        "1",
        "blockMask",
        "_lastRowIndex",
        "p",
        "suffixes",
        "intCount",
        "so",
        "srcLen",
        "_values",
        "dist",
        "codePointAt",
        ".",
        "return",
        "prefixLen",
        "elementCount",
        "bytes",
        "index",
        "k",
        "srcOffset",
        "+",
        "_offset",
        "delta",
        "retryTimes",
        "16",
        "cells",
        "numWords",
        "entries",
        "elements",
        "endOffset",
        "time",
        "sheetIndex",
        "endPosition",
        "oso",
        "next",
        "key",
        "(",
        "recordSize",
        "written",
        "getEndIndex",
        "i",
        "cnt",
        "suffixLen",
        "in",
        "wordOffset",
        "n",
        "_size",
        "maxSize",
        ";",
        "valueCount",
        "forwardCount",
        "inPtr",
        "level",
        "location",
        "toRead",
        "max",
        "mask",
        "newSize",
        "totalCount",
        "nItems",
        "0",
        "rowIndex",
        "eo",
        "start",
        "_reserved",
        "c",
        "}",
        "alphabetSize",
        "mSize",
        "{",
        "oeo",
        "msgB",
        "outPtr",
        "getNumNames",
        "pathLen",
        "streamCount",
        "entryCount",
        "capacity",
        "e",
        "nChars",
        "]",
        "cmd",
        "remaining",
        ":",
        "blockShift",
        "charsLen",
        "maxrow",
        "_array",
        "sheetNumber",
        "childCount",
        "replacement",
        "value",
        "count",
        "columnIndex",
        "_length",
        "exceptions",
        "tailIndex",
        "8",
        "numfonts",
        "BYTES",
        "other",
        "minSize",
        "colon",
        "valuesOffset"
      ],
      "Syntactic Label": "Variables, Operators, Method Calls, Literals, Array Access",
      "Semantic Tags": [
        "Data Processing",
        "String Manipulation",
        "Byte Manipulation",
        "Algorithm Implementation",
        "Control Flow"
      ],
      "Description": "The tokens represent a mix of data types (int, byte[], char[], etc.), operators (+, -, <, >, ++, etc.), method calls (e.g., length, codePointAt, Arrays.sort, etc.), literals (numbers, strings), and array access.  These are fundamental elements in C# programming used to implement various algorithms and data processing tasks. The semantic tags reflect the common operations performed in the provided code snippets, such as string manipulation, byte array processing, and control flow structures (loops, conditional statements)."
    }
  },
  {
    "c182": {
      "Unique tokens": [
        "\"",
        "null",
        ".iObjectInstance2=",
        ".",
        "sb",
        "_idObj",
        "RECORD]",
        "[/DIMENSIONS]",
        "+",
        "crRowInput",
        "toHex",
        ".name",
        ".value",
        "if",
        "'",
        "}",
        "{",
        "typeString",
        "readRemainder",
        "intToHex",
        "=",
        "getDisplayGuts",
        "append",
        ")",
        ".unicode_flag=",
        "isxvdData",
        "(",
        "buffer",
        "\\n",
        "shortToHex",
        ".activecellref",
        "HexDump",
        ";"
      ],
      "Syntactic Label": "StringBuilder and its methods, along with other C# language constructs",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Hexadecimal Conversion",
        "Object Serialization",
        "Data Structure"
      ],
      "Description": "The code uses StringBuilder to create string representations of various data structures.  It leverages methods like append to concatenate strings and values.  The HexDump class provides hexadecimal conversion for data fields. The overall purpose is to serialize data into a human-readable string format, likely for debugging or logging purposes.  The tokens represent objects, methods, operators, and literals used in this process."
    }
  },
  {
    "c183": {
      "Unique tokens": [
        "DescribeAccountLimitsRequest",
        "DescribeDBSecurityGroupsRequest",
        "DescribeWorkspaceDirectoriesRequest",
        "DescribeLoadBalancerPolicyTypesRequest",
        "DescribeReplicationGroupsRequest",
        "DescribeReservedInstancesOfferingsRequest",
        "DescribeLoadBalancersRequest",
        "DescribeVirtualGatewaysRequest",
        "DescribeClusterParameterGroupsRequest",
        "DescribeAvailabilityZonesRequest",
        "ListIdentitiesRequest",
        "ListDomainsRequest",
        "DescribeCacheSecurityGroupsRequest",
        "DescribeAlarmHistoryRequest",
        "DescribeKeyPairsRequest",
        "DescribeCacheEngineVersionsRequest",
        "DescribeAlarmsRequest",
        ")",
        "ListTablesRequest",
        "DescribeLoadBalancerPoliciesRequest",
        "DescribeReservedInstancesListingsRequest",
        "DescribeVolumeStatusRequest",
        "DescribeNotificationConfigurationsRequest",
        "DescribeTerminationPolicyTypesRequest",
        "GetHostedZoneCountRequest",
        "GetSendQuotaRequest",
        "DescribeWorkspaceBundlesRequest",
        "DescribeCustomerGatewaysRequest",
        "DescribeReservedDBInstancesOfferingsRequest",
        "DeleteSpotDatafeedSubscriptionRequest",
        "DescribeSnapshotsRequest",
        "DescribeAccountAttributesRequest",
        "DescribeScheduledActionsRequest",
        "DescribePoliciesRequest",
        "ListHostedZonesRequest",
        "DescribeVolumesRequest",
        "DescribeAutoScalingInstancesRequest",
        "DescribeAddressesRequest",
        "DescribeDBSnapshotsRequest",
        "DescribeLaunchConfigurationsRequest",
        "DescribeClustersRequest",
        "DescribeVpcsRequest",
        "AllocateAddressRequest",
        "ListJobsRequest",
        "ListStacksRequest",
        "DescribeCacheParameterGroupsRequest",
        "DescribeScalingActivitiesRequest",
        "DescribeInstancesRequest",
        "DescribeAutoScalingGroupsRequest",
        "DescribeOrderableClusterOptionsRequest",
        "return",
        "DescribeDBInstancesRequest",
        "DescribeVpnGatewaysRequest",
        "ListClustersRequest",
        "new",
        "DescribeSubnetsRequest",
        "DescribeClusterVersionsRequest",
        "DescribeInstanceStatusRequest",
        "DescribeReservedDBInstancesRequest",
        "DescribePlacementGroupsRequest",
        "DescribeVirtualInterfacesRequest",
        "DescribeTagsRequest",
        "DescribeEventSubscriptionsRequest",
        "DescribeSpotDatafeedSubscriptionRequest",
        "DescribeBundleTasksRequest",
        "DescribeImagesRequest",
        "CreateInternetGatewayRequest",
        "ListPipelinesRequest",
        "DescribeRegionsRequest",
        "ListApplicationsRequest",
        "DescribeSecurityGroupsRequest",
        "ListVerifiedEmailAddressesRequest",
        "(",
        "DescribeNetworkAclsRequest",
        "DescribeInternetGatewaysRequest",
        "GetSendStatisticsRequest",
        "DescribeCacheClustersRequest",
        ";",
        "DescribeClusterSubnetGroupsRequest",
        "DescribeReservedNodeOfferingsRequest",
        "DescribeInterconnectsRequest",
        "DescribeHsmClientCertificatesRequest",
        "DescribeStacksRequest",
        "}",
        "ListGeoLocationsRequest",
        "ListHealthChecksRequest",
        "{",
        "DescribeReservedCacheNodesRequest",
        "DescribeEventCategoriesRequest",
        "DescribeJobFlowsRequest",
        "ListPresetsRequest",
        "DescribeConversionTasksRequest",
        "DescribeEventsRequest",
        "DescribeSpotInstanceRequestsRequest",
        "DescribeWorkspacesRequest",
        "DescribeDBParameterGroupsRequest",
        "DescribeSpotPriceHistoryRequest",
        "DescribeDomainsRequest",
        "DescribeMetricCollectionTypesRequest",
        "DescribeReservedInstancesModificationsRequest",
        "DescribeClusterSnapshotsRequest",
        "DescribeDBSubnetGroupsRequest",
        "ListOperationsRequest",
        "DescribeReservedNodesRequest",
        "ListReusableDelegationSetsRequest",
        "DescribeHsmConfigurationsRequest",
        "DescribeAutoScalingNotificationTypesRequest",
        "ListDomainNamesRequest",
        "DescribeDhcpOptionsRequest",
        "DescribeCacheSubnetGroupsRequest",
        "ListStreamsRequest"
      ],
      "Syntactic Label": "Method Calls and Object Instantiation",
      "Semantic Tags": [
        "AWS API Calls",
        "Resource Management",
        "Cloud Computing",
        "Request Objects",
        "Service Interaction"
      ],
      "Description": "The tokens represent names of methods that make requests to various AWS services.  The methods take request objects (e.g., DescribeAutoScalingGroupsRequest) as arguments, which are instantiated using the 'new' keyword. The 'return' keyword indicates that these methods return results from the corresponding AWS service calls. The overall code snippet demonstrates interaction with multiple AWS services for managing cloud resources."
    }
  },
  {
    "c184": {
      "Unique tokens": [
        "Node",
        "K",
        "Reduce",
        "Transition",
        "Ref",
        "Edit",
        "Directory",
        "Parser",
        "E",
        "char",
        "StringBuffer",
        "StringBuilder",
        "Cell",
        "Collection",
        "Reader",
        "Shape",
        "Comparator",
        "Row",
        "ObjectId",
        "start",
        "BytesRef",
        "ByteBuffer",
        "List",
        "Character",
        "long",
        "V",
        "byte",
        "float",
        "Object",
        "short",
        "Property",
        "final",
        "ET",
        "Throwable",
        "Entry",
        "Term",
        "int",
        "key",
        "String",
        "File",
        "@Nullable",
        "o",
        "t",
        "Date",
        "@NonNull",
        "double",
        "db",
        "CharSequence",
        "Integer",
        "T",
        "CharBuffer",
        "Token",
        "FieldInfo",
        "Map",
        "from",
        "boolean",
        "object",
        "Element"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "Algorithm",
        "Data Processing",
        "File I/O",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including data types (int, String, byte, etc.), keywords (public, static, final, etc.), operators (., +, -, etc.), and identifiers (Node, Reduce, Transition, etc.).  The context sentences show these tokens used in various functions that perform data processing, algorithm implementation (e.g., sorting, searching), file I/O operations, and general utility functions.  The semantic tags reflect the diverse functionalities demonstrated in the code snippets."
    }
  },
  {
    "c185": {
      "Unique tokens": [
        "collection",
        "Multiset",
        "null",
        ",",
        "remove",
        "it",
        ".",
        "return",
        "Collection",
        "0",
        ">",
        "getKey",
        "element",
        "?",
        "get",
        "ConcurrentHashMap",
        "equal",
        "if",
        "equals",
        "<",
        "{",
        "getValue",
        "v",
        "V",
        "==",
        "entryCount",
        "e",
        "Object",
        "=",
        "this",
        "Entry",
        "map",
        ")",
        "Impl",
        "equalValues",
        "int",
        "getCount",
        "key",
        "set",
        "next",
        "c2",
        "delegate",
        "iterator",
        "&&",
        "(",
        "entry",
        "comparator",
        "o",
        "hasNext",
        "value",
        "count",
        "size",
        "inverse",
        "result",
        "string",
        "Objects",
        "removeValuesForKey",
        "Map",
        "object",
        "getElement",
        "!=",
        ";",
        "strategy"
      ],
      "Syntactic Label": "Collection Framework Elements and Methods",
      "Semantic Tags": [
        "Collection Manipulation",
        "Data Structures",
        "Map Operations",
        "Set Operations",
        "Iteration"
      ],
      "Description": "The tokens represent core elements and methods from C#'s collection framework, including classes like `ConcurrentHashMap`, `Multiset`, `Map`, `Set`, `List`, and interfaces like `Collection`, `Iterator`, `ListIterator`, `Map.Entry`, `Multiset.Entry`.  The methods demonstrate common operations such as adding, removing, checking for containment, iteration, and comparison.  The code snippets showcase various ways to interact with these data structures, highlighting their usage in different scenarios. The use of generics (`<E>`, `<K,V>`) indicates type-safe operations. The presence of `ConcurrentHashMap` suggests potential use in multithreaded environments."
    }
  },
  {
    "c186": {
      "Unique tokens": [
        "",
        "1000.0",
        "arity",
        "f",
        "df",
        "setSizeAsDouble",
        "b",
        "Math",
        "?",
        "2",
        "0d",
        "POSITIVE_INFINITY",
        "pv",
        "<",
        "10000",
        "k1",
        "else",
        "NaN",
        ")",
        "int",
        "pmt",
        "length",
        "sign",
        "mult",
        "-",
        "x",
        "Float",
        "round",
        "if",
        "sumsq",
        ",",
        "base",
        "tf_min",
        "pivot",
        "logInverseSaturation",
        "abs",
        "contentLength",
        "<=",
        "*",
        "==",
        "iterations",
        "values",
        "retval",
        "float",
        "4",
        "s",
        "*=",
        "t",
        "W",
        "1",
        "double",
        "0.5d",
        "for",
        "ramBudget",
        "p",
        "ePowNegX",
        "idf",
        "devsq",
        ".",
        "return",
        "ceil",
        "+",
        "log",
        "1.0d",
        "16",
        "v",
        "norm",
        "=",
        "saturation",
        "ipmt",
        "r1",
        "sqrt",
        "10",
        "(",
        "d",
        "other",
        "freq",
        "i",
        "product",
        "n",
        "/",
        ";",
        "valueCount",
        "E",
        "ave",
        "max",
        "pow",
        "min",
        "0",
        "r",
        "/=",
        "sum",
        "c",
        "}",
        "tf_base",
        "{",
        "y",
        "%",
        "1024",
        "numDocs",
        "]",
        "+=",
        ":",
        "fv",
        "ePowX",
        "0.95",
        "0.0f",
        "value",
        "background",
        "Double",
        "a",
        "LOAD_FACTOR",
        "NANOS_PER_SEC",
        "0.5"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Mathematical Operations",
        "Statistical Calculations",
        "Information Retrieval",
        "Financial Calculations",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements including keywords (if, else, for, return), operators (+, -, *, /, %, =, ==, <=, *=, /=, +=), data types (int, float, double), mathematical functions (Math.log, Math.pow, Math.sqrt, Math.ceil), and identifiers representing variables, functions, and classes.  These elements are used to perform various mathematical and statistical calculations, implement information retrieval algorithms (idf, tf), financial calculations (pmt, fv, pv, ipmt, ppmt), and manipulate data structures (arrays, lists). The code snippets demonstrate a mix of mathematical, statistical, and financial computations, along with data structure usage, typical in various application domains."
    }
  },
  {
    "c187": {
      "Unique tokens": [
        "ListGroupPoliciesRequest",
        "NorwegianLightStemFilterFactory",
        "GetChangeRequest",
        "RegisterFaceRequest",
        "CommonRoaRequest",
        "MoPenFindGroupRequest",
        "PatternReplaceCharFilterFactory",
        "SetVaultNotificationsRequest",
        "SubmitGenerateTaskRequest",
        "DeleteEventRequest",
        "RegisterImageRequest",
        "GetMirrorListRequest",
        "DescribeImageAttributeRequest",
        "CreateDistributionRequest",
        "SubmoduleStatusCommand",
        "StartRepoBuildRequest",
        "NGramFilterFactory",
        "TranslateTextRequest",
        "DelimitedPayloadTokenFilter",
        "UpdateApplicationRequest",
        "DeleteRepoAuthorizationRequest",
        "ListTagCommand",
        "CreateVaultRequest",
        "CreateHostedZoneRequest",
        "MoPenDoRecognizeRequest",
        "CreateTableRequest",
        "SendMessageRequest",
        "DeleteDBInstanceRequest",
        "GetRepoTagsRequest",
        "SearchPhotosRequest",
        "JapaneseReadingFormFilterFactory",
        "DeleteTopicRequest",
        "OpenNLPChunkerFilterFactory",
        "FrenchMinimalStemFilterFactory",
        "NorwegianMinimalStemFilterFactory",
        "ThaiTokenizerFactory",
        "AutocompletePagedResponse",
        "MissingObjectException",
        "TurkishLowerCaseFilterFactory",
        "RestoreDBInstanceFromDBSnapshotRequest",
        "ScandinavianFoldingFilterFactory",
        "GetIndustryInfoChildrenListRequest",
        "SoraniNormalizationFilterFactory",
        "MoPenDeleteGroupMemberRequest",
        "GetRepoSyncTaskListRequest",
        "RenameAlbumRequest",
        "RequestEnvironmentInfoRequest",
        "SetQuotaRequest",
        "GetDownloadUrlsRequest",
        "CapitalizationFilterFactory",
        "GetCloudFrontOriginAccessIdentityRequest",
        "DeleteFaceRequest",
        "CreateLogGroupRequest",
        "UpdateFaceRequest",
        "DeleteTagsRequest",
        "CJKWidthFilterFactory",
        "EditPhotosRequest",
        "GetOnlineServiceResultRequest",
        "BrazilianStemFilterFactory",
        "GetCloudFrontOriginAccessIdentityConfigRequest",
        "DoubleMetaphoneFilterFactory",
        "GetEventRequest",
        "GetQuotaRequest",
        "DeleteDBSecurityGroupRequest",
        "DictionaryCompoundWordTokenFilterFactory",
        "IllegalFormatPrecisionException",
        "PortugueseMinimalStemFilterFactory",
        "GetUserSourceRepoRefListRequest",
        "RebootDBInstanceRequest",
        "ListMFADevicesRequest",
        "TypeAsPayloadTokenFilterFactory",
        "DescribeCacheParametersRequest",
        "HyphenatedWordsFilterFactory",
        "CreateDBSecurityGroupRequest",
        "DeleteCacheClusterRequest",
        "UploadSigningCertificateRequest",
        "FinnishLightStemFilterFactory",
        "ListMomentsRequest",
        "AuthorizeSecurityGroupIngressRequest",
        "RemoveFacePhotosRequest",
        "ReactivatePhotosRequest",
        "LowerCaseFilterFactory",
        "MoveFacePhotosRequest",
        "DescribeConfigurationSettingsRequest",
        "QuerySyncPicScheduleRequest",
        "GetAlgorithmListRequest",
        "ICUNormalizer2CharFilterFactory",
        "SnowballPorterFilterFactory",
        "ListTimeLinePhotosRequest",
        "RegisterTagRequest",
        "PurchaseReservedDBInstancesOfferingRequest",
        "LengthFilterFactory",
        "CreateSpotDatafeedSubscriptionRequest",
        "ConcurrentRefUpdateException",
        "StashCreateCommand",
        "UpdateKnowledgeRequest",
        "SearchRepoRequest",
        "RemoveAlbumPhotosRequest",
        "HyphenationCompoundWordTokenFilterFactory",
        "DeleteHostedZoneRequest",
        "RuleWithSuffixExceptions",
        "GetIndustryInfoRequest",
        "UpdateUserInfoRequest",
        "ScandinavianNormalizationFilter",
        "GetGroupPolicyRequest",
        "DeleteMetricFilterRequest",
        "SoraniStemFilterFactory",
        "GetPhotosByMd5sRequest",
        "RemoveNoteCommand",
        "CancelSpotInstanceRequestsRequest",
        "DeleteCollectionRequest",
        "SubmoduleUpdateCommand",
        "GetHostedZoneRequest",
        "SetLoadBalancerListenerSSLCertificateRequest",
        "HungarianLightStemFilterFactory",
        "JapaneseKatakanaStemFilter",
        "KStemFilterFactory",
        "ListMomentPhotosRequest",
        "ASCIIFoldingFilter",
        "DeleteVolumeRequest",
        "CreateCollectionRequest",
        "DescribeJobFlowsRequest",
        "RebootJumpserverRequest",
        "CreateEnvironmentRequest",
        "JoinDocFreqValueSource",
        "ICUNormalizer2Filter",
        "JapaneseBaseFormFilterFactory",
        "FuzzyLikeThisQueryBuilder",
        "DeleteArchiveRequest",
        "JapaneseTokenizerFactory",
        "DeleteRetentionPolicyRequest",
        "StartRepoBuildByRuleRequest",
        "ListRegisteredTagsRequest",
        "MoPenCreateDeviceRequest",
        "QueryLicensesRequest",
        "DeletePhotoStoreRequest",
        "LimitTokenCountFilterFactory",
        "CreateVolumeRequest",
        "TruncateTokenFilterFactory",
        "EnglishPossessiveFilterFactory",
        "UpdateConfigurationTemplateRequest",
        "RecognizeFlowerRequest",
        "FetchMomentPhotosRequest",
        "ReleaseAddressRequest",
        "GetSubUserListRequest",
        "DescribeDBParametersRequest",
        "ArabicNormalizationFilterFactory",
        "DeleteAlbumsRequest",
        "CheckDNSAvailabilityRequest",
        "DeleteNamespaceAuthorizationRequest",
        "PurchaseReservedInstancesOfferingRequest",
        "CloudFrontOriginAccessIdentityConfig",
        "GetIndustryInfoListRequest",
        "ScandinavianNormalizationFilterFactory",
        "QueryGroupUsersRequest",
        "ListTablesRequest",
        "QueryFaceRequest",
        "ListNotesCommand",
        "GreekLowerCaseFilterFactory",
        "MorfologikFilterFactory",
        "DeleteVpnGatewayRequest",
        "UpperCaseFilterFactory",
        "DelimitedPayloadTokenFilterFactory",
        "ListPhotosRequest",
        "GetRegionRequest",
        "ModifyInstanceAttributeRequest",
        "BulgarianStemFilterFactory",
        "CreateCacheParameterGroupRequest",
        "DeleteRepoBuildRuleRequest",
        "HMMChineseTokenizerFactory",
        "CreateLoadBalancerListenersRequest",
        "ResetSnapshotAttributeRequest",
        "DeleteDBParameterGroupRequest",
        "DeleteTagCommand",
        "FailedPredicateException",
        "ICUTransformFilterFactory",
        "ConsumeContentSourceTask",
        "DeleteEnvironmentConfigurationRequest",
        "MergeFacesRequest",
        "PatternKeywordMarkerFilter",
        "CancelBundleTaskRequest",
        "DefaultICUTokenizerConfig",
        "DeletePlacementGroupRequest",
        "GetImageLayerRequest",
        "GetPhotoStoreRequest",
        "GetNamespaceAuthorizationListRequest",
        "AddImageRequest",
        "GetServerCertificateRequest",
        "DescribeMetricFiltersRequest",
        "SumTotalTermFreqValueSource",
        "SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest",
        "RegisterPhotoRequest",
        "ChangeResourceRecordSetsRequest",
        "SetAlbumCoverRequest",
        "AttachVolumeRequest",
        "ModifyJumpserverPasswordRequest",
        "UnmergedPathException",
        "CodepointCountFilterFactory",
        "GetRepoListByNamespaceRequest",
        "TagPhotoRequest",
        "StempelPolishStemFilterFactory",
        "GetInvalidationRequest",
        "GetStreamingDistributionRequest",
        "GetLogEventsRequest",
        "QueryCustomerByPhoneRequest",
        "UpdateRepoBuildRuleRequest",
        "CreateRepoWebhookRequest",
        "AbortMultipartUploadRequest",
        "DeactivateMFADeviceRequest",
        "CJKBigramFilterFactory",
        "SendRawEmailRequest",
        "ListGroupsForUserRequest",
        "UnknownFormatConversionException",
        "ICUTokenizerFactory",
        "UpdateNamespaceRequest",
        "ModifyStrategyTargetRequest",
        "AssociateDhcpOptionsRequest",
        "CancelRepoBuildRequest",
        "CreateEventRequest",
        "GermanLightStemFilterFactory",
        "PutMetricFilterRequest",
        "ListPartsRequest",
        "OffsetLimitTokenFilter",
        "PortugueseStemFilterFactory",
        "GetPrivateAccessUrlsRequest",
        "GetFramedPhotoUrlsRequest",
        "ModifyCacheParameterGroupRequest",
        "UpdateServerCertificateRequest",
        "SyncFacePicturesRequest",
        "GetRepoBatchRequest",
        "MappingCharFilterFactory",
        "PatternCaptureGroupTokenFilter",
        "DeleteVaultNotificationsRequest",
        "GetCollectionRequest",
        "UpdateSigningCertificateRequest",
        "getCredentials",
        "ListResourceRecordSetsRequest",
        "MoPenAddGroupMemberRequest",
        "RussianLightStemFilterFactory",
        "PorterStemFilterFactory",
        "ListSubscriptionsRequest",
        "BuyOriginPicturesRequest",
        "DeleteBranchCommand",
        "DeleteKeyPairRequest",
        "GetDownloadUrlRequest",
        "DeleteSubnetRequest",
        "RevokeDBSecurityGroupIngressRequest",
        "QueryAuthenticationRequest",
        "CreateVpnGatewayRequest",
        "PortugueseLightStemFilterFactory",
        "DeleteLoadBalancerRequest",
        "IndexFormatTooOldException",
        "UpdateTableRequest",
        "ResetInstanceAttributeRequest",
        "GetRepoAuthorizationListRequest",
        "AttachVpnGatewayRequest",
        "InputMismatchException",
        "CreateVpnConnectionRequest",
        "DescribeLoadBalancersRequest",
        "NumericPayloadTokenFilterFactory",
        "ListFacesRequest",
        "GetOSSImageAccessRequest",
        "MultiCategoryListsFacetsExample",
        "GetRepoSyncTaskRequest",
        "UploadServerCertificateRequest",
        "DeleteDomainRequest",
        "SetMeRequest",
        "GetNamespaceListRequest",
        "SubmoduleAddCommand",
        "GetRepoWebhookRequest",
        "DescribeCacheSecurityGroupsRequest",
        "DescribeSnapshotAttributeRequest",
        "GetSimilarPhotosRequest",
        "FrenchLightStemFilterFactory",
        "DeleteVaultRequest",
        "PutLogEventsRequest",
        "DescribeInstanceAttributeRequest",
        "FormatFlagsConversionMismatchException",
        "SetFaceCoverRequest",
        "RemovePermissionRequest",
        "OpenNLPLemmatizerFilterFactory",
        "DisableAvailabilityZonesForLoadBalancerRequest",
        "StandardTokenizerFactory",
        "ICUNormalizer2FilterFactory",
        "DescribeLogStreamsRequest",
        "UpdateRepoSourceRepoRequest",
        "SearchImageRequest",
        "HunspellStemFilterFactory",
        "GetImageManifestRequest",
        "DeleteVpnConnectionRequest",
        "GetImageScanRequest",
        "ItalianLightStemFilterFactory",
        "SwedishLightStemFilterFactory",
        "GetDistributionConfigRequest",
        "DeleteQueueRequest",
        "KeywordRepeatFilterFactory",
        "BindInstance2VpcRequest",
        "MoPenBindIsvRequest",
        "EditEventRequest",
        "StemmerOverrideFilterFactory",
        "OpenNLPPOSFilterFactory",
        "DescribeVolumesRequest",
        "ScandinavianFoldingFilter",
        "ListUserPoliciesRequest",
        "CreateUserSourceAccountRequest",
        "GetConsoleOutputRequest",
        "FreqProxPostingsArray",
        "TypeTokenFilterFactory",
        "DeleteRepoRequest",
        "ResetCacheParameterGroupRequest",
        "DisassociateAddressRequest",
        "CreateCacheSecurityGroupRequest",
        "IrishLowerCaseFilterFactory",
        "CreateTicketRequest",
        "DescribeCacheParameterGroupsRequest",
        "AssociationsFacetsExample",
        "DeleteDeviceGroupRequest",
        "PostRealTimeDeviceDataRequest",
        "DeregisterInstancesFromLoadBalancerRequest",
        "DeleteSecurityGroupRequest",
        "SubmoduleInitCommand",
        "ToggleFeaturesRequest",
        "CompleteMultipartUploadRequest",
        "DeleteMessageRequest",
        "RecognizeLabelRequest",
        "RecursivePrefixTreeStrategy",
        "CommonGramsFilterFactory",
        "LinkFaceRequest",
        "JapaneseKatakanaStemFilterFactory",
        "SubmitCutoutTaskRequest",
        "GetPhotosRequest",
        "ListEventsRequest",
        "ModifyImageAttributeRequest",
        "ListPhotoFacesRequest",
        "CreateSubnetRequest",
        "CreateTopicRequest",
        "RenameBranchCommand",
        "BufferedChecksumIndexInput",
        "CreateKeyPairRequest",
        "ValidateConfigurationSettingsRequest",
        "CreateAppCookieStickinessPolicyRequest",
        "TerminateJobFlowsRequest",
        "STSAssumeRoleSessionCredentialsProvider",
        "GetPasswordDataRequest",
        "EditPhotoStoreRequest",
        "CreateUserInfoRequest",
        "GetRepoSourceRepoRequest",
        "AsyncResponsePostRequest",
        "SearchFaceRequest",
        "ListInvalidationsRequest",
        "DescribeEngineDefaultParametersRequest",
        "GermanStemFilterFactory",
        "MoPenDeleteGroupRequest",
        "GetRepoBuildStatusRequest",
        "GetNamespaceRequest",
        "RemoveUserFromGroupRequest",
        "GetRepoListRequest",
        "UpdateRepoAuthorizationRequest",
        "SpanishLightStemFilterFactory",
        "DetachVolumeRequest",
        "DeleteTableRequest",
        "ElisionFilterFactory",
        "CreateLogStreamRequest",
        "GetGroupRequest",
        "RevokeSecurityGroupIngressRequest",
        "DeleteSigningCertificateRequest",
        "MoPenQueryCanvasRequest",
        "EdgeNGramFilterFactory",
        "ImportKeyPairRequest",
        "DeleteCustomerGatewayRequest",
        "IndonesianStemFilterFactory",
        "DeleteRepoWebhookRequest",
        "DeleteApplicationRequest",
        "ChangeMessageVisibilityRequest",
        "ChangeMessageVisibilityBatchRequestEntry",
        "LimitTokenPositionFilterFactory",
        "CreateApplicationRequest",
        "AddJobFlowStepsRequest",
        "GalicianStemFilterFactory",
        "GalicianMinimalStemFilterFactory",
        "StartJumpserverRequest",
        "InvokeServiceAsyncRequest",
        "CreateNamespaceAuthorizationRequest",
        "ResetDBParameterGroupRequest",
        "DeleteDhcpOptionsRequest",
        "JapanesePartOfSpeechStopFilterFactory",
        "ArabicStemFilter",
        "DeleteConfigurationTemplateRequest",
        "UpdateDistributionRequest",
        "KeywordMarkerFilterFactory",
        "PatternCaptureGroupFilterFactory",
        "CreateImageRequest",
        "GetStreamingDistributionConfigRequest",
        "DeleteCacheSecurityGroupRequest",
        "ConfigureHealthCheckRequest",
        "IndexFormatTooNewException",
        "QueryAddUserInfoRequest",
        "DeleteImageRequest",
        "PatternReplaceFilterFactory",
        "CreateDomainRequest",
        "HindiStemFilterFactory",
        "CreateRepoSyncTaskRequest",
        "GetSubscriptionAttributesRequest",
        "ListQueuesRequest",
        "CreatePhotoStoreRequest",
        "ListTimeLinesRequest",
        "CreateCloudFrontOriginAccessIdentityRequest",
        "UpdateNamespaceAuthorizationRequest",
        "MopenCreateGroupRequest",
        "StopFilterFactory",
        "GetThumbnailsRequest",
        "MoveAlbumPhotosRequest",
        "KeepWordFilterFactory",
        "CreateDBInstanceRequest",
        "CreateInvalidationRequest",
        "GermanNormalizationFilterFactory",
        "CzechStemFilterFactory",
        "ClassicTokenizerFactory",
        "ShingleFilterFactory",
        "DeleteLogStreamRequest",
        "WikipediaTokenizerFactory",
        "ListMultipartUploadsRequest",
        "AddTagsRequest",
        "DescribeVaultRequest",
        "DeleteCloudFrontOriginAccessIdentityRequest",
        "BatchSendMessagesRequest",
        "GetQueueUrlRequest",
        "RuleWithSetExceptions",
        "RevokeTokenRequest",
        "IllegalFormatCodePointException",
        "GetDistributionRequest",
        "GetSearchRequest",
        "GetFederationTokenRequest",
        "ChangeMessageVisibilityBatchRequest",
        "RecognizeEntityRequest",
        "JapaneseReadingFormFilter",
        "LikePhotoRequest",
        "CreateNamespaceRequest",
        "InactivatePhotosRequest",
        "DeleteDeviceAllGroupRequest",
        "TokenOffsetPayloadTokenFilterFactory",
        "SubmoduleSyncCommand",
        "ModifyDBInstanceRequest",
        "SaveTaskForUpdatingRegistrantInfoByIdentityCredentialRequest",
        "RecognizePetRequest",
        "GetAlbumsByNamesRequest",
        "CreateConfigurationTemplateRequest",
        "CreateDBInstanceReadReplicaRequest",
        "LsRemoteCommand",
        "OperateEquipmentRequest",
        "ListSubscriptionsByTopicRequest",
        "QueryCustomerByIdRequest",
        "CreateDBParameterGroupRequest",
        "CreateCustomerGatewayRequest",
        "DeleteVpcRequest",
        "DeleteNamespaceRequest",
        "RegisterInstancesWithLoadBalancerRequest",
        "ASCIIFoldingFilterFactory",
        "AddNoteCommand",
        "ShowNoteCommand",
        "GermanMinimalStemFilterFactory",
        "PathHierarchyTokenizerFactory",
        "EnglishMinimalStemFilterFactory",
        "SendEmailRequest",
        "PointPrefixTreeFieldCacheProvider",
        "UpdateAccessKeyRequest",
        "DeleteLogGroupRequest",
        "DeleteMessageBatchRequestEntry",
        "InvalidPatternException",
        "PatternTokenizerFactory",
        "ArabicNormalizationFilter",
        "RegistrantProfileRealNameVerificationRequest",
        "EnableAvailabilityZonesForLoadBalancerRequest",
        "GetRepoBuildLogsRequest",
        "RestoreDBInstanceToPointInTimeRequest",
        "CreateSecurityGroupRequest",
        "ConfirmSubscriptionRequest",
        "TrimFilterFactory",
        "StartImageScanRequest",
        "GetUserSourceRepoListRequest",
        "InterpreterRuleContext",
        "PredictCategoryRequest",
        "DescribeInstanceHealthRequest",
        "PatchIdDiffFormatter",
        "CreateVpcRequest",
        "MoPenSendMqttMessageRequest",
        "DeleteUserSourceAccountRequest",
        "AssociateAddressRequest",
        "GetIndustryInfoLineageListRequest",
        "UnbindInstance2VpcRequest",
        "JapaneseIterationMarkCharFilterFactory",
        "GetLibraryRequest",
        "InvalidClassException",
        "HindiNormalizationFilterFactory",
        "DescribeTableRequest",
        "AuthorizeDBSecurityGroupIngressRequest",
        "CreateDhcpOptionsRequest",
        "ListPhotoStoresRequest",
        "DeleteCacheParameterGroupRequest",
        "DetachVpnGatewayRequest",
        "TruncateTokenFilter",
        "UAX29URLEmailTokenizerFactory",
        "ApplyTokenRequest",
        "ListTopicsRequest",
        "ArabicStemFilterFactory",
        "GetVaultNotificationsRequest",
        "CreateBranchCommand",
        "GetJobOutputRequest",
        "ListFacePhotosRequest",
        "ReverseStringFilterFactory",
        "CreateLBCookieStickinessPolicyRequest",
        "DeleteDistributionRequest"
      ],
      "Syntactic Label": "Request Objects",
      "Semantic Tags": [
        "API Requests",
        "Cloud Services",
        "Request Handling",
        "Resource Management",
        "Asynchronous Operations"
      ],
      "Description": "These tokens represent request objects used in a cloud service API.  They encapsulate parameters for various operations, such as creating, modifying, deleting, or retrieving resources. The code demonstrates the creation of these request objects, often with parameters passed to constructors or setter methods.  The semantic tags highlight the significance of these objects in the context of cloud service interactions, resource management, and asynchronous operation handling."
    }
  },
  {
    "c188": {
      "Unique tokens": [
        "beforeClientExecution",
        "createWithServiceResponseAsync"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "Request Preprocessing",
        "Client-Side Execution Hook",
        "Middleware",
        "AWS SDK",
        "Interceptor"
      ],
      "Description": "These methods appear to be part of an AWS SDK or similar client library.  `beforeClientExecution` acts as a middleware function, intercepting requests before they are sent to the service. `createWithServiceResponseAsync` likely handles the asynchronous creation of a service resource, potentially returning a response object."
    }
  },
  {
    "c189": {
      "Unique tokens": [
        "null",
        "paths",
        "reuseFields",
        "0",
        "toMergeItr",
        "inStream",
        "sfr",
        "capacity",
        "name",
        "isLarge",
        "assert",
        "(",
        "o",
        "startOffset",
        "firstSheetIndex",
        "in",
        "chan",
        "!",
        "other",
        "if"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Conditional Logic",
        "Exception Handling",
        "Assertion",
        "Null Handling"
      ],
      "Description": "The tokens represent a mix of C# keywords (if, assert), operators (!, =, <), null values, identifiers (paths, reuseFields, etc.), and symbols ((, ), [, ], etc.).  These are fundamental elements in C# code, used for controlling program flow (if statements), handling potential errors (exceptions), making assertions about the program state, and managing null values. The sentences show these tokens in various contexts, including method parameters, conditional checks, and exception handling blocks."
    }
  },
  {
    "c190": {
      "Unique tokens": [
        "public",
        "Arc",
        "short",
        "double",
        "final",
        "synchronized",
        "E",
        "char",
        "int",
        "long",
        "boolean"
      ],
      "Syntactic Label": "C# Keywords and Data Types",
      "Semantic Tags": [
        "Access Modifiers",
        "Data Types",
        "Concurrency Control",
        "Finality",
        "Primitive Types"
      ],
      "Description": "The tokens represent C# keywords that define access levels (public), data types (short, double, char, int, long, boolean), concurrency control (synchronized), and finality (final).  These are fundamental elements in C# programming, influencing code structure, data handling, and thread safety.  The context shows their use in method signatures and within method bodies, indicating their role in defining method behavior and data manipulation."
    }
  },
  {
    "c191": {
      "Unique tokens": [
        "0x0f",
        "calcDistanceFromErrPct",
        "_ptgs",
        "Ref3DPtg",
        "linkTable",
        "_columnIndex",
        "getHiddenTokensToRight",
        "abbreviationLength",
        "jjmatchedPos",
        "docFreq",
        "_plainCellCache",
        "setActiveCellRow",
        "getNumOfRefs",
        "currentScore",
        "targetMaxSaturation",
        "UnknownLengthRecordOutput",
        "_range",
        "expireFact",
        "lookupHashLenForWidthHeight",
        "getComplexData",
        "judgements",
        "indexAndLength",
        "indexHasPayloads",
        "LittleEndianConsts",
        "indexOfSegmentName",
        "getCellValueRecord",
        "checkVersion",
        "decodedTermText",
        "tf_hyper_min",
        "SLL_TotalLook",
        "atnSimulator",
        "getExtbookIndexFromRefIndex",
        "endOffsets",
        "ReInitRounds",
        "anal",
        "_rowIndex",
        "getLastCommitGeneration",
        "deltaBaseCacheLimit",
        "blocks",
        "[",
        "getRange",
        "_wholePart",
        "SLL_ATNTransitions",
        "checkExternSheet",
        "setSensitiveInputCells",
        "getFormatIndex",
        "numBitsSet",
        "DFAState",
        "correctOffset",
        "createPostingsArray",
        "RevWalk",
        "field_5_dbcells",
        "tf_hyper_xoffset",
        "getOrCreateLinkTable",
        "colIx",
        "_udfFinder",
        "termsDictOffsets",
        "getNumOverlap",
        "stemSuffix",
        "EmbeddedObjectRefSubRecord",
        "stemPrefix",
        "generateRuleBypassTransitions",
        "packedGitOpenFiles",
        "getFirstCellNum",
        "elsedeltaSearchWindowSize",
        "getSnapshots",
        "_valuesAgg",
        "notifyUpdateCell",
        "getRuleIndexMap",
        "lookupIndexByName",
        "streamFileThreshold",
        "isRelevant",
        "setBadFontHeight",
        "posSpan",
        "_ulrOutput",
        "remove1stProperty",
        "nextSubtreePos",
        "timeInPrediction",
        "LL_TotalLook",
        "getExternalSheetIndex",
        "longCount",
        "RefCount",
        "notifyFormulaChanging",
        "addMergeCellsRecord",
        "termOffsets",
        "SST",
        "findEndOfRowOutlineGroup",
        "getSubGeohashes",
        "PositiveIntOutputs",
        "DBCellRecord",
        "PackedInts",
        "valueCount",
        "createIndexableFields",
        "boundSheetRecords",
        "getChars",
        "totalScore",
        "scratchInts",
        "bytesPerPosting",
        "lookingAtImpl",
        "setBold",
        "addConditionalFormatting",
        "ContinueRecord",
        "setCharAt",
        "markpos",
        "getCFRecordsAggregate",
        "getNearestSetSize",
        "blockShift",
        "getCachedBytes",
        "addCellRangeAddress",
        "updateValue",
        "codePointBefore",
        "setFirstDayOfWeek",
        "_totalPreviousRecordsSize",
        "createExpandedDouble",
        "_conditionalFormattingTable",
        "setItalic",
        "usableBitSetSizes",
        "createSetBasedOnQuality",
        "distErrPct",
        "minVocabSymbol",
        "DEFAULT_BIG_FILE_THRESHOLD",
        "atMax",
        "_frAggs",
        "updateFormulasAfterRowShift",
        "bitLength",
        "bytesUsedPerBlock",
        "?",
        "multiplyByPowerOfTen",
        "appendEncoded",
        "numTerms",
        "minMergeSize",
        "getValue",
        "msecStep",
        "_lastRow",
        "setPatriarch",
        "fromUser",
        "getLastColumn",
        "CRC32",
        "readForHideItem",
        "unmodifiableCollection",
        "_formulaCellCache",
        "cell",
        "udfs",
        "setSequenceName",
        "setXfpos",
        "_mergedRegions",
        "getFormatRun",
        "_out",
        "isDropDownAlwaysVisible",
        "setSheetHidden",
        "createForString",
        "cfraClone",
        "indexToSheet",
        "findSheetNameFromIndex",
        "orderByBofPosition",
        "field_3_strings",
        "getExpectedTokens",
        "totalMaxDoc",
        "getDFASize",
        "numBlocks",
        "charPositionInLine",
        "hasPayloads",
        "getFirstInternalSheetIndexForExtIndex",
        "readForHideArrayItem",
        "field_8_parsed_expr",
        "getHSSFCell",
        "buildFractionMaxDenominator",
        "startDocIn",
        "getUShort",
        "pauseMSec",
        "_xfRecords",
        "normalise64bit",
        "indexHasFreq",
        "extRefIndex",
        "getSpecificBuiltinRecord",
        "complexData",
        "PackConfig",
        "shiftLeft",
        "createSheet",
        ".",
        "_validationList",
        "verifyATN",
        "disableRefLog",
        "flushBytes",
        "tf_hyper_max",
        "setFontWieghtModified",
        "bloomSize",
        "setDVRecNo",
        "setLastRow",
        "INSTANCE",
        "_value",
        "SpatialArgs",
        "entryForNullKey",
        "decisionToState",
        "findSheetInsertPos",
        "offsetByCodePoints",
        "=",
        "rowIx",
        "getTotalSize",
        "xoffset",
        "getSheetname",
        "decisionToDFA",
        "currentPayloadScore",
        "setNumCategories",
        "shouldSkipEncryptionOnCurrentRecord",
        "getExactMatchStartingFromRootArc",
        "getFirstColumn",
        "getNameIx",
        "tokenSource",
        "getSheetExtIx",
        "queryConfigHandler",
        "hashFunctionForVersion",
        "_externSheetRecord",
        "descendingSet",
        "fragmentSize",
        "getXfpos",
        "fstCompiler",
        "_encodedTokenLen",
        "r",
        "getHSSFSheet",
        "}",
        "System",
        "getNotSupportedFunctionNames",
        "alignObjectSize",
        "LittleEndianByteArrayOutputStream",
        "readUShort",
        "indexHasPos",
        "consumeAllTokens",
        ":",
        "ruleRecord",
        "estimatedMergeBytes",
        "assertNotStarted",
        "getEvalForCell",
        "lastTrailingHighSurrogate",
        "value",
        "0.1f",
        "subRecord",
        "commonGrams",
        "getWeightedFragInfoList",
        "unlinkSharedFormula",
        "getLastSheetIndexFromRefIndex",
        "setStartTimeMillis",
        "newPostingsArray",
        "packedGitMMAP",
        "startEndAndLength",
        "stashRef",
        "NO_MORE_ORDS",
        "_byteEncoding",
        "useAddIndexesDir",
        "getEndOffset",
        "INT_SIZE",
        "getRowRecord",
        "extendStringToMatchByOneCharacter",
        "termUpto",
        "setActiveCellCol",
        "bitsPerValue",
        "Area3DPtg",
        "getIPv4Association",
        "_numberOfFormulas",
        "textEndPos",
        "lineCount",
        "isNeverEncryptedRecord",
        "extractTasks",
        "usedBlankAreas",
        "copy",
        "xfr",
        "getCharacterPos",
        "fontFormatting",
        "tf_hyper_base",
        "npv",
        "getAvailableSpace",
        "_uBook",
        "_lastrow",
        "HistoricalCharsetNames",
        "qrj",
        "field_2_num_unique_strings",
        "countBytesWritten",
        "getLastRow",
        "setRefLogMessage",
        "maxVocabSymbol",
        "_fontIndex",
        "getSid",
        "setPropertyValue",
        "positionSpanIt",
        "getEncodedSize",
        "RamUsageEstimator",
        "midIx",
        "quicksort",
        "ords",
        "_sre",
        "fra",
        "maxNumSegments",
        "findValueIteratorAndKey",
        "BLOCK_SIZE",
        "bytesUsed",
        "maxLevels",
        "hasWindowFocus",
        "jj_ntk",
        "cfAggregate",
        "anchoringBounds",
        "getEstimatedNumberUniqueValuesAllowingForCollisions",
        "compareRecords",
        "metricFilterPattern",
        "_highIx",
        "pre-decrement",
        "resolveNameXText",
        "activeBytes",
        "makeBooleanQuery",
        "writeCoordinates",
        "ambiguities",
        "textStarts",
        "maxShingleSize",
        "mFromUser",
        "_shift_count",
        "objectCount",
        "getColapsed",
        "indexReader",
        "changeConsumingCells",
        "maxDocsPerChunk",
        "dismissDropDown",
        "ccis",
        "setVerticalCellRange",
        "nextId",
        "lastCharBufferStart",
        "maxTokenCount",
        "getCrns",
        "getFirstSheetIndexFromRefIndex",
        "nextLF",
        "traversalSize",
        "associatedRange",
        "safelyAllocate",
        "sheetIndex",
        "insertSST",
        "getStreamId",
        "setFirstCol",
        "addAndGet",
        "getIndexCreatedVersionMajor",
        "getLongCode",
        "maxCacheRAMMB",
        "getLastInternalSheetIndexForExtIndex",
        "setNextRecordSize",
        "isSubTotal",
        "readPlain",
        "mergeMaxNumSegments",
        "SmallFloat",
        "postingsArray",
        "!=",
        "\"",
        "curLexState",
        "field_6_reserved",
        "sizeInBytes",
        "byteUpto",
        "getActualSizeOfElements",
        "sensitiveInputCells",
        "countsByTimeStepMSec",
        "matchOffsets",
        "UTF8toUTF16",
        "discountOverlaps",
        "lineStyleColor",
        "outputUnigrams",
        "maxAgeSec",
        "readlimit",
        "shallowSizeOf",
        "overheadPerValue",
        "bos",
        "fieldWeightedSpanTerms",
        "getDataInput",
        "defaultLexState",
        "estimatedSegmentSize",
        "outputs",
        "getCharWidth",
        "fileNameFromGeneration",
        "getFirstRow",
        "packedGitWindowSize",
        "noteRefName",
        "_findAllNodes",
        "minPauseCheckBytes",
        "ramBytesUsed",
        "maxMergeSizeForForcedMerge",
        "LL_ATNTransitions",
        "1000.0",
        "packedGitLimit",
        "checkMax",
        "UTF8Byte",
        "valuesPerBlock",
        "_rowRecords",
        "_lowIx",
        "field_1_num_strings",
        "SimpleFraction",
        "getDataSize",
        "CellRangeAddress",
        "_breakMap",
        "utf8ToString",
        "_significand",
        "pokeShort",
        "hash",
        "maxDocsToCache",
        "getPathString",
        "toHexCharArray",
        "reader",
        ")",
        "cloneCFAggregate",
        "GeohashUtils",
        "zzScanError",
        "additionalQueryParamsToSign",
        "copyOfSubArray",
        "_xfIndex",
        "_usedBlankCellGroup",
        "getAllEmbeddedObjects",
        "setNumValues",
        "isExternal",
        "jjnewStateCnt",
        "roleSessionDurationSeconds",
        "FormulaRecordAggregate",
        "setFirstRow",
        "ExtendedFormatRecord",
        "SLL_DFATransitions",
        "region",
        "findObjectRecord",
        "_externalNameRecords",
        "ExpPtg",
        "setDeltaCompress",
        "toFormulaString",
        "getATN",
        "getSingleton",
        "cacheScores",
        "getNumberOfBuiltinBuiltinFormats",
        "setLastCol",
        "indexHasOffsets",
        "maxMergeSize",
        "CachedOrds",
        "==",
        "adjustSeekIndex",
        "getBeginIndex",
        "sre",
        "getOptionalFields",
        "objects",
        "uniqueTermsInFragment",
        "getAdvertisedRefs",
        "onWindowFocusChanged",
        "readARecord",
        "size",
        "input_stream",
        "intToByte4",
        "_crnBlocks",
        "gramSize",
        "contextSensitivities",
        "CFRuleBase",
        "HSSFShape",
        "currentBlockUpto",
        "_externalBookBlocks",
        "visitContainedRecords",
        "wasEscaped",
        "numxfs",
        "pokeLong",
        "+",
        "_lastColumn",
        "characterCategoryMap",
        "onClearWholeCache",
        "elsenewObjectIds",
        "codePointCount",
        "_bookSheetColumn",
        "termBytesReader",
        "mbPerSec",
        "CircularSequence",
        "newHeads",
        "maxRecall",
        "_headerRec",
        "stopWordsPerField",
        "(",
        "_customFormatRecords",
        "perField",
        "zzMarkedPos",
        "createDateConstraint",
        "getEndIndex",
        "lastIndexOf",
        "getFormulaTokens",
        "extBookIndex",
        "getUniqueTermCount",
        "getStartOffset",
        ";",
        "postingsReader",
        "IntsRefBuilder",
        "namePtg",
        "getStates",
        "extIx",
        "indexOf",
        "BM25Similarity",
        "_sensitiveInputCells",
        "getSheetEvaluator",
        "getRefEvaluatorForCurrentSheet",
        "stashRefEntry",
        "setEnablePositionIncrements",
        "_writeIndex",
        "numPayloadsSeen",
        "subScorer",
        "currentNumFrags",
        "CellRangeAddress8Bit",
        "positionSpans",
        "ordinals",
        "getSheetIndex",
        "getSupportedFunctionNames",
        "useStrongRefs",
        "notifyDeleteCell",
        "parseFormula",
        "prependSheetName",
        "setFontStyleModified",
        "getLastCellNum",
        "compareTo"
      ],
      "Syntactic Label": "Method Parameters, Local Variables, Objects, Dot Operator, Array Access, Assignment Operator, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Data Structures",
        "Object Manipulation",
        "Method Invocation",
        "Data Processing",
        "Control Flow"
      ],
      "Description": "The tokens represent various C# language constructs.  Method parameters and local variables are used to pass data into and store data within methods. Objects are instantiated and their methods are invoked using the dot operator. Array access is used to access elements within arrays. The assignment operator is used to assign values to variables. Parentheses are used for grouping and function calls. These elements are fundamental to C# programming, enabling the creation and manipulation of data structures and the control of program flow."
    }
  },
  {
    "c192": {
      "Unique tokens": [
        "\"",
        "State",
        "null",
        ",",
        ".",
        "return",
        "df",
        "index",
        "new",
        "formatIndex",
        "+",
        "rule2",
        "++",
        "?",
        "2",
        "get",
        "<=",
        "if",
        "}",
        "mutex",
        "getName",
        "'",
        "fieldAnalyzers",
        "{",
        "/",
        "v",
        "INSTANCE",
        "else",
        "se",
        "elements",
        "]",
        "=",
        "getPathString",
        "break",
        ":",
        "this",
        "append",
        ")",
        "ord",
        "true",
        "parseSubQuery",
        "(",
        "o",
        "perField",
        "1",
        "\\n",
        "-",
        "a",
        "NoGitlinksStrategy",
        "sheetEvaluator",
        "other",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Instantiation",
        "Control Flow",
        "Exception Handling",
        "Method Invocation",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, return, new, break), operators (+, ++, <=, =, ?, -, /), symbols ({, }, (, ), [, ], ., ,), identifiers (State, mutex, getName, etc.), and literals (null, true, 2, 1, \n).  These tokens are used in various syntactic structures such as method declarations, conditional statements, loops, object instantiation, and exception handling. The semantic tags reflect the common functionalities and purposes of the code snippets, which involve creating and manipulating objects, controlling program flow, handling exceptions, invoking methods, and using data structures like Maps, Lists, and Arrays."
    }
  },
  {
    "c193": {
      "Unique tokens": [
        "",
        "unused1",
        "C_64",
        "to",
        "subexLen",
        "writeCapacityUnits",
        "sheetname",
        "Math",
        "lastWasCR",
        "?",
        "bitsPerValue",
        "bucketSstOffset",
        "streamPos",
        "_significand",
        "nameIndex",
        "setBoolean",
        ")",
        "set",
        "field_4_text",
        "pos=",
        "buffer",
        "Formula",
        "-",
        "from",
        "seed",
        "if",
        "rowOffset",
        "offset",
        "data",
        "getShort",
        "readShort",
        ">",
        "initialPosition",
        "<=",
        "readRemainder",
        "==",
        "false",
        ">=",
        "field_8_parsed_expr",
        "is16bit",
        "deepCopyOf",
        "field_2_subex_len",
        "bookName",
        "field_13_border_styles1",
        "setSheetname",
        "field_15_pattern_style",
        "size",
        "1",
        "field_3_flags",
        "LittleEndian",
        "isQuoted",
        "frac",
        ".",
        "re",
        "builtinStyleId",
        "--",
        "new",
        "ccis",
        "binaryExponent",
        "+",
        "field_1_option_flags",
        "field_1_xf_index",
        "maxBasicQueries",
        "DEFAULT_ROW_HEIGHT",
        "readInt",
        "readByte",
        "=",
        "sheetIndex",
        "seriesNumbers",
        "_lei",
        "field_7_padding",
        "(",
        "write",
        "escherClientAnchorRecord",
        "i",
        "in",
        "unused2",
        "Long",
        "field_2_bucket_sst_offset",
        "/",
        "0xFFFF",
        "sizeOf",
        "!=",
        "field_2_cell_offsets",
        ";",
        "\"",
        "dict",
        "0xFF",
        "readDouble",
        "field_5_dv_no",
        "0x00000000",
        "field_2_builtin_style",
        "border",
        "prefix=",
        "bookIndex",
        "0",
        "rowIndex",
        "get",
        "_binaryExponent",
        "}",
        "field_14_border_styles2",
        "highIx",
        "cellOffsets",
        "{",
        "externSheetIndex",
        "fmt",
        "readUShort",
        "shallowSizeOf",
        "+=",
        "allow",
        "escherChildAnchorRecord",
        "_marked_offset_count",
        "field_2_row_height",
        "value",
        "create",
        "DEFAULT_PADDING",
        "columnIndex",
        "field_16_pattern_color_indexes",
        "Double",
        "field_cbo_id",
        "a",
        "sheetIdentifier",
        "dgg",
        "array",
        "0xFFFFFFFF"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "Record I/O",
        "Object Manipulation",
        "Data Validation",
        "Spreadsheet"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including keywords (if, public, void, new, etc.), operators (+, -, ==, =, etc.), identifiers (field_1_xf_index, sheetname, etc.), and literals (0, 0xFFFF, false, etc.).  They are used in the context of a class or classes related to spreadsheet data manipulation, specifically focusing on reading, writing, and manipulating records within a spreadsheet file format.  The semantic tags reflect the overall functionality of the code, which involves handling various data structures, reading and writing records from input/output streams, manipulating objects, performing data validation, and working with spreadsheet-related data."
    }
  },
  {
    "c194": {
      "Unique tokens": [
        "executeListContainerInstances",
        "executeUpdateUserSecurityProfiles",
        "executeListPhoneNumberOrders",
        "executeDescribeGameSessionQueues",
        "executeDescribeMLModels",
        "executeDescribeFolderContents",
        "executeDescribeParameterGroups",
        "executeDescribeDBClusterBacktracks",
        "executeDescribeEC2InstanceLimits",
        "executeDescribeBrokerInstanceOptions",
        "executeDescribeInsightRules",
        "executeListSubscribedWorkteams",
        "executeListLedgers",
        "executeListPipelines",
        "executeDescribeUpdateActions",
        "executeListResourceDelegates",
        "executeListInstanceGroups",
        "executeDescribeFpgaImages",
        "executeListConfigurationProfiles",
        "executeListEntitiesDetectionJobs",
        "executeDescribeDBClusterSnapshotAttributes",
        "executeListPublicKeys",
        "executeListApplicationSnapshots",
        "executeListEmailIdentities",
        "executeUpdateContactAttributes",
        "executeListDocumentClassifiers",
        "executeGetSegmentExportJobs",
        "executeDescribeFleetMetadata",
        "executeListQueryLoggingConfigs",
        "executeListAssessmentTargets",
        "executeDescribeEventCategories",
        "executeListChangedBlocks",
        "executeDescribeJobFlows",
        "executeUpdatePipelineNotifications",
        "executeDescribeScheduledActions",
        "executeListQualificationRequests",
        "executeListEventTrackers",
        "executeListBatchInferenceJobs",
        "executeDescribeClientVpnEndpoints",
        "executeListEventSources",
        "executeListAccessControlRules",
        "executeListCompilationJobs",
        "executeDescribeVpcPeeringConnections",
        "executeListProcessingJobs",
        "executeListNamedQueries",
        "executeDescribeLifecycleHookTypes",
        "executeDescribeHsmConfigurations",
        "executeDescribeDBLogFiles",
        "executeListDeploymentConfigs",
        "executeDescribeImageScanFindings",
        "executeDescribeDataSetPermissions",
        "executeListS3Resources",
        "executeListTrialComponents",
        "executeDescribeDomainEndpointOptions",
        "executeListObjectParents",
        "executeDescribeAssessmentRuns",
        "executeDescribeGlobalReplicationGroups",
        "executeDescribeTrafficMirrorTargets",
        "executeDescribeAccessPoints",
        "executeListCodeRepositories",
        "executeDescribeDataRepositoryTasks",
        "executeDescribeFleetUtilization",
        "executeDescribeScheduledInstanceAvailability",
        "executeDescribeProjectVersions",
        "executeDescribeScheduledInstances",
        "executeDescribeHostReservationOfferings",
        "executeListDomainDeliverabilityCampaigns",
        "executeDescribeTransitGatewayPeeringAttachments",
        "executeListEventSubscriptions",
        "executeSearchLocalGatewayRoutes",
        "executeDescribeKeyPairs",
        "executeListTopicsDetectionJobs",
        "executeDescribeWorkspaceImages",
        "executeDescribeReplicationGroups",
        "executeListThreatIntelSets",
        "executeListStackSetOperationResults",
        "executeListNotebookInstanceLifecycleConfigs",
        "executeDescribeDBSecurityGroups",
        "executeListLogPatternSets",
        "executeDescribeLaunchTemplates",
        "executeDescribeExportImageTasks",
        "executeDescribeVpnGateways",
        "executeDescribePublicIpv4Pools",
        "executeDescribeTableReplicaAutoScaling",
        "executeDescribeTerminationPolicyTypes",
        "executeDescribePendingMaintenanceActions",
        "executeDescribeDBInstances",
        "executeDescribeDBProxyTargetGroups",
        "executeListHostedZonesByName",
        "executeListReceiptFilters",
        "executeListIdentityPolicies",
        "executeListProposalVotes",
        "executeDescribeAutoScalingGroups",
        "executeListProvisionedCapacity",
        "executeDescribeEventSubscriptions",
        "executeBatchGetDeploymentTargets",
        "executeListHITs",
        "executeListAttachedIndices",
        "executeDeleteFlowLogs",
        "executeDescribeBrokerEngineTypes",
        "executeListHoursOfOperations",
        "executeUpdateTemplatePermissions",
        "executeDescribeImageBuilders",
        "executeListIAMPolicyAssignments",
        "executeListGroupMembers",
        "executeListStreamConsumers",
        "executeDescribeIpGroups",
        "executeListMultipartUploads",
        "executeListDeliveryStreams",
        "executeListDeploymentStrategies",
        "executeDeleteKnownHostKeys",
        "executeListFacetNames",
        "executeDescribeLoadBalancerPolicyTypes",
        "executeDescribeVirtualGateways",
        "executeDescribeTrafficMirrorSessions",
        "executeListOnPremisesInstances",
        "executeDescribeAssessmentTargets",
        "executeDescribeClientProperties",
        "executeDescribeCustomerGateways",
        "executeDescribeResourcePermissions",
        "executeDescribeServiceAccessPolicies",
        "executeUpdateUserSettings",
        "executeListAllowedNodeTypeModifications",
        "executeListDatasets",
        "executeDescribeVpcClassicLinkDnsSupport",
        "executeListLabelingJobs",
        "executeListFargateProfiles",
        "executeListAssociatedFleets",
        "executeDescribeFileSystems",
        "executeListSkillsStoreCategories",
        "executeDeleteQueuedReservedInstances",
        "executeDescribeScalingPolicies",
        "executeListMeetings",
        "executeDescribeClusterParameterGroups",
        "executeDescribeClusterDbRevisions",
        "executeDescribeSnapshotCopyGrants",
        "executeUpdateDashboardPermissions",
        "executeListDashboardVersions",
        "executeListWebsiteAuthorizationProviders",
        "executeListDomainNames",
        "executeListOrganizationAdminAccounts",
        "executeListInvitations",
        "executeDescribeDBParameterGroups",
        "executeListResolverEndpointIpAddresses",
        "executeDescribeBundleTasks",
        "executeDescribeTransitGateways",
        "executeListWorkflowTypes",
        "executeListMemberAccounts",
        "executeDescribeOptionGroups",
        "executeListClusterJobs",
        "executeDeleteStackInstances",
        "executeListNodegroups",
        "executeDescribeAutoScalingInstances",
        "executeListTrafficPolicyVersions",
        "executeListDeploymentTargets",
        "executeListProxySessions",
        "executeListDevelopmentSchemaArns",
        "executeDescribeClientVpnRoutes",
        "executeDescribeVpcEndpointServiceConfigurations",
        "executeListIPSets",
        "executeDescribeAvailabilityZones",
        "executeDeleteLaunchTemplateVersions",
        "executeListBootstrapActions",
        "executeDescribeFastSnapshotRestores",
        "executeListMonitoringSchedules",
        "executeListTagsForVault",
        "executeListEventBuses",
        "executeDescribeSpotInstanceRequests",
        "executeDescribeDataSourcePermissions",
        "executeGetInstancePortStates",
        "executeDescribeClientVpnTargetNetworks",
        "executeDescribeDBSubnetGroups",
        "executeDescribeExclusions",
        "executeDescribeRulesPackages",
        "executeDescribeReservedInstancesOfferings",
        "executeDescribeIpv6Pools",
        "executeDeleteVaultNotifications",
        "executeListStreamingDistributions",
        "executeListHostedZones",
        "executeListTagsForResource",
        "executeListSolutions",
        "executeListRooms",
        "executeListPhoneNumbers",
        "executeListActivityTypes",
        "executeListQueryExecutions",
        "executeListHumanLoops",
        "executeListDataSources",
        "executeListTaskDefinitions",
        "executeGetUserEndpoints",
        "executeListWorkerBlocks",
        "executeDescribeAutoScalingNotificationTypes",
        "executeDeleteAlarms",
        "executeDescribeClusterVersions",
        "executeListConfigurationHistory",
        "executeListGraphs",
        "executeDescribeNotificationConfigurations",
        "executeListWorkGroups",
        "executeDescribeDBSnapshotAttributes",
        "executeListVoiceConnectors",
        "executeDescribeUserHierarchyStructure",
        "executeDescribeFleetInstances",
        "executeDescribeFleetHistory",
        "executeDescribeReservedDBInstances",
        "executeListFieldLevelEncryptionProfiles",
        "executeListBots",
        "executeUpdateFleetMetadata",
        "executeListRulesPackages",
        "executeDescribeStackResources",
        "executeGetBlueprints",
        "executeDescribeDirectConnectGateways",
        "executeDescribeTaskSets",
        "executeListRecipes",
        "executeDescribeMatchmakingConfigurations",
        "executeUpdateScalingParameters",
        "executeDescribeVpcPeeringAuthorizations",
        "executeDescribeImportSnapshotTasks",
        "executeUpdateNotificationSettings",
        "executeDescribeNotificationSubscriptions",
        "executeListObjectChildren",
        "executeUpdateVirtualInterfaceAttributes",
        "executeListWebsiteCertificateAuthorities",
        "executeListContactFlows",
        "executeUpdateFleetCapacity",
        "executeGetKeyPairs",
        "executeListUserGroups",
        "executeListVerifiedEmailAddresses",
        "executeListTrials",
        "executeDescribeLocalGatewayRouteTables",
        "executeGetInstanceSnapshots",
        "executeUpdateStackInstances",
        "executeListRoomMemberships",
        "executeDeleteVpcEndpointServiceConfigurations",
        "executeDeleteVpcEndpointConnectionNotifications",
        "executeDescribeDefaultParameters",
        "executeGetRelationalDatabaseBlueprints",
        "executeDescribeReservedNodes",
        "executeListVoiceConnectorGroups",
        "executeListStackSets",
        "executeDescribeTemplatePermissions",
        "executeListProfileTimes",
        "executeDescribeTransitGatewayAttachments",
        "executeDescribeGameSessions",
        "executeListInstanceFleets",
        "executeDescribeNatGateways",
        "executeDescribeVpcEndpointConnections",
        "executeDescribeWorkspaceSnapshots",
        "executeDescribeCacheParameterGroups",
        "executeDescribeRouteTables",
        "executeDescribeAdjustmentTypes",
        "executeDescribeRootFolders",
        "executeListDedicatedIpPools",
        "executeListContributorInsights",
        "executeDescribeAccountModifications",
        "executeDescribeInternetGateways",
        "executeDeleteFolderContents",
        "executeListAssessmentRunAgents",
        "executeDescribeReservedCacheNodes",
        "executeDescribeDBClusterParameters",
        "executeListEntityRecognizers",
        "executeListGameServerGroups",
        "executeDescribeInstanceCreditSpecifications",
        "executeDescribeTrafficMirrorFilters",
        "executeListFieldLevelEncryptionConfigs",
        "executeDescribeCustomAvailabilityZones",
        "executeListPolicyAttachments",
        "executeRemoveAllResourcePermissions",
        "executeSearchNetworkProfiles",
        "executeDescribeVpcEndpoints",
        "executeListModelPackages",
        "executeDescribeInstanceEventNotificationAttributes",
        "executeListReceiptRuleSets",
        "executeUpdateDataSetPermissions",
        "executeDescribeLaunchConfigurations",
        "executeDescribeDBParameters",
        "executeListPartnerEventSources",
        "executeDeleteAccessLogSettings",
        "executeListExperiments",
        "executeDescribeLoadBalancerPolicies",
        "executeDescribeLocalGateways",
        "executeDescribeGameSessionPlacement",
        "executeListIdentityPools",
        "executeBatchGetDeploymentGroups",
        "executeDescribePrefixLists",
        "executeDetectModerationLabels",
        "executeListDatasetImportJobs",
        "executeDeleteLoadBalancerListeners",
        "executeDescribeDirectConnectGatewayAssociations",
        "executeListFacetAttributes",
        "executeDescribeAnalysisSchemes",
        "executeListTemplateVersions",
        "executeGetVaultNotifications",
        "executeDescribeVolumesModifications",
        "executeDescribeLoadBalancerAttributes",
        "executeListPublishedSchemaArns",
        "executeListSpeechSynthesisTasks",
        "executeListConfigurationRevisions",
        "executeListInvalidations",
        "executeDescribeFleetCapacity",
        "executeDescribeReservedInstances",
        "executeListTagsForResources",
        "executeListQualificationTypes",
        "executeListRepositoryAssociations",
        "executeDescribeLoadBalancerTargetGroups",
        "executeListAccountSettings",
        "executeListNotebookInstances",
        "executeDescribeCapacityProviders",
        "executeDeleteVpcEndpoints",
        "executeDescribeOptionGroupOptions",
        "executeDescribeContributorInsights",
        "executeListObjectAttributes",
        "executeGetRelationalDatabaseLogStreams",
        "executeListBrokers",
        "executeSearchGameSessions",
        "executeDescribeHostedConnections",
        "executeDescribeClusterParameters",
        "executeDeleteImagePermissions",
        "executeAcceptVpcEndpointConnections",
        "executeListDetectors",
        "executeListKeyPhrasesDetectionJobs",
        "executeListCompatibleImages",
        "executeListLogPatterns",
        "executeListCampaigns",
        "executeUpdateRelationalDatabaseParameters",
        "executeBatchModifyClusterSnapshots",
        "executeListDashboards",
        "executeDescribeEvaluations",
        "executeDescribeImagePermissions",
        "executeDescribeClusterSecurityGroups",
        "executeListEndpointConfigs",
        "executeDescribeClusterSubnetGroups",
        "executeListStackResources",
        "executeDescribeSubnetGroups",
        "executeListVPCAssociationAuthorizations",
        "executeListIncomingTypedLinks",
        "executeDescribeAlarms",
        "executeListDistributions",
        "executeDescribeDBInstanceAutomatedBackups",
        "executeUpdateDomainNameservers",
        "executeListJourneys",
        "executeSearchDashboards",
        "executeDescribeContainerInstances",
        "executeListGatewayGroups",
        "executeDescribeCoipPools",
        "executeListHealthChecks",
        "executeDescribeStaleSecurityGroups",
        "executeListProfilingGroups",
        "executeListCustomVerificationEmailTemplates",
        "executeDescribePlacementGroups",
        "executeListMailboxPermissions",
        "executeDescribeScalingParameters",
        "executeUpdatePhoneNumberSettings",
        "executeListWorkteams",
        "executeListDeploymentGroups",
        "executeDescribeReservedNodeOfferings",
        "executeSearchRooms",
        "executeListReviewableHITs",
        "executeDescribeClassicLinkInstances",
        "executeDescribeVpcs",
        "executeListTagsForStream",
        "executeDescribeResourceGroups",
        "executeListConfigurations",
        "executeDescribeNetworkInterfacePermissions",
        "executeDescribeClusterSnapshots",
        "executeDescribeFleetEvents",
        "executeListDeadLetterSourceQueues",
        "executeListTrafficPolicyInstances",
        "executeListSecurityConfigurations",
        "executeDescribeNetworkAcls",
        "executeDescribeScalingProcessTypes",
        "executeListJournalS3Exports",
        "executeDescribeFleetAttributes",
        "executeListGeoLocations",
        "executeListBusinessReportSchedules",
        "executeDeleteUserEndpoints",
        "executeListDeliverabilityTestReports",
        "executeDescribeSuggesters",
        "executeListGameServers",
        "executeUpdateFleetAttributes",
        "executeListQueueTags",
        "executeListAutoMLJobs",
        "executeListDataSets",
        "executeDescribeMountTargets",
        "executeListTypedLinkFacetAttributes",
        "executeDescribeClusterTracks",
        "executeDescribeSpotFleetRequestHistory",
        "executeListSentimentDetectionJobs",
        "executeListSnapshotBlocks",
        "executeListAttendeeTags",
        "executeDescribeConversionTasks",
        "executeDescribeDataSources",
        "executeDescribeDirectConnectGatewayAssociationProposals",
        "executeListTrafficPolicies",
        "executeListProposals",
        "executeDescribeUsageReportSubscriptions",
        "executeListApplicationRevisions",
        "executeListTemplateAliases",
        "executeDescribeIAMPolicyAssignment",
        "executeListManagedSchemaArns",
        "executeListMeetingTags",
        "executeDescribeModelVersions",
        "executeDescribeDBEngineVersions",
        "executeListResolverEndpoints",
        "executeGetRecommenderConfigurations",
        "executeDescribeDBClusterParameterGroups",
        "executeDescribeCacheSecurityGroups",
        "executeDescribeIndexFields",
        "executeListStackSetOperations",
        "executeDescribeNodeConfigurationOptions",
        "executeDescribeVpcEndpointServicePermissions",
        "executeListFlowDefinitions",
        "executeListDocumentClassificationJobs",
        "executeDescribeUserStackAssociations",
        "executeDescribeScalingActivities",
        "executeListTypedLinkFacetNames",
        "executeListOutgoingTypedLinks",
        "executeListAttendees",
        "executeListSolutionVersions",
        "executeDescribeVpnConnections",
        "executeListLexicons",
        "executeDescribeAlarmHistory",
        "executeDescribeInterconnects",
        "executeDescribeGlobalClusters",
        "executeDescribeCacheEngineVersions",
        "executeDescribeDirectConnectGatewayAttachments",
        "executeListAssessmentRuns",
        "executeListSmartHomeAppliances",
        "executeUpdateAccountSettings",
        "executeDescribeBatchPredictions",
        "executeDescribeDBProxyTargets",
        "executeDescribeWorkspaceDirectories",
        "executeDescribeInstanceTypeOfferings",
        "executeListTypeVersions",
        "executeListRoutingProfiles",
        "executeDescribeDBClusterSnapshots",
        "executeListVaults",
        "executeDescribeVpcEndpointConnectionNotifications",
        "executeDescribeFleetPortSettings",
        "executeDescribeWorkspaceBundles",
        "executeDescribeLocalGatewayVirtualInterfaceGroups",
        "executeDescribeExportTasks",
        "executeListSignalingChannels",
        "executeListConfigurationSets",
        "executeListSecurityProfiles",
        "executeListTransformJobs",
        "executeDescribeDirectoryConfigs",
        "executeDescribeActiveReceiptRuleSet",
        "executeDescribeSpotFleetInstances",
        "executeDescribePlayerSessions",
        "executeListTerminologies",
        "executeDescribeHsmClientCertificates",
        "executeDescribeSecurityGroupReferences",
        "executeDescribeAssessmentTemplates",
        "executeListDeviceEvents",
        "executeUpdateImagePermissions",
        "executeDescribeSourceRegions",
        "executeListProblems",
        "executeListDeploymentInstances",
        "executeDescribeVirtualInterfaces",
        "executeDescribeGameSessionDetails",
        "executeDescribeAccountAttributes",
        "executeUpdateObjectAttributes",
        "executeListResolverRuleAssociations",
        "executeListResolverRules",
        "executeDescribeSpotPriceHistory",
        "executeDescribeLaunchTemplateVersions",
        "executeDescribeReservedInstancesModifications"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "AWS SDK",
        "Resource Management",
        "Cloud Services",
        "API Calls",
        "Service Operations"
      ],
      "Description": "These tokens represent method names within an AWS SDK for various services.  They are used to execute API calls to manage and interact with different AWS resources. The methods likely handle requests and return results related to specific AWS services. The context shows a pattern of using these methods after a `beforeClientExecution` step, suggesting a common pre-processing or request preparation phase."
    }
  },
  {
    "c195": {
      "Unique tokens": [
        "\"",
        "valByRound",
        ",",
        ".",
        "return",
        "props",
        "k",
        "propToBooleanArray",
        "colForValByRound",
        "0",
        "+",
        "put",
        "indexOf",
        "get",
        "substring",
        "[",
        "if",
        "}",
        "propToStringArray",
        "roundNumber",
        "dflt",
        "<",
        "{",
        "propToDoubleArray",
        "\\\\",
        "sval",
        "%",
        "echo",
        ":/",
        "=",
        "]",
        ">=",
        "propToIntArray",
        ":",
        "getProperty",
        "name",
        ")",
        "parseDouble",
        "int",
        "colName",
        "length",
        "s",
        "(",
        "1",
        "double",
        "booleanValue",
        "vals",
        "boolean",
        "String",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Property Access and Manipulation",
        "Data Type Conversion",
        "Conditional Logic",
        "Array Manipulation",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They demonstrate property access using the dot operator (.), data type conversions (e.g., Integer.parseInt, Double.parseDouble, Boolean.valueOf), conditional logic using if statements, array manipulation (creating, accessing, and modifying arrays), and string manipulation (substring, indexOf, etc.).  These are fundamental aspects of C# programming used to process and transform data within the context of the provided methods."
    }
  },
  {
    "c196": {
      "Unique tokens": [
        "oprt",
        "paths",
        "generator",
        "startRuleStartState",
        "f",
        "df",
        "queries",
        "bounds",
        "segmentInfo",
        "version",
        "alt",
        "b",
        "fullName",
        "nameBuf",
        "property",
        "?",
        "upstream",
        "val",
        "loader",
        "objectType",
        "analyzer",
        "userData",
        "ve",
        "positions",
        "k1",
        "se",
        "codec",
        "expr1",
        "notesRef",
        "copy",
        "root",
        "short",
        "pathFilters",
        "getFilePointer",
        "instruction",
        "append",
        ")",
        "pattern",
        "buf",
        "tokenList",
        "str",
        "cell",
        "child",
        "circle",
        "criteriaPredicate",
        "matcher",
        "_errorText",
        "buffer",
        "tree",
        "bs",
        "termAtt",
        "ctx",
        "param",
        "tokenSrc",
        "second",
        "repo",
        "freqs",
        "fieldName",
        "fileName",
        "xPoints",
        "costs",
        "config",
        "configs",
        "data",
        "null",
        ",",
        "base",
        "sb",
        "wbRecords",
        "rowNumber",
        "obj",
        "impl",
        "indexFileName",
        "stream",
        "args",
        "default",
        "fieldConfig",
        "keys",
        "first",
        "recordFactory",
        "len",
        "rootContext",
        "mKeys",
        "uri",
        "files",
        "shape",
        "[",
        "startIdx",
        "keyName",
        "Arrays",
        "fs",
        "end",
        "locale",
        "credentialUrl",
        "hex",
        "stopWordFiles",
        "table_array",
        "file",
        "false",
        "w4",
        "inc",
        "stateNumber",
        "fieldNames",
        "payload",
        "this",
        "map",
        "name",
        "tokens",
        "ref",
        "Term",
        "eval",
        "ConfigurationKeys",
        "hypFile",
        "postags",
        "array",
        "nameArg",
        "strVal",
        "s",
        "needle",
        "label",
        "target",
        "request",
        "t",
        "lastRightID",
        "arg",
        "anchor",
        "class",
        "listener",
        "output",
        "commit",
        "p",
        "segmentSuffix",
        "SEP",
        "_promptText",
        "getChild",
        "_record",
        "ident",
        "ruleNames",
        "forwardPos",
        "currentBlock",
        ".",
        "re",
        "dir",
        "sid",
        "index",
        "bytes",
        "runData",
        "source",
        "k",
        "searcher",
        "id",
        "+",
        "t2",
        "xpath",
        "segmentName",
        "escapeSyntaxParser",
        "indexEnum",
        "parser",
        "v",
        "fr",
        "termsFileName",
        "toString",
        "ext",
        "field",
        "badBuffer",
        "time",
        "forward",
        "haystack",
        "terms",
        "container",
        "stats",
        "arg0",
        "key",
        "reference",
        "sessionID",
        "filename",
        "(",
        "raw",
        "d",
        "o",
        "segment",
        "recognizer",
        "state",
        "tracker",
        "directory",
        "workbookName",
        "i",
        "fromField",
        "in",
        "dfa",
        "fieldInfo",
        "product",
        "clazz",
        "term",
        "_ctx",
        "os",
        "part",
        "ignoreCase",
        "functionName",
        "mode",
        ";",
        "\"",
        "valueCount",
        "startRuleIndex",
        "rowCells",
        "path",
        "row",
        "EPSILON",
        "crA",
        "ioe",
        "context",
        "lowerTerm",
        "termText",
        "bbox",
        "prefix",
        "veText1",
        "_options",
        "format",
        "r",
        "out",
        "idBuf",
        "c",
        "_sid",
        "ch",
        "}",
        "start",
        "_begin",
        "params",
        "{",
        "text",
        "currentRevision",
        "current",
        "fmt",
        "readTaskClass",
        "e",
        "parent",
        "editDistance",
        "line",
        "encoding",
        "cmd",
        "remaining",
        "docIDs",
        "prompt",
        "shortenname",
        "remoteName",
        "toObjectId",
        "packs",
        "dgLoc",
        "_input",
        "br",
        "iterator",
        "outputs",
        "dictFile",
        "ec",
        "arc",
        "replacement",
        "username",
        "value",
        "count",
        "Constants",
        "rv",
        "_lastCell",
        "yPoints",
        "getUsername",
        "pt",
        "numberVE",
        "nameOrSpec",
        "words",
        "a",
        "rs",
        "lock",
        "backPos",
        "other",
        "info",
        "predicate"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Opening Parenthesis, Closing Parenthesis, Array Access Operator, Semicolon",
      "Semantic Tags": [
        "Data Structures",
        "File Manipulation",
        "Data Processing",
        "Algorithm Implementation",
        "Object-Oriented Programming"
      ],
      "Description": "The tokens represent a mix of variable declarations, object instantiations, method calls using the dot operator, array access, and control flow statements.  These are fundamental aspects of C# programming, essential for building data structures, manipulating files, processing data, and implementing algorithms within an object-oriented paradigm."
    }
  },
  {
    "c197": {
      "Unique tokens": [
        "getType",
        "rt",
        "f",
        "CharsRefBuilder",
        "head",
        "UTF_8",
        "docFreq",
        "property",
        "eq",
        "ve",
        "k1",
        "sheetName",
        "name2",
        "xcell",
        "had",
        "infoStream",
        "set",
        "length",
        "Ptg",
        "matcher",
        "sign",
        "JDK",
        "cfra",
        "termAtt",
        "boost",
        "sequence",
        "from",
        "vowel",
        "q",
        "sb",
        "stream",
        "args",
        "uri",
        "SIZE",
        "substring",
        "[",
        "addAll",
        "end",
        "typeString",
        "minVersion",
        "lemmas",
        "FileUtils",
        "name1",
        "outGoingArgs",
        "setDate",
        "termtext",
        "keySet",
        "continue",
        "enc",
        "Sheet",
        "success",
        "snapshot",
        "_rows",
        "anchor",
        "relativeOffsets",
        "widths",
        "cfRules",
        "work",
        "for",
        "aa",
        "OFFSET_WMFDATA",
        "output",
        "delay",
        "format:",
        "provider",
        "return",
        "re",
        "preBreak",
        "%,d",
        "recordName",
        "searcher",
        "lf",
        "split",
        "log",
        "link",
        "ts",
        "rules",
        "removedRow",
        "objdb",
        "load",
        "font",
        "regions",
        "toString",
        "soq",
        "dest",
        ".txt",
        "hssf",
        "[dictionary=",
        "d",
        "o",
        "comparator",
        "db",
        "in",
        "fieldInfo",
        "os",
        "term",
        "Long",
        "followState",
        "message",
        "op",
        "mode",
        "at",
        "type",
        "ps",
        "BytesRef",
        "close",
        "HEAD",
        "parent",
        "e",
        "line",
        "seek",
        "packs",
        "revision",
        "_sheet",
        "valEnd",
        "fields",
        "withArgs",
        "EMPTY",
        "inf",
        "subquery",
        "biffName",
        "SECTION",
        "transition=",
        "info",
        "queryNode",
        "badName",
        "plural",
        "WriteLineDocTask",
        "unification",
        "to",
        "version",
        "u",
        "rec",
        "Math",
        "++",
        "?",
        "parameter",
        "date",
        "parsing",
        "all",
        "instruction",
        "srec",
        "cell",
        "circle",
        "list",
        "repo",
        "offset",
        "fieldInfos",
        "nIncomingArgs",
        "wildcardText",
        "SetTransition",
        "wbRecords",
        "endIndex",
        "impl",
        "joined",
        "first",
        "done",
        "ffl",
        "<=",
        "getName",
        "k2",
        "noun",
        "items",
        "BooleanClause",
        "builder",
        "character",
        "hasPayloads",
        "cost",
        "timeout",
        "RuntimeException",
        "payload",
        "this",
        "symbol",
        "Term",
        "getTagger",
        "filters",
        "weight",
        "|=",
        "-D",
        "setBody",
        "/home/hadoop/contrib/streaming/hadoop-streaming.jar",
        "listener",
        "autocomplete",
        "getURI",
        "newInstance",
        "resolved",
        "CFRecordsAggregate",
        ".",
        "FS",
        "pm",
        "runData",
        "Automaton",
        "delete",
        "keyStart",
        "expected",
        "externs",
        "specify",
        "invalid",
        "field",
        "endOffset",
        "getHost",
        "add",
        "=",
        "key",
        "File",
        "parallel",
        "state",
        "directory",
        "valueOf",
        "sampledDocs",
        "expandChar",
        "setDocDataField",
        "path",
        "row",
        "_string",
        "EPSILON",
        "separator",
        "max",
        "crA",
        "ioe",
        "0",
        "format",
        "entityName",
        "Locale",
        "r",
        "or",
        "src",
        "pending",
        "System",
        "}",
        "_output",
        "sourceFiles",
        "params",
        "Character",
        "text",
        "createTempDirectory",
        "ParseException",
        "bQuery",
        "body",
        "elseargs",
        ":",
        "trie",
        "rawText",
        "hunspell",
        "allToffs",
        "iter",
        "value",
        "m",
        "poi",
        "score",
        "noBreak",
        "cvr",
        "RepositoryCache",
        "copyChars",
        "verb",
        "generator",
        "mapper",
        "position",
        "tags",
        "-p",
        "token",
        "StringUtil",
        "fullName",
        "interval",
        "val",
        "refs",
        "bits",
        "%s:%s",
        "<",
        "You",
        "root",
        "append",
        "originalText",
        "nr",
        "buf",
        "child",
        "org",
        "fromQuery",
        "node",
        "startOffset",
        "sectionText",
        "ent",
        "RecordAggregate",
        "getObjectType",
        "formatter",
        "END",
        "bq",
        "fieldName",
        "EOF",
        "group",
        "_colors",
        "writeVLong",
        ",",
        "spare",
        "valStart",
        "IOUtils",
        "DETECTED",
        ">",
        "files",
        "queryString",
        "FormulaType",
        "Arrays",
        "look",
        "parents",
        "file",
        "ex",
        "All",
        "map",
        "postags",
        "delim",
        "t",
        "msg",
        "termsOffsets",
        "exc",
        "ae",
        "StandardCharsets",
        "docData",
        "p",
        "Automata",
        "SEP",
        "termsInfos",
        "rule",
        "IOException",
        "ArrayUtil",
        "automata",
        "credentials",
        "k",
        "isWritten",
        "id",
        "loose",
        "actualVersion",
        "pred",
        "segmentName",
        "equals",
        "dictionary",
        "word",
        "clauses",
        "fieldDelimiter",
        "toMergeItr",
        "wait",
        "safelyAllocate",
        "constructing",
        "prior",
        "SHOULD",
        "init",
        "filename",
        "endsWith",
        "write",
        "Index",
        "recognizer",
        "record",
        "vals",
        "icu",
        "0xFFFF",
        "!=",
        "\"",
        "normalizer",
        "ROOT",
        "parseSynonym",
        "doc",
        "input",
        "getMessage",
        "termText",
        "getObjectId",
        "out",
        "'",
        "totalTermFreq",
        "indexCommit",
        "widthsStrArray",
        "Util",
        "sheetNumber",
        "iterator",
        "outputs",
        "count",
        "rv",
        "pt",
        "NOT_SET",
        "words",
        "command",
        "cc",
        "postBreak",
        "nBlank",
        "reverse",
        "replacementBytes",
        "df",
        "1.0f",
        "alt",
        "analyzer",
        "revisionFiles",
        "hash",
        "else",
        "newSemCtx",
        "notifyErrorListeners",
        "break",
        "short",
        "reader",
        ")",
        "ord",
        "_firstrow",
        "int",
        "str",
        "criteriaPredicate",
        "Exception",
        "vlst",
        "tree",
        "result",
        "ctx",
        "second",
        "reducer",
        "following",
        "if",
        "config",
        "null",
        "Transition",
        "Ref",
        "nOutGoingArgs",
        "fieldConfig",
        "ssh",
        "iwConf",
        "shape",
        "inSection",
        "-P",
        "Operations",
        "*",
        "==",
        "float",
        ">=",
        "itr",
        "statuses",
        "-mapper",
        "ref",
        "name",
        "objects",
        "tokens",
        "s",
        "label",
        "utf32State",
        "1",
        "size",
        "Version",
        "CharsRef",
        "option",
        "Token",
        "resolve",
        "-reducer",
        "decision",
        "color",
        "needsInput=",
        "sp",
        "CFRuleBase",
        "hrow",
        "getMaxClauseCount",
        "absoluteOffsets",
        "arraycopy",
        "throw",
        "dir",
        "index",
        "found",
        "new",
        "analyzerName",
        "Incomplete",
        "+",
        "you",
        "parts",
        "-input",
        "tagName",
        "entries",
        "\u00ed",
        "ext",
        "previous",
        "formatting",
        "terms",
        "index.",
        "Files",
        "setInput",
        "next",
        "scratch",
        "(",
        "getUser",
        "i",
        "phraseInfo",
        "edx",
        "contents",
        "w",
        "part",
        "-t",
        ";",
        "err",
        "maxVersion",
        "writer",
        "Number",
        "dfe",
        "lowerTerm",
        "conflictingAlts",
        "section",
        "start",
        "real",
        "c",
        "title",
        "{",
        "current",
        "implReplaceWith",
        "]",
        "shortenname",
        "agg",
        "br",
        "filepatterns",
        "entry",
        "arc",
        "finish",
        "hasNext",
        "rc",
        "invokingState",
        "parameters:",
        "mirror",
        "cchar",
        "pb",
        "StringHelper",
        "String",
        "totalTF",
        "left"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c198": {
      "Unique tokens": [
        "",
        "f",
        "and",
        "df",
        "recognition",
        "maxFacetDepth",
        "to",
        "BitSet",
        "1.0f",
        "b",
        "Math",
        "idx",
        "getRuleInvocationStack",
        "++",
        "?",
        "unknown",
        "MAX_BUF",
        "userData",
        "\\0",
        "Collections",
        "Font",
        "5",
        "<",
        "1.0",
        "highlightBackground",
        "else",
        "ft",
        "Interval",
        "be",
        "newSemCtx",
        "clone",
        "sfr",
        "addBlock",
        "notifyErrorListeners",
        "short",
        "append",
        ")",
        "instance",
        "allocator",
        "expr2",
        "int",
        "originalText",
        "length",
        "circle",
        "criteriaPredicate",
        "toCharArray",
        "Exception",
        "check",
        "Integer",
        "result",
        "ctx",
        "functions",
        "-",
        "getChildCount",
        "can't",
        "FormulaRecordAggregate",
        "getSid",
        "sz",
        "heightStr",
        "pos",
        "println",
        "if",
        "3",
        "config",
        "offset",
        "implementation!",
        "null",
        ",",
        "not",
        "try",
        "sb",
        "wbRecords",
        "collectPredicates",
        "of",
        "joined",
        "args",
        "Shape",
        "nRules",
        ">",
        "fontName",
        "OBJ_ANY",
        "iwConf",
        "mrr",
        "use",
        "maxIn",
        "shape",
        "[",
        "<=",
        "addAll",
        "getName",
        "MessageFormat",
        "getIndex",
        "already",
        "*",
        "parents",
        "==",
        "file",
        "with",
        "false",
        "RuntimeException",
        "stateNumber",
        "inc",
        ">=",
        "CF_METAFILEPICT.",
        "updateCellNum",
        "this",
        "NEGATIVE_INFINITY",
        "name",
        "TokenStream",
        "delegate",
        "number",
        "inContext",
        "pAt",
        "s",
        "true",
        "predSucceeds",
        "target",
        "\\\"",
        "semanticContext",
        "t",
        "LA",
        "1",
        "|=",
        "getClass",
        "class",
        "double",
        "prefixLength",
        "cfRules",
        "maxExpansions",
        "SemanticContext",
        "for",
        "invalidStageForPath",
        "output",
        "IllegalArgumentException",
        "temp",
        "docData",
        "ae",
        "p",
        "boolean",
        "',",
        "so",
        "Please",
        "!",
        "sp",
        "maxDocFacets",
        "currentBlock",
        "getBoolean",
        ".",
        "return",
        "it",
        "metaData",
        "char",
        "throw",
        "segmentsFile",
        "heuristic",
        "debug",
        "bytes",
        "index",
        "new",
        "URL",
        "trans",
        "ATNConfig",
        "+",
        "bgcolor=",
        "numGoodPoints",
        "header",
        "equals",
        "is",
        "externs",
        "pReleventSum",
        "peekNextSid",
        "INSTANCE",
        "toString",
        "ext",
        "minShingleSize",
        "width",
        "elements",
        "we",
        "add",
        "=",
        "final",
        "currentPosition",
        "wpil",
        "Calendar",
        "10",
        "(",
        "channelMustBeInRange1_255",
        "d",
        "POI",
        "fullCtx",
        "stage",
        "i",
        "catch",
        "instanceof",
        "vals",
        "edx",
        "rollBufferSize",
        "term",
        "n",
        "getPredicate",
        "/",
        "ri",
        "!=",
        ";",
        "at",
        "\"",
        "type",
        "AND",
        "UnsupportedEncodingException",
        "stored",
        "switch",
        "EPSILON",
        "the",
        "Number",
        "min",
        "separator",
        "your",
        "0",
        "DATE_FIELD",
        "numChars",
        "CharArraySet",
        "format",
        "Revision",
        "out",
        "c",
        "System",
        "}",
        "'",
        "ch",
        "{",
        "getOffendingToken",
        "comparisonOperator",
        "numPoints",
        "e",
        "precedence",
        "error",
        "]",
        "seek",
        "+=",
        ":",
        "type:",
        "HSSFClientAnchor",
        "charactersStrArray",
        "payloads",
        "&&",
        "old=",
        "0.0f",
        "ec",
        "replacement",
        "score",
        "ruleName",
        "exceptions",
        "minIn",
        "Double",
        "rs",
        "fieldsData",
        "String",
        "maxEdits",
        "cc",
        "dependent=true"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Text Processing",
        "Data Structures",
        "Exception Handling",
        "String Manipulation",
        "Algorithm"
      ],
      "Description": "The tokens represent a wide range of C# language elements including variables, objects, methods, operators, keywords, and symbols.  The code snippets demonstrate various operations such as string manipulation, data structure usage (e.g., BitSet, StringBuilder, ArrayList), exception handling, and algorithmic logic (e.g., searching, sorting, merging). The semantic tags reflect the overall functionality and purpose of the code, highlighting the core operations being performed."
    }
  },
  {
    "c199": {
      "Unique tokens": [
        "getReturnState",
        "getType",
        "getSourceSize",
        "newEditable",
        "reverse",
        "getResultPath",
        "setIndex",
        "putDouble",
        "seekExact",
        "toQueryString",
        "writeShort",
        "hash1",
        "put",
        "LT",
        "computeProbability",
        "putChar",
        "formatAsString",
        "floatValue",
        "yyreset",
        "union",
        "rebootDBInstance",
        "<",
        "getLowIx",
        "startDBInstance",
        "getValue",
        "putShort",
        "getLong",
        "removeCustomProperties",
        "clone",
        "getAccessKeyId",
        "offer",
        "copyFrom",
        "copy",
        "addPath",
        "longValue",
        "getAndIncrement",
        "setAnchor",
        "negate",
        "append",
        "fetch",
        "isLarge",
        "deleteDBCluster",
        "getColumn",
        "refCount",
        "describeParams",
        "set",
        "build",
        "putFloat",
        "modifyDBInstance",
        "setup",
        "startDBCluster",
        "knows",
        "freeze",
        "toStringUnquoted",
        "merge",
        "serialize",
        "rebootCluster",
        "retainAll",
        "createDelayedOutput",
        "createEventSubscription",
        "getReceivePack",
        "enterRule",
        "putLong",
        "dispatch",
        "modifyCertificates",
        "isSet",
        "println",
        "setValue",
        "hasRemaining",
        "getPointAt",
        "getOffsetGap",
        "extendB",
        "getDeltaCacheSize",
        "getLocale",
        "search",
        "toFormulaString",
        "containsValue",
        "eof",
        "fromObjectId",
        "modifyCluster",
        "print",
        "addColor",
        "decode",
        "deleteDBInstance",
        "configure",
        "insert",
        "copyRawTo",
        "substring",
        "getExpectedTokens",
        "getRawPath",
        "poll",
        "isForce",
        "addAll",
        "readLong",
        "UserSViewEnd",
        "isCancelled",
        "initialize",
        "read",
        "main",
        "cloneEntry",
        "startWorkflowExecution",
        "pollLast",
        "getIndexSize",
        "dumpDFA",
        "incrementToken",
        "ready",
        "name",
        "getLinesDeleted",
        "doLogic",
        "subtract",
        "deleteCluster",
        "getDeltaBase",
        "fillTo",
        "recover",
        "decRef",
        "isUpdate",
        "elementAt",
        "getLocalName",
        "getResultTreeId",
        "LA",
        "size",
        "isDirect",
        "getPrecisionAt",
        "compare",
        "getLeaf",
        "getStartLine",
        "canEncode",
        "boolean",
        "isFinished",
        "getChild",
        "parse",
        "getDeltaSearchWindowSize",
        "slice",
        "remove",
        "setByte",
        "validate",
        "include",
        "getPass",
        "createDBInstance",
        "charAt",
        "terminateWorkflowExecution",
        "getXFAt",
        "removeValue",
        "isClean",
        "isEnabled",
        "createDBCluster",
        "doubleValue",
        "accept",
        "delete",
        "codePointCount",
        "replaceWith",
        "matches",
        "readFully",
        "isDryRun",
        "readByte",
        "toString",
        "getCRC",
        "previous",
        "getSrcRef",
        "getSize",
        "getHost",
        "add",
        "isEmpty",
        "fromString",
        "evaluate",
        "getFormatCount",
        "getLocalizedMessage",
        "generateParseException",
        "supportsExecute",
        "getHighIx",
        "PutItemOutcome",
        "getPromptText",
        "replace",
        "next",
        "common",
        "exitEveryRule",
        "addAndGet",
        "insertWithOverflow",
        "init",
        "putInt",
        "getObjectReader",
        "reset",
        "write",
        "notifyListeners",
        "fill",
        "isInteractive",
        "getByResourceGroup",
        "clear",
        "booleanValue",
        "exitRule",
        "Appendable",
        "fieldInfo",
        "getSourceContents",
        "isSupported",
        "writeUTF",
        "hasPrevious",
        "sort",
        "getSourceCommit",
        "getTarget",
        "createCluster",
        "readDouble",
        "getNewHead",
        "isReuseDeltas",
        "promptPassword",
        "replaceAll",
        "compact",
        "failoverDBCluster",
        "toObject",
        "get",
        "stopDBCluster",
        "getSeries",
        "or",
        "unsafeWrite",
        "start",
        "execute",
        "getFully",
        "revert",
        "close",
        "getSigner",
        "enterEveryRule",
        "setCharAt",
        "encode",
        "setParentIds",
        "writeDouble",
        "resizeCluster",
        "finishReading",
        "buildRequest",
        "requiresCommitBody",
        "modifyDBCluster",
        "tf",
        "seek",
        "containsKey",
        "isValueSecure",
        "getExternalName",
        "deliverSelfNotifications",
        "codePointBefore",
        "getLineCount",
        "getContentDisposition",
        "setConfig",
        "getSignerType",
        "skipBytes",
        "hasNext",
        "getDeltaBaseCacheLimit",
        "create",
        "finish",
        "getLinesAdded",
        "fillRoundRect",
        "skip",
        "explain",
        "getDeltaCacheLimit",
        "intersect",
        "duplicate",
        "ramBytesUsed",
        "serializeSimplePart",
        "contains",
        "UserSViewBegin",
        "run",
        "enterRecursionRule",
        "compareTo",
        "fromRaw",
        "getDefault"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "Data Processing",
        "Object Manipulation",
        "Data Transformation",
        "Utility Functions",
        "File IO"
      ],
      "Description": "These tokens represent method names in C#, indicating actions performed on objects or data.  The methods cover a wide range of functionalities, including data transformation, object manipulation, file input/output, and utility operations.  The context sentences show these methods being invoked, suggesting they are part of a larger system or library."
    }
  },
  {
    "c200": {
      "Unique tokens": [
        "f",
        "nodeName",
        "console",
        "query",
        "version",
        "errorEval",
        "vs",
        "threshold",
        "analyzer",
        "HashMap",
        "blockSize",
        "field_1_password",
        "date",
        "_escherClientAnchor",
        "resource",
        "sliceOffset",
        "inputLength",
        "bucket",
        "clone",
        "reader",
        ")",
        "export",
        "infoStream",
        "buf",
        "length",
        "pi",
        "codepage",
        "legacyCredential",
        "unSafeParser",
        "zzReader",
        "Objects",
        "extensionFieldDelimiter",
        "config",
        "offset",
        "data",
        "null",
        ",",
        "blip",
        "limit",
        "rowNumber",
        "indexedField",
        "stream",
        "_type",
        "termStates",
        "ConcurrentHashMap",
        "previousValue",
        "collectionModel",
        "exists",
        "tokenType",
        "bi",
        "thumbnailData",
        "defaultProvider",
        "this",
        "revstr",
        "repository",
        "name",
        "delegate",
        "executor",
        "_escherChildAnchor",
        "wrapped",
        "s",
        "stemmer",
        "foreground",
        "useNaturalLanguageFormulasFlag",
        "arg",
        "size",
        "rawMessage",
        "intervals",
        "unsafe",
        "decision",
        "p",
        "color",
        "description",
        "changeSkip",
        "provider",
        "tag",
        "factory",
        ".",
        "return",
        "char",
        "hs",
        "charset",
        "bytes",
        "credentials",
        "source",
        "new",
        "id",
        "match",
        "bucketName",
        "parser",
        "font",
        "diffAlg",
        "field",
        "sources",
        "elements",
        "=",
        "seriesNumbers",
        "LocaleUtil",
        "lock",
        "(",
        "reset",
        "comparator",
        "diff",
        "childListener",
        "in",
        "alg",
        "clazz",
        "term",
        "n",
        "w",
        "queryConfigHandler",
        "sort",
        "functionName",
        "mode",
        ";",
        "type",
        "valueCount",
        "function",
        "level",
        "channel",
        "fragmentSize",
        "maxLen",
        "newSize",
        "input",
        "context",
        "fallback",
        "prefix",
        "keepScores",
        "cmp",
        "format",
        "r",
        "out",
        "c",
        "collector",
        "groupValue",
        "}",
        "_thumbnailData",
        "System",
        "lexer",
        "nameFinder",
        "{",
        "title",
        "text",
        "precedence",
        "pool",
        "initialValue",
        "fieldsToAdd",
        ":",
        "reuseStrategy",
        "Impl",
        "queryConfig",
        "revision",
        "iterator",
        "outputs",
        "func",
        "legacyCrendential",
        "value",
        "m",
        "dedup",
        "pc",
        "pw",
        "deltaCacheSize",
        "traverseEmptyCells",
        "object",
        "array",
        "callback",
        "fieldQuery"
      ],
      "Syntactic Label": "Constructor Parameters, Object Assignment, Method Calls, Member Variables, Dot Operator",
      "Semantic Tags": [
        "Object Initialization",
        "Dependency Injection",
        "State Management",
        "Method Invocation",
        "Data Processing"
      ],
      "Description": "The tokens represent various aspects of C# class design and object-oriented programming.  Constructor parameters are used to initialize objects upon creation. The `this` keyword assigns values to member variables, managing the object's internal state. The dot operator facilitates method calls, enabling interaction with objects and their functionalities.  The code snippets showcase common patterns in C# for object initialization, dependency injection (passing dependencies as constructor parameters), and data processing (setting values and invoking methods)."
    }
  },
  {
    "c201": {
      "Unique tokens": [
        "defaultSize",
        "getPropertyNumber",
        "yylength",
        "query",
        "MONTH",
        "getWidth",
        "arearef",
        "?",
        "analyzer",
        "getTime",
        "<",
        "termBytes",
        "orElse",
        "OrdTermState",
        ")",
        "cp",
        "int",
        "why",
        "buf",
        "apache",
        "refSpecs",
        "length",
        "PrecedenceQueryNodeProcessorPipeline",
        "qs",
        "Integer",
        "PrivilegedAction",
        "maskedField",
        "findFirst",
        "-",
        "repo",
        "basePath",
        "offset",
        "null",
        ",",
        "IOUtils",
        "of",
        "stream",
        ">",
        "toLowerCase",
        "len",
        "Row",
        "[",
        "iterateOn",
        "keyName",
        "Arrays",
        "specs",
        "exists",
        "compile",
        "*",
        "lower",
        "==",
        "false",
        "bufferSize",
        ">=",
        "this",
        "getProperty",
        "name",
        "ref",
        "complexSize",
        "true",
        "t",
        "1",
        "class",
        "propId",
        "StaticEncryptionMaterialsProvider",
        "status",
        "RevSort",
        "session",
        "ae",
        "qqName",
        "DAY_OF_MONTH",
        "p",
        "complexData",
        "AreaReference",
        "maskedQuery",
        "slice",
        ".",
        "return",
        "Thread",
        "line.separator",
        "index",
        "sid",
        "source",
        "new",
        "bytes",
        "DirectoryReader",
        "+",
        "boundaryChars",
        "externalWorkbookNumber",
        "strUrl",
        "getConfig",
        "toString",
        "OffsetAttribute",
        "field",
        "=",
        "Calendar",
        "(",
        "File",
        "o",
        "CharTermAttribute",
        "valueOf",
        "instanceof",
        "RootProperty",
        "term",
        "n",
        "Long",
        "DEFAULT_MIN_SHINGLE_SIZE",
        "newState",
        "getThumbnail",
        "string",
        "!=",
        ";",
        "type",
        "\"",
        "errMsg",
        "JGitText",
        "getInstance",
        "getDecodingReader",
        "RawParseUtils",
        "0",
        "ReverseComparator2",
        "cmp",
        "TYPE",
        "format",
        "r",
        "out",
        "System",
        "'",
        "filter",
        "states",
        "safeSize",
        "e",
        "]",
        ":",
        "&",
        "_array",
        "upper",
        "getIndexReader",
        "String",
        "&&",
        "value",
        "create",
        "unpackException",
        "\\n",
        "StaticCredentialsProvider",
        "fields",
        "poi",
        "T",
        "score",
        "64",
        "contains",
        "indexField",
        "object"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Method Calls",
        "Object Instantiation",
        "Data Structures",
        "Control Flow",
        "Input/Output"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including method calls (e.g., getProperty, toString, evaluate), object instantiation (e.g., new StringBuffer, new ArrayList), data structures (e.g., arrays, lists, maps), control flow statements (e.g., if, for, while), and input/output operations (e.g., IOUtils, InputStream, OutputStream).  These elements are fundamental to C# programming and are used extensively in the provided code snippets to perform various tasks, such as data manipulation, file processing, and algorithm implementation."
    }
  },
  {
    "c202": {
      "Unique tokens": [
        "executeAssignIpv6Addresses",
        "executeUpdateServiceAccessPolicies",
        "executeStartSpeechSynthesisTask",
        "executeAttachClassicLinkVpc",
        "executeReplaceTransitGatewayRoute",
        "executeModifySpotFleetRequest",
        "executeDisassociateMemberAccount",
        "executeAttachLoadBalancerToSubnets",
        "executeResetEbsDefaultKmsKeyId",
        "executeListGitHubAccountTokenNames",
        "executeListTypeRegistrations",
        "executeListIAMPolicyAssignmentsForUser",
        "executePutImageTagMutability",
        "executeRebalanceSlotsInGlobalReplicationGroup",
        "executeStartDBCluster",
        "executeAssociatePhoneNumberWithUser",
        "executeOpenInstancePublicPorts",
        "executeAuthorizeSecurityGroupEgress",
        "executePollForActivityTask",
        "executeUpdateEndpointWeightsAndCapacities",
        "executeReplaceNetworkAclEntry",
        "executeDisassociateSkillGroupFromRoom",
        "executeCreateClusterParameterGroup",
        "executeDisassociateSkillFromSkillGroup",
        "executeCreateDBInstanceReadReplica",
        "executeUpdateSecurityGroupRuleDescriptionsEgress",
        "executePurchaseReservedNodeOffering",
        "executeCountPendingDecisionTasks",
        "executeRespondActivityTaskCanceled",
        "executeChangeResourceRecordSets",
        "executeListJournalS3ExportsForLedger",
        "executeDeregisterDBProxyTargets",
        "executeModifyClusterSubnetGroup",
        "executePutAccountSettingDefault",
        "executeRevokeSecurityGroupEgress",
        "executeSetLoadBalancerPoliciesForBackendServer",
        "executeUndeprecateWorkflowType",
        "executeDeleteTransitGatewayMulticastDomain",
        "executeGetTransitGatewayRouteTableAssociations",
        "executeListClosedWorkflowExecutions",
        "executeDownloadDBLogFilePortion",
        "executeExportClientVpnClientConfiguration",
        "executeAuthorizeClientVpnIngress",
        "executeSetIdentityMailFromDomain",
        "executeUpdateAccountSendingEnabled",
        "executeModifyEventSubscription",
        "executeCloseInstancePublicPorts",
        "executeRegisterInstanceEventNotificationAttributes",
        "executeDisassociateDelegateFromResource",
        "executeIncreaseNodeGroupsInGlobalReplicationGroup",
        "executeDisassociateMemberFromGroup",
        "executeDeprecateWorkflowType",
        "executeSetDesiredCapacity",
        "executeAssociateConnectionWithLag",
        "executeStartKeyPhrasesDetectionJob",
        "executeCreateCacheParameterGroup",
        "executeSetIdentityNotificationTopic",
        "executeModifyDBClusterSnapshotAttribute",
        "executeUntagAttendee",
        "executeDisassociateClientVpnTargetNetwork",
        "executeModifyMountTargetSecurityGroups",
        "executeEnableVgwRoutePropagation",
        "executeUpdateSecurityGroupRuleDescriptionsIngress",
        "executeCopyClusterSnapshot",
        "executeRevokeClusterSecurityGroupIngress",
        "executeAssociateQualificationWithWorker",
        "executeDisassociateSubnetCidrBlock",
        "executeGetTransitGatewayRouteTablePropagations",
        "executeUpdateConfigurationSetEventDestination",
        "executeForgetSmartHomeAppliances",
        "executeModifyInstanceGroups",
        "executeGetCloudFrontOriginAccessIdentity",
        "executeRevokeSecurityGroupIngress",
        "executeReplaceIamInstanceProfileAssociation",
        "executeDisassociateVpcCidrBlock",
        "executeDisableDomainAutoRenew",
        "executeRegisterDBProxyTargets",
        "executeAssociateSkillWithUsers",
        "executeBatchCreateRoomMembership",
        "executeCancelSpotFleetRequests",
        "executeRevokeDBSecurityGroupIngress",
        "executeAttachLoadBalancerTargetGroups",
        "executeUpdateTableReplicaAutoScaling",
        "executeAcceptReservedNodeExchange",
        "executeStartEntitiesDetectionJob",
        "executeStopGameSessionPlacement",
        "executeDescribeEgressOnlyInternetGateways",
        "executeDescribeReservedInstancesListings",
        "executeModifyInstanceMetadataOptions",
        "executeDeleteEgressOnlyInternetGateway",
        "executePromoteReadReplica",
        "executeListHumanTaskUis",
        "executeReplaceRouteTableAssociation",
        "executeGetReusableDelegationSetLimit",
        "executeCreateFileSystemFromBackup",
        "executeModifyReservedInstances",
        "executeFailoverGlobalReplicationGroup",
        "executeDescribeEngineDefaultClusterParameters",
        "executeListSkillsStoreSkillsByCategory",
        "executeModifyInstanceCreditSpecification",
        "executeDescribeValidDBInstanceModifications",
        "executeAcceptDomainTransferFromAnotherAwsAccount",
        "executeCreateInstancesFromSnapshot",
        "executeAddInstanceGroups",
        "executeUpdateDomainEndpointOptions",
        "executeDisassociateDeviceFromRoom",
        "executeDisassociateSigninDelegateGroupsFromAccount",
        "executeAssociateSubnetCidrBlock",
        "executeDisassociatePhoneNumbersFromVoiceConnectorGroup",
        "executeListTrafficPolicyInstancesByHostedZone",
        "executeSetCognitoEvents",
        "executeAuthorizeDBSecurityGroupIngress",
        "executeDisassociateGlobalReplicationGroup",
        "executeListTrafficPolicyInstancesByPolicy",
        "executePutScheduledUpdateGroupAction",
        "executeSetIdentityDkimEnabled",
        "executeCopyDBParameterGroup",
        "executeModifyClusterMaintenance",
        "executePutAnomalyDetector",
        "executeEnableTransitGatewayRouteTablePropagation",
        "executePutEmailIdentityFeedbackAttributes",
        "executeResetPersonalPIN",
        "executePutConfigurationSetTrackingOptions",
        "executeRestoreDBInstanceFromS3",
        "executeRebootCacheCluster",
        "executeSendAlexaOfferToMaster",
        "executeRemoveAttributesFromFindings",
        "executeAddInstanceFleet",
        "executeModifyTransitGatewayVpcAttachment",
        "executeModifyReplicationGroup",
        "executeTransferDomainToAnotherAwsAccount",
        "executeCountOpenWorkflowExecutions",
        "executeModifyVpcEndpointServiceConfiguration",
        "executeDescribeComponentConfigurationRecommendation",
        "executeAssociateDeviceWithRoom",
        "executeSearchTransitGatewayRoutes",
        "executeBatchAssociateUserStack",
        "executeCreateSnapshotCopyGrant",
        "executeStartLifecyclePolicyPreview",
        "executeStartDocumentClassificationJob",
        "executeDeleteLocalGatewayRouteTableVpcAssociation",
        "executeRestoreDBInstanceToPointInTime",
        "executePutSuppressedDestination",
        "executeRejectDomainTransferFromAnotherAwsAccount",
        "executeImportClientVpnClientCertificateRevocationList",
        "executeRegisterTransitGatewayMulticastGroupSources",
        "executeCreateTransitGatewayRouteTable",
        "executeBatchUnsuspendUser",
        "executeSetActiveReceiptRuleSet",
        "executeModifyInstancePlacement",
        "executeStartChatContact",
        "executeListWorkersWithQualificationType",
        "executeAssociateS3Resources",
        "executeModifyCacheParameterGroup",
        "executeEnableEnhancedMonitoring",
        "executePollForDecisionTask",
        "executePutDedicatedIpInPool",
        "executeAssociateDeviceWithNetworkProfile",
        "executePutImageScanningConfiguration",
        "executeDisableTransitGatewayRouteTablePropagation",
        "executeModifyClientProperties",
        "executeModifySelfservicePermissions",
        "executeDeleteTransitGatewayRouteTable",
        "executeSetVisibleToAllUsers",
        "executeUpdateBaiduChannel",
        "executeBatchCreateAttendee",
        "executeDescribeLocalGatewayRouteTableVpcAssociations",
        "executeStartTextTranslationJob",
        "executeResetDBClusterParameterGroup",
        "executeCreateDBSecurityGroup",
        "executeModifyInstanceCapacityReservationAttributes",
        "executeSetIdentityHeadersInNotificationsEnabled",
        "executeDisableAvailabilityZonesForLoadBalancer",
        "executeIncreaseStreamRetentionPeriod",
        "executeRejectTransitGatewayPeeringAttachment",
        "executeListLabelingJobsForWorkteam",
        "executeSetIdentityFeedbackForwardingEnabled",
        "executeDeprecateActivityType",
        "executeUpdateContainerInstancesState",
        "executeRecognizeCelebrities",
        "executeRespondDecisionTaskCompleted",
        "executeDisassociateTransitGatewayRouteTable",
        "executeDescribeTransitGatewayMulticastDomains",
        "executeModifyInstanceEventStartTime",
        "executeDetachClassicLinkVpc",
        "executeAssociateDhcpOptions",
        "executeUpdateQualificationType",
        "executeAddApplicationCloudWatchLoggingOption",
        "executeUpdateConfigurationSetReputationMetricsEnabled",
        "executeModifyCurrentDBClusterCapacity",
        "executeDeregisterInstancesFromLoadBalancer",
        "executePutInstancePublicPorts",
        "executeEnableFastSnapshotRestores",
        "executeModifyVpnTunnelOptions",
        "executeCancelDomainTransferToAnotherAwsAccount",
        "executeStartOutboundVoiceContact",
        "executeModifyTrafficMirrorFilterNetworkServices",
        "executeRemoveManagedScalingPolicy",
        "executeSendCustomVerificationEmail",
        "executeBatchGetApplicationRevisions",
        "executeModifyWorkspaceAccessProperties",
        "executeWithdrawByoipCidr",
        "executeDisableEbsEncryptionByDefault",
        "executeCreateGlobalReplicationGroup",
        "executeModifyClusterParameterGroup",
        "executeAcceptTransitGatewayVpcAttachment",
        "executeDecreaseNodeGroupsInGlobalReplicationGroup",
        "executeModifyVpcPeeringConnectionOptions",
        "executeDecreaseReplicaCount",
        "executeReplaceNetworkAclAssociation",
        "executeDisassociateFromMasterAccount",
        "executeDeleteDBClusterParameterGroup",
        "executeCountClosedWorkflowExecutions",
        "executeAddApplicationReferenceDataSource",
        "executeDescribeDefaultClusterParameters",
        "executeModifyWorkspaceProperties",
        "executeRegisterActivityType",
        "executeCountPendingActivityTasks",
        "executeCreateTransitGatewayMulticastDomain",
        "executeDescribeCrossAccountAccessRole",
        "executePutConfigurationSetReputationOptions",
        "executeResetCacheParameterGroup",
        "executeDescribeEngineDefaultParameters",
        "executeDisassociateSkillFromUsers",
        "executeModifyVpcTenancy",
        "executeDescribeClientVpnAuthorizationRules",
        "executeSetInstanceHealth",
        "executePurchaseReservedDBInstancesOffering",
        "executeModifyDBClusterParameterGroup",
        "executeStartVpcEndpointServicePrivateDnsVerification",
        "executeDisassociateIamInstanceProfile",
        "executeApplySecurityGroupsToLoadBalancer",
        "executeDeregisterTransitGatewayMulticastGroupSources",
        "executeRemoveAutoScalingPolicy",
        "executeUntagQueue",
        "executeRestoreDBClusterFromSnapshot",
        "executeModifyReplicationGroupShardConfiguration",
        "executeDeregisterInstanceEventNotificationAttributes",
        "executeUntagDeliveryStream",
        "executeAddJobFlowSteps",
        "executeCopyDBClusterSnapshot",
        "executeSendContactMethodVerification",
        "executeModifyDefaultCreditSpecification",
        "executeBatchDisassociateUserStack",
        "executeRejectVpcEndpointConnections",
        "executeDescribeTransitGatewayRouteTables",
        "executeDeprovisionByoipCidr",
        "executeRevokeCacheSecurityGroupIngress",
        "executeAuthorizeSnapshotAccess",
        "executeEnableEbsEncryptionByDefault",
        "executeDetachInstancesFromLoadBalancer",
        "executeListReviewPolicyResultsForHIT",
        "executeDeleteTransitGatewayVpcAttachment",
        "executeDisableVpcClassicLinkDnsSupport",
        "executeApplySecurityGroupsToClientVpnTargetNetwork",
        "executeModifyVpnTunnelCertificate",
        "executeModifyClientVpnEndpoint",
        "executeStartDeliveryStreamEncryption",
        "executeAssociateWebsiteCertificateAuthority",
        "executeRegisterWorkflowType",
        "executeRespondActivityTaskFailed",
        "executeStartDominantLanguageDetectionJob",
        "executeModifyFpgaImageAttribute",
        "executeAssociateClientVpnTargetNetwork",
        "executeSetLoadBalancerListenerSSLCertificate",
        "executePutAccountDedicatedIpWarmupAttributes",
        "executeModifyGlobalReplicationGroup",
        "executeDisableVgwRoutePropagation",
        "executePutDedicatedIpWarmupAttributes",
        "executeRestoreDBClusterFromS3",
        "executeUpdateFleetPortSettings",
        "executeDeleteCloudFrontOriginAccessIdentity",
        "executeDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "executeApplyPendingMaintenanceAction",
        "executePutClusterCapacityProviders",
        "executeStartSmartHomeApplianceDiscovery",
        "executeDisableFastSnapshotRestores",
        "executeDescribeDominantLanguageDetectionJob",
        "executeModifyDBSubnetGroup",
        "executeAssociateResolverEndpointIpAddress",
        "executeUnlinkDeveloperIdentity",
        "executeExportTransitGatewayRoutes",
        "executeDeleteDBInstanceAutomatedBackup",
        "executeRevokeSnapshotAccess",
        "executeDisableSnapshotCopy",
        "executeSkipWaitTimeForInstanceTermination",
        "executeListOpenWorkflowExecutions",
        "executeRemoveFromGlobalCluster",
        "executeUntagMeeting",
        "executeTerminateInstanceInAutoScalingGroup",
        "executeUpdateAutoScalingGroup",
        "executeInitiateVaultLock",
        "executeResumeGameServerGroup",
        "executeDetachLoadBalancerTargetGroups",
        "executeRetrieveDomainAuthCode",
        "executeResendContactReachabilityEmail",
        "executeAssociateDelegateToResource",
        "executePutAccountSendingAttributes",
        "executeDisableDomainTransferLock",
        "executeUnassignIpv6Addresses",
        "executeSendTestEventNotification",
        "executeCheckDomainTransferability",
        "executeInitiateDocumentVersionUpload",
        "executeAcceptTransitGatewayPeeringAttachment",
        "executeRequestCancelWorkflowExecution",
        "executeRemoveTagsFromOnPremisesInstances",
        "executeBatchDetectKeyPhrases",
        "executeUpdateNotebookInstanceLifecycleConfig",
        "executeSubmitAttachmentStateChanges",
        "executeRejectTransitGatewayVpcAttachment",
        "executeUndeprecateActivityType",
        "executeStartCelebrityRecognition",
        "executeSetVaultNotifications",
        "executeEnableAvailabilityZonesForLoadBalancer",
        "executeListTagsForDeliveryStream",
        "executeUnarchiveFindings",
        "executeBatchDetectDominantLanguage",
        "executeEnableOrganizationAdminAccount",
        "executeDisassociateWebsiteCertificateAuthority",
        "executeSendBulkTemplatedEmail",
        "executeAddApplicationInputProcessingConfiguration",
        "executeCreateClusterSecurityGroup",
        "executeDisableAlarmActions",
        "executeAddRoleToDBInstance",
        "executeSetLoadBalancerPoliciesOfListener",
        "executePutEmailIdentityMailFromAttributes",
        "executePutRoomSkillParameter",
        "executePurchaseReservedCacheNodesOffering",
        "executeUpdateRulesOfIpGroup",
        "executeAssociateVpcCidrBlock",
        "executeCreateClusterSubnetGroup",
        "executeGetTransitGatewayAttachmentPropagations",
        "executeModifyCacheCluster",
        "executeDeregisterFromWorkMail",
        "executeEnableVpcClassicLinkDnsSupport",
        "executeCreateCacheCluster",
        "executePutConfigurationSetSuppressionOptions",
        "executeStartGameSessionPlacement",
        "executeModifyClusterSnapshot",
        "executeModifyVpcEndpointConnectionNotification",
        "executeDetachLoadBalancerFromSubnets",
        "executeUpdateDomainContactPrivacy",
        "executePutPartnerEvents",
        "executeDecreaseStreamRetentionPeriod",
        "executePutEmailIdentityDkimAttributes",
        "executeUnassignPrivateIpAddresses",
        "executeBatchPutScheduledUpdateGroupAction",
        "executeEnableVpcClassicLink",
        "executeModifyInstanceFleet",
        "executeModifyEbsDefaultKmsKeyId",
        "executeRegisterCrossAccountAccessRole",
        "executeDescribeIamInstanceProfileAssociations",
        "executeCreateCacheSecurityGroup",
        "executeAcceptReservedInstancesExchangeQuote",
        "executeSetQueueAttributes",
        "executeStartDocumentTextDetection",
        "executePutConfigurationSetDeliveryOptions",
        "executeListTrainingJobsForHyperParameterTuningJob",
        "executeModifyTrafficMirrorFilterRule",
        "executeBatchDeleteClusterSnapshots",
        "executePutVoiceConnectorLoggingConfiguration",
        "executeCancelSpotInstanceRequests",
        "executeModifyWorkspaceCreationProperties",
        "executeDisassociateVPCFromHostedZone",
        "executeAddApplicationVpcConfiguration",
        "executeUpdateCompanyNetworkConfiguration",
        "executeListHITsForQualificationType",
        "executeListDistributionsByWebACLId",
        "executeRestoreDBInstanceFromDBSnapshot",
        "executeDisassociateIpGroups",
        "executeResetFpgaImageAttribute",
        "executePutEmailIdentityDkimSigningAttributes",
        "executeAssociatePhoneNumbersWithVoiceConnectorGroup",
        "executeSetVaultAccessPolicy",
        "executePutDeliverabilityDashboardOption",
        "executeRemoveRoleFromDBInstance",
        "executeUntagResource",
        "executeBatchGetOnPremisesInstances",
        "executeResetDBParameterGroup",
        "executePutVoiceConnectorOrigination",
        "executeModifyClusterSnapshotSchedule",
        "executeRemoveTagsFromVault",
        "executeUpdateIAMPolicyAssignment",
        "executePutMailboxPermissions",
        "executeCopyDBClusterParameterGroup",
        "executeModifyTrafficMirrorSession",
        "executeAbortDocumentVersionUpload",
        "executeDescribeReservedDBInstancesOfferings",
        "executeAssociateTransitGatewayRouteTable",
        "executeModifyVpcEndpointServicePermissions",
        "executeSearchAvailablePhoneNumbers",
        "ChangeMessageVisibilityBatchRequest",
        "executeResetClusterParameterGroup",
        "executeGetJourneyExecutionActivityMetrics",
        "executeModifyGlobalCluster",
        "executeAssignPrivateIpAddresses",
        "executeStartSentimentDetectionJob",
        "executeAttachInstancesToLoadBalancer",
        "executeModifyAvailabilityZoneGroup",
        "executeRecordActivityTaskHeartbeat",
        "executeCreateCustomAvailabilityZone",
        "executeUpdateCloudFrontOriginAccessIdentity",
        "executeDisassociateWebsiteAuthorizationProvider",
        "executeDisassociateTransitGatewayMulticastDomain",
        "executeStartTopicsDetectionJob",
        "executeCopyDBSnapshot",
        "executeAllocateConnectionOnInterconnect",
        "executeRemoveRoleFromDBCluster",
        "executeEnableDomainTransferLock",
        "executeModifyDBSnapshot",
        "executeDeleteGlobalReplicationGroup",
        "executeRegisterOnPremisesInstance",
        "executeEnableDomainAutoRenew",
        "executeModifyDBSnapshotAttribute",
        "executeEnableInsightRules",
        "executeDeregisterOnPremisesInstance",
        "executeModifyClusterDbRevision",
        "executeAssociateContactWithAddressBook",
        "executeUpdateServicePrimaryTaskSet",
        "executeAuthorizeCacheSecurityGroupIngress",
        "executeModifyClusterIamRoles",
        "executeCreateDBParameterGroup",
        "executeCopyFpgaImage",
        "executeSendTemplatedEmail",
        "executePutAccountSuppressionAttributes",
        "executePurchaseReservedInstancesOffering",
        "executeDisassociateS3Resources",
        "executeDisassociateContactFromAddressBook",
        "executeAcceptVpcPeeringConnection",
        "executeGetRelationalDatabaseMasterUserPassword",
        "executeAddAttributesToFindings",
        "executeModifyOptionGroup",
        "executeAddRoleToDBCluster",
        "executeSetReceiptRulePosition",
        "executeSearchTransitGatewayMulticastGroups",
        "executePutManagedScalingPolicy",
        "executeDescribeOrderableDBInstanceOptions",
        "executeAssociateIamInstanceProfile",
        "executeCopyOptionGroup",
        "executeDescribeReservedCacheNodesOfferings",
        "executeDeleteCustomAvailabilityZone",
        "executeAdvertiseByoipCidr",
        "executeCancelReservedInstancesListing",
        "executeBatchGetDeploymentInstances",
        "executeAuthorizeClusterSecurityGroupIngress",
        "executeAddTagsToOnPremisesInstances",
        "executeModifyDBProxyTargetGroup",
        "executeDescribeFpgaImageAttribute",
        "executeAddSourceIdentifierToSubscription",
        "executePutVoiceConnectorTerminationCredentials",
        "executeGetOpenIdTokenForDeveloperIdentity",
        "executeProvisionByoipCidr",
        "executeRestoreTableFromClusterSnapshot",
        "executeAssociateSkillWithSkillGroup",
        "executeDisassociateQualificationFromWorker",
        "executePutConfigurationSetSendingOptions",
        "executeModifyDBParameterGroup",
        "executeAssociatePhoneNumbersWithVoiceConnector",
        "executeRevokeClientVpnIngress"
      ],
      "Syntactic Label": "Method Name",
      "Semantic Tags": [
        "AWS Service Operations",
        "Cloud Resource Management",
        "Asynchronous Operations",
        "Resource Provisioning",
        "API Calls"
      ],
      "Description": "These tokens represent method names in a C# AWS SDK client.  They execute various operations on different AWS services. The methods likely handle asynchronous operations and make API calls to manage cloud resources. The context shows a pattern of taking a request object, performing pre-execution actions, and then executing the core operation. This is common in SDKs for handling requests and responses."
    }
  },
  {
    "c203": {
      "Unique tokens": [
        "SpanQuery",
        "svm",
        "EscherSerializationListener",
        "nodes",
        "indexWriter",
        "squashedCommits",
        "BytesStartArray",
        "ATNState",
        "bounds",
        "row1",
        "SheetIdentifier",
        "qf",
        "b",
        "Rule",
        "StandardSyntaxParserTokenManager",
        "HSSFConditionalFormattingRule",
        "QueryParserTokenManager",
        "WorkbookRecordList",
        "analyzer",
        "CellRangeAddress",
        "RecognitionException",
        "Query",
        "createIfNotFound",
        "<",
        "fc",
        "fieldPhraseList",
        "ObjRecord",
        "object",
        "sheetName",
        "ft",
        "IOContext",
        "ScoreMode",
        "sfr",
        "expr1",
        "FreeRefFunction",
        "dst",
        "objRecord",
        ")",
        "expr2",
        "CellReference",
        "authority",
        "cell",
        "HSSFAnchor",
        "criteriaPredicate",
        "currentTokenVal",
        "fromQuery",
        "ctx",
        "ATNConfigSet",
        "toField",
        "x",
        "second",
        "postingsWriter",
        "content",
        "primary",
        "PostingsWriterBase",
        "fileName",
        "CellFormatType",
        "configs",
        "data",
        ",",
        "o1",
        "Ref",
        "reuseFields",
        "privateKeySecret",
        "s2",
        "newSheetIndex",
        "OperationEvaluationContext",
        "collectPredicates",
        "stream",
        "recordFactory",
        "fieldConfig",
        "workbook",
        "args",
        "existing",
        "uri",
        "CellValueRecordInterface",
        "[",
        "use1904windowing",
        "multipleValuesPerDocument",
        "policy",
        "accessKeySecret",
        "shouldProtectScenarios",
        "fs",
        "ShardRef",
        "items",
        "SnapshotDirectoryTaxonomyWriter",
        "CharStream",
        "RuleContext",
        "crB",
        "currentExternSheetIndex",
        "inc",
        "enabledChars",
        "Object",
        "AfterEffect",
        "firstCell",
        "rootIsWildcard",
        "name",
        "TokenStream",
        "ref",
        "getPublicAccessBlockRequest",
        "atnStartState",
        "s",
        "DFA",
        "InputStream",
        "allowEmpty",
        "target",
        "t",
        "FilenameFilter",
        "anchor",
        "fragCharSize",
        "InternalWorkbook",
        "stringsAreBlanks",
        "cfRules",
        "CredentialItem",
        "CharsRef",
        "SemanticContext",
        "afterEffect",
        "BoundSheetRecord",
        "listener",
        "output",
        "commit",
        "segmentSuffix",
        "firstSheetName",
        "transform",
        "boolean",
        "Dictionary",
        "SegmentWriteState",
        "PostingsReaderBase",
        "zeroFillBuffers",
        "ruleNames",
        "ident",
        "SegmentCommitInfo",
        "BytesRefBuilder",
        "SSTRecord",
        "ris",
        "normMap",
        "localctx",
        ".",
        "getChangeRequest",
        "exclude",
        "dir",
        "bytes",
        "source",
        "runData",
        "searcher",
        "IndexableFieldType",
        "t2",
        "isRelevant",
        "Rectangle",
        "PrecedencePredicateTransition",
        "escapeSpaces",
        "arr",
        "OpenMode",
        "FileChannel",
        "IndexTermSelector",
        "escapeSyntaxParser",
        "dictionary",
        "externs",
        "workbookRecordList",
        "o2",
        "TokenGroup",
        "regions",
        "ext",
        "minShingleSize",
        "deletePublicAccessBlockRequest",
        "array1",
        "synonyms",
        "queryAnalyzer",
        "noteMerger",
        "OutputStream",
        "SingletonPredictionContext",
        "reference",
        "IndexCommit",
        "scratch",
        "(",
        "lastSheetName",
        "o",
        "IndexSearcher",
        "spgrContainer",
        "state",
        "TermData",
        "workbookName",
        "BytesRefSorter",
        "in",
        "fromSearcher",
        "dfa",
        "os",
        "message",
        "ignoreCase",
        "currentExternSheetIx",
        "pEndDateVal",
        "mode",
        "type",
        "tokenGroup",
        "numberOfRichTextRuns",
        "Analyzer",
        "output1",
        "path",
        "Directory",
        "err",
        "postingsReader",
        "tokenSeparator",
        "output2",
        "tokenStream",
        "crA",
        "fontMetricsProps",
        "StringBuffer",
        "Reader",
        "input",
        "context",
        "scaleY",
        "BytesRef",
        "r",
        "deletePublicKeyRequest",
        "c",
        "List",
        "out",
        "tm",
        "shifter",
        "FieldType",
        "writeFreqs",
        "dflt",
        "termsIndexWriter",
        "indexIter",
        "array2",
        "filter",
        "postTag",
        "dy1",
        "comparisonOperator",
        "SharedValueManager",
        "ReaderSlice",
        "ParseTree",
        "SynonymMap",
        "parent",
        "e",
        "taxoWriter",
        "oldToken",
        "cachedStates",
        "pool",
        "I_MatchPredicate",
        "]",
        "Property",
        "SpatialContext",
        "bodyFt",
        "PhoneticEngine",
        "reuseFirst",
        "queryConfig",
        "replaceChar",
        "shouldProtectObjects",
        "PerfRunData",
        "remoteName",
        "MissingCellPolicy",
        "func",
        "ec",
        "replacement",
        "_parentctx",
        "value",
        "lastSheetIndex",
        "firstSheetIndex",
        "otherBuffer",
        "CharBuffer",
        "pt",
        "Transliterator",
        "minIn",
        "..",
        "sorter",
        "a",
        "areaEval",
        "rs",
        "String",
        "bigBlockSize",
        "other",
        "info",
        "predicate",
        "queryNode"
      ],
      "Syntactic Label": "Object, Class, Method, Variable, Dot Operator, Opening Parenthesis, Closing Parenthesis, Array, Less Than Operator",
      "Semantic Tags": [
        "Data Structures",
        "Text Processing",
        "File I/O",
        "Data Serialization",
        "Record Management"
      ],
      "Description": "The tokens represent various C# language constructs.  Objects like `CharsRef`, `FieldType`, `SemanticContext`, etc., are used to manage data. Methods like `subtract`, `or`, `toStringEscaped`, etc., perform operations on these objects. Variables store data and intermediate results. The dot operator is used for method calls and member access. Parentheses are used for method calls and control flow. Arrays are used to store collections of data. The less than operator is used for comparisons."
    }
  },
  {
    "c204": {
      "Unique tokens": [
        "Node",
        "stop",
        "nodes",
        "nBreaks",
        "position",
        "BitSet",
        "StringBuilder",
        "Collection",
        "b",
        "h",
        "idx",
        "LinkedHashMap",
        "?",
        "ByteBuffer",
        "elementsForKey",
        "ptr",
        "<",
        "dirSize",
        "long",
        "nFrames",
        "hash",
        "grow",
        "dic",
        "copy",
        "short",
        "reader",
        ")",
        "ord",
        "int",
        "currentLevel",
        "RowRecord",
        "set",
        "buf",
        "length",
        "RevFlag",
        "flag",
        "sign",
        "buffer",
        "result",
        "list",
        "-",
        "oldValue",
        "sz",
        "pos",
        "retVal",
        "if",
        "missingUnderBits",
        "null",
        "home",
        ",",
        "usedCells",
        "q",
        "Cell",
        "ch1",
        ">",
        "dataSize",
        "len",
        "uri",
        "Rect",
        "files",
        "[",
        "ListIterator",
        "bufferPos",
        "ArrayList",
        "padd",
        "er",
        "file",
        "cb",
        "false",
        "byte",
        "retval",
        "Object",
        "fieldNames",
        ">=",
        "float",
        "deflater",
        "nNames",
        "this",
        "le",
        "CopyOnWriteArrayList",
        "name",
        "l",
        "success",
        "snapshot",
        "s",
        "needle",
        "nRegions",
        "fixedTime",
        "t",
        "upto",
        "1",
        "size",
        "double",
        "Token",
        "Link",
        "Map",
        "p",
        "boolean",
        "so",
        "LittleEndian",
        "getPadding",
        "setState",
        "it",
        "rawData",
        ".",
        "return",
        "char",
        "biasedExp",
        "dir",
        "index",
        "k",
        "Comparator",
        "id",
        "nColumns",
        "Rectangle",
        "_key",
        "rules",
        "parts",
        "original",
        "valueLongBits",
        "bytesStart",
        "docID",
        "nextLF",
        "field",
        "originalLength",
        "time",
        "=",
        "final",
        "cr",
        "Entry",
        "encodeASCII",
        "rval",
        "isRemoved",
        "assert",
        "scratch",
        "lock",
        "(",
        "File",
        "d",
        "o",
        "prevLF",
        "raw",
        "LinkedList",
        "i",
        "checkRange",
        "n",
        "w",
        ";",
        "newPosition",
        "\"",
        "Iterator",
        "results",
        "switch",
        "lst",
        "field_1_string_length",
        "row",
        "Block",
        "res",
        "sizeInBytes",
        "max",
        "nItems",
        "termText",
        "indexOf",
        "bbox",
        "cmp",
        "FileMode",
        "remain",
        "BytesRef",
        "out",
        "r",
        "List",
        "c",
        "units",
        "ch",
        "c1",
        "ValueEval",
        "b1",
        "oldSize",
        "{",
        "text",
        "styleIndex",
        "wholePart",
        "fmt",
        "nChars",
        "parent",
        "]",
        ":",
        "URI",
        "fm",
        "cmds",
        "field_1_numcolors",
        "hasNext",
        "count",
        "T",
        "kRaw",
        "argv",
        "Double",
        "a",
        "block",
        "super",
        "fd",
        "String",
        "array",
        "minSize",
        "colon"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Input/Output",
        "Algorithm",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including data types (int, byte, short, long, float, double, boolean, char), data structures (List, ArrayList, LinkedList, Map, LinkedHashMap, BitSet, ByteBuffer), keywords (if, else, switch, return, new, for, while, assert), operators (+, -, =, ==, !=, <, >, <=, >=, ., ,), and identifiers (method names, variable names, class names).  These tokens are used to construct various functions that perform different tasks, such as string manipulation, file processing, data serialization, and algorithm implementation. The semantic tags reflect the diverse functionalities of the code snippets."
    }
  },
  {
    "c205": {
      "Unique tokens": [
        ".vs",
        "[/SHARED",
        "numcolors",
        "to",
        ".calcmode",
        "[CONTINUE",
        ".index",
        ".data",
        "vs",
        "Toffs",
        ".header",
        "Clipboard",
        "_flags",
        ".recalc",
        ".margin",
        "field_1_password",
        "Table",
        ".optionflags",
        "Configure",
        "<boolean",
        "_data",
        "TAGS]",
        "append",
        ")",
        "buffer",
        "Integer",
        "[/FUTURE",
        ".mode",
        "-",
        "rawData=",
        "null",
        "FacetLabel:",
        "USERSVIEWBEGIN",
        "[FtCf",
        "_codepage",
        "[OLD",
        "drawArc",
        "getIndex",
        "getFormatIndex",
        "SMART",
        "[UNITS]",
        "getChartGroupIndex",
        "drawRect",
        ".units",
        ".colwidth",
        "categories-",
        ".printheaders",
        "[SINDEX]",
        "size",
        ".chartGroupIndex",
        ".precision",
        "getUnits",
        "drawPolyline",
        ".is1904",
        "shortToHex",
        "temp",
        "[OBJ]",
        "_engineId",
        ".",
        "return",
        "Max",
        "_reserved:",
        ".count",
        ".password",
        "index",
        "sst",
        "+",
        ")~",
        "but",
        "grbitFrt",
        "[/",
        "[IFMT]",
        ".codepage",
        ".flags",
        "rptGroup",
        "_reserved0",
        "LL_Fallback",
        "[SHARED",
        "toString",
        ".options",
        "=",
        "(0x",
        "soft",
        "getRecordName",
        "[FtPioGrbit",
        ".printgridlines",
        "(",
        ".footer",
        "MergeSpec:",
        "i",
        "HEADER]",
        "errorCode",
        "shingle",
        ".defaultcountry",
        ";",
        "\"",
        ".vcenter",
        "Role",
        ".string",
        ".hideobj",
        "Format",
        ".hcenter",
        "_options",
        "external",
        "get",
        ".name",
        ".formatIndex",
        "}",
        "Thumbnail",
        "Escher",
        "extBook=",
        "HEADERFOOTER",
        ".gridset",
        "[MTP[",
        ":",
        "fillArc",
        ".maxchange",
        ".savelinkvalues",
        "\\n",
        "[Data",
        "createExtendedSST",
        ".reserved",
        "Records",
        "SUBRECORD:"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c206": {
      "Unique tokens": [
        "byte",
        "retval",
        "buffer",
        "r",
        "=",
        "final",
        "result",
        "nl",
        "ByteArrayOutputStream",
        "sb",
        "os",
        "StringBuilder",
        "buf",
        "String",
        "b",
        "s",
        "padd",
        "dsc"
      ],
      "Syntactic Label": "StringBuilder Objects and Variables",
      "Semantic Tags": [
        "String Manipulation",
        "Object Creation",
        "Data Representation",
        "Output Formatting",
        "String Concatenation"
      ],
      "Description": "The tokens represent C# objects and variables primarily used for string manipulation and formatting.  `StringBuilder` is frequently used to efficiently build strings through repeated appends, which is common in generating output or representing data structures as strings.  Other tokens like `byte`, `String`, and primitive types are used in conjunction with `StringBuilder` to create and modify strings."
    }
  },
  {
    "c207": {
      "Unique tokens": [
        "EMPTY_TABLE",
        "path",
        ".",
        "ArrayUtil",
        "blocksOffset",
        "--",
        "index",
        "6",
        "k",
        "OBJECT_ID_LENGTH",
        "nItems",
        "0",
        "+",
        "len",
        "2",
        "initialSize",
        "files",
        "[",
        "orows",
        "MAX_POINTS",
        "blockSize",
        "*",
        "text",
        "nTabs",
        "pathLen",
        "]",
        "oversize",
        "=",
        "nCRNs",
        "maxDoc",
        "numDecisions",
        "length",
        "freeBlocks",
        "s",
        "hashSize",
        "(",
        "newParents",
        "maxBufferedBlocks",
        "Constants",
        "upto",
        "1",
        "size",
        "count",
        "orig",
        "i",
        "fieldNumber",
        "bytesID",
        "infoRecs",
        "-",
        "n",
        "termID",
        ";"
      ],
      "Syntactic Label": "Variables, Array Access, Operators, Method Calls, Constants",
      "Semantic Tags": [
        "Data Structures",
        "Array Manipulation",
        "Data Processing",
        "Algorithm Implementation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a mix of variable declarations (e.g., blocksOffset, nItems, initialSize), array access (e.g., b[ptr], blocks[o]), arithmetic and bitwise operators (e.g., +, -, *, >>>, &), method calls (e.g., Arrays.sort, System.arraycopy, grow), and constants (e.g., EMPTY_TABLE, OBJECT_ID_LENGTH, MAX_POINTS).  These are fundamental elements in C# programming, commonly used in various algorithms and data processing tasks. The code snippets suggest operations on arrays, potentially involving data encoding/decoding, sorting, and memory management."
    }
  },
  {
    "c208": {
      "Unique tokens": [
        "InputMismatchException",
        "EscherSimpleProperty",
        "isPrecedenceDfa",
        "FuzzyQuery",
        "ByteBuffer",
        "CellRangeAddress",
        "DirectByteBuffer",
        "<",
        "long",
        "short",
        ")",
        "int",
        "MulBlankRecord",
        "RevFlag",
        "FormulaRecord",
        "buffer",
        "RecordAggregate",
        "EscherChildAnchorRecord",
        "AttributeSource",
        "IntBuffer",
        "ExtendedFormatRecord",
        "RuleNode",
        "FieldVals",
        "LexerIndexedCustomAction",
        "TwoDEval",
        "PropertySet",
        "MergeInfo",
        "BlockTermState",
        "URIish",
        "BoolEval",
        "BoolErrRecord",
        "RKRecord",
        "EscherClientAnchorRecord",
        "FailedPredicateException",
        "ParserRuleContext",
        ">",
        "EscherOptRecord",
        "MulRKRecord",
        "TerminalNode",
        "RefEval",
        "RuleContext",
        "LexerTypeAction",
        "byte",
        "DFAState",
        "float",
        "CompiledAutomaton",
        "SubtractEvalClass",
        "ErrorEval",
        "HeapByteBuffer",
        "LexerPushModeAction",
        "HSSFCell",
        "SnapshotDeletionPolicy",
        "IntervalSet",
        "Map",
        "RefSpec",
        "ReadWriteDirectByteBuffer",
        "Circle",
        "MergeCellsRecord",
        "ExpressionValueSource",
        "RecordBase",
        "isContainerRecord",
        ".",
        "BooleanQueryNode",
        "char",
        "CustomProperty",
        "DirectoryReader",
        "TernaryTreeNode",
        "Password",
        "Rectangle",
        "AbstractEscherHolderRecord",
        "LongBuffer",
        "StringEval",
        "ArrayPtg",
        "emptyComplexPart",
        "Comparable",
        "FloatBuffer",
        "EOFRecord",
        "ThreeDEval",
        "PrefixQuery",
        "FieldDoc",
        "Entry",
        "BlankEval",
        "(",
        "FunctionNameEval",
        "NumericValueEval",
        "in",
        "AreaEval",
        "DistanceSubQuery",
        "HSSFRow",
        "LexerActionExecutor",
        "FontRecord",
        "DrawingGroupRecord",
        "ShortBuffer",
        "LexerChannelAction",
        "List",
        "ContinueRecord",
        "mutex",
        "NumberRecord",
        "PostingsAndFreq",
        "ev",
        "BOFRecord",
        "ErrorNode",
        "ReadWriteHeapByteBuffer",
        "LexerModeAction",
        "HSSFClientAnchor",
        "NoViableAltException",
        "EscherRecordFactory",
        "TermRangeQuery",
        "T",
        "CharBuffer",
        "RunAutomaton",
        "EscherComplexProperty",
        "HyperlinkRecord",
        "LexerATNConfig",
        "String",
        "DoubleBuffer"
      ],
      "Syntactic Label": "C# identifiers, keywords, operators, and exceptions",
      "Semantic Tags": [
        "Exception Handling",
        "Data Structures",
        "Algorithm",
        "Input/Output",
        "Object-Oriented Programming"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Identifiers name classes, methods, variables, and other program elements. Keywords like 'public', 'final', 'void', 'int', 'if', 'else', 'for', 'while', 'try', 'catch', 'synchronized', etc., control program flow and define object properties. Operators such as '.', '==', '<', '>', '+=', etc., perform operations on data. Exceptions like 'InputMismatchException', 'FailedPredicateException', 'IllegalStateException', etc., handle runtime errors.  These elements are fundamental to C# programming, enabling the creation of structured, object-oriented, and robust applications."
    }
  },
  {
    "c209": {
      "Unique tokens": [
        "getEntryPathString",
        "ourCommitName",
        "=",
        "roleSessionName",
        "refreshDate",
        "(",
        "getQueryConfigHandler"
      ],
      "Syntactic Label": "Method names and variable names",
      "Semantic Tags": [
        "Request Handling",
        "Object Initialization",
        "Data Transfer",
        "Parameter Setting",
        "AWS SDK"
      ],
      "Description": "The tokens represent method names used to set parameters in various AWS SDK requests and variable names storing data.  The context shows numerous examples of creating requests for different AWS services by setting attributes via methods.  The '=' operator is used for assignment.  The '(' and ')' are used for method calls and object initialization. The overall code snippet is related to the AWS SDK for .NET, handling various requests for different AWS services."
    }
  },
  {
    "c210": {
      "Unique tokens": [
        "Action",
        "to",
        "GetPolicyRequest",
        "HttpRequest",
        "ECS_METADAT_FETCH_ERROR_MSG",
        "<",
        "getIfMatch",
        "AmazonRoute53",
        "addParameter",
        "getHttpContent",
        ")",
        "HttpURLConnection",
        "/v20180820/configuration/publicAccessBlock",
        "getId",
        "DeletePublicAccessBlockRequest",
        "Request",
        "if",
        "null",
        ",",
        "HttpResponse",
        ">",
        "NON_GREEDY",
        "DeletePublicKeyRequest",
        "==",
        "Failed",
        "setHttpMethod",
        "getPolicyArn",
        "PolicyArn",
        "getPublicAccessBlockRequest",
        "/2019-03-26/public-key/{Id}",
        "request",
        "DELETE",
        "Version",
        "setSysMethod",
        "transform",
        "getChangeRequest",
        ".",
        "return",
        "ClientException",
        "throw",
        "GetPolicy",
        "setResourcePath",
        "new",
        "+",
        "GET",
        "com",
        "resourceGroupName",
        "marshall(...)",
        "GetPublicAccessBlockRequest",
        "response",
        "toString",
        "deletePublicAccessBlockRequest",
        "PathMarshallers",
        "fromString",
        "=",
        "cr",
        "AWSS3Control",
        "setUriPattern",
        "(",
        "uriResourcePath",
        "HTTP_OK",
        "setMethod",
        "HttpMethodName",
        "StringUtils",
        "getAccountId",
        "!=",
        ";",
        "\"",
        "MethodType",
        "Id",
        "deletePublicKeyRequest",
        "AmazonIdentityManagement",
        "}",
        "DefaultRequest",
        "POST",
        "{",
        "HasInner",
        "readTaskClass",
        "e",
        "HttpCode=",
        "marshall",
        "AmazonCloudFront",
        "Service:",
        "addHeader",
        "amazonaws",
        "getStatus",
        "Invalid",
        "If-Match",
        "x-amz-account-id",
        "getPolicyRequest",
        "String"
      ],
      "Syntactic Label": "C# methods, objects, parameters, variables, operators, and keywords",
      "Semantic Tags": [
        "HTTP Request Handling",
        "AWS SDK Integration",
        "Exception Handling",
        "Resource Management",
        "Data Marshalling"
      ],
      "Description": "The code snippets demonstrate various C# methods and their interactions.  They showcase the use of AWS SDK classes (e.g., DefaultRequest, HttpMethodName) for making HTTP requests to AWS services.  Error handling is implemented using exceptions (e.g., SdkClientException).  The code manages resources like HTTP connections and handles parameters for AWS requests.  Data marshalling is evident in the use of methods like marshall(...) to prepare requests for AWS services."
    }
  },
  {
    "c211": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Function Definition",
        "API Gateway",
        "AWS SDK"
      ],
      "Description": "The closing parenthesis ')' in C# signifies the end of a parameter list in method declarations.  In the context provided, it's crucial for defining the input parameters of numerous AWS SDK methods, each designed to interact with a specific AWS service (e.g., API Gateway, EC2, S3). The methods appear to be client-side operations for creating, retrieving, updating, or deleting resources within those AWS services."
    }
  },
  {
    "c212": {
      "Unique tokens": [
        "idealIntArraySize",
        "trimToSize",
        "getBoundSheetRecords",
        "getCommitNames",
        "getRemoteUpdates",
        "copyOf",
        "getEntryPathBuffer",
        "byteToHex",
        "getChanged",
        "put",
        "getRuleInvocationStack",
        "toArray",
        "getRefs",
        "?",
        "getByteBlock",
        "getAdvertisedRef",
        "TokenizerFactory",
        "createForCountingOnly",
        "isFirstCell",
        "longToHex",
        "allSubsetsConflict",
        "<",
        "getRules",
        "getValue",
        "toByteArray",
        "hasAny",
        "writeFloat",
        "grow",
        "getIntervals",
        "updateTop",
        "nextKey",
        "getSmileyResource",
        "WeightedTerm",
        "toText",
        "idealLongArraySize",
        "createVector",
        "getWordInstance",
        "listRoots",
        "getFormattingRanges",
        "pmt",
        "listServices",
        "getStopWords",
        "getParsedExpression",
        "getDefaultStopTags",
        "asDoubleBuffer",
        "getNames",
        "toCharArray",
        "MergeStrategy",
        "getExternSheetRecords",
        "getCommands",
        "getCharacterInstance",
        "defaultCharset",
        "strlen",
        "merge",
        "containsRow",
        "serialize",
        "getUntracked",
        "list",
        "getFD",
        "getTokens",
        "createExplicitListConstraint",
        "idealBooleanArraySize",
        "isRegistered",
        "defaultTaxonomyWriterCache",
        "getEncodedSize",
        "K",
        "between",
        "createRow",
        "matchPrefix",
        "getBreak",
        "GetSuffix",
        "yycharat",
        "pathToString",
        "getRevertedRefs",
        "TokenFilterFactory",
        "toFormulaString",
        "asFloatBuffer",
        ">",
        "decode",
        "keys",
        "makeLuceneQueryFieldNoBoost",
        "newToken",
        "megabytes",
        "[",
        "createStubWorkbook",
        "asLongBuffer",
        "newCounter",
        "toPoints",
        "getConsole",
        "idealFloatArraySize",
        "createRowVector",
        "after",
        "idealCharArraySize",
        "exact",
        "extends",
        "matchAlmost",
        "createFormulaListConstraint",
        "getClauses",
        "idSet",
        "revisionVersion",
        "getFunctionByIndex",
        "getDetails",
        "parsePersonIdent",
        "idealShortArraySize",
        "getMap",
        "buildFractionMaxDenominator",
        "array",
        "getNewRoleSessionName",
        "Result",
        "deepCopyOf",
        "headerLength",
        "getTerms",
        "refLockFor",
        "getErrors",
        "getCandidates",
        "containsColumn",
        "shortToHex",
        "createSafeSheetName",
        "computeNorm",
        "readFloat",
        "writeChar",
        "hash32",
        "getConflictList",
        "getSubsections",
        "isInRange",
        "createSheet",
        "getLineInstance",
        "getRequiredFields",
        "encodeBytes",
        ".",
        "dateToString",
        "getSections",
        "getCapabilities",
        "calculateMaximumSize",
        "getDecisionInfo",
        "isWritten",
        "split",
        "getSentenceInstance",
        "createAddInFunctions",
        "wrap",
        "isBinary",
        "asIntBuffer",
        "readUnsignedShort",
        "fromRawBitsAndExponent",
        "toString",
        "nextLF",
        "allActiveThreadStates",
        "getBiasedExponent",
        "fromString",
        "stem",
        "evaluate",
        "getModifiedList",
        "Entry",
        "tailSet",
        "getAll",
        "getSort",
        "getResult",
        "encodeASCII",
        "getJavaCalendar",
        "has",
        "numberError",
        "init",
        "apply",
        "(",
        "isAccept",
        "forName",
        "prevLF",
        "getEntries",
        "fromDouble",
        "isEmptyOrNull",
        "asShortBuffer",
        "getMissing",
        "valueOf",
        "clear",
        "getBuffer",
        "getRecallPoints",
        "getConflicting",
        "deleteCharAt",
        "getBuiltinFormat",
        "getReporter",
        "getBuiltinFormats",
        "isBeginRecord",
        "readDouble",
        "createIndexableFields",
        "invalidValue",
        "getProfile",
        "E",
        "getConflictingPaths",
        "asCharBuffer",
        "getMultiFields",
        "getNextHeads",
        "registerFunction",
        "idealObjectArraySize",
        "get",
        "getIndexCommit",
        "toHex",
        "setPerfObject",
        "RevFilter",
        "UTF8toUTF16",
        "getRecordSizeForBlockCount",
        "invalidRef",
        "getArgumentClass",
        "GetImage",
        "writeDouble",
        "readChar",
        "getInflectionTypeTranslation",
        "estimateIndexSize",
        "getRawRecord",
        "before",
        "getInflectedFormTranslation",
        "intToHex",
        "]",
        "getExcelDate",
        "getEncoder",
        "fromLong",
        "getRefSpecs",
        "getRemovedList",
        "getHunks",
        "getCachedBytes",
        "createExternalReferences",
        "getDecoder",
        "getModifiedFiles",
        "readUTF",
        "listFiles",
        "getJavaDate",
        "create",
        "getPOSTags",
        "createCell",
        "createInternalReferences",
        "createSheetBOF",
        "createColumnVector",
        "toEMU",
        "getPath",
        "createForSheetShift",
        "fromRaw"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "Data Processing",
        "Data Retrieval",
        "Data Transformation",
        "Utility Functions",
        "Data Structures"
      ],
      "Description": "These tokens represent names of methods in C# code.  They perform various operations, including data retrieval (e.g., getBoundSheetRecords, getCommitNames), data transformation (e.g., byteToHex, longToHex, toByteArray), and utility functions (e.g., trimToSize, grow, copyOf). The methods often interact with arrays and other data structures, suggesting data processing tasks."
    }
  },
  {
    "c213": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Client-Server Interaction",
        "Cloud Services"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK or similar client library interacting with a cloud service API (likely AWS). Each method handles a specific request type related to managing cloud resources. The 'request' object encapsulates the necessary data for each API call. The consistent pattern of `request = beforeClientExecution(request);` suggests pre-processing of the request before execution."
    }
  },
  {
    "c214": {
      "Unique tokens": [
        "getSingleValue",
        "ds",
        "singleOperandEvaluate",
        "getErrorEval",
        "vedenominator",
        "LazyRefEval",
        "EvaluationException",
        "MAX_VALUE",
        "VALUE_INVALID",
        "placesStr",
        "Math",
        "getYear",
        "chooseSingleElementFromRef",
        "val",
        "multiplyByPowerOfTen",
        "formula1",
        "tableArray",
        "StringType",
        "ve",
        "MissingArgEval",
        "checkValue",
        "N",
        "be",
        "expr1",
        "exp",
        "NumericFunction",
        "MIN_VALUE",
        "longValue",
        "strText1",
        "realSign",
        "binary",
        "returnType",
        "aeRange",
        "npv",
        ")",
        "countMatchingCellsInArea",
        "length",
        "isRangeLookup",
        "cell",
        "sign",
        "isNaN",
        "unsigned",
        "Integer",
        "result",
        "convertToDecimal",
        "lookupIndexOfValue",
        "isPositive",
        "Function",
        "toggleBits",
        "group",
        "realGroup",
        "Bad",
        "TwoDEval",
        "try",
        "createResultColumnVector",
        "BoolEval",
        "col_index",
        "args",
        "groupRealNumber",
        "lookupValue",
        "colIndex",
        "order",
        "TIME",
        "substring",
        "kthLargest",
        "getFormulaFromTextExpression",
        "getName",
        "coerceValueToBoolean",
        "arg3",
        "hex",
        "ONE",
        "values",
        "getDecimalValue",
        "aeSum",
        "validationType",
        "Imaginary",
        "getRelativeValue",
        "ValueVector",
        "parseDouble",
        "eval",
        "Validation",
        "LookupUtils",
        "convertDate",
        "number",
        "NumberEval",
        "code",
        "ErrorEval",
        "GROUP2_IMAGINARY_INTEGER_OR_DOUBLE",
        "s1",
        "number1",
        "ve1",
        "startDate",
        "weight",
        "NUM_ERROR",
        "evaluateAreaSumProduct",
        "Date",
        "arg",
        "ValueCollector",
        "double",
        "getClass",
        "8191",
        "compare",
        "convertTime",
        "ae",
        "parseFloat",
        "convertFirstArg",
        "srcRowIndex",
        "formula2",
        "evaluateValue",
        "collectValues",
        "DVConstraint",
        "basis1",
        "resolveRowOrColIndexArg",
        "formVE",
        "columnIx",
        "integerToRoman",
        "EQ",
        ".",
        "getCode",
        "NumberFormatException",
        "it",
        "serialNum",
        "ceil",
        "StatsLib",
        "index",
        "DEFAULT_PLACES_VALUE",
        "k",
        "value1",
        "intValue",
        "form",
        "lazyRefEval",
        "+",
        "doubleValue",
        "ve0",
        "dn",
        "convertRangeArg",
        "equals",
        "getValueFromArea",
        "ne",
        "get64BitNormalisedExponent",
        "StringEval",
        "matches",
        "isInfinite",
        "coerceValueToDouble",
        "sval",
        "_value",
        "startsWith",
        "=",
        "placesVE",
        "value2",
        "height",
        "evaluate",
        "rowIx",
        "resultCol",
        "OperandResolver",
        "BlankEval",
        "placesNumber",
        "getBooleanCellValue",
        "inverted",
        "getNumberValue",
        "convertNumber",
        "Boolean",
        "rate",
        "arg0",
        "_pattern",
        "(",
        "evaluateInternal",
        "d",
        "NumericValueEval",
        "makeConcise",
        "getItem",
        "valueOf",
        "evaluateSingleProduct",
        "catch",
        "functionCode",
        "n",
        "Long",
        "isSubTotal",
        "getText",
        "evaluateIntArg",
        "countMatchingCellsInRef",
        "\"",
        "arg1",
        "tieBreakLessThan",
        "placesValueEval",
        "fixed",
        "placesNumberDouble",
        "max",
        "evaluateStringArg",
        "SeekStatus",
        "startDateAsNumber",
        "CmpOp",
        "0",
        "cc",
        "rowIndex",
        "veText1",
        "makeWithin",
        "_isLarge",
        "innerFunc",
        "sum",
        "real",
        "parseLong",
        "ZERO",
        "ValueEval",
        "validateSecondArg",
        "}",
        "text",
        "vvX",
        "comparisonOperator",
        "srcColumnIndex",
        "order_value",
        "e",
        "denominator",
        "targetFunc",
        "testValue",
        "firstArg",
        "coerceValueToString",
        "RefListEval",
        "resolveIndexArg",
        "FinanceLib",
        "logE",
        "coerceValueToInt",
        "getJavaDate",
        "value",
        "resolveTableArrayArg",
        "createColumnVector",
        "Double",
        "s0",
        "String",
        "compareTo",
        "toBinaryString",
        "kthSmallest",
        "hasRealPart"
      ],
      "Syntactic Label": "Method calls, variables, and operators",
      "Semantic Tags": [
        "Spreadsheet Formula Evaluation",
        "Error Handling",
        "Data Type Conversion",
        "Operand Resolution",
        "Function Evaluation"
      ],
      "Description": "The tokens represent a collection of methods, variables, and operators used in evaluating spreadsheet formulas.  The code handles various data types (String, Number, Boolean), resolves operands, and manages potential errors during evaluation.  The semantic tags highlight the core functionalities of the code, which is centered around evaluating spreadsheet formulas and handling potential errors during the process."
    }
  },
  {
    "c215": {
      "Unique tokens": [
        "",
        "bounds",
        "grams",
        "rec",
        "b",
        "variant",
        "idx",
        "++",
        "indexCommitGen",
        "eat",
        "jj_2_1",
        "gt",
        "minTargetSize",
        "<",
        "createIfNotFound",
        "recLen",
        "sheetName",
        "minInclusive",
        "field_1_zero",
        "isBiff2",
        ")",
        "length",
        "str",
        "flag",
        "result",
        "DocMaker",
        "-",
        "sz",
        "pos",
        "if",
        "config",
        "offset",
        "null",
        "BIT_LAST_ARC",
        "tokenIndex",
        "args",
        ">",
        "spacePos",
        "precedencePredicates",
        "cchName",
        "serializerClasses",
        "[",
        "<=",
        "specialCachedValue",
        "parents",
        "==",
        "fieldNames",
        ">=",
        "seenOne",
        "atnStartState",
        "is16bit",
        "rulefilesArg",
        "t",
        "upto",
        "size",
        "maxShingleSize",
        "that",
        "prefixLength",
        "functionImpls",
        "thrown",
        "suffixes",
        "!",
        "LittleEndian",
        "writeProx",
        "nameLen",
        "proto",
        "dictionaryResource",
        "prevOnChannel",
        "currentBlock",
        "getBoolean",
        "ris",
        ".",
        "bytes",
        "returnStates",
        "analyzerName",
        "k",
        "trans",
        "getLowFreqMinimumNumberShouldMatch",
        "accept",
        "isExternalReferences",
        "numGoodPoints",
        "externalWorkbookNumber",
        "equals",
        "parser",
        "writeOffsets",
        "v",
        "sval",
        "cells",
        "commitOnBuild",
        "isEmpty",
        "isOLELink",
        "toSync",
        "(",
        "isSemiVolatile",
        "o",
        "queue",
        "hdr",
        "stage",
        "dumpArray",
        "isUnCompressedUnicode",
        "i",
        "in",
        "vals",
        "dfa",
        "highlightForeground",
        "oldRevision",
        "!=",
        "type",
        "\"",
        "path",
        "shared",
        "writer",
        "tokenStream",
        "min",
        "separator",
        "isClosed",
        "getParent",
        "0",
        "isStdDocumentNameIdentifier",
        "field_5_hasMultibyte",
        "dictionaryFile",
        "r",
        "_endIndex",
        "out",
        "c",
        "ch",
        "inquote",
        "writeFreqs",
        "{",
        "field_4_string_len",
        "field_3_hasMultibyte",
        "autoFlush",
        "nChars",
        "oldToken",
        "canHandle",
        "fst",
        "cbuf",
        "&&",
        "searcherMgr",
        "count",
        "maxInclusive",
        "nn",
        "exceptions",
        "minimumLength",
        "Double",
        "wantWrite",
        "a",
        "object",
        "maxEdits",
        "isOptimizedChoose"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Operators",
        "Object Manipulation",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Keywords like \"if\", \"for\", \"while\", and operators such as \"+\", \"-\", \"*\", \">\", \"<\", \"==\", \"!=\", and \".\" control program flow and perform operations.  Identifiers like \"bounds\", \"grams\", \"rec\", etc., represent variables and objects.  Parentheses, brackets, and braces define code blocks and scope.  The presence of \"throw\" and \"catch\" suggests exception handling mechanisms.  The overall code snippets appear to involve data structure manipulation, algorithm implementation, and potentially file I/O operations."
    }
  },
  {
    "c216": {
      "Unique tokens": [
        "getFontIndex",
        "getType",
        "setCellErrorValue",
        "DummyQueryNodeBuilder",
        "getState",
        "setRef",
        "setTerm",
        "getPropertyNumber",
        "CLASS_VALUE",
        "getStringCellValue",
        "getCreationHelper",
        "getWidth",
        "peekNextClass",
        "getConstructor",
        "encodedTypeString",
        "getNextSid",
        "getDataSize",
        "getErrorValue",
        "getChecksum",
        "getRowNumber",
        "getRecords",
        "getRuleIndex",
        "getInfo",
        "getUserData",
        "getValue",
        "putShort",
        "getRuleNames",
        "getActiveCellRef",
        "sfr",
        "getFormatString",
        "getCharacterPos",
        "buildFontCharactersProperty",
        "setAnchor",
        "getLastColumn",
        "getCellTypeEnum",
        "append",
        ")",
        "getColumn",
        "setFlags",
        "findFirstRecordBySid",
        "getNumberOfTransitions",
        "getCellType",
        "maxCharsPerByte",
        "getDateCellValue",
        "getRecordId",
        "getExternalWorkbookIndex",
        "getClipboardFormatTag",
        "getLastRow",
        "getTimeZoneOffset",
        "hasAttributes",
        "getObjectType",
        "getFunctionName",
        "getChildCount",
        "toPrivateString",
        "getEntryFileMode",
        "getSid",
        "fieldName",
        "getId",
        "toBlockIndex",
        "setPropertyValue",
        "isSet",
        "round",
        "getRowIndex",
        "getCellRanges",
        "offset",
        "setValue",
        "getCurrentState",
        "getUnderline",
        "getSheetNumber",
        "null",
        "getBigBlockSize",
        "getFirstVisibleTab",
        "getPropertiesSize",
        "getHeight",
        "getDataFormatString",
        "getOptions",
        "getKey",
        "setCellValue",
        "getFamily",
        "getDbcellAt",
        "getInnerValueEval",
        "getSheetName",
        "getName",
        "pathParameters",
        "getFirstCol",
        "getDx2",
        "segmentFileName",
        "checkPosition",
        "getScheme",
        "getBeginIndex",
        "getSuperSubScript",
        "getOptimize",
        "getSheetNameRange",
        "getRuleContext",
        "getProperty",
        "getField",
        "name",
        "isFinal",
        "getVersion",
        "getPosition",
        "getColumnIndex",
        "getBoldWeight",
        "CLASS_ARRAY",
        "getBuild",
        "getCharset",
        "t",
        "getShape",
        "getWeight",
        "getPort",
        "parseInt",
        "1",
        "getClass",
        "getLastSheetIndex",
        "getRef",
        "setPassword",
        "getErrorCellValue",
        "getPeeledObjectId",
        "isComplex",
        "getAttributes",
        "segmentSuffix",
        "isRow",
        "getPayload",
        "getStringWidth",
        "getChild",
        "getGeneration",
        "hasContexts",
        "getSheetNames",
        ".",
        "getCode",
        "setAnchorType",
        "setPictureIndex",
        "setBlank",
        "getVerticalHold",
        "getCharacterClass",
        "getPass",
        "sid",
        "getAnalyzer",
        "Password",
        "getPtgClass",
        "resolvedValue",
        "setTimeZone",
        "getPositionIncrement",
        "getConfig",
        "getLastOnPath",
        "peekNextSid",
        "getDelGen",
        "getNameText",
        "getSize",
        "getHost",
        "=",
        "height",
        "isf_sharedFeatureType",
        "getRow1",
        "getCCE",
        "getPromptText",
        "getCol",
        "getBooleanCellValue",
        "getRecordName",
        "getTopRow",
        "getStreamId",
        "getWriteIndex",
        "getNumSelectedTabs",
        "(",
        "getAnchor",
        "getAttribute",
        "forName",
        "getColorPaletteIndex",
        "getTotalScore",
        "getRecordSize",
        "getUser",
        "isColumn",
        "getNodeText",
        "i",
        "getOptionFlags",
        "getFirstColumn",
        "pathParamKey",
        "getRefName",
        "upstreamCommitName",
        "getColor",
        "getText",
        "getOffset",
        "getFlags",
        ";",
        "at",
        "\"",
        "type",
        "getBSERecord",
        "getTabWidthRatio",
        "getStringValue",
        "getChars",
        "containsCell",
        "getFontHeight",
        "setParent",
        "convertNumToColString",
        "getUserTimeZone",
        "getSymbol",
        "getGrammarFileName",
        "getAction",
        "getActiveSheetIndex",
        "getRow",
        "getCenter",
        "getObjectId",
        "getCmd",
        "includeLower",
        "getIndexDeletionPolicy",
        "alphabetSize",
        "{",
        "getVocabulary",
        "changeType",
        "getLastCol",
        "getCol1",
        "setColumn",
        "getPositionOfBof",
        "getNumNames",
        "getFontAtIndex",
        "getChildById",
        "isFileMode",
        "getIndexOfName",
        "seek",
        "getStyle",
        "getBooleanValue",
        "getNumericCellValue",
        "getNormalZoom",
        "decodeWeight",
        "defaultFieldType",
        "revision",
        "getByteOrder",
        "iterator",
        "getSheetIndex",
        "getAltNumber",
        "getFirstRow",
        "\\n",
        "getWorkbook",
        "getPropertyValue",
        "getParentFile",
        "getSheet",
        "getUsername",
        "buildFontWidthsProperty",
        "getEncodedTokenSize",
        "getTextLength",
        "setRow",
        "getCell",
        "getXFIndex",
        "setColorAtIndex",
        "getPath",
        "setFontStyleModified",
        "getNumStates",
        "getReadOnly"
      ],
      "Syntactic Label": "Methods and Objects",
      "Semantic Tags": [
        "Data Access",
        "Object Manipulation",
        "Record Management",
        "Spreadsheet Manipulation",
        "Data Serialization"
      ],
      "Description": "The tokens represent a collection of methods (getters and setters) that interact with various objects and data structures, primarily focused on spreadsheet data manipulation, record management, and data serialization.  The methods access and modify properties of objects, retrieve data, and handle data structures like records and streams.  The presence of `null` suggests potential null checks or handling of missing data. The context shows usage in a spreadsheet-like environment, where data is read, written, and manipulated.  The semantic tags reflect the core functionality of managing and processing data within this context."
    }
  },
  {
    "c217": {
      "Unique tokens": [
        "",
        ",",
        "singleOperandEvaluate",
        "getErrorEval",
        ".",
        "return",
        "EvaluationException",
        "E",
        "vvY",
        "evalArg",
        "new",
        "Math",
        "log",
        "val",
        "d1",
        "}",
        "ValueEval",
        "<",
        "{",
        "isInfinite",
        "multi",
        "*",
        "coerceValueToDouble",
        "ve",
        "==",
        "false",
        "e",
        "=",
        "10d",
        "evaluate",
        "ValueVector",
        ")",
        "Boolean",
        "int",
        "arg0",
        "floor",
        "NumberEval",
        "logE",
        "number1",
        "(",
        "&&",
        "d",
        "d0",
        "isNaN",
        "1",
        "size",
        "double",
        "result",
        "booleanValue",
        "catch",
        "instanceof",
        "method",
        "Double",
        "-",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Operators, Data Types, and Function Calls",
      "Semantic Tags": [
        "Spreadsheet Calculation",
        "Error Handling",
        "Data Type Conversion",
        "Function Evaluation",
        "Numerical Operations"
      ],
      "Description": "The tokens represent a wide array of C# language features used in implementing spreadsheet-like calculations.  The code extensively uses operators (+, -, *, /, ==, !=, <, &&, instanceof), data types (double, int, Boolean, ValueEval, NumberEval, StringEval, ErrorEval), and function calls (e.g., singleOperandEvaluate, coerceValueToDouble, evaluate, Math.log, Math.floor, Math.pow, etc.).  The try-catch blocks are crucial for error handling, particularly EvaluationException, which is caught and handled to return appropriate error values. The semantic tags reflect the core functionality of evaluating numerical expressions, handling various data types, and managing potential errors during calculation."
    }
  },
  {
    "c218": {
      "Unique tokens": [
        "",
        "allocateMore",
        "to",
        "b",
        "~",
        "Math",
        "128",
        "++",
        "?",
        "2",
        "ptr",
        "chars",
        "<",
        "long",
        "UNI_SUR_LOW_END",
        "else",
        "updateTop",
        "rPtr",
        ")",
        "int",
        "newBlock",
        "length",
        "buf",
        "str",
        "available",
        "0xff",
        "result",
        "-",
        "from",
        "pos",
        "nextDoc",
        "if",
        "offset",
        "limit",
        "null",
        ",",
        "lastChar",
        "OBJECT_ID_LENGTH",
        ">",
        "backType",
        "[",
        "filterForChannel",
        "*",
        "end",
        "==",
        "false",
        "inc",
        ">=",
        "this",
        "s",
        "true",
        "CoderResult",
        "upto",
        "1",
        "eThat",
        "output",
        "!",
        "0x80",
        "currentBlock",
        "arraycopy",
        ".",
        "return",
        "char",
        "throw",
        "--",
        "bytes",
        "new",
        "+",
        "NO_MORE_DOCS",
        "delta",
        "arr",
        "wrap",
        "v",
        "-=",
        "=",
        "final",
        "nextIndex",
        "key",
        "assert",
        "(",
        "raw",
        "write",
        "i",
        "n",
        ">>",
        "/",
        "!=",
        ";",
        "\"",
        "channel",
        "min",
        "Reader",
        "doc",
        "0",
        "r",
        "_endIndex",
        "Lexer",
        "out",
        "System",
        "}",
        "<<",
        "'",
        "{",
        "RADIX",
        "%",
        "]",
        "+=",
        ":",
        "PagedBytes",
        "remoteName",
        "&",
        "cbuf",
        "&&",
        "value",
        "count",
        "rc",
        "flip",
        "..",
        "lock",
        "newData",
        "array",
        "md"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "Data Structures",
        "Input/Output Operations",
        "Exception Handling",
        "Memory Management"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords (if, else, return, throw, assert), operators (+, -, *, /, %, <<, >>, &, |, ^, ~, !, ==, !=, <, >, <=, >=, +=, -=, *=, /=, %=, <<=, >>=, &=, |=, ^=), identifiers (e.g., output, inc, length, chars, buffer, etc.), and special characters (e.g., parentheses, brackets, braces). The code snippets demonstrate various operations such as string manipulation, array manipulation, file I/O, exception handling, and memory management. The semantic tags reflect the common operations performed in the code examples."
    }
  },
  {
    "c219": {
      "Unique tokens": [
        "JGitText",
        "\"",
        ",",
        "ConnectException",
        ".",
        "query",
        "invalidTimeout",
        "ce",
        "new",
        "POILogger",
        "bogus",
        "atLeastOnePathIsRequired",
        "+",
        "getMessage",
        "CodingErrorAction",
        "format",
        "get",
        "NODE_ACTION_NOT_SUPPORTED",
        "upstream",
        "fileModeNotSetForPath",
        "illegalCombinationOfArguments",
        "MessageFormat",
        "getAbsolutePath",
        "cannotRead",
        "mkDirsFailed",
        "ex",
        "cannotMatchOnEmptyString",
        "e",
        "this",
        "Entry",
        ")",
        "ref",
        "INVALID_SYNTAX",
        "name",
        "requiredHashFunctionNotAvailable",
        "(",
        "WARN",
        "INVALID_LEXICAL_STATE",
        "d",
        "invalidId",
        "URINotSupported",
        "initialise",
        "Integer",
        "defaultField",
        "MessageImpl",
        "QueryParserMessages",
        "String",
        ";",
        "LfsText"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "Input Validation",
        "Resource Management",
        "Logging",
        "String Manipulation"
      ],
      "Description": "The tokens represent a mix of C# keywords, identifiers, and operators.  They are primarily used in exception handling (e.g., throwing IllegalArgumentException, catching IOException), input validation (checking for null or empty strings, validating input lengths), resource management (closing streams, releasing resources), logging (using POILogger), and string manipulation (using MessageFormat, StringBuilder).  The context shows these tokens are integral parts of methods that perform various operations, often involving error handling and input validation before proceeding with core logic.  The significance in a C# context is that these tokens and their usage demonstrate robust error handling, input validation, and resource management practices, which are crucial for building reliable and secure applications."
    }
  },
  {
    "c220": {
      "Unique tokens": [
        "parseByte",
        ".",
        "ArrayUtil",
        "nextAfter",
        "DistanceUtils",
        "max",
        "min",
        "pow",
        "MAX_VALUE",
        "of",
        "cos",
        "args",
        "id",
        "Math",
        "getNumStrings",
        "log",
        "toIntExact",
        "asList",
        "abs",
        "checkOffsetAndCount",
        "parseLong",
        "parts",
        "<",
        "initialize",
        "nextUp",
        "SizeOf",
        "getWSBool1",
        "ONE",
        "grow",
        "float",
        "NaN",
        "oversize",
        "unsignedInt",
        "append",
        ")",
        "Byte",
        "floor",
        "(",
        "fill",
        "getFirstRow",
        "toHexString",
        "parseInt",
        "size",
        "dx1",
        "Integer",
        "double",
        "valueOf",
        "class",
        "R",
        "Double",
        "-",
        "Long",
        "post",
        "Float",
        "isNaN",
        "BYTES",
        "round",
        "getLeftRowGutter"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Mathematical Operations",
        "Data Conversion",
        "String Manipulation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a diverse set of C# language elements, including methods for mathematical calculations (Math.cos, Math.pow, Math.abs, etc.), array manipulation (ArrayUtil.grow, ArrayUtil.oversize, System.arraycopy), data type conversion (parseInt, toIntExact, toHexString, etc.), string manipulation (append, substring), and other utility functions.  These tokens are significant in C# programming because they provide fundamental building blocks for various operations, from basic arithmetic to complex data processing and string handling."
    }
  },
  {
    "c221": {
      "Unique tokens": [
        "getErrorEval",
        "CommonRoaRequest",
        "CharsRefBuilder",
        "EvaluationException",
        "getSequentialSubReaders",
        "getBiffName",
        "Collection",
        "getCurrentToken",
        "HSSFPicture",
        "put",
        "CommonTokenStream",
        "termsWithScoreCollector",
        "getNonBlankTextOrFail",
        "CanonicalTreeParser",
        "BooleanQuery",
        "IdentityHashMap",
        "DisjQuery",
        "PhraseQuery",
        "mvFunction",
        "matcher",
        "createShape",
        "MessageImpl",
        "createInterpreterRuleContext",
        "putValueForNullKey",
        "getFooterLines",
        "newDecoder",
        "DaciukMihovAutomatonBuilder",
        "createRecord",
        "FieldsQueryList",
        "MultiTerms",
        "SrndQuery",
        "RevTag",
        "[",
        "setResult",
        "indexExists",
        "getObjectDatabase",
        "RevWalk",
        "open",
        "SimpleFieldFragList",
        "objectId",
        "JaspellTernarySearchTrie",
        "IntervalSet",
        "getRichStringCellValue",
        "getPeeledObjectId",
        "IllegalArgumentException",
        "PrimaryQuery",
        "onUnmappableCharacter",
        "compatibleGetResponse",
        "SearcherTracker",
        "ArrayPredictionContext",
        "BytesRefBuilder",
        "getNextUnreadRecord",
        "doClose",
        "TernaryTreeNode",
        "getInterpreter",
        "numGoodPoints",
        "toRefName",
        "getAttributeWithInheritanceOrFail",
        "readFully",
        "distanceSubQueryNotAllowed",
        "HSSFSimpleShape",
        "HPSFException",
        "parseAny",
        "getPatriarch",
        "IndexSearcher",
        "comparator",
        "TermData",
        "FloatEncoder",
        "openInput",
        "clear",
        "setIndexReader",
        "in",
        "createFromStrings",
        "LockFile",
        "unpackedObjectCache",
        "getText",
        "onCreate",
        "PackedInts",
        "parseEncodingName",
        "convertNumToColString",
        "triggerExitRuleEvent",
        "setSysUriPattern",
        "BytesRef",
        "createPolygon",
        "sneakyThrow",
        "checkOffsetAndCount",
        "ContinueRecord",
        "ListTokenSource",
        "getIndexWriter",
        "e",
        "setMaxCodeLenMethod",
        "getPacks",
        "HSSFClientAnchor",
        "asSubclass",
        "FSTCompiler",
        "CharBuffer",
        "getMaxTotMem",
        "Packed64SingleBlock2",
        "setItalic",
        "getMatchingDocs",
        "getSerializedATN",
        "EscherSimpleProperty",
        "numDirtyChunks",
        "setMultiValued",
        "bitLength",
        "RevBlob",
        "getConstructor",
        "Font",
        "getEvaluationCell",
        "WFSTInputIterator",
        "reopenLock",
        "toText",
        "WQuery",
        "setSysReadTimeout",
        "inBounds",
        "ArrayIndexOutOfBoundsException",
        "ATNConfigSet",
        "getEntryFileMode",
        "not",
        "createSingleRecord",
        "setError",
        "Packed64SingleBlock3",
        "listCommits",
        "deserializationOptions",
        "decode",
        "makeLuceneQueryFieldNoBoost",
        "getAllPictures",
        "ArrayList",
        "builder",
        "checkEOF",
        "ExceedsByteArrayLimit",
        "RuntimeException",
        "this",
        "PositionTrackingVisitor",
        "getSpecificBuiltinRecord",
        "NotQuery",
        "newInstance",
        "lemmatize",
        "ExceedsLimit",
        ".",
        "visitErrorNode",
        "setFontWieghtModified",
        "createValueVector",
        "newEmptyMap",
        "=",
        "internalGetExcelDate",
        "getOptRecord",
        "checkCancelled",
        "currentAnimationTimeMillis",
        "beforeRecordSerialize",
        "DocFreqComparator",
        "StandardQueryParser",
        "Builder",
        "retrieveCell",
        "Packed64SingleBlock1",
        "headSet",
        "newBufferedWriter",
        "getNotSupportedFunctionNames",
        "notEnoughHeap",
        "ParseException",
        "NoFilepatternException",
        "LittleEndianByteArrayOutputStream",
        "NoSuchFileException",
        "URISyntaxException",
        "JGitInternalException",
        "getEncryptionInfo",
        "Type",
        "getConstantText",
        "Toffs",
        "Collections",
        "ConfigInvalidException",
        "getNameRecord",
        "toByteArray",
        "QueryNodeException",
        "createDirectories",
        "countMatchingCellsInArea",
        "CellReference",
        "createAnalyzer",
        "ObjectInserter",
        "setPropertyValue",
        "exceptionCaughtDuringExecutionOfPushCommand",
        "createBlockIfNeeded",
        "OR",
        ",",
        "getObjectsDirectory",
        ">",
        "ObjectChecker",
        "parseIntAt",
        "getFormulaFromTextExpression",
        "IndexWriterConfig",
        "EnumWithSlice",
        "removeAllCellsValuesForRow",
        "decRef",
        "StrEnum",
        "getNext",
        "getDecisionDescription",
        "DirectoryReader",
        "getExternalBookRecord",
        "nCells",
        "LockFailedException",
        "id",
        "Packed64SingleBlock4",
        "currentTimeMillis",
        "cloneStyleFrom",
        "redimNodeArrays",
        "HSSFChildAnchor",
        "FieldQueryNodeBuilder",
        "RevTree",
        "sizeLimit",
        "getClientAnchor",
        "IllegalStateException",
        "newObjectInserter",
        "MutableFPNumber",
        "ReInit",
        "sort",
        "getPreferredSize",
        "lazyInit",
        "getInstance",
        "tokenStream",
        "onMalformedInput",
        "newSize",
        "SingleTermsEnum",
        "getMessage",
        "ObjectId",
        "getMaxUsedMem",
        "getRow",
        "get",
        "getIndexDeletionPolicy",
        "getExternalSheet",
        "DefaultRequest",
        "IndexOutOfBoundsException",
        "beginTask",
        "TreeWalk",
        "getSet",
        "shallowSizeOf",
        "ExtSSTRecord",
        "getNewSymref",
        "getSheet",
        "CustomColor",
        "EncryptedDocumentException",
        "NotImplementedFunctionException",
        "decrementAndGet",
        "ByteArrayOutputStream",
        "createBuiltInName",
        "isAnonymousClass",
        "getCreationHelper",
        "getFunctionByName",
        "preModify",
        "UnsupportedSpatialOperation",
        "CellRangeAddress",
        "GenericTermsCollector",
        "RecordFormatException",
        ")",
        "createOutput",
        "ParserInterpreter",
        "findObjectRecord",
        "BlameGenerator",
        "createBasePtg",
        "QualityStats",
        "CompatibleUrlConnClient",
        "setCallable",
        "closeWhileHandlingException",
        "AndQuery",
        "getRunData",
        "jj_consume_token",
        "name",
        "NumberEval",
        "getEscherContainer",
        "fireConfigChangedEvent",
        "ConjQuery",
        "CharsRef",
        "CorruptObjectException",
        "releaseSession",
        "listByWorkspaceAsync",
        "OutOfMemory",
        "TooManyClauses",
        "DocValuesTermsCollector",
        "SortedInputIterator",
        "flushInternal",
        "removeNullKey",
        "ConstantScoreQuery",
        "tailSet",
        "setStringList",
        "(",
        "forName",
        "fill",
        "NearRealtimeReader",
        ";",
        "invalidValue",
        "CorruptIndexException",
        "getWeightedSpanTerm",
        "IntsRefBuilder",
        "afterRecordSerialize",
        "getStates",
        "Packed64SingleBlock8",
        "{",
        "field_4_string_len",
        "]",
        "SHA1",
        "getSubQueriesIterator",
        "OutputStreamWriter",
        "coerceValueToString",
        "getIndexReader",
        "forIndex",
        "parameters:",
        "lock",
        "FacetsConfig"
      ],
      "Syntactic Label": "Methods, Objects, Variables, Dot Operator, Exceptions, Keywords, Data Structures, Literals",
      "Semantic Tags": [
        "Data manipulation",
        "Exception Handling",
        "Data Structures",
        "File processing",
        "Object manipulation"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Methods like `removeRow`, `fill`, `lookupAny`, etc., perform specific actions. Objects such as `StringBuffer`, `RevObject`, `HSSFPicture`, etc., are instances of classes. Variables store data. The dot operator accesses members of objects. Exceptions like `RuntimeException`, `IllegalArgumentException`, etc., handle errors. Keywords like `public`, `void`, `if`, `else`, `while`, etc., control program flow. Data structures like `Collection`, `ArrayList`, `List`, etc., organize data. Literals represent constant values."
    }
  },
  {
    "c222": {
      "Unique tokens": [
        "offset",
        ",",
        ".",
        "try",
        "replacementBytes",
        "sb",
        "writer",
        "throw",
        "return",
        "StringBuilder",
        "new",
        "iwc",
        "default",
        "isRelevant",
        "if",
        "}",
        "case",
        "ptr",
        "<",
        "{",
        "read",
        "long",
        "field_2_first_row",
        "else",
        "byte",
        "precedenceState",
        "break",
        "field_2_encoded_url",
        "=",
        "final",
        "Throwable",
        "continue",
        "append",
        ")",
        "int",
        "(",
        "_unmappableErrors",
        "searcherMgr",
        "recognizer",
        "_malformedErrors",
        "db",
        "firstRow",
        "for",
        "LittleEndianByteArrayInputStream",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Data Structures",
        "Input/Output",
        "File Processing"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `try`, `catch`, `if`, `else`, `for`, `while`, `switch`, `case`, `break`, and `continue` control program flow.  `throw` and `catch` handle exceptions.  `StringBuilder` is a mutable string object.  `byte`, `int`, `long` are data types.  The dot operator (`.`) is used for member access.  The code snippets show various operations including array manipulation, file reading, and exception handling."
    }
  },
  {
    "c223": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Function Call",
        "AWS SDK",
        "API Calls"
      ],
      "Description": "The closing parenthesis ')' in C# is used to denote the end of a parameter list in method declarations and function calls.  In this context, it's part of numerous AWS SDK method calls, each representing an API call to an AWS service. The methods are likely part of a client library for interacting with various AWS services."
    }
  },
  {
    "c224": {
      "Unique tokens": [
        "SharedFormulaRecord",
        "ins",
        "EscherContainerRecord",
        "QueryConfigHandler",
        "input",
        "DataInput",
        "out",
        "CharStream",
        "inStream",
        "TermsIndexWriterBase",
        "SpatialContext",
        "TokenStream",
        "PerfRunData",
        "BasicQueryFactory",
        "ByteBlockPool",
        "RecordInputStream",
        "in",
        "ctx",
        "rs",
        "RecordStream",
        "SegmentWriteState"
      ],
      "Syntactic Label": "RecordInputStream Parameter",
      "Semantic Tags": [
        "Record Input",
        "Data Deserialization",
        "File Processing",
        "Data Structures",
        "Binary Data"
      ],
      "Description": "These tokens represent parameters of type RecordInputStream in various C# classes.  RecordInputStream is used to read data from a record stream, which is likely a binary data stream representing a file format. The tokens suggest that the code is designed to parse and process data from this stream, deserializing it into various data structures within the classes.  The semantic tags reflect the core functionality of reading, processing, and interpreting binary data from a file."
    }
  },
  {
    "c225": {
      "Unique tokens": [
        "\"",
        "EMPTY_RETURN_STATE",
        "null",
        "sid",
        "CommonObjectDataSubRecord",
        "0",
        "?",
        "format",
        "!",
        "{",
        "IndexOptions",
        "==",
        "stopWordFiles",
        "=",
        "CF_METAFILEPICT",
        "this",
        ")",
        "biff2_sid",
        "&&",
        "(",
        "STRING_NOT_PRESENT_LEN",
        "CoderResult",
        "-",
        "nFuncs",
        "ExternalNameRecord",
        "!="
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Null Handling",
        "Conditional Logic",
        "Object Instantiation",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a variety of C# language elements, including keywords (public, static, if, return, while, etc.), operators (==, !=, &&, -, =, etc.), null literals, identifiers (e.g., SemanticContext, GitAPIException, etc.), and special symbols such as parentheses and braces.  These tokens are used to construct various program structures, including method definitions, conditional statements, loops, object creation, and exception handling. The semantic tags highlight the core functionalities of the code snippets, indicating the presence of null checks, conditional logic for controlling program flow, object creation using constructors, exception handling mechanisms to manage errors, and the use of data structures like lists, arrays, and maps."
    }
  },
  {
    "c226": {
      "Unique tokens": [
        "DeleteDocumentResult",
        "CreateCampaignResult",
        "CreateHostedZoneResult",
        "CreateVpcResult",
        "DeleteResolverRuleResult",
        "StopTrainingJobResult",
        "DeleteHostedZoneResult",
        "PutLexiconResult",
        "GetAccountResult",
        "UpdateConfigurationResult",
        "StopInstanceResult",
        "DeleteInstanceResult",
        "UpdateResolverRuleResult",
        "RemoveTagsResult",
        "UpdateGatewayResult",
        "UpdateBotResult",
        "DescribeMatchmakingResult",
        "CreateClusterResult",
        "DeleteInterconnectResult",
        "DescribeLoaResult",
        "SelectResult",
        "CreateAddressBookResult",
        "PostToConnectionResult",
        "CreateAddressResult",
        "PutPermissionResult",
        "DescribeEndpointsResult",
        "DescribeOrganizationResult",
        "DisableRuleResult",
        "GetInvalidationResult",
        "SuspendProcessesResult",
        "AssociateFleetResult",
        "CreateIngestionResult",
        "DescribeScriptResult",
        "AcceptMatchResult",
        "CreateIntegrationResult",
        "SendBounceResult",
        "BatchGetImageResult",
        "DescribeConfigurationResult",
        "SignalResourceResult",
        "DeleteLoadBalancerResult",
        "CreateSchemaResult",
        "ImportImageResult",
        "DescribeApplicationResult",
        "CreateConferenceProviderResult",
        "DeactivateEventSourceResult",
        "DescribeDBEngineVersionsResult",
        "UpgradeAppliedSchemaResult",
        "UpdatePhoneNumberResult",
        "DeleteSubnetResult",
        "BatchUpdateUserResult",
        "UpdateStackResult",
        "CompleteLifecycleActionResult",
        "PreviewAgentsResult",
        "UpdateAddressBookResult",
        "DiscoverInputSchemaResult",
        "DetectSyntaxResult",
        "ImportTerminologyResult",
        "DeleteDirectoryResult",
        "ListJobsResult",
        "UpdateRecordsResult",
        "CreateInstancesResult",
        "MergeDeveloperIdentitiesResult",
        "UpdateApplicationResult",
        "TerminateJobFlowsResult",
        "GetDigestResult",
        "StartFleetResult",
        "DescribeStackInstanceResult",
        "CreateAppResult",
        "CreateSubnetResult",
        "DeleteDeploymentResult",
        "DeleteMethodResult",
        "DeleteExpressionResult",
        "AssociateWebsiteCertificateAuthorityResult",
        "ImportApiResult",
        "CreateCollectionResult",
        "DeleteFleetsResult",
        "CreateParameterGroupResult",
        "CreateStreamProcessorResult",
        "DeleteTrialResult",
        "GetFolderPathResult",
        "CreateConfigurationResult",
        "DeleteFleetResult",
        "DeletePhoneNumberResult",
        "UpdateTrialResult",
        "CloneReceiptRuleSetResult",
        "TransferDomainResult",
        "LogoutUserResult",
        "LookupPolicyResult",
        "AttachNetworkInterfaceResult",
        "DeleteComponentResult",
        "ListQueuesResult",
        "DescribeAddressResult",
        "GetSegmentResult",
        "MonitorInstancesResult",
        "AssociateDelegateToResourceResult",
        "DescribeStreamResult",
        "DeleteStackResult",
        "ListGroupsResult",
        "DeleteDeviceResult",
        "DescribeActivitiesResult",
        "UpdateFilterResult",
        "DeleteIdentityResult",
        "AttachInternetGatewayResult",
        "CreateInvalidationResult",
        "CreateProfileResult",
        "AllocatePublicVirtualInterfaceResult",
        "CreateUserResult",
        "DeleteAccountResult",
        "DescribeStackSetResult",
        "AttachVolumeResult",
        "GetAppResult",
        "CreateResourceGroupResult",
        "CreateModelResult",
        "DetachDiskResult",
        "AcceptInvitationResult",
        "UpdateAliasResult",
        "DeleteIntegrationResult",
        "CreateVoiceConnectorResult",
        "DeletePresetResult",
        "DescribeUsersResult",
        "RejectSkillResult",
        "CreateFileSystemResult",
        "ResetPasswordResult",
        "CreateFolderResult",
        "UpdateExperimentResult",
        "CreateStackResult",
        "UpdateFolderResult",
        "DBSnapshotAttributesResult",
        "RevokeInvitationResult",
        "SubscribeToEventResult",
        "SendEventResult",
        "StartNotebookInstanceResult",
        "DescribeStepResult",
        "RebootWorkspacesResult",
        "RunJobFlowResult",
        "CreateProposalResult",
        "CreateNotebookInstanceResult",
        "DescribeLimitsResult",
        "DescribeInstancesResult",
        "PredictResult",
        "AddTagsToVaultResult",
        "PutAttributesResult",
        "CreateFleetResult",
        "UpdateWorkGroupResult",
        "CreateLabelsResult",
        "DescribeLocationsResult",
        "DeregisterImageResult",
        "DescribeTemplateResult",
        "DescribeAlgorithmResult",
        "DeleteTrafficPolicyResult",
        "UpdateJobResult",
        "CreateRouteResult",
        "DeleteRoomResult",
        "ListStepsResult",
        "ReadPresetResult",
        "ReleaseStaticIpResult",
        "UpdateClusterResult",
        "DeleteDistributionResult",
        "DescribeStreamConsumerResult",
        "DescribeBackupsResult",
        "BatchReadResult",
        "DeleteProfileResult",
        "RevokeClientVpnIngressResult",
        "CreateBotResult",
        "DeleteApplicationResult",
        "AddPermissionResult",
        "CreateApplicationResult",
        "StopStreamProcessorResult",
        "DescribeSecurityGroupsResult",
        "CreateSnapshotsResult",
        "UnsubscribeFromDatasetResult",
        "DeleteIdentitiesResult",
        "UpdateNotebookInstanceResult",
        "StopProcessingJobResult",
        "UpdateEvaluationResult",
        "InviteMembersResult",
        "CreateInterconnectResult",
        "DeleteExperimentResult",
        "TestAlarmResult",
        "DescribeProjectsResult",
        "UpdateIdentityPoolResult",
        "CreateLogPatternResult",
        "DescribeRegionsResult",
        "CreateEntityRecognizerResult",
        "EnterStandbyResult",
        "RegisterImageResult",
        "RestorePhoneNumberResult",
        "DescribeIdentityResult",
        "ListFleetsResult",
        "ImportKeyPairResult",
        "ReadPipelineResult",
        "GetDeviceResult",
        "GetResolverRuleResult",
        "SynthesizeSpeechResult",
        "RebootInstanceResult",
        "CreateIndexResult",
        "ModifyFleetResult",
        "ValidateConfigurationResult",
        "DeleteDashboardResult",
        "UpdateApiResult",
        "CreateServiceResult",
        "DeleteFacetResult",
        "ArchiveFindingsResult",
        "ListInstancesResult",
        "DescribeJobResult",
        "CreateApiKeyResult",
        "RegisterStreamConsumerResult",
        "ListAppsResult",
        "CreateAccountResult",
        "CreateCommentResult",
        "ExecuteChangeSetResult",
        "StopMatchmakingResult",
        "UpdateCampaignResult",
        "UpdateBrokerResult",
        "DescribeFleetsResult",
        "RemoveAttributesResult",
        "ListObjectParentsResult",
        "AssociateVirtualInterfaceResult",
        "CreateVpnGatewayResult",
        "ModifyIdFormatResult",
        "RunInstancesResult",
        "DisassociateMembersResult",
        "PutAlarmResult",
        "DeleteRuleResult",
        "UpdateBuildResult",
        "RegisterUserResult",
        "GetTrafficPolicyResult",
        "ModifyLaunchTemplateResult",
        "DisableDirectoryResult",
        "DeleteHITResult",
        "DeleteDirectConnectGatewayResult",
        "AddApplicationInputResult",
        "DescribeHumanLoopResult",
        "AttachObjectResult",
        "DeleteAddressBookResult",
        "ChangeTagsForResourceResult",
        "UpdateProfileResult",
        "UpdateGameSessionResult",
        "ListStacksResult",
        "DeleteSchemaResult",
        "NotifyWorkersResult",
        "ViewBillingResult",
        "DescribeTrialResult",
        "CancelClusterResult",
        "ListIdentitiesResult",
        "CompareFacesResult",
        "ExportImageResult",
        "DescribeClusterParametersResult",
        "CreateProjectResult",
        "StopApplicationResult",
        "DeleteNodeResult",
        "CreateRestApiResult",
        "GetDataEndpointResult",
        "GetInstanceResult",
        "CreateRequestValidatorResult",
        "ListTagsForResourceOutput",
        "DeleteEndpointResult",
        "DeleteDiskResult",
        "SendInvitationResult",
        "DetectEntitiesResult",
        "DeleteStreamResult",
        "DetachObjectResult",
        "DisassociateRepositoryResult",
        "DetectFacesResult",
        "CreateLoadBalancerResult",
        "SearchUsersResult",
        "DescribeRuleResult",
        "CreateRuleResult",
        "DisassociateAddressResult",
        "DescribeProblemResult",
        "DomainMetadataResult",
        "BatchGetDeploymentsResult",
        "CreateNatGatewayResult",
        "DeleteEventResult",
        "AbortMultipartUploadResult",
        "UpdateResourceResult",
        "UpdateDataSetResult",
        "EnableUserResult",
        "UpdateIntegrationResult",
        "CreateDashboardResult",
        "StartApplicationResult",
        "EnableDirectoryResult",
        "StopHumanLoopResult",
        "DescribeDBParametersResult",
        "DeleteAliasResult",
        "DeleteVpcResult",
        "DescribeWorkspacesResult",
        "DeleteContactResult",
        "TestRenderTemplateResult",
        "ListTagsResult",
        "DescribeNotebookInstanceResult",
        "ReimportApiResult",
        "DeleteParameterGroupResult",
        "CreateReceiptRuleSetResult",
        "RebootRelationalDatabaseResult",
        "DeleteWorkGroupResult",
        "UpdateEndpointResult",
        "DetectSentimentResult",
        "DefineExpressionResult",
        "PutEventsResult",
        "AttachTypedLinkResult",
        "DescribeIdentityPoolResult",
        "AllocateAddressResult",
        "CreateSubnetGroupResult",
        "GetUserResult",
        "DeleteChangeSetResult",
        "DescribeClusterResult",
        "ListExportsResult",
        "DescribeEventsResult",
        "GetInstanceMetricDataResult",
        "DescribeClusterTracksResult",
        "CreateComponentResult",
        "AddTagsToResourceResult",
        "BatchGetApplicationsResult",
        "DeleteRouteResult",
        "ConfirmConnectionResult",
        "ModifyHostsResult",
        "UpdatePipelineResult",
        "BulkPublishResult",
        "TagDeliveryStreamResult",
        "UpdateMemberResult",
        "IndexDocumentsResult",
        "CreateImageResult",
        "UnmonitorInstancesResult",
        "DescribeParametersResult",
        "RebootBrokerResult",
        "ConfigureAgentResult",
        "UpdateAuthorizerResult",
        "DescribeEventTrackerResult",
        "DeletePolicyResult",
        "UpdateDashboardResult",
        "DeleteArchiveResult",
        "SplitShardResult",
        "DescribePoliciesResult",
        "CreateVolumeResult",
        "RebootInstancesResult",
        "DescribeDBParameterGroupsResult",
        "ScanResult",
        "DescribeExpressionsResult",
        "CreateEvaluationResult",
        "CreateGroupResult",
        "GetObjectAttributesResult",
        "UpdateStageResult",
        "EnableAddOnResult",
        "StartInstancesResult",
        "CreateDataSourceResult",
        "GetAccountBalanceResult",
        "CreateTrialResult",
        "ListEnvironmentsResult",
        "ListApplicationsResult",
        "MigrateWorkspaceResult",
        "BundleInstanceResult",
        "UpdateSegmentResult",
        "CreateLaunchTemplateResult",
        "PutDetectorResult",
        "GetAccountLimitResult",
        "StartFaceSearchResult",
        "UpdateDomainResult",
        "BatchGetQueryExecutionResult",
        "UpdateGroupResult",
        "StopInstancesResult",
        "TagMeetingResult",
        "SearchFacesResult",
        "StopAssessmentRunResult",
        "UpdateDomainNameResult",
        "ListTagsForResourceResult",
        "DeleteResourceResult",
        "DescribeComponentResult",
        "TranslateTextResult",
        "ConfirmTransitVirtualInterfaceResult",
        "DetachVpnGatewayResult",
        "CreateSolutionResult",
        "BatchDeleteImageResult",
        "DisassociateResolverRuleResult",
        "CreateMemberResult",
        "DisassociateFleetResult",
        "DescribeLedgerResult",
        "AllocateTransitVirtualInterfaceResult",
        "CreateDomainNameResult",
        "DescribeAppResult",
        "ConfigureHealthCheckResult",
        "ListNetworksResult",
        "GetInstanceSnapshotResult",
        "DeleteHealthCheckResult",
        "DeleteScriptResult",
        "UpdateModelResult",
        "UpdateDetectorResult",
        "StartWorkspacesResult",
        "CreateDatasetResult",
        "BatchDetectSyntaxResult",
        "UpdateDeviceResult",
        "ReleaseAddressResult",
        "CopySnapshotResult",
        "DescribeDeviceResult",
        "AssociateResolverRuleResult",
        "DeleteBuildResult",
        "UpdateRelationalDatabaseResult",
        "DescribeHostsResult",
        "DeleteFolderResult",
        "CreateKeyPairResult",
        "StopDeploymentResult",
        "CreateResourceResult",
        "ImportRestApiResult",
        "CreateDBProxyResult",
        "CreateTaskSetResult",
        "RemovePermissionResult",
        "RejectAssignmentResult",
        "DeleteCollectionResult",
        "DescribeStackResourceResult",
        "GetFaceSearchResult",
        "ResolveAliasResult",
        "PutDashboardResult",
        "DisconnectParticipantResult",
        "CreateDeliveryStreamResult",
        "ImportSnapshotResult",
        "UpdateScriptResult",
        "DescribeSchemaResult",
        "DescribeBuildResult",
        "UpdateFleetResult",
        "DescribeClusterSecurityGroupsResult",
        "DescribeLoadBalancersResult",
        "AddApplicationOutputResult",
        "DescribeDatasetResult",
        "PutModelResult",
        "UntagDeliveryStreamResult",
        "FlushStageCacheResult",
        "DeleteApiResult",
        "DetectTextResult",
        "CreateStreamResult",
        "PutRecordBatchResult",
        "CreateDirectConnectGatewayResult",
        "ClassifyDocumentResult",
        "GetApiResult",
        "CreateRepositoryResult",
        "PutImageResult",
        "UpdateSchemaResult",
        "CreateConnectionResult",
        "CreateMembersResult",
        "AssociateAddressResult",
        "DeleteModelResult",
        "UpdateVariableResult",
        "GetInstanceAccessResult",
        "ListRecordsResult",
        "DescribeAddressesResult",
        "ExportApiResult",
        "DescribeClusterSnapshotsResult",
        "ApplySchemaResult",
        "DescribeClusterVersionsResult",
        "RunTaskResult",
        "DeleteAssessmentRunResult",
        "DescribeDomainsResult",
        "ConfirmPublicVirtualInterfaceResult",
        "CreateEventTrackerResult",
        "PutTargetsResult",
        "DeleteBackupResult",
        "GetHITResult",
        "DescribeStackResourcesResult",
        "ExitStandbyResult",
        "PutRestApiResult",
        "SendEmailResult",
        "ImportVolumeResult",
        "CreateReceiptRuleResult",
        "CompleteLayerUploadResult",
        "CreateFacetResult",
        "GetDomainResult",
        "AddTagsResult",
        "CreateWorkGroupResult",
        "DescribeEndpointResult",
        "ApproveSkillResult",
        "UpdateDeploymentResult",
        "PutAnomalyDetectorResult",
        "DescribeFindingsResult",
        "ValidateTemplateResult",
        "UpdateNodeResult",
        "UpdateLagResult",
        "PutOutcomeResult",
        "RenderUiTemplateResult",
        "DisassociateDomainResult",
        "DescribeWorkforceResult",
        "GetMethodResult",
        "DisassociateMembershipResult",
        "SubscribeToDatasetResult",
        "DetachTypedLinkResult",
        "DeleteAlgorithmResult",
        "DescribeDBProxyTargetsResult",
        "DescribeDataSourceResult",
        "StopFleetResult",
        "DeregisterTypeResult",
        "ListSkillsResult",
        "ModifyClusterResult",
        "CreateNodeResult",
        "PutRecordsResult",
        "CancelJobResult",
        "DetectStackDriftResult",
        "PublishSchemaResult",
        "CreateDiskResult",
        "UnpeerVpcResult",
        "TagStreamResult",
        "UpdateLedgerResult",
        "CreateChangeSetResult",
        "AssociateRepositoryResult",
        "CreateIPSetResult",
        "DeleteMemberResult",
        "BatchDeleteAttributesResult",
        "CreateGameSessionResult",
        "ListScriptsResult",
        "DescribeReservedNodesResult",
        "DescribeBrokerResult",
        "CreateBGPPeerResult",
        "RestoreWorkspaceResult",
        "UpdatePublicKeyResult",
        "CreateTemplateResult",
        "AttachDiskResult",
        "CreateDetectorResult",
        "ExpireSessionResult",
        "DescribeUpdateResult",
        "StopRelationalDatabaseResult",
        "StartDeploymentResult",
        "DeleteQueueResult",
        "CreateBackupResult",
        "CreateTagsResult",
        "UpdateUsageResult",
        "CreatePublicKeyResult",
        "CreateQueueResult",
        "CreatePresetResult",
        "DetachVolumeResult",
        "DisassociateWebsiteCertificateAuthorityResult",
        "UntagQueueResult",
        "DetachNetworkInterfaceResult",
        "StartInstanceResult",
        "CreateVoiceTemplateResult",
        "DeleteIdentityPoolResult",
        "CreateInternetGatewayResult",
        "DeletePipelineResult",
        "ExecutePolicyResult",
        "EnableRuleResult",
        "CreateRelationalDatabaseResult",
        "CreateEndpointResult",
        "CreateLagResult",
        "RenewDomainResult",
        "PutRuleResult",
        "UntagStreamResult",
        "UpdateVoiceConnectorResult",
        "CreateSnapshotResult",
        "DescribeDeliveryStreamResult",
        "PutMethodResult",
        "DescribeTypeResult",
        "CreateDeploymentResult",
        "StopNotebookInstanceResult",
        "GetIdResult",
        "AttachInstancesResult",
        "SendMessageResult",
        "PutRecordResult",
        "CreateRouteResponseResult",
        "SearchContactsResult",
        "DetachPolicyResult",
        "DeleteSnapshotResult",
        "SendMessageBatchResult",
        "UnsubscribeFromEventResult",
        "DeclineInvitationsResult",
        "DescribeModelResult",
        "TestRoleResult",
        "DescribeConfigurationSetResult",
        "CreatePublicVirtualInterfaceResult",
        "DeleteAuthorizerResult",
        "ImportInstanceResult",
        "DeleteFacesResult",
        "PeerVpcResult",
        "CreateBuildResult",
        "DeleteFilterResult",
        "PutExternalModelResult",
        "DescribeClustersResult",
        "DeleteLexiconResult",
        "AnalyzeDocumentResult",
        "ReadJobResult",
        "CreateNetworkResult",
        "UpdateFacetResult",
        "GetInstanceStateResult",
        "DescribeEntityRecognizerResult",
        "DeleteVolumeResult",
        "DescribeReservedInstancesResult",
        "BatchWriteResult",
        "CreateTransitVirtualInterfaceResult",
        "DBClusterSnapshotAttributesResult",
        "ListCollectionsResult",
        "DescribeReceiptRuleResult",
        "SendBonusResult",
        "RemoveTargetsResult",
        "DeleteObjectResult",
        "PurchaseHostReservationResult",
        "CreateAssessmentTargetResult",
        "DeletePublicKeyResult",
        "TerminateWorkspacesResult",
        "VerifyEmailAddressResult",
        "DescribeGroupsResult",
        "ExportSnapshotResult",
        "DeleteGraphResult",
        "CreateJobResult",
        "UpdateRoomResult",
        "ReceiveMessageResult",
        "ConfirmPrivateVirtualInterfaceResult",
        "DescribeSubnetsResult",
        "DetectLabelsResult",
        "UpdateDataSourceResult",
        "DeleteSegmentResult",
        "VoteOnProposalResult",
        "InviteUsersResult",
        "CreateAliasResult",
        "UpdateSubnetGroupResult",
        "DescribeCollectionResult",
        "UntagResourceResult",
        "CreateWorkteamResult",
        "DetachLoadBalancersResult",
        "DescribeResourceResult",
        "SendCommandResult",
        "DescribeStorageResult",
        "DefineAnalysisSchemeResult",
        "BatchGetVariableResult",
        "GetResourceResult",
        "CreateStackSetResult",
        "AllocateHostsResult",
        "SendMessagesResult",
        "DescribeStacksResult",
        "DeleteCommentResult",
        "TestEventPatternResult",
        "DescribeDBSubnetGroupsResult",
        "DeactivateUserResult",
        "UpdateComponentResult",
        "DeleteHumanLoopResult",
        "DescribeTasksResult",
        "PutVoiceConnectorProxyResult",
        "DescribeWebsiteCertificateAuthorityResult",
        "ModifyDBParameterGroupResult",
        "ResolveRoomResult",
        "StartMatchmakingResult",
        "CreateAuthorizerResult",
        "CreateHealthCheckResult",
        "CreateVaultResult",
        "CreateStageResult",
        "UpdateUserResult",
        "DeleteDomainResult",
        "GetHostedZoneResult",
        "PhoneNumberValidateResult",
        "InvokeEndpointResult",
        "DeleteTemplateResult",
        "CreateIdentityPoolResult",
        "CreatePrivateVirtualInterfaceResult",
        "DeleteDeliveryStreamResult",
        "DeleteConfigurationSetResult",
        "DisableLoggingResult",
        "GetFieldLevelEncryptionResult",
        "DeleteBrokerResult",
        "BatchDeletePhoneNumberResult",
        "DeleteUserResult",
        "InitiateVaultLockResult",
        "GetJobOutputResult",
        "RegisterDomainResult",
        "DetachInstancesResult",
        "DescribeGroupResult",
        "DeleteMessageResult",
        "CreateResolverEndpointResult",
        "AttachToIndexResult",
        "CreateContactResult",
        "UpdateRouteResult",
        "DescribeSessionsResult",
        "DeleteKeyPairResult",
        "AddFacetToObjectResult",
        "CreatePushTemplateResult",
        "DescribeServicesResult",
        "GetGatewayResult",
        "DeleteConnectionResult",
        "UpgradePublishedSchemaResult",
        "DeleteFileSystemResult",
        "DeleteDomainNameResult",
        "DescribeDBInstancesResult",
        "AttachPolicyResult",
        "PutInsightRuleResult",
        "DeleteLagResult",
        "DeleteStageResult",
        "DescribeAccountResult",
        "DescribeUserResult",
        "InitiateJobResult",
        "UpdateTemplateResult",
        "ListSchemasResult",
        "RecordHandlerProgressResult",
        "ListIndexResult",
        "DisableUserResult",
        "DescribeCommentsResult",
        "DeleteSolutionResult",
        "ListTasksResult",
        "CreateEventBusResult",
        "CreateGraphResult",
        "RejectInvitationResult",
        "DescribeCertificatesResult",
        "DeregisterStreamConsumerResult",
        "CreateLedgerResult",
        "AllocatePrivateVirtualInterfaceResult",
        "CancelStepsResult",
        "DescribeSolutionResult",
        "AssociateDomainResult",
        "DeleteRepositoryResult",
        "CreateDistributionResult",
        "DescribeTagsResult",
        "SignOutUserResult",
        "DeleteSecurityGroupResult",
        "DescribeChangeSetResult",
        "DescribeDBSecurityGroupsResult",
        "DeleteDataSetResult",
        "CreateHITResult",
        "DescribeObservationResult",
        "CreateApiResult",
        "CreateObjectResult"
      ],
      "Syntactic Label": "Result Types",
      "Semantic Tags": [
        "API Responses",
        "Asynchronous Operations",
        "Resource Management",
        "Cloud Services",
        "AWS SDK"
      ],
      "Description": "These tokens represent the result types returned by various AWS SDK methods.  They are integral to handling asynchronous operations and managing resources within cloud services. The methods' names suggest actions like creating, updating, deleting, and describing resources, typical of AWS interactions."
    }
  },
  {
    "c227": {
      "Unique tokens": [
        "value",
        "Object",
        "other_",
        ")",
        "IntList",
        "{",
        "key",
        "obj",
        "object",
        "other",
        "needle",
        "_other",
        "o"
      ],
      "Syntactic Label": "Object parameters in equals() and contains() methods",
      "Semantic Tags": [
        "Object comparison",
        "Equality checks",
        "Set operations",
        "Data structure manipulation",
        "Collection processing"
      ],
      "Description": "The tokens represent object parameters used in various methods, primarily equals() and contains(), which are common in C# for comparing objects and checking for membership in collections.  The methods operate on different data structures (e.g., lists, maps, custom classes), demonstrating common object-oriented programming patterns in C#. The semantic tags highlight the core functionalities of these methods within the context of data structures and collections."
    }
  },
  {
    "c228": {
      "Unique tokens": [
        "getFontIndex",
        "getType",
        "printQueries",
        "getErrorEval",
        "setIndex",
        "getWidth",
        "seekExact",
        "getCalcMode",
        "toQueryString",
        "put",
        "setBytesRef",
        "toStringEscaped",
        "currentScore",
        "hasMoreElements",
        "getFormatString",
        "clone",
        "setAnchor",
        "getPassword",
        "updateFormulasAfterCellShift",
        "freeBefore",
        "set",
        "length",
        "getOutputStream",
        "copyValue",
        "protectSheet",
        "balancedTree",
        "uniformCmd",
        "getKeyProgressIncrement",
        "nextDoc",
        "getDataValues",
        "getHCenter",
        "acquire",
        "getObjectCount",
        "updateNamesAfterCellShift",
        "getBigBlockSize",
        "getHeight",
        "print",
        "setCellValue",
        "LOOK",
        "substring",
        "getEnd",
        "addAll",
        "getIndex",
        "readLong",
        "checkExternSheet",
        "end",
        "getFormatIndex",
        "foldToASCII",
        "setResult",
        "getSequenceIndex",
        "regionEnd",
        "getEncoding",
        "readUByte",
        "getProperty",
        "cardinality",
        "addParentId",
        "open",
        "getStorage",
        "getFirst",
        "getDecimalExponent",
        "getPrecision",
        "LA",
        "setPassword",
        "canEncode",
        "stemSuffix",
        "stemPrefix",
        "require",
        "setCalcMode",
        "OpenNLPLemmatizerFilter",
        "rebase",
        "setTokenStream",
        "split",
        "lookupAny",
        "getIdentityFile",
        "isValidTermOrPhrase",
        "getRevWalk",
        "readFully",
        "flush",
        "removeLast",
        "getIndexVersion",
        "readByte",
        "getTermsEnum",
        "findStartOffset",
        "getExternalSheetIndex",
        "acceptRow",
        "getRowCellBlockSize",
        "writeByte",
        "reset",
        "countRanges",
        "getRemoteName",
        "clear",
        "prunePacked",
        "getErrorDisplay",
        "getText",
        "getHideObj",
        "parseDate",
        "nextPosition",
        "getChars",
        "pollForUpdates",
        "containsChart",
        "walk",
        "IncRef",
        "addConditionalFormatting",
        "close",
        "getTimeout",
        "resetBackgroundImage",
        "setEmpty",
        "getTokenName",
        "top",
        "requiresCommitBody",
        "collect",
        "seek",
        "containsKey",
        "regionStart",
        "floor",
        "getXBATEntriesPerBlock",
        "getRemoteTrackingBranch",
        "getStatus",
        "setPrintArea",
        "indexOfValue",
        "getPackedGitLimit",
        "contains",
        "suggestFileExtension",
        "getPath",
        "isLegalReplacement",
        "displayName",
        "writeBytes",
        "getEffectivePort",
        "getTokenScore",
        "updateFormulasAfterRowShift",
        "cloneFilter",
        "constantName",
        "drawString",
        "rename",
        "formatAsString",
        "setLength",
        "getValue",
        "stopTimer",
        "addBSERecord",
        "incRef",
        "grow",
        "getSessionToken",
        "negate",
        "getSignificand",
        "peek",
        "changeExternalReference",
        "find",
        "formula",
        "peekFirst",
        "serialize",
        "getTimeZoneOffset",
        "getRepository",
        "supports",
        "getRawQuery",
        "isOpaque",
        "getIndexId",
        "setTimeout",
        "getPathFilter",
        "getExecutor",
        "first",
        "decode",
        "insert",
        "getName",
        "exists",
        "compile",
        "rowHasCells",
        "fillRect",
        "highlightTerm",
        "getScheme",
        "upgrade",
        "last",
        "getDescription",
        "skipToNextByte",
        "subtract",
        "getQuery",
        "getTagger",
        "copyUsingLengthPrefix",
        "weight",
        "normalise64bit",
        "setColor",
        "exec",
        "canReuse",
        "readDataSize",
        "getURI",
        "drawPolygon",
        "newInstance",
        "setStringValue",
        "copyTo",
        "slice",
        "backup",
        "setBytesValue",
        "DecRef",
        "getCharacterClass",
        "getNewMode",
        "delete",
        "consume",
        "writeString",
        "getNewObjectId",
        "norm",
        "readInt",
        "getInputStream",
        "isReadOnly",
        "getSize",
        "getHost",
        "add",
        "isEmpty",
        "growForward",
        "removeFirst",
        "getHeaderValue",
        "mkdirs",
        "getInputLength",
        "getNameAt",
        "hasPrevious",
        "getOffset",
        "formatValue",
        "getFlags",
        "firstKey",
        "fillPolygon",
        "getToken",
        "getFormatSpecifier",
        "getHeadId",
        "getParent",
        "recoverInline",
        "getNameIndex",
        "setInputStream",
        "format",
        "inform",
        "getFragment",
        "getPattern",
        "getLockMessage",
        "filter",
        "getCredentials",
        "setCurrent",
        "getUserAgentConfig",
        "higherKey",
        "capacity",
        "tf",
        "call",
        "subSequence",
        "buildFieldConfig",
        "remaining",
        "QueryNode",
        "getDistance",
        "parseLine",
        "pop",
        "skipBytes",
        "getLast",
        "create",
        "getRegionLength",
        "isMalformed",
        "getCreateEmptyCells",
        "getRawFragment",
        "score",
        "setCoordinates",
        "getCell",
        "nextElement",
        "run",
        "getScore",
        "getCodePoint",
        "expandRow",
        "getEndOffset",
        "getNameOffset",
        "getFormat",
        "getThumbOffset",
        "getIndexFileMode",
        "startWorker",
        "hash2",
        "LongsRef",
        "addResult",
        "drawLine",
        "getAccessKeyId",
        "getFilePointer",
        "copy",
        "groupCount",
        "append",
        "emit",
        "build",
        "available",
        "extendA",
        "onRelease",
        "isAutoDetecting",
        "getFontName",
        "merge",
        "startElement",
        "getHostname",
        "getDirectory",
        "setDateToBeFormatted",
        "group",
        "getItemId",
        "fileLength",
        "setValue",
        "setParams",
        "setBackgroundImage",
        "readShort",
        "replaceFirst",
        "appendDebugInfo",
        "getOptions",
        "bytesUsed",
        "batchUrl",
        "idFor",
        "order",
        "getLineDelimiter",
        "getPassphrase",
        "read",
        "lower",
        "publish",
        "moveCell",
        "peekLast",
        "getPosition",
        "fillSlice",
        "createFormat",
        "map",
        "effectiveLocale",
        "resolveNameXText",
        "decRef",
        "parseTree",
        "back",
        "mark",
        "complement",
        "getMode",
        "recycleByteBlocks",
        "boolean",
        "parse",
        "remove",
        "getEntry",
        "getFSD",
        "getNextPos",
        "reportAmbiguity",
        "lowerKey",
        "visitCellsForRow",
        "NameXPtg",
        "equals",
        "setText",
        "cloneStyleFrom",
        "reportError",
        "getLastOnPath",
        "convert",
        "getValidationType",
        "nextRecord",
        "evaluate",
        "getNewPath",
        "getTag",
        "common",
        "adjustFormula",
        "freeBlocks",
        "advance",
        "init",
        "write",
        "record",
        "isSubTotal",
        "ReInit",
        "sort",
        "depth",
        "escape",
        "stopNow",
        "hitEnd",
        "complete",
        "dumpDeadEndConfigs",
        "setSheetOrder",
        "addField",
        "get",
        "getObjectId",
        "execute",
        "roundUnits",
        "lookup",
        "getExternalSheet",
        "getPasswordVerifier",
        "readLine",
        "normalize",
        "getRefLogIdent",
        "floorKey",
        "getSecurityToken",
        "getRemoteAddress",
        "getCharWidth",
        "getLeftId",
        "getRawStream",
        "nextBuffer",
        "getParentFile",
        "skip",
        "getSheet",
        "explain",
        "flags",
        "ramBytesUsed",
        "writeStringData",
        "describeContents",
        "getConversion",
        "quote",
        "getRawAuthority",
        "alloc",
        "pollFirst",
        "getRawSchemeSpecificPart",
        "formatMatches",
        "unread",
        "preceding",
        "writeShort",
        "element",
        "segString",
        "utf8ToString",
        "lessThan",
        "previousIndex",
        "getBigFileThreshold",
        "centerX",
        "getInput",
        "reader",
        "pattern",
        "lastKey",
        "endEvaluate",
        "decompress",
        "reduce",
        "getValueAt",
        "getLineText",
        "getPropertiesPerBlock",
        "createPlaceholder",
        "getRenameLimit",
        "fillOval",
        "markSupported",
        "getSchemeSpecificPart",
        "getDaemon",
        "computeId",
        "getAllGroupHeads",
        "dumpDrawingGroupRecords",
        "getMetadata",
        "following",
        "readBytes",
        "getChar",
        "println",
        "getCurrentState",
        "region",
        "getBinaryExponent",
        "addBreak",
        "toFormulaString",
        "getWordCost",
        "addCell",
        "unrollRecursionContexts",
        "setValueAt",
        "liftUp",
        "getKey",
        "begin",
        "optimize",
        "sync",
        "getPasswordRecord",
        "getCountRead",
        "setArrayData",
        "fillFields",
        "getAuthority",
        "getLastModified",
        "requireEnd",
        "getField",
        "getNewId",
        "valueAt",
        "getPort",
        "size",
        "getNextOrdinal",
        "getFile",
        "HSSFCell",
        "getRef",
        "getDepth",
        "getHostName",
        "getMaxDeltaDepth",
        "onPull",
        "calculateWorkdays",
        "incrementOpen",
        "preWrite",
        "include",
        "removeAt",
        "visitContainedRecords",
        "empty",
        "removeTop",
        "applyFont",
        "getRightId",
        "getThreads",
        "higher",
        "save",
        "getRawValue",
        "balance",
        "replaceWith",
        "getEmailAddress",
        "matches",
        "startEvaluate",
        "previous",
        "setDelimiters",
        "getPointer",
        "getNextToken",
        "stem",
        "hyperbolicTf",
        "isNewFragment",
        "getResult",
        "replace",
        "next",
        "nextIndex",
        "writeInt",
        "resize",
        "apply",
        "(",
        "fill",
        "release",
        "centerY",
        "getUser",
        "getItem",
        "getEndIndex",
        "unwriteProtectWorkbook",
        "getCharsetName",
        "lastIndexOf",
        "OptionalWeights",
        "lastLength",
        "getStartOffset",
        "getStreamFileThreshold",
        "setUpstream",
        "nextSlice",
        "containsCell",
        "getColumnNumber",
        "indexOf",
        "incrementShapeCount",
        "fieldsConsumer",
        "estimateBytesUsed",
        "start",
        "typeName",
        "addClass",
        "getParser",
        "encode",
        "compareNormalised",
        "resourceBundle",
        "nextToken",
        "current",
        "getFontAtIndex",
        "getCachedErrorValue",
        "removeRow",
        "getByte",
        "setVisibility",
        "getCommandName",
        "getSheetIndex",
        "setStorageId",
        "replacement",
        "handlePart",
        "finish",
        "hasNext",
        "dequote",
        "process",
        "update",
        "modifyFormatRun",
        "compareTo",
        "getTitle"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "Data Processing",
        "Object Manipulation",
        "Utility Functions",
        "Input/Output",
        "Data Transformation"
      ],
      "Description": "The tokens represent a collection of methods in C#, each performing a specific operation related to data processing, object manipulation, or utility functions.  These methods are significant in C# programming as they encapsulate reusable code blocks, promoting modularity and maintainability."
    }
  },
  {
    "c229": {
      "Unique tokens": [
        "}"
      ],
      "Syntactic Label": "Closing Brace",
      "Semantic Tags": [
        "Method Definition",
        "Code Structure",
        "Encapsulation",
        "Method Termination",
        "Scope"
      ],
      "Description": "In C#, the closing brace '}' signifies the end of a code block. In the context provided, it closes the method definitions, marking the end of each method's scope and functionality.  It's a crucial structural element for defining methods and controlling code flow."
    }
  },
  {
    "c230": {
      "Unique tokens": [
        "0x0f",
        "getDocumentSummaryInformationProperties",
        "_sheetEvaluators",
        "_reserved2",
        "0x10",
        "currentCell",
        "_sheetGroupsByBookSheet",
        "indexOfFirstFooterLine",
        "steepness",
        "nextWriteDelGen",
        "_plsContinue",
        "field_1_numShapes",
        "mGlowScaleYFinish",
        "1.0",
        "_red",
        "sheetName",
        "ruleIndex",
        "updateFormulasAfterCellShift",
        "diffCfg",
        "lookupHashLenForWidthHeight",
        "field_7_family",
        "minBytesDirect",
        "0xa4",
        "Integer",
        "jumpToCurrentState",
        "nextFinalOutput",
        "isPrecedenceFilterSuppressed",
        "indexAndLength",
        "setOutputUnigrams",
        "ln_min",
        "getCellValueRecord",
        "comparisonOperation",
        "bytesAfterHeader",
        "field_11_font_name",
        "removePossessives",
        "getSheetNumber",
        "endOffsets",
        "sb",
        "pokeInt",
        "getDataFormatString",
        "getDrawingsSaved",
        "setCellValue",
        "getLLDecisions",
        "cellIndex",
        "facetFieldMultivalued",
        "[",
        "dgId",
        "_wholePart",
        "addCluster",
        "_relativeDecimalExponent",
        "_reserved1",
        "getDx2",
        "getDy1",
        "needsInput",
        "mEdgeAlphaFinish",
        "n/a",
        "keepTogetherSize",
        "readUByte",
        "getMinLevel",
        "getFirstSheetIndex",
        "tf_hyper_xoffset",
        "\\\"",
        "getAreaAt",
        "calculateNonWeekendHolidays",
        "pushRunLen",
        "termsDictOffsets",
        "onUnmappableCharacter",
        "getEntryRawMode",
        "codePointAt",
        "return",
        "setPictureIndex",
        "nRows",
        "getBreaks",
        "getInterpreter",
        "sessionToken",
        "fieldBoostMap",
        "listByResourceGroup",
        "_ulrOutput",
        "addQueriesToBoolean",
        "keep.image.only.docs",
        "field_pictureData",
        "getRecordName",
        "checkElementIndex",
        "writeByte",
        "getPatriarch",
        "0x2e",
        "SpreadsheetVersion",
        "clear",
        "in",
        "mCurrentDrawable",
        "currentExternSheetIx",
        "getDx1",
        "PackedInts",
        "stripSegmentName",
        "nibbles",
        "bytesPerPosting",
        "makeLuceneSubQueriesField",
        "predIndex",
        "maxCol",
        "checkOffsetAndCount",
        "lastPosLength",
        "setTokenSeparator",
        "numRecordedBitsAsDouble",
        "getNearestSetSize",
        "getAllKnownRecordSIDs",
        "flushPending",
        "seeThruPreds",
        "asSubclass",
        "_rowRecordValues",
        "getS3Object",
        "getEncodedSizeWithoutArrayData",
        "lemmatizerOp",
        "mEdgeScaleYStart",
        "firstSheetIndex",
        "lastSheetIndex",
        "withArgs",
        "endA",
        "findFormulaGroupForCell",
        "distErrPct",
        "arity",
        "arcIdx",
        "numDirtyChunks",
        "field_6_underline",
        "onDiskFile",
        "charCount",
        "encodeInt",
        "setSizeAsDouble",
        "createXorVerifier1",
        "++",
        "encodedTokenLen",
        "file=",
        "getRowNumber",
        "field_5_super_sub_script",
        "incRef",
        "_protectRecord",
        "_fractionalPart",
        "ensureInvariants",
        "0x12",
        "getLastColumn",
        "setSystemId",
        "compareSameType",
        "listByResourceGroupWithServiceResponseAsync",
        "showAmPm",
        "0xC2B2AE35",
        "couldNotReadObjectWhileParsingCommit",
        "beginB",
        "withPath",
        "_tokenStartLine",
        "distToEdge",
        "mGlowAlphaFinish",
        "doubleToLongBits",
        "getSummaryInformationProperties",
        "getId",
        "arrayValues",
        "mDuration",
        "S2Projections",
        "_scenarioProtectRecord",
        "maxformatid",
        "TwoDEval",
        "getRowSerializedSize",
        "sundaysPast",
        "shouldCreateEmptyCells",
        "queryShape",
        "setXFIndex",
        "_objectProtectRecord",
        "field_1_font_height",
        "getEntrySpan",
        "makeLuceneQueryFieldNoBoost",
        "nextTokensContext",
        "toDirectoryIndex",
        "posLengths",
        "builtInCode",
        "BooleanClause",
        "recurseClearCachedFormulaResults",
        "sessions",
        "_showPromptBox",
        "getUntrackedFolders",
        "setFillerToken",
        "getLastSheetIndex",
        "_has_free_sectors",
        "outputUnigramsIfNoShingles",
        "complexData",
        "_evaluationFrames",
        "field_1_seriesNumbers",
        ".",
        "isInternalDateFormat",
        "setResourcePath",
        "getFormula1",
        "getLastRowIndex",
        "setRectY2",
        "getPtgClass",
        "getFormats",
        "_reserved0",
        "getCol2",
        "fromInclusive",
        "INSTANCE",
        "_desiredParity",
        "cannotMatchOnEmptyString",
        "sub-file",
        "=",
        "doubleToRawLongBits",
        "rowIx",
        "getSuppressDropDownArrow",
        "setRectX2",
        "decisionToDFA",
        "moveToSentenceAt",
        "currentPayloadScore",
        "endsWithCheckLength",
        "refreshProgress",
        "_precedenceStack",
        "getFirstColumn",
        "upstreamCommitName",
        "getSheetExtIx",
        "hashFunctionForVersion",
        "field_4_ole_classname",
        "currentAnimationTimeMillis",
        "getMaxY",
        "Id",
        "setSchemeSpecificPart",
        "atLeastOnePathIsRequired",
        "ReciprocalDoubleValuesSource",
        "field_4_bold_weight",
        "0xcbf29ce484222325L",
        "getCenter",
        "_binaryExponent",
        "workingTreeIt",
        "mGarbage",
        "}",
        "_hitEOF",
        "oeo",
        "saturdaysPast",
        "timedSessionToken",
        "returnfield_1_font_height",
        "getFormatRunCount",
        "setCellStyle",
        "indeterminate",
        ":",
        "pendingOff",
        "estimatedMergeBytes",
        "mEdgeScaleYFinish",
        "getEvalForCell",
        "newPostingsArray",
        "modeDiff",
        "startEndAndLength",
        "InputMismatchException",
        "getEndOffset",
        "formulaColumn",
        "exhaustStack",
        "setDx2",
        "distance",
        "zzFinalHighSurrogate",
        "lastCommit",
        "formula1",
        "<",
        "nonWeekendHolidays",
        "nFrames",
        "checkValue",
        "1099511628211L",
        "floatToIntBits",
        "0x2d",
        "getAvailableSpace",
        "countMatchingCellsInArea",
        "_lastrow",
        "modCount",
        "parents.length",
        "needsExclamation",
        "_textValue",
        "getLastRow",
        "_fontIndex",
        "getTokens",
        "setNumShapes",
        "_arrayValues",
        "writeUnicodeString",
        "fileLength",
        ",",
        "getBitsPerValue",
        "nextWriteDocValuesGen",
        "couldNotURLEncodeToUTF8",
        ">",
        "nextWriteFieldInfosGen",
        "ReplicationSession",
        "deleteAsync",
        "logInverseSaturation",
        "getXFIndexForColAt",
        "getNumAreas",
        "docCount",
        "recomputeFree",
        "0x13",
        "fieldOp",
        "dvUpdatesFiles",
        "isOperatorInfix",
        "group.sortValues",
        "pastDaysOfWeek",
        "firstLabel",
        "true",
        "createFormulas",
        "field_2_lastMSOSPID",
        "textStarts",
        "maxShingleSize",
        "emptyPathNotPermitted",
        "getBoost",
        "0x6C",
        "mIndeterminate",
        "formulaRow",
        "_lastSheetIndex",
        "numberOfTrailingZeros",
        "numRecordedBits",
        "getXFAt",
        "_showErrorBox",
        "nextRun",
        "setClass",
        "setOutputUnigramsIfNoShingles",
        "isExternalReferences",
        "_children_names",
        "setLastMSOSPID",
        "setDy2",
        "segmentName",
        "qc",
        "field_2_cell_offset",
        "cra",
        "setRectY1",
        "getValidationType",
        "redimNodeArrays",
        "safelyAllocate",
        "bytesPerArc",
        "HSSFChildAnchor",
        "sort.rng",
        "addConflictsMessage",
        "growByOne",
        "setRectX1",
        "field_9_zero",
        "should",
        "atLeastTwoFiltersNeeded",
        "rowArray",
        "_currentlyEvaluatingCells",
        "lengthExceedsMaximumArraySize",
        "makeDistanceValueSource",
        "pendingDeletes",
        "postingsArray",
        "\"",
        "onMalformedInput",
        "0x0e",
        "refLogIncludeResult",
        "byteUpto",
        "field_8_charset",
        "deleteN",
        "firstFooterLine",
        "out",
        "mProgressDrawable",
        "mGlowScaleYStart",
        "discountOverlaps",
        "getShortPath",
        "_prompt_title",
        "totalTermFreq",
        "field_1_index_extern_sheet",
        "outputUnigrams",
        "getValueIndex",
        "field_7_parsed_expr",
        "roundLevel",
        "refNotResolved",
        "nWritableChars",
        "estimatedSegmentSize",
        "getFirstRow",
        "count",
        "createCell",
        "subs",
        "tryIncRef",
        "ramBytesUsed",
        "getRow2",
        "endB",
        "isWeighted",
        "0x15",
        "sqi",
        "getDistCalc",
        "field_3_color_palette_index",
        "theFactoryMustNotBeNull",
        "minCol",
        "getCreationHelper",
        "raw_number",
        "createRichTextString",
        "CellRangeAddress",
        "0x2f",
        "anSSHSessionHasBeenAlreadyCreated",
        "_significand",
        "getRuleIndex",
        "pokeShort",
        "_spgrRecord",
        "hash",
        "setDx1",
        "0x14",
        "field_2_attributes",
        ")",
        "shareMaxTailLength",
        "int",
        "expectedModCount",
        "findFirstRecordBySid",
        "makeLuceneQueryField",
        "criteriaPredicate",
        "checkPositionIndex",
        "0x16",
        "findFirstRecordLocBySid",
        "writeContinueIfRequired",
        "getMaxX",
        "_usedBlankCellGroup",
        "convertToDecimal",
        "_error_title",
        "runEnd",
        "must",
        "_passwordRecord",
        "areValuesEqual",
        "getRowIndex",
        "triggerEnterRuleEvent",
        "null",
        "characterIteratorToString",
        "setRecordId",
        "ValidationType",
        "_externalNameRecords",
        "Lucene50CompoundFormat",
        "_extBookIndex",
        "0x85EBCA6B",
        "cellValue",
        "getBits",
        "sizeIncludesHeaderSize",
        "getInnerValueEval",
        "jj_consume_token",
        "numToAppend",
        "==",
        "segmentFileName",
        ">=",
        "AnimationUtils",
        "name",
        "functionIndex",
        "uniqueTermsInFragment",
        "getExplicitListValues",
        "minRow",
        "appendStatus",
        "size",
        "getGnumericPart",
        "getOutlineLevel",
        "actualHeader",
        "getDy2",
        "getExFormatAt",
        "_lastRowIndex",
        "checkStartAndEnd",
        "LittleEndian",
        "getTriplet",
        "endRow",
        "setKeyProgressIncrement",
        "pokeLong",
        "+",
        "nColumns",
        "isCtxDependent",
        "matches",
        "ArrayPtg",
        "minShingleSize",
        "longBitsToDouble",
        "shiftForReplace",
        "mIndeterminateDrawable",
        "cod",
        "is16bitEncoded",
        "mStartTime",
        "maxRow",
        "non-equality",
        "isSkipWorkTree",
        "upperTerm",
        "_error_text",
        "(",
        "bitCount",
        "refsWereChanged",
        "uriResourcePath",
        "zzMarkedPos",
        "fieldInfosFiles",
        "i",
        "toAbsolutePath",
        "getStartOffset",
        "factorial",
        "setDy1",
        ";",
        "0x11",
        "DoubleValuesSource",
        "beginA",
        "valueIfKeyNotFound",
        "containsCell",
        "_sensitiveInputCells",
        "VisioDocument",
        "sIx",
        "stopAnimation",
        "resolveNameXIx",
        "isValidExcelDate",
        "_writeIndex",
        "styleIndex",
        "nextTokensState",
        "_firstSheetIndex",
        "]",
        "getNumericCellValue",
        "lastEndOffset",
        "findNewDrawingGroupId",
        "getSubQueriesIterator",
        "coerceValueToString",
        "coerceValueToInt",
        "_prompt_text",
        "posArcsStart",
        "setDrawingsSaved",
        "checkStartEndRemaining",
        "subList",
        "_tokenStartCharIndex",
        "shiftRight",
        "other",
        "w1",
        "_tokenStartCharPositionInLine",
        "startAnimation",
        "luceneSubQueries"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Opening Parenthesis, Closing Parenthesis, Operators, Literals",
      "Semantic Tags": [
        "Data Structures",
        "File Processing",
        "Text Processing",
        "Data Serialization",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a mix of data structures (e.g., arrays, maps, strings), file processing operations (e.g., reading and writing bytes, file lengths), text processing (e.g., tokenization, stemming), data serialization (e.g., encoding and decoding data), and algorithm implementation (e.g., sorting, searching).  The sentences show these tokens being used in various C# methods, suggesting a program that processes data, potentially from files, and performs text analysis or manipulation."
    }
  },
  {
    "c231": {
      "Unique tokens": [
        "StringBuilder",
        "Vector",
        "Collection",
        "don't",
        "idx",
        "HttpRequest",
        "<",
        "ObjectLoader",
        "isUnreasonableName",
        ")",
        "isLarge",
        "int",
        "setBuilder",
        "expTarget",
        "Path",
        "fieldName",
        "if",
        "config",
        "offset",
        "limit_backward",
        ",",
        "FST",
        "try",
        "q",
        "LineNumberReader",
        "ssh",
        "first",
        "SrndQuery",
        "[",
        "IncorrectObjectTypeException",
        "getRunData",
        "ArrayList",
        "checkNotClosed",
        "checkPosition",
        "byte",
        "success",
        "InputStream",
        "request",
        "rawtypes",
        "WeakReference",
        "synchronized",
        "for",
        "Token",
        "boolean",
        "!",
        "listAll",
        ".",
        "return",
        "IOException",
        "BooleanQueryNode",
        "Modifiers",
        "runData",
        "new",
        "+",
        "ensureOpen",
        "validateFooter",
        "ModifierQueryNode",
        "=",
        "final",
        "while",
        "Entry",
        "assert",
        "lock",
        "(",
        "md",
        "d",
        "clazz",
        ";",
        "\"",
        "switch",
        "ObjectId",
        "format",
        "Locale",
        "Modifier",
        "List",
        "c",
        "{",
        "text",
        "NoFilepatternException",
        "SHA1",
        "QueryNode",
        "PerfRunData",
        "br",
        "String",
        "nextValues",
        "count",
        "checkCallable",
        "info"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "File Processing",
        "Data Structures",
        "Exception Handling",
        "Algorithm Implementation",
        "Input/Output Operations"
      ],
      "Description": "The tokens represent a wide range of C# language elements including keywords (if, for, while, switch, try, etc.), operators (+, =, ., etc.), data types (int, byte, boolean, String, etc.), classes (StringBuilder, ArrayList, HttpRequest, etc.), exceptions (IOException, ParseException, etc.), and other elements used in various programming constructs. The sentences demonstrate diverse programming tasks, such as file reading and writing, data manipulation, algorithm implementation (e.g., using FST for efficient data storage), exception handling, and more.  The significance in the context of C# programming lies in the comprehensive illustration of common C# syntax and programming patterns."
    }
  },
  {
    "c232": {
      "Unique tokens": [
        "",
        "sims",
        "crossValidationRatio",
        "BytesRef",
        "collator",
        "f",
        "counter",
        "domainName",
        "className",
        "Collator",
        "setFilesystem",
        "version",
        "maskValue",
        "alt",
        "securityToken",
        "SentinelIntSet",
        "headers",
        "toArray",
        "docFreq",
        "?",
        "field_2_numShapeIdsUsed",
        "interval",
        "analyzer",
        "dcb",
        "asList",
        "refs",
        "bitsPerValue",
        "getContentSource",
        "hits",
        "<",
        "blockSize",
        "scorer",
        "numerator",
        "ends",
        "requireNonNull",
        "sheetName",
        "point",
        "attributes",
        "clone",
        "copy",
        "dst",
        "reader",
        "ruleIndex",
        "allocator",
        ")",
        "pattern",
        "int",
        "queryScorer",
        "length",
        "buf",
        "str",
        "defaultFieldNames",
        "Ptg",
        "toCharArray",
        "components",
        "taxonomyReader",
        "child",
        "preTag",
        "buffer",
        "startOffset",
        "productName",
        "Objects",
        "-",
        "x",
        "repo",
        "BytesRefFSTEnum",
        "getSid",
        "valueSecure",
        "fld",
        "if",
        "PersonIdent",
        "offset",
        "setValue",
        "data",
        "null",
        ",",
        "limit",
        "q",
        "isProtected",
        "s2",
        "getSourceFiles",
        "obj",
        "IOUtils",
        "stream",
        "args",
        "workbook",
        "getKey",
        "bytesUsed",
        "uri",
        "filePath",
        "[",
        "<=",
        "keyName",
        "distribution",
        "fs",
        "Arrays",
        "tokenType",
        "end",
        "refreshDate",
        "readRemainder",
        "DEFAULT_BLOCK_SIZE",
        "ArrayList",
        "==",
        "testRatio",
        "file",
        "BufferedReader",
        "byte",
        "retval",
        ">=",
        "doPrivileged",
        "actionIndex",
        "this",
        "AccessController",
        "revstr",
        "name",
        "ref",
        "getVersion",
        "grid",
        "facets",
        "macAddress",
        "label",
        "task",
        "true",
        "s1",
        "s",
        "size",
        "minSkipCount",
        "status",
        "1",
        "for",
        "session",
        "propertyValue",
        "output",
        "queryID",
        "qfield",
        "letChildReport",
        "push",
        "walk",
        "!",
        "p",
        "theValue",
        "description",
        "DVConstraint",
        "PackConfig",
        "maskedQuery",
        "qqNames",
        ".",
        "return",
        "field_1_drawingGroupId",
        "char",
        "dir",
        "bytes",
        "index",
        "pm",
        "runData",
        "new",
        "source",
        "searcher",
        "id",
        "+",
        "nameRecord",
        "pred",
        "boundaryChars",
        "isOpen",
        "arr",
        "password",
        "externalWorkbookNumber",
        "equals",
        "is",
        "partNumber",
        "objType",
        "clauses",
        "parser",
        "regions",
        "toString",
        "docID",
        "field",
        "endOffset",
        "add",
        "=",
        "forward",
        "safelyAllocate",
        "terms",
        "docMap",
        "outputStream",
        "next",
        "domain",
        "key",
        "ignoreCase",
        "pResolvedValue",
        "myanmarAsWords",
        "kind",
        "(",
        "eTag",
        "raw",
        "comparator",
        "write",
        "outermostPrecedenceReturn",
        "directory",
        "state",
        "detectBinary",
        "iterationOn",
        "LinkedList",
        "EMPTY_SOURCE",
        "sharedContextCache",
        "in",
        "docFreqThresh",
        "product",
        "term",
        "inCoreLimit",
        "n",
        "errorCode",
        "promptText",
        "grammarType",
        "message",
        "delegateTerms",
        "classname",
        "functionName",
        "string",
        "!=",
        ";",
        "type",
        "\"",
        "at",
        "lastColumnNumber",
        "statements",
        "row",
        "fragmentSize",
        "accessKeyId",
        "pconfig",
        "input",
        "0",
        "_mode",
        "termText",
        "ErrorType",
        "cjkAsWords",
        "format",
        "get",
        "bytesRef",
        "r",
        "start",
        "sourceFiles",
        "src",
        "c",
        "NullProgressMonitor",
        "}",
        "mutex",
        "assignedClass",
        "out",
        "params",
        "lexer",
        "encode",
        "{",
        "termsEnum",
        "filter",
        "reason",
        "setRequestId",
        "postTag",
        "atn",
        "accessSecret",
        "totalTermFreq",
        "y",
        "current",
        "nameValPairs",
        "numDocs",
        "precedence",
        "denominator",
        "]",
        "positionSensitive",
        "noteData",
        ":",
        "lexState",
        "image",
        "fst",
        "theKey",
        "&",
        "revision",
        "estimatedSegmentSize",
        "&&",
        "maxTokenType",
        "getRoot",
        "username",
        "value",
        "count",
        "Constants",
        "m",
        "defVal",
        "subIndex",
        "rv",
        "column",
        "defaultField",
        "score",
        "a",
        "update",
        "super",
        "maxScan",
        "initSize"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Operators",
      "Semantic Tags": [
        "Data Structures",
        "Object-Oriented Programming",
        "Input/Output",
        "File Processing",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a mix of variable declarations (e.g., `sims`, `crossValidationRatio`, `BytesRef`), object instantiations (e.g., `new StringBuffer`, `Arrays.equals`), method calls (e.g., `startsWith`, `equals`, `get`), and operators (e.g., `==`, `<`, `+`, `.`).  These are fundamental elements in C# programming, used extensively in various aspects of software development, including data manipulation, object interaction, and algorithm implementation. The context sentences showcase their usage in different scenarios, such as string comparison, object initialization, and file processing."
    }
  },
  {
    "c233": {
      "Unique tokens": [
        "packed",
        "proc",
        "f",
        "interpreter",
        "event",
        "StringBuilder",
        "head",
        "heap",
        "iw",
        "bigger",
        "b",
        "token",
        "StringUtil",
        "Type",
        "element",
        "loader",
        "describe",
        "Collections",
        "elementsForKey",
        "ptr",
        "offsets",
        "<",
        "ve",
        "positions",
        "ft",
        "grow",
        "root",
        "dst",
        "reader",
        "append",
        ")",
        "pattern",
        "buckets",
        "shareMaxTailLength",
        "set",
        "originalText",
        "length",
        "buf",
        "rowRecord",
        "cell",
        "urlstr",
        "apache",
        "nr",
        "org",
        "buffer",
        "result",
        "exhausted",
        "list",
        "ctx",
        "currentRow",
        "bq",
        "aux",
        "pos",
        "retVal",
        "config",
        "region",
        "data",
        "home",
        "q",
        "sb",
        "IOUtils",
        "lastChar",
        "fieldConfig",
        "stream",
        "workbook",
        "blocks",
        "args",
        "Row",
        "len",
        "insert",
        "sync",
        "active",
        "shape",
        "[",
        "done",
        "files",
        "bi",
        "BigInteger",
        "csq",
        "ArrayList",
        "builder",
        "cb",
        "values",
        "file",
        "ex",
        "free",
        "byte",
        "fieldNames",
        "float",
        "this",
        "ref",
        "objects",
        "PrintWriter",
        "host",
        "rows",
        "ErrorEval",
        "success",
        "s",
        "target",
        "request",
        "t",
        "size",
        "msg",
        "status",
        "StringTokenizer",
        "session",
        "listener",
        "thrown",
        "p",
        "LittleEndian",
        "qm",
        "ins",
        "slice",
        "it",
        "mods",
        ".",
        "ArrayUtil",
        "metaData",
        "char",
        "dir",
        "bytes",
        "k",
        "returnBuffer",
        "split",
        "oq",
        "elseblocks",
        "link",
        "password",
        "is",
        "parser",
        "matches",
        "SimpleTextUtil",
        "v",
        "elseblock",
        "qc",
        "cells",
        "sorting",
        "ret",
        "toString",
        "previous",
        "elements",
        "commentRecords",
        "add",
        "=",
        "time",
        "final",
        "cr",
        "Span",
        "rval",
        "key",
        "reference",
        "scratch",
        "init",
        "cache",
        "(",
        "md",
        "reset",
        "transitions",
        "d",
        "other",
        "recognizer",
        "state",
        "clear",
        "i",
        "byteBuffer",
        "in",
        "clazz",
        "_ctx",
        "term",
        "n",
        "w",
        "contents",
        "message",
        "smaller",
        ";",
        "Iterator",
        "formats",
        "\"",
        "filler",
        "results",
        "lst",
        "path",
        "shared",
        "err",
        "row",
        "E",
        "res",
        "channel",
        "Block",
        "mask",
        "attribute",
        "input",
        "context",
        "rowIndex",
        "ObjectId",
        "sheet",
        "get",
        "tokenizer",
        "r",
        "out",
        "tnode",
        "c",
        "List",
        "System",
        "dg",
        "}",
        "src",
        "usage",
        "text",
        "sch",
        "current",
        "fmt",
        "parent",
        "e",
        "body",
        "pool",
        "spec",
        "stack",
        "shorty",
        "_input",
        "br",
        "iterator",
        "newParents",
        "records",
        "iter",
        "value",
        "m",
        "rv",
        "logger",
        "T",
        "fields",
        "argv",
        "sorter",
        "a",
        "update",
        "String",
        "array",
        "displayName",
        "URI"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Structures",
        "File I/O",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including objects (e.g., StringBuilder, ProcessBuilder, ObjectId), methods (e.g., append, get, update, createCell), data structures (e.g., List, ArrayList, Map), file I/O operations (e.g., InputStream, OutputStream, File), and string manipulation (e.g., StringBuilder, StringTokenizer, String).  The sentences show these elements being used in various programming tasks, such as creating and manipulating objects, processing data, reading and writing files, and working with strings.  The significance in the context of C# programming is that these tokens and their usage demonstrate fundamental aspects of the language and common programming patterns."
    }
  },
  {
    "c234": {
      "Unique tokens": [
        "\"",
        "collection",
        "withSearch",
        "isInRange",
        "null",
        "f",
        ".",
        "return",
        "sst",
        "untokenizedTypes",
        "input",
        "args",
        ">",
        "firstParent",
        "deserializationOptions",
        "element",
        "initialSize",
        "out",
        "maxTokenCount",
        "c",
        "refs",
        "original",
        "clauses",
        "operation",
        "==",
        "ascending",
        "capacity",
        "maxAgeSec",
        ">=",
        "sheetIndex",
        "containsKey",
        "hunks",
        "newLength",
        "buf",
        "set",
        "str",
        "&&",
        "s",
        "(",
        "margin",
        "length",
        "pList",
        "o",
        "value",
        "rc",
        "size",
        "innerIter",
        "VERSION_CURRENT",
        "string",
        "pathElements",
        "in",
        "flags",
        "instanceof",
        "accountId",
        "refCounts",
        "contains",
        "rs",
        "tokenSource",
        "!",
        "from",
        "fieldName",
        "lruType",
        "if"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Control Flow",
        "Conditional Logic",
        "Object Manipulation",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Keywords like \"if\", \"return\", and operators such as \"==\", \">\", \"&&\", and \"!\" are used extensively for control flow and conditional logic.  The presence of the dot operator (\".\") indicates method invocations and object manipulation.  Several tokens manage exceptions (\"throw\", \"catch\"), and others (\"Collection\", \"Map\", \"List\", \"Array\") point to the use of various data structures."
    }
  },
  {
    "c235": {
      "Unique tokens": [
        "LOG",
        "StringBuilder",
        "getChunks",
        "Type",
        "ByteBuffer",
        "getBytes",
        "<",
        "QueryText",
        "clone",
        "dst",
        ")",
        "CellReference",
        "buffer",
        "result",
        "repo",
        "Element",
        "config",
        "Ref",
        "try",
        "FileRepository",
        "sb",
        "URIish",
        "desc",
        "CharVector",
        "files",
        "[",
        "ArrayList",
        "builder",
        "byte",
        "this",
        "getProperty",
        "name",
        "Sheet",
        "s",
        "t",
        "size",
        "getClass",
        "IntervalSet",
        "opName",
        "Token",
        "Link",
        "Map",
        ".",
        "return",
        "throw",
        "bytes",
        "Class",
        "source",
        "newline",
        "new",
        "+",
        "cv",
        "voidLink",
        "balance",
        "v",
        "flush",
        "slop",
        "=",
        "final",
        "DocumentBuilderFactory",
        "Entry",
        "QueryBuilder",
        "(",
        "File",
        "bb",
        "o",
        "reset",
        "directory",
        "byteBuffer",
        "n",
        ";",
        "Iterator",
        "\"",
        "State",
        "res",
        "StringBuffer",
        "prefix",
        "up",
        "sheet",
        "tokenize",
        "format",
        "r",
        "Locale",
        "List",
        "MutableEntry",
        "System",
        "'",
        "{",
        "text",
        "current",
        "]",
        "kid",
        "T",
        "poi",
        "super",
        "String",
        "other"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "String Manipulation",
        "Exception Handling",
        "Object Cloning",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (e.g., \"try\", \"catch\", \"new\", \"return\"), operators (e.g., \".\", \"+\", \"=\"), identifiers (e.g., \"StringBuilder\", \"LOG\", \"getBytes\", \"clone\"), and types (e.g., \"String\", \"ByteBuffer\", \"ArrayList\", \"Type\").  These tokens are used in various code snippets that perform string manipulation using StringBuilder, object cloning, exception handling, and utilize different data structures like ArrayList and Map.  The significance in the context of C# programming is that they demonstrate common programming patterns and practices within the language."
    }
  },
  {
    "c236": {
      "Unique tokens": [
        "PID_MANAGER",
        "HIDDEN",
        "PID_TITLE",
        "DOCS_AND_FREQS",
        "PLACEHOLDER",
        "TEXT_LENGTH",
        "P_CTIME",
        "EC2_METADATA_ROOT",
        "TYPE_UNMAPPABLE_CHAR",
        "PID_THUMBNAIL",
        "MAX_VALUE",
        "UTF_8",
        "VALUE_INVALID",
        "BYTE1",
        "MAX_RECORD_LENGTH",
        "DECIMAL",
        "TYPE_WORKSHEET",
        "BI_MAX_BASE",
        "PACK_WHOLE",
        "TYPE_MALFORMED_INPUT",
        "SHORT_SIZE",
        "PID_COMPANY",
        "PID_HEADINGPAIR",
        "R_NOTES",
        "FIRST_POSITION",
        "LESS_THAN",
        "2275",
        "MULTI_FIELDS",
        "PID_NOTECOUNT",
        "REGULAR_FILE",
        ")",
        "FIXED_SIZE",
        "PID_WORDCOUNT",
        "PID_CHARCOUNT",
        "SUNDAY",
        "DEFAULT_TIE_BREAKER",
        "PID_CREATE_DTM",
        "PID_LINECOUNT",
        "HIGHER",
        "LOOSE",
        "NO_COMPARISON",
        "EMU_PER_POINT",
        "EMPTY_HEAD_LIST",
        "PID_EDITTIME",
        "INCLUSIVE",
        "GEOMETRY__RIGHT",
        "FIRST_LEVEL_SIZE",
        "EMPTY_TABLE",
        ",",
        "ZZ_PUSHBACK_2BIG",
        "FST",
        "TIME_ZONE",
        "scratchUTF16",
        "PID_LINKSDIRTY",
        "DEFAULT_MERGE_BUFFER_SIZE",
        "OBJECT_ID_LENGTH",
        "EMPTY_PTG_ARRAY",
        "PID_KEYWORDS",
        "PID_LASTSAVE_DTM",
        "PID_DOCPARTS",
        "PID_APPNAME",
        "DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE",
        "TERMS_BASE_RAM_BYTES_USED",
        "XSSF-only",
        "LabelSST",
        "DEFAULT_MAX_MERGE_MB",
        "DEFAULT_MODE",
        "CEILING",
        "murmurhash3_x86_32",
        "BYTE_BLOCK_SIZE",
        "field_13_border_styles1",
        "BASE_RAM_BYTES_USED",
        "NUM_ERROR",
        "PID_HIDDENCOUNT",
        "CONDITION_TYPE_FORMULA",
        "field_15_pattern_style",
        "DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS",
        "BD_2_POW_24",
        "EMPTY_VOCABULARY",
        "PID_SUBJECT",
        "DOCS_AND_FREQS_AND_POSITIONS",
        "PID_PAGECOUNT",
        "INTERCEPT",
        "MIN_PAUSE_CHECK_MSEC",
        "ISO_8859_1",
        "CFTAG_WINDOWS",
        "HALF_BITS",
        "GEOMETRY__BOTTOM",
        "PID_LASTAUTHOR",
        "UTF16LE",
        ".",
        "UNSET_MARK",
        "ENCODED_SIZE",
        "MONDAY",
        "NUM_BYTES_OBJECT_REF",
        "PID_COMMENTS",
        "REF_INVALID",
        "+",
        "FLOOR",
        "REUSE_AS_IS",
        "INVALID_TYPE",
        "PACK_DELTA",
        "DEFAULT_MIN_MERGE_DOCS",
        "KANJINUMERIC",
        "VISIBLE",
        "FORMAT_RFC2616",
        "PID_SCALE",
        "BEARER_TOKEN_SIGNER",
        "SEGMENTS",
        "toString",
        "PID_PARCOUNT",
        "REFSPEC_PUSH_ALL",
        "PID_TEMPLATE",
        "LUCENE_QUERY_CONVERSION_ERROR",
        "WEEK_OF_YEAR",
        "EXPONENT_MASK",
        "SHA256_WITH_RSA_SIGNER",
        "BUILTIN_PRINT_AREA",
        "FEATURE_PROCESS_NAMESPACES",
        "field_1_error_code",
        "FILL__FILLCOLOR",
        "INVALID_ORDINAL",
        "PID_BYTECOUNT",
        "PID_MMCLIPCOUNT",
        "SORTED",
        "PID_CATEGORY",
        "VERSION_CURRENT",
        "EXCLUSIVE",
        "TC_RESET",
        "PID_SECURITY",
        "SUPPORTED_BITS_PER_VALUE",
        "FUNCTION",
        ";",
        "EMPTY_RETURN_STATE",
        "DOCS",
        "INPUT_TYPE",
        "UNKNOWN_SOURCE_NAME",
        "BINARY",
        "OBJECT_ID_STRING_LENGTH",
        "FEATURE_VALIDATION",
        "NUM_BYTES_OBJECT_HEADER",
        "HMACSHA1_SIGNER",
        "LINESTYLE__COLOR",
        "SLOPE",
        "PID_SLIDECOUNT",
        "DATE_RESOLUTION",
        "REFSPEC_TAGS",
        "KANJI",
        "DEFAULT_MIN_BYTES_DIRECT",
        "field_14_border_styles2",
        "RADIX",
        "STRATEGIES",
        "DEFAULT_MIN_MERGE_MB",
        "field_1_index_extern_sheet",
        "PID_PRESFORMAT",
        "REF",
        "CHARSEQUENCE_COMPARATOR",
        "PID_AUTHOR",
        "EXPONENT_SHIFT",
        "GITLINK",
        "BI_MIN_BASE",
        "BLOCK_JOIN",
        "EMPTY_ARRAY",
        "PID_REVNUMBER",
        "0x9747b28c",
        "PID_LASTPRINTED",
        "LOAD_FACTOR",
        "TYPE_VIEW_SELECTED"
      ],
      "Syntactic Label": "Constants and identifiers",
      "Semantic Tags": [
        "Metadata Management",
        "Property Identification",
        "Encoding",
        "Data Structures",
        "File Formats"
      ],
      "Description": "The tokens represent constants and identifiers likely used in a C# application for managing metadata, file formats, and encoding.  They appear to be part of a system for storing and retrieving document properties (e.g., PID_TITLE, PID_AUTHOR), managing file formats (e.g., UTF-8, ISO_8859_1), and handling various data types (e.g., DECIMAL, BYTE1). The context shows usage in methods that manipulate these properties and data, suggesting a role in data management and possibly document processing."
    }
  },
  {
    "c237": {
      "Unique tokens": [
        "getType",
        "b",
        "token",
        "put",
        "++",
        "?",
        "frozen",
        "<",
        "else",
        "old",
        "updateTop",
        "break",
        "ruleIndex",
        ")",
        "int",
        "set",
        "length",
        "bufferUpto",
        "modCount",
        "sign",
        "InterruptedException",
        "previousStop",
        "blockIdx",
        "-",
        "EOF",
        "altNumber",
        "pos",
        "if",
        "null",
        ",",
        "eof",
        "stream",
        "joined",
        ">",
        "lexerAction",
        "DONE",
        "[",
        "Arrays",
        "parents",
        "==",
        "false",
        "Object",
        "0xFF10",
        "payload",
        "this",
        "continue",
        "symbol",
        "stopWords",
        "s",
        "true",
        "t",
        "1",
        "size",
        "synchronized",
        "for",
        "Token",
        "p",
        "currentBlock",
        "arraycopy",
        ".",
        "return",
        "Thread",
        "throw",
        "--",
        "index",
        "new",
        "interrupt",
        "0x0020",
        "+",
        "Pair",
        "MergeThread",
        "newPositions",
        "blockRef",
        "intUpto",
        "toString",
        "currentThread",
        "=",
        "final",
        "toSync",
        "next",
        "key",
        "assert",
        "(",
        "queue",
        "fill",
        "dumpArray",
        "getEndIndex",
        "i",
        "catch",
        "instanceof",
        "nextWrite",
        "n",
        "eofToken",
        "!=",
        ";",
        "\"",
        "Position",
        "writer",
        "doc",
        "input",
        "byteUpto",
        "0",
        "get",
        "r",
        "start",
        "out",
        "c",
        "}",
        "{",
        "getStopIndex",
        "tailBlkIdx",
        "e",
        "]",
        "oversize",
        ":",
        "reuseFirst",
        "nextPtr",
        "String",
        "&&",
        "payloads",
        "getCharPositionInLine",
        "iter",
        "pop",
        "0x0041",
        "count",
        "getLine",
        "T",
        "ruleName",
        "inf",
        "a",
        "join",
        "isAlive"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Data Structures",
        "File IO",
        "Exception Handling",
        "Concurrency Control",
        "Text Processing"
      ],
      "Description": "The tokens represent a wide range of C# language features, including keywords (if, else, for, while, etc.), operators (+, -, ==, !=, etc.), data types (int, String, byte[], etc.), and identifiers (method names, variable names, class names, etc.).  The code snippets demonstrate various programming concepts such as hash table implementation, file reading and writing, exception handling, thread synchronization, and text processing. The context sentences show these tokens used in different syntactic roles within methods and classes, encompassing various programming paradigms."
    }
  },
  {
    "c238": {
      "Unique tokens": [
        "=",
        "final",
        "synchronized",
        "return",
        "}",
        "flags",
        "else",
        "inStream",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Method Return Statements",
        "Control Flow",
        "Variable Assignment",
        "Method Parameters",
        "Data Structures"
      ],
      "Description": "The tokens represent a variety of C# language elements. '=' is an assignment operator. 'final', 'synchronized', and 'return' are keywords related to method behavior and concurrency. '}' is a closing brace for code blocks. 'flags', 'inStream' are identifiers, likely representing variables or parameters. ';' is a statement terminator.  These tokens are significant in C# because they define the structure and functionality of methods, handle control flow, and manage data."
    }
  },
  {
    "c239": {
      "Unique tokens": [
        ",",
        "switch",
        "UnsupportedEncodingException",
        "IOException",
        "try",
        "EvaluationException",
        "return",
        "throw",
        "MissingObjectException",
        "UnsupportedCredentialItem",
        "InvalidRefNameException",
        "++",
        "IncorrectObjectTypeException",
        "c",
        "RecognitionException",
        "{",
        "QueryNodeException",
        "ParseException",
        "RevObject",
        "NoWorkTreeException",
        "byte",
        "GitAPIException",
        "final",
        "Throwable",
        "while",
        "Operator",
        "assert",
        "LargeObjectException",
        "(",
        "HPSFException",
        "write",
        "NotSupportedException",
        "Exception",
        "URISyntaxException",
        "count",
        "synchronized",
        "throws",
        "for",
        "Token",
        "IllegalArgumentException",
        "ParserException",
        "TransportException",
        "super",
        "String",
        "FileNotFoundException",
        "if"
      ],
      "Syntactic Label": "C# language constructs and components",
      "Semantic Tags": [
        "Exception Handling",
        "File Input/Output",
        "Control Flow",
        "Data Structures",
        "Error Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `try`, `catch`, `throw`, `if`, `for`, `while`, `switch` and `return` control program flow and handle exceptions.  Types such as `IOException`, `FileNotFoundException`, `UnsupportedEncodingException`, etc., are used for exception handling related to file and network operations. Data structures like `String`, `byte[]`, and `ArrayList` are used to manage data.  The `++` operator is an increment operator. The `throws` clause in method signatures declares that the method may throw certain exceptions.  Overall, these tokens and sentences demonstrate fundamental C# programming concepts, including exception handling, file I/O, and control flow."
    }
  },
  {
    "c240": {
      "Unique tokens": [
        "field_1_stream_pos",
        "setProductCode",
        "unused1",
        "setUserName",
        "_ptgs",
        "fromConfig",
        "field_1_save_link_values",
        "_lowIx",
        "setImageId",
        "vs",
        "field_1_print_gridlines",
        "setPaths",
        "setResources",
        "setDistributionConfig",
        "chars",
        "_flags",
        "_significand",
        "blockSize",
        "setInstanceIds",
        "setInstanceGroupId",
        "field_1_password",
        "field_1_formatIndex",
        "setNextToken",
        "setItems",
        "setRestrictionType",
        "setSort",
        "setStepConfig",
        "_data",
        "setPublicIp",
        "setChanges",
        "setInstanceRole",
        "setAccessKeyId",
        "set",
        "buf",
        "setJobFlowId",
        "str",
        "_isCaseSensitive",
        "field_1_row_offset",
        "setAvailabilityZone",
        "setCacheParameterGroupFamily",
        "field_1_print_headers",
        "setExclusiveStartTableName",
        "x",
        "_name",
        "intSet",
        "setSubject",
        "setVpcId",
        "if",
        "field_1_hcenter",
        "field_1_gridset_flag",
        "setValue",
        "setToAddresses",
        "setCertificateId",
        "field_1_count",
        "_rowIndex",
        "setCertificateBody",
        "_codepage",
        "_type",
        "setPutRequest",
        "field_1_iterations",
        "setPolicyName",
        "setFederatedUserId",
        "setLoadBalancerNames",
        "setSubnetId",
        "setAttributeName",
        "setLeaf",
        "field_1_col_width",
        "setPath",
        "setDBSnapshotIdentifier",
        "setQueueName",
        "field_2_option_flags",
        "_header_block",
        "setBundleId",
        "setMasterInstanceType",
        "setProtocol",
        "setKey",
        "setNameServers",
        "this",
        "field_1_numerator",
        "field_1_label_index",
        "name",
        "field_1_mode",
        "field_1_formatFlags",
        "setSelectExpression",
        "setCacheClusterId",
        "setName",
        "setMBPerSec",
        "setResourceId",
        "mStartAlpha",
        "input_stream",
        "field_1_units",
        "setCNAMEPrefix",
        "_fontName",
        "setLogGroupName",
        "field_1_first_row",
        "setInstanceId",
        "setDhcpOptionsId",
        "setState",
        "setS",
        "field_1_protect",
        "field_1_seriesNumbers",
        "_bookIndex",
        "return",
        "setId",
        "setDistributionId",
        "field_1_hide_obj",
        "_rv",
        "setBucket",
        "field_1_option_flags",
        "setSNSTopic",
        "setGeoRestriction",
        "baseConfig",
        "errorCheck",
        "setObjectId",
        "setCloudFrontOriginAccessIdentityConfig",
        "setApplicationName",
        "resetCounts",
        "setSize",
        "setText",
        "_functionName",
        "field_1_chartGroupIndex",
        "field_1_borderType",
        "setDeleteRequest",
        "setQueueNamePrefix",
        "entries",
        "_value",
        "setSpotPrice",
        "initCause",
        "setInfoType",
        "cells",
        "field",
        "setHostedZoneId",
        "setCustomerGatewayId",
        "setGroupName",
        "setVpnGatewayId",
        "field_1_backup",
        "setReadCapacityUnits",
        "key",
        "setParameterName",
        "_m",
        "init",
        "setServerCertificateMetadata",
        "(",
        "reset",
        "fstEnum",
        "setDBParameterGroupName",
        "setSourceDBInstanceIdentifier",
        "field_1_max_change",
        "field_1_recalc",
        "_bookName",
        "setSource",
        "_in",
        "setReservedDBInstancesOfferingId",
        "in",
        "field_1_default_country",
        "_hs",
        "setJobFlowIds",
        "setData",
        "_size",
        "setCallerReference",
        "_rawData",
        "_columnWrappingMask",
        "string",
        "field_1_options",
        "path",
        "field_1_vcenter",
        "setVaultName",
        "setDBSecurityGroupName",
        "field_1_reserved",
        "setAccountId",
        "input",
        "setDBInstanceIdentifier",
        "setQueueUrl",
        "setLoadBalancerName",
        "_errorEval",
        "entityName",
        "setCacheParameterGroupName",
        "setDBParameterGroupFamily",
        "setReservedInstancesOfferingId",
        "out",
        "_sid",
        "_reserved",
        "setJar",
        "tokenizer",
        "_regions",
        "recordData",
        "{",
        "setSubscriptionArn",
        "setType",
        "setSS",
        "field_1_index_extern_sheet",
        "field_1_calcmode",
        "setCidrBlock",
        "setVolumeId",
        "setTableName",
        "setSpotInstanceRequestIds",
        "field_1_margin",
        "setBounds",
        "parent",
        "_nameRecord",
        "setKeyName",
        "setDhcpConfigurations",
        "setImageLocation",
        "updateValue",
        "setSnapshotId",
        "setVpnConnectionId",
        "setInstanceGroups",
        "setServerCertificateName",
        "setVolumeIds",
        "value",
        "setTopicArn",
        "setExists",
        "setRawMessage",
        "pckOut",
        "setCacheSecurityGroupName",
        "setDomainName",
        "sock",
        "super"
      ],
      "Syntactic Label": "Method calls and variables",
      "Semantic Tags": [
        "Object instantiation",
        "Data manipulation",
        "Configuration settings",
        "Request handling",
        "State management"
      ],
      "Description": "The tokens represent a mix of method calls (indicated by the 'set' prefix in many tokens) and variables (e.g., field_1_stream_pos, _ptgs).  These are common in C# for object instantiation, data manipulation, managing configuration settings, handling requests, and maintaining application state. The methods often set parameters or attributes of objects, while variables store data or intermediate results. The context sentences show the tokens being used in constructor initializations and method calls, which are fundamental aspects of C# programming."
    }
  },
  {
    "c241": {
      "Unique tokens": [
        "putRequest",
        "paths",
        "setMessageBody",
        "setInvalidationBatch",
        "domainName",
        "userName",
        "policyName",
        "tags",
        "token",
        "ifMatch",
        "vpcId",
        "setStatus",
        "dBParameterGroupName",
        "certificateId",
        "queueNamePrefix",
        "attributeValue",
        "exclusiveStartTableName",
        "attributes",
        "bucket",
        "invalidationBatch",
        "setDBSecurityGroupDescription",
        "cookieExpirationPeriod",
        "environmentName",
        "volumeId",
        "consistentRead",
        ")",
        "selectExpression",
        "deleteRequest",
        "FormatType",
        "customerGatewayId",
        "readCapacityUnits",
        "queueName",
        "setAvailabilityZone",
        "setEntries",
        "queueUrl",
        "setUploadId",
        "parameterValue",
        "spotPrice",
        "resourceId",
        "setVpcId",
        "setToken",
        "targetDBInstanceIdentifier",
        "data",
        "tagKeys",
        "setLogStreamName",
        "limit",
        "instances",
        "reservedDBInstancesOfferingId",
        ",",
        "steps",
        "serialNumber",
        "cidrBlock",
        "setSteps",
        "instanceGroupId",
        "dhcpOptionsId",
        "logStreamName",
        "geoRestriction",
        "setPolicyName",
        "imageId",
        "originAccessIdentity",
        "keyName",
        "cacheParameterGroupName",
        "setDescription",
        "items",
        "itemName",
        "parameterName",
        "snapshotId",
        "jobFlowIds",
        "setParameterNameValues",
        "topicArn",
        "nameServers",
        "SimpleFSLock(path=",
        "name",
        "toAddresses",
        "setVaultNotificationConfig",
        "provisionedThroughput",
        "setDNSName",
        "label",
        "s",
        "enabled",
        "publicIp",
        "dBSnapshotIdentifier",
        "size",
        "changeBatch",
        "status",
        "dBParameterGroupFamily",
        "setPassword",
        "accountId",
        "versionLabel",
        "setChangeBatch",
        "distributionConfig",
        "logGroupName",
        "tableName",
        "callerReference",
        "description",
        "applicationName",
        "federatedUserId",
        "optionSettings",
        "instanceCount",
        ",creationTime=",
        "certificateBody",
        "cloudFrontOriginAccessIdentityConfig",
        "parameterNameValues",
        "setId",
        "jobFlowId",
        "id",
        "+",
        "createDate",
        "subnetId",
        "setAvailabilityZones",
        "setArn",
        "password",
        "vaultNotificationConfig",
        "keySchema",
        "jar",
        "cacheParameterGroupFamily",
        "setJobParameters",
        "serverCertificateName",
        "messageBody",
        "storage",
        "spotInstanceRequestIds",
        "reservedInstancesOfferingId",
        "entries",
        "productCode",
        "toString",
        "filterName",
        "mbPerSec",
        "hostedZoneId",
        "infoType",
        "=",
        "setVpnGatewayId",
        "cacheClusterId",
        "setHealthCheck",
        "attributeName",
        "key",
        "retentionInDays",
        "instanceIds",
        "(",
        "setSourceDBInstanceIdentifier",
        "uploadId",
        "archiveId",
        "arn",
        "getUserLocale",
        "distributionId",
        "setArchiveId",
        "availabilityZone",
        "message",
        "setAttribute",
        ";",
        "\"",
        "setListeners",
        "creationDateTime",
        "path",
        "publicKeyMaterial",
        "listeners",
        "dNSName",
        "accessKeyId",
        "attribute",
        "setVaultName",
        "availabilityZones",
        "receiptHandle",
        "setDBInstanceIdentifier",
        "setEvents",
        "setLabel",
        "cNAMEPrefix",
        "setInstances",
        "loadBalancerNames",
        "}",
        "setInstanceCount",
        "vpnGatewayId",
        "resources",
        "jobParameters",
        "dhcpConfigurations",
        "templateName",
        "setReceiptHandle",
        "nextToken",
        "dBSecurityGroupDescription",
        "setCidrBlock",
        "instanceGroups",
        "volumeIds",
        "sourceDBInstanceIdentifier",
        "cacheSecurityGroupName",
        "vaultName",
        "groupName",
        "dBInstanceIdentifier",
        "imageLocation",
        "loadBalancerName",
        "value",
        "cookieName",
        "healthCheck",
        "vpnConnectionId",
        "ipPermissions",
        "restrictionType",
        "bundleId",
        "instanceId",
        "dBSecurityGroupName",
        "subscriptionArn",
        "strategy"
      ],
      "Syntactic Label": "Setter Methods",
      "Semantic Tags": [
        "Object Configuration",
        "AWS SDK",
        "Resource Management",
        "Request Handling",
        "State Management"
      ],
      "Description": "The tokens represent setter methods commonly found in AWS SDKs for various services.  These methods are used to configure objects representing different AWS resources (e.g., S3 buckets, EC2 instances, DynamoDB tables) before making requests to the AWS service. The semantic tags reflect the core functionality: setting up objects, managing resources, handling requests, and maintaining the state of those resources."
    }
  },
  {
    "c242": {
      "Unique tokens": [
        "getRecordId",
        "objectId",
        "offset",
        "0",
        "data",
        ",",
        "this",
        ".",
        ")",
        "(",
        "+",
        ";"
      ],
      "Syntactic Label": "Method parameters, method calls, member access, array indexing, arithmetic operators, assignment operators, local variables",
      "Semantic Tags": [
        "Data Serialization",
        "Record Management",
        "Binary Data",
        "Listener Pattern",
        "Error Handling"
      ],
      "Description": "The tokens represent elements of C# methods involved in serializing and deserializing binary data structures.  `getRecordId`, `objectId`, `offset`, and `data` are parameters or local variables.  `.` is the member access operator, used to call methods like `getRecordId()` and access members of objects.  `()` are used for method calls.  `+` is an arithmetic operator for offset calculations.  `=` is the assignment operator.  `,` separates parameters and elements in arrays.  The code uses a listener pattern (`EscherSerializationListener`) for callbacks during serialization.  Error handling is present with `RecordFormatException`."
    }
  },
  {
    "c243": {
      "Unique tokens": [
        "",
        "JGitInternalException",
        "exportBase",
        "generator",
        "f",
        "to",
        "setIndexDeletionPolicy",
        "NoHeadException",
        "version",
        "metadata...",
        "?",
        "LOG_PREFIX",
        "Collections",
        "RecognitionException",
        "metadata",
        "<",
        "Note",
        "long",
        "else",
        "IndexWriter",
        "break",
        "notesRef",
        "setRevFilter",
        "upgraded",
        ")",
        "int",
        "infoStream",
        "set",
        "Enforcing",
        "dictionaries",
        "'git",
        "e1",
        "getMergePolicy",
        "tw",
        "-",
        "issues",
        "repo",
        "from",
        "sz",
        "@",
        "if",
        "fireEvent",
        "KeepOnlyLastCommitDeletionPolicy",
        "null",
        ",",
        "o1",
        "Ref",
        "try",
        "Error",
        "startSpecified",
        "IOUtils",
        "impl",
        "default",
        ">",
        "uri",
        "setCallable",
        "NoteMap",
        "[",
        "rm",
        "MessageFormat",
        "setLiveCommitData",
        "read",
        "FileUtils",
        "==",
        "exact",
        "exceptionCaughtDuringExecutionOfRmCommand",
        "ArrayList",
        "anExceptionOccurredWhileTryingToAddTheIdOfHEAD",
        "ex",
        "false",
        "RuntimeException",
        "itr",
        "payload",
        "this",
        "continue",
        "map",
        "name",
        "success",
        "true",
        "synsetSize",
        "CoderResult",
        "setRemoteName",
        "UpgradeIndexMergePolicy",
        "1",
        "Notes",
        "termsOffsets",
        "RecordInputStream",
        "for",
        "GeneralSecurityException",
        "resolve",
        "IllegalArgumentException",
        "commit",
        "ser",
        "affixFile",
        "Dictionary",
        "!",
        "boolean",
        "isEnabled",
        ".",
        "return",
        "IOException",
        "getNote",
        "Thread",
        "throw",
        "inserter",
        "dir",
        "new",
        "found",
        "iwc",
        "analyzerName",
        "id",
        "+",
        "Committed",
        "impl=",
        "ServiceNotEnabledException",
        "revFilter",
        "tempDir",
        "affix",
        "add",
        "=",
        "LATEST",
        "isEmpty",
        "maxCount",
        "final",
        "while",
        "AddNoteCommand",
        "next",
        "assert",
        "(",
        "getObjectReader",
        "directory",
        "dc",
        "RepositoryNotFoundException",
        "gen",
        "notesCommit",
        "db",
        "i",
        "catch",
        "logStep",
        "in",
        "IllegalStateException",
        "w",
        "ParserException",
        "message",
        "ignoreCase",
        "!=",
        ";",
        "\"",
        "JGitText",
        "prePush",
        "ok",
        "Directory",
        "writer",
        "finally",
        "the",
        "MaxCountRevFilter",
        "tn",
        "getMessage",
        "actuallyDeletedFiles",
        "ObjectId",
        "walk",
        "format",
        "tempPath",
        "get",
        "r",
        "List",
        "sneakyThrow",
        "}",
        "'",
        "InfoStream",
        "segments",
        "case",
        "{",
        "XmlSerializer",
        "text",
        "HEAD",
        "ParseException",
        "current",
        "before",
        "FSDirectory",
        "e",
        "error",
        "]",
        "WorkingTreeModifiedEvent",
        "local",
        ":",
        "spec",
        "remoteName",
        "hunspell",
        "getInfoStream",
        "iterator",
        "forceMerge",
        "&&",
        "iter",
        "hasNext",
        "URINotSupported",
        "Constants",
        "closeIndexWriterOnBuild",
        "create",
        "->",
        "commitNoteMap",
        "headId",
        "unlock",
        "String",
        "FileMode"
      ],
      "Syntactic Label": "C# language constructs, identifiers, and operators",
      "Semantic Tags": [
        "Version Control",
        "Git Integration",
        "Object Management",
        "Exception Handling",
        "File System Operations"
      ],
      "Description": "The tokens represent a wide range of C# language features used in the context of Git operations.  They include keywords (if, else, try, catch, for, while), operators (., +, ==, !=, =, <, >, -, +, &&), exception types (IOException, IllegalArgumentException, RuntimeException, GeneralSecurityException, etc.), and identifiers representing Git objects (RevObject, RevCommit, ObjectId, Ref, etc.), file system elements (File, Directory), and data structures (List, Map, etc.). The code snippets demonstrate various functionalities, such as object lookup, index building, submodule handling, note management, and repository operations.  The semantic tags reflect the overall purpose of the code within a Git-related context."
    }
  },
  {
    "c244": {
      "Unique tokens": [
        "int",
        "(",
        "IAcsClient",
        "short"
      ],
      "Syntactic Label": "Data Types and Parameters",
      "Semantic Tags": [
        "Data Representation",
        "Method Parameters",
        "Return Types",
        "Integer Values",
        "Data Access"
      ],
      "Description": "The tokens 'int' and 'short' represent C# data types used for representing integer values.  'IAcsClient' appears to be an interface or class type, likely used as a parameter in a method. The '(' token is an opening parenthesis, typically used to enclose method parameters. These tokens are fundamental in C# for defining method signatures, handling data, and interacting with objects or interfaces."
    }
  },
  {
    "c245": {
      "Unique tokens": [
        "",
        "f",
        "queries",
        "b",
        "vectorsStream",
        "idx",
        "put",
        "VSD",
        "asList",
        "ptr",
        "chars",
        "edges",
        "A",
        "crns",
        "currentSentence",
        "ve",
        "document",
        "startState",
        "set",
        "length",
        "elsesb",
        "buffer",
        "Integer",
        "datFileName",
        "typeCode",
        "-",
        "compound",
        "aux",
        "subfilters",
        "pos",
        "FIRST_LEVEL_SIZE",
        "q",
        "sb",
        "stream",
        "args",
        "len",
        "[",
        "end",
        "minVersion",
        "after",
        "fis",
        "false",
        "rvalue",
        "byte",
        "success",
        "\\\"",
        "anchor",
        "subset",
        "for",
        "<index-dir>",
        "return",
        "--",
        "bytes",
        "rules",
        "readFully",
        "toString",
        "field_pictureData",
        "final",
        "dest",
        "destOff",
        "field_1_string_len",
        "getComponentType",
        "d",
        "o",
        "hdr",
        "in",
        "message",
        "mbk",
        "array2",
        "readTaskClass",
        "e",
        "+=",
        "activeCellCol",
        "indexGen",
        "&",
        "_byname",
        "exceptions",
        "HexDump",
        "nodes",
        "to",
        "charCount",
        "DimensionsRecord",
        "u",
        "j",
        "version",
        "Math",
        "++",
        "2",
        "?",
        "bytesStartArray",
        "resource",
        "unmodifiableCollection",
        "apache",
        "extra",
        "cell",
        "retVal",
        "fileName",
        "offset",
        "not",
        "<=",
        "exists",
        "builder",
        "2.0f",
        "this",
        "host",
        "nRegions",
        "custColor",
        "qm",
        "newInstance",
        ".",
        "source",
        "countNames",
        "original",
        "is",
        "_value",
        "-=",
        "add",
        "=",
        "isEmpty",
        "oso",
        "connectionTimeOut",
        "key",
        "tab",
        "state",
        "valueOf",
        "got",
        "nValues",
        "0xFF",
        "IO",
        "row",
        "res",
        "crA",
        "0",
        "kPtr",
        "eo",
        "format",
        "r",
        "Locale",
        "units",
        "}",
        "<<",
        "Character",
        "reason",
        "outPtr",
        "capacity",
        ":",
        "&&",
        "value",
        "\\n",
        "0.1f",
        "R",
        "poi",
        "utf32",
        "a",
        "was",
        "object",
        "Type",
        "progressMonitor",
        "Collections",
        "field_2_textLength",
        "<",
        "nFrames",
        "root",
        "append",
        "skipBuffer",
        "buf",
        "nr",
        "0xff",
        "org",
        "field_2_num_unique_strings",
        "fni",
        "EOF",
        "writeVLong",
        ",",
        "Illegal",
        "readShort",
        "IOUtils",
        ">",
        "newBackType",
        "bytesUsed",
        "tmpTermState",
        "newCounter",
        "already",
        "Arrays",
        "read",
        "file",
        "\\r",
        "4",
        "true",
        "request",
        "t",
        "getClass",
        "functionImpls",
        "temp",
        "p",
        "No",
        "boolean",
        "makeTable",
        "parse",
        "remove",
        "markAccessed",
        "getBoolean",
        "toUpperCase",
        "but",
        "resourceGroupName",
        "nl",
        "does",
        "step",
        "qc",
        "initCause",
        "lt",
        "slop",
        "safelyAllocate",
        "Boolean",
        "recognizer",
        "no",
        "n",
        "StringUtils",
        "!=",
        "indexInBlock",
        "\"",
        "(fileName=",
        "input",
        "sheet",
        "getRow",
        "get",
        "out",
        "List",
        "'",
        "functionNames",
        "remap",
        "Found",
        "precedence",
        "PPT",
        "sheetNumber",
        "FileInputStream",
        "iterator",
        "rr",
        "rv",
        "kRaw",
        "weightedTerms",
        "md",
        "stop",
        "midValue",
        "such",
        "outputList",
        "qf",
        "_significand",
        "else",
        "be",
        "break",
        ")",
        "ord",
        "cp",
        "int",
        "w5",
        "str",
        "result",
        "minnk",
        "if",
        "null",
        "numChunks",
        "DONE",
        "closeWhileHandlingException",
        "*",
        "V",
        "source=",
        "==",
        "crB",
        "retval",
        ">=",
        "name",
        "ref",
        "s",
        "1",
        "size",
        "toCopy",
        "termState",
        "dib",
        "MAXP",
        "nextPos",
        "Token",
        "thrown",
        "copyLength",
        "arraycopy",
        "char",
        "throw",
        "intIdx",
        "index",
        "new",
        "+",
        "srcIdx",
        "trace",
        "Array",
        "sessionID",
        "(",
        "i",
        "w",
        "pos0",
        ";",
        "Counter",
        "err",
        "maxVersion",
        "MAXIMUM_CAPACITY",
        "bytes.",
        "subTo",
        "start",
        "c",
        "{",
        "field_2_bytes",
        "currentRevision",
        "implReplaceWith",
        "]",
        "0x7f",
        "br",
        "_predicate",
        "parameters:",
        "):",
        "String"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "File IO",
        "String Manipulation",
        "Exception Handling",
        "Algorithm and Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements including variables, keywords, operators, method calls, and data types.  The code snippets demonstrate various programming concepts such as object manipulation, file reading and writing, string building, exception handling, and algorithmic logic. The semantic tags capture the essence of the code's functionality across different examples."
    }
  },
  {
    "c246": {
      "Unique tokens": [
        "[SAVERECALC]",
        "files=%d,",
        "--hard]",
        "[CALCMODE]",
        "to",
        "MB",
        "[%dx%d]",
        "<slop",
        "[/PLOTAREA]",
        "[HEADER]",
        "lines=%d,",
        "mergeMaxNumSegments=",
        "<DeleteOp@",
        "[WINDOWPROTECT]",
        "[BOOKBOOL]",
        "LT",
        "[PROTECT]",
        "[GRIDSET]",
        "[totalMaxDoc=",
        "<tokenizedphrase/>",
        "</slop>",
        "[WRITEACCESS]",
        "<boolean",
        "[SERTOCRT]",
        "time=%.2f",
        "</tokenizedphrase>",
        "<[^>]*>",
        "append",
        ")",
        "<multiPhrase>",
        "buffer",
        "start='",
        "operation='default'>",
        "<paths>...",
        "[SXVS]",
        "[HIDEOBJ]",
        "[PRINTGRIDLINES]",
        "[SeriesToChartGroup]",
        ",",
        "<ReplaceOp@",
        "sb",
        "[INTERFACEHDR]",
        "[PROT4REVPASSWORD]",
        "[HCENTER]",
        "[VCENTER]",
        "<EOF>",
        ">",
        "[STRING]",
        "[/SINDEX]",
        "[END]",
        "[DEFAULTROWHEIGHT]",
        "merges=%d,",
        "writer.getConfig().getIndexDeletionPolicy()",
        "\\t",
        "</boolean>",
        "contextSensitivities=",
        "0x6A",
        "[PALETTE]",
        "estimatedMergeBytes=",
        "<fieldconfig",
        "\\r",
        "operation='default'/>",
        "(maxNumSegments)",
        "tokens",
        "operation='or'>",
        "RemoteRefUpdate[remoteName=",
        "FEATURE]",
        "\\\"",
        "field='",
        "<group>",
        "size",
        "[CODEPAGE]",
        "for",
        "[PRINTHEADERS]",
        "[BottomMargin]",
        "[/DEFAULTROWHEIGHT]",
        "[PLOTAREA]",
        "</boost>",
        "[/END]",
        "fillFields=true",
        ".",
        "return",
        "[LeftMargin]",
        "[DELTA]",
        "RECORD]",
        "line.separator",
        "[PROT4REV]",
        "+",
        "[/UNITS]",
        "[USESELFS]",
        "name=",
        "<quotedfield",
        "[/WRITEPROTECT]",
        "toString",
        "total",
        "[PASSWORD]",
        "[WRITEPROTECT]",
        "1000.0d",
        "value='",
        "(",
        "[PRECISION]",
        "i",
        "DedicatedCapacityInner",
        "n",
        "/2013-04-01/change/{Id}",
        "[TopMargin]",
        ";",
        "\"",
        "[ftEnd]",
        "[FOOTER]",
        "</group>",
        "[/PRINTHEADERS]",
        "limit=%.2f",
        "r",
        "insertSST!",
        "<multiPhrase/>",
        "[ITERATION]",
        "}",
        "'",
        "[1904]",
        "{",
        "</multiPhrase>",
        "STRING]",
        "[/BEGIN]",
        "[FNGROUPCOUNT]",
        "]",
        "[UNCALCED]",
        ":",
        "[COUNTRY]",
        "LimitTokenCountAnalyzer(",
        "remoteName",
        "SLL_DFATransitions=",
        "table]",
        "str.length()=",
        "_input",
        "[REFMODE]",
        "errors=",
        "\\n",
        "null;",
        "[DEFAULTCOLWIDTH]",
        "was",
        "operation='or'/>",
        "other",
        "[/ftEnd]",
        "<tokenizedtphrase>",
        "[BEGIN]",
        "[RECALCID]"
      ],
      "Syntactic Label": "Stringbuilder, identifiers, keywords, operators, method calls",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Logging",
        "Configuration"
      ],
      "Description": "The tokens represent a combination of string manipulation techniques using StringBuilder, identifiers for objects and variables, C# keywords for control flow and object creation, operators for string concatenation and other operations, and method calls for string formatting and object state representation.  These are fundamental aspects of C# programming, frequently used for creating string representations of objects (toString methods), logging information, and configuring application settings. The semantic tags reflect the common uses of these tokens in the provided code snippets."
    }
  },
  {
    "c247": {
      "Unique tokens": [
        "client",
        "request"
      ],
      "Syntactic Label": "Method Parameters",
      "Semantic Tags": [
        "Request Handling",
        "AWS SDK",
        "Client-Server Interaction",
        "API Calls",
        "Asynchronous Operations"
      ],
      "Description": "The tokens `client` and `request` represent parameters passed to numerous C# methods.  In the context of AWS SDKs, `request` objects encapsulate parameters for various AWS service API calls. The methods likely handle requests from a client application to an AWS service, often asynchronously. `client` might refer to an AWS client object used to make the API calls."
    }
  },
  {
    "c248": {
      "Unique tokens": [
        "17",
        "off",
        "C_64",
        "corrected",
        "position",
        "MB",
        "7",
        "StringBuilder",
        "6",
        "startIndex",
        "iSize",
        "children",
        "b",
        "Math",
        "element",
        "++",
        "2",
        "?",
        "termUpto",
        "ptr",
        "chars",
        "5",
        "<",
        "blockSize",
        "getValue",
        "putShort",
        "hash",
        "long",
        "oneChar",
        "streamId",
        "else",
        "xfptr",
        "cal",
        "clone",
        "reader",
        "multiplier",
        ")",
        "ord",
        "npv",
        "int",
        "wp",
        "length",
        "child",
        "flag",
        "toCharArray",
        "maxInt",
        "overhead",
        "buffer",
        "result",
        "payloadScore",
        "-",
        "x",
        "Float",
        "sz",
        "pos",
        "costs",
        "if",
        "3",
        "offset",
        "limit",
        "null",
        ",",
        "base",
        "sb",
        "lastChar",
        "blocks",
        ">",
        "13",
        "cfs",
        "dataSize",
        "len",
        "bitmask",
        "ix",
        "ALL",
        "[",
        "<=",
        "bi",
        "*",
        "end",
        "ArrayList",
        "==",
        "false",
        "byte",
        "float",
        "bufferSize",
        ">=",
        "this",
        "symbol",
        "32",
        "_count",
        "4",
        "carray",
        "number",
        "perMin",
        "day",
        "*=",
        "upto",
        "mark",
        "size",
        "1",
        "|=",
        "double",
        "for",
        "p",
        "num",
        "removed",
        "PERCENT",
        ".",
        "return",
        "ceil",
        "char",
        "5381",
        "--",
        "index",
        "bytes",
        "new",
        "k",
        "intValue",
        "id",
        "+",
        "1000",
        "nextId",
        "log",
        "cv",
        "arr",
        "col",
        "16",
        "v",
        "newText",
        "width",
        "add",
        "=",
        "maxCount",
        "Slice",
        "forward",
        "final",
        "getLength",
        "trate",
        "maxDoc",
        "rate",
        "r1",
        "assert",
        "(",
        "calendar",
        "ixDiff",
        "&=",
        "correct",
        "^=",
        "d",
        "state",
        "o",
        "gen",
        "i",
        "cnt",
        "term",
        "n",
        ">>",
        "/",
        "0xFFFF",
        "string",
        "!=",
        ";",
        "\"",
        "valueCount",
        "0xFF",
        "fileOffset",
        "numMarkers",
        "level",
        "row",
        "UnicodeUtil",
        "max",
        "min",
        "input",
        "0",
        "ADD",
        "get",
        "MINUS",
        "r",
        "start",
        "sum",
        "c",
        "}",
        "'",
        "<<",
        "{",
        "current",
        "%",
        "y",
        "]",
        "line",
        "cmd",
        "+=",
        ":",
        "&",
        "progress",
        "^",
        "br",
        "&&",
        "value",
        "count",
        "constant",
        "skip",
        "flags",
        "64",
        "8",
        "super",
        "object",
        "other",
        "info"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "Mathematical Operations",
        "String Manipulation",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language constructs, including keywords (if, else, for, return), operators (+, -, *, /, %, =, +=, -=, *=, /=, ==, !=, <, >, <=, >=, &, |, ^, &&, ||, ++, --, <<, >>, &=, |=, ^=), data types (int, float, double, byte, char, long, string, boolean), and built-in functions (Math.log, Math.ceil).  They are used in various contexts such as array manipulation, string building, mathematical calculations, file operations, and data structure management. The code snippets demonstrate common programming tasks in C#."
    }
  },
  {
    "c249": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Client-side Request",
        "Input Parameter"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK, likely interacting with an API Gateway. Each method takes a request object as input, processes it (potentially using a 'beforeClientExecution' pre-processing step), and then executes a corresponding operation (e.g., 'executeGetLinkAttributes').  The semantic tags reflect this pattern of client-side requests to an AWS service."
    }
  },
  {
    "c250": {
      "Unique tokens": [
        "SpanQuery",
        "0.10f",
        "compressionMode",
        "CellRangeAddressList",
        "patternRuleIndex",
        "getCalcMode",
        "field_1_save_link_values",
        "hyphenator",
        "b",
        "HSSFConditionalFormattingRule",
        "currentScore",
        "fieldPhraseList",
        "_nextIndex",
        "sheetName",
        "stopTypes",
        "targetMaxSaturation",
        "ruleIndex",
        "expireFact",
        "getQueryConfigHandler",
        "codepage",
        "StempelStemmer",
        "Integer",
        "payloadScore",
        "field_2_denominator",
        "firstSheetNumber",
        "LittleEndianConsts",
        "-",
        "onlyFirstWord",
        "getBigBlockSize",
        "headsStartValue",
        "rk",
        "_rowIndex",
        "tokenIndex",
        "DEFAULT_ARG1",
        "altsets",
        "getLastCommitGeneration",
        "blocks",
        "getDrawingsSaved",
        "0x00FF",
        "dgId",
        "getIndex",
        "_wholePart",
        "w4",
        "validationType",
        "actionIndex",
        "creationTime",
        "field_1_numerator",
        "_count",
        "cardinality",
        "readerIndex",
        "sheetnum",
        "getFirstSheetIndex",
        "Result",
        "Sheet",
        "publicIp",
        "commonWords",
        "anchor",
        "getFrac",
        "termsDictOffsets",
        "getAddMenuCount",
        "getSheetRefIndex",
        "explicitListValues",
        "ISO_8859_1",
        "normMap",
        "_bookIndex",
        "bytes",
        "TopDocs",
        "numberOfRanges",
        "preserveOriginal",
        "IndexInput",
        "textStartPos",
        "lastGeneration",
        "normalizeKana",
        "points",
        "toString",
        "pictureIndex",
        "maxDoc",
        "AnyObjectId",
        "rawBits",
        "getSubs",
        "boosts",
        "getHideObj",
        ".makeQuery(int",
        "valueCount",
        "definedNameIndex",
        "location",
        "treeIndex",
        "srcSheetIndex",
        "rowIndex",
        "bytesRef",
        "BytesRef",
        "getAccessKeySecret",
        "size)",
        "getExcelDate",
        "advertisedRefs",
        "queryPoint",
        "newUrl",
        "lexState",
        "HSSFClientAnchor",
        "pFmt",
        "getSSTRecord",
        "passageStart",
        "valEnd",
        "getLengthValue",
        "sheetNames",
        "coffset",
        "forwardSize",
        "withExclusiveStartTableName",
        "distErrPct",
        "minVocabSymbol",
        "segmentInfo",
        "maxSubwordSize",
        "numShapedUsed",
        "tableArray",
        "numTerms",
        "fontIndex",
        "field_1_formatIndex",
        "noApplyInDelete",
        "drillDownDims",
        "getLastColumn",
        "getActiveThreadStateCount",
        "getWSBool2",
        "address",
        "equalsSameType",
        "DateUtil",
        "getRemoved",
        "awareness",
        "CellType",
        "offset",
        "tf_min",
        "indexToSheet",
        "nBits",
        "field_3_strings",
        "getLambda",
        "maxMultiTermExpansions",
        "getSheetAt",
        "BooleanClause",
        "InformationalMessage",
        "PATH",
        "ptgs",
        "this",
        "cfRule",
        "SheetVisibility",
        "extRefIndex",
        "dimQueries",
        "evalSheet",
        "firstSheetName",
        "formula2",
        "packedIntsVersion",
        "_firstCell",
        "requiredContinuousSize",
        "ruleNames",
        "maxDenominator",
        "field_1_protect",
        "toAppendTo",
        ".",
        "getPtgClass",
        "bloomSize",
        "dim",
        "field_1_value",
        "tokenStart",
        "stringToSign",
        "externs",
        "minWordLength",
        "getWSBool1",
        "getNameText",
        "docMap",
        "WeightedFragInfo",
        "newLimit",
        "currentPayloadScore",
        "state",
        "newToOld",
        "getFirstColumn",
        "getMu",
        "getDelMenuCount",
        "getConflicting",
        "refIndex",
        "TermAndBoost",
        "validating",
        "path",
        "row",
        "_string",
        "maxWordCount",
        "formatTrailer",
        "_encodedTokenLen",
        "getNameIndex",
        "format",
        "_binaryExponent",
        "inCore",
        "mGarbage",
        "fieldAnalyzers",
        "filter",
        "getCfRuleRecord",
        "exactDenom",
        "readUShort",
        "consumeAllTokens",
        "relativeColumnIndex",
        "getEncoder",
        "forInt",
        "ruleRecord",
        "toBufferList",
        "getMissingCellPolicy",
        "value",
        "cannotBeCombined",
        "field_16_pattern_color_indexes",
        "_byteEncoding",
        "IndexFileNames",
        "maxTokenPosition",
        "writeCapacityUnits",
        "operands)",
        "distErr",
        "toArray",
        "formula1",
        "bitsPerValue",
        "getExternSheetIndex",
        "textEndPos",
        "relativeRowIndex",
        "_current_block_count",
        "namedForThisSegment",
        "_uBook",
        "minSubwordSize",
        "getExternSheetRecords",
        "deletePriorCommits",
        "rtFirst",
        "getLastRow",
        "getUntracked",
        "maxVocabSymbol",
        "_fontIndex",
        "getSid",
        "fieldName",
        "mLogic",
        "RamUsageEstimator",
        "field_1_hcenter",
        ",",
        "valStart",
        "field_3_rks",
        ">",
        "ObjectChecker",
        "RowColKey",
        "maxLevels",
        "use1904windowing",
        "Arrays",
        "chseq",
        "rtLast",
        "currentExternSheetIndex",
        "verticalPointsPerPixel",
        "getTotalTermFreq",
        "_character",
        "true",
        "t",
        "longestOnly",
        "CredentialItem",
        "pathMode",
        "lastSheetNumber",
        "getString",
        "nameWithDotGit",
        "zzBuffer",
        "remoteUpdates",
        "dist",
        "tz",
        "characterClass",
        "zzStartRead",
        "_offset",
        "roundSeconds",
        "maxTokenCount",
        "dictionary",
        "clauses",
        "normalizeKanji",
        "field_1_chartGroupIndex",
        "externNameIndex",
        "slop",
        "defaultNumReturnValues",
        "sheetIndex",
        "credentialsProvider",
        "dstSheetIndex",
        "getCurrentCountry",
        "should",
        "lastSheetName",
        "maxCacheRAMMB",
        "workbookName",
        "sharedContextCache",
        "field_1_options",
        "phraseTerms",
        "perThreadPool",
        "tokenStream",
        "maxGramSize",
        "field_1_reserved",
        "getBATCount",
        "input",
        "scaleY",
        "cellRangeAddressList",
        "minGramSize",
        "sensitiveInputCells",
        "sheet",
        "getRow",
        "matchOffsets",
        "_buf",
        "_version",
        "useWhitelist",
        "icredential",
        "externSheetIndex",
        "outputUnigrams",
        "field_7_parsed_expr",
        "readlimit",
        "backingArray",
        "sheetNumber",
        "OperationPtgs",
        "outputs",
        "getFirstRow",
        "getDefaultTable",
        "blob",
        "getSheet",
        "forwardId",
        "hasMultibyte",
        "dataValues",
        "getBoundSheetRecords",
        "rawSheetName",
        "constraint",
        "getChanged",
        "qf",
        "CellRangeAddress",
        "utf8ToString",
        "_significand",
        "IndexRevision",
        "PolishAnalyzer",
        "queueNamePrefix",
        "exclusiveStartTableName",
        "xfptr",
        ")",
        "_cfHeaders",
        "w5",
        "copyOfSubArray",
        "DocValuesType",
        "HSSFAnchor",
        "AccessibilityEvent",
        "w3",
        "toFormulaString(String[]",
        "field_1_print_headers",
        "roleSessionDurationSeconds",
        "cellRangeAddress",
        "currentPutField",
        "HSSFName",
        "withLimit",
        "wordId",
        "0.75f",
        "_sheetIndex",
        "getBits",
        "getNumberOfFieldTokens",
        "maxGoodPoints",
        "values",
        "getBeginIndex",
        "minimumNumberShouldMatch",
        "name",
        "field_1_formatFlags",
        "externSheetNumber",
        "formulaShifter",
        "useRomaji",
        "lookupIndex",
        "minWordSize",
        "size",
        "1",
        "fragCharSize",
        "HSSFCell",
        "BoundSheetRecord",
        "decision",
        "treeId",
        "getGeneration",
        "treeIdx",
        "shardIndex",
        "w2",
        "index",
        "wasEscaped",
        "numxfs",
        "+",
        "defaultAnalyzer",
        "shardHits",
        "BookSheetKey",
        "field_1_xf_index",
        "Occur",
        "segmentOptimizationEnabled",
        "_bookSheetColumn",
        "maxCount",
        "terms",
        "onlyLongestMatch",
        "(",
        "field_1_error_code",
        "okPrefix",
        "NameRecord",
        "operatorType",
        "zzMarkedPos",
        "getMissing",
        "rule1",
        ";",
        "languageSet",
        "getFunctionIndex",
        "EscherRecord",
        "forceFirstLetter",
        "FontRecord",
        "childQuery",
        "namePtg",
        "extIx",
        "_sensitiveInputCells",
        "ValueEval",
        "characterClassName",
        "maxTokenLength",
        "_writeIndex",
        "oldUrl",
        "field_2_bytes",
        "HSSFEvaluationCell",
        "srcColumnIndex",
        "currentNumFrags",
        "]",
        "positionSpans",
        "getDefaultCountry",
        "_lastCell",
        "taxoCommit",
        "_index",
        "minimumLength",
        "lock",
        "surfaceForm",
        "_builtinFormats",
        "initSize"
      ],
      "Syntactic Label": "Variables, Objects, Methods, and Operators",
      "Semantic Tags": [
        "Text Processing",
        "Query Construction",
        "Data Structures",
        "File I/O",
        "Data Serialization"
      ],
      "Description": "The tokens represent a mix of data types (Integer, String, etc.), objects (various classes like TokenStream, QueryParserTokenManager, etc.), methods (e.g., create, evaluate, serialize, etc.), and operators (., +, -, etc.).  These are fundamental components in C# programming, used extensively in various tasks such as text processing (filters, tokenizers), query building (Lucene-related classes), data structure manipulation (lists, arrays), file I/O (InputStream, OutputStream), and data serialization (LittleEndianOutput). The context sentences show these tokens in action within different methods, suggesting a diverse range of functionalities within a likely larger application."
    }
  },
  {
    "c251": {
      "Unique tokens": [
        "",
        "_formats",
        "pointer",
        "f",
        "position",
        "to",
        "b",
        "128",
        "++",
        "2",
        "?",
        "ptr",
        "chars",
        "5",
        "<",
        "hash",
        "exp",
        "short",
        "dst",
        "append",
        ")",
        "int",
        "length",
        "buf",
        "str",
        "buffer",
        "Integer",
        "result",
        "-",
        "from",
        "sz",
        "pos",
        "group",
        "seed",
        "3",
        "offset",
        "data",
        "null",
        ",",
        ">>>",
        "lastChar",
        "blocks",
        ">",
        "len",
        "[",
        "0x00FF",
        "*",
        "end",
        "read",
        "_mask",
        "==",
        "topN",
        "_limit",
        "byte",
        "retval",
        "float",
        ">=",
        "this",
        "32",
        "ref",
        "objects",
        "4",
        "carray",
        "snapshot",
        "s",
        "hashCode",
        "1",
        "double",
        "for",
        "commit",
        "complexData",
        "slice",
        ".",
        "return",
        "ArrayUtil",
        "char",
        "5381",
        "bytes",
        "index",
        "source",
        "new",
        "+",
        "delta",
        "equals",
        "is",
        "readUnsignedShort",
        "elements",
        "=",
        "height",
        "rval",
        "key",
        "scratch",
        "(",
        "d",
        "o",
        "other",
        "sourceLength",
        "i",
        "in",
        ">>",
        "/",
        "!=",
        ";",
        "type",
        "\"",
        "valueCount",
        "comparing",
        "path",
        "mask",
        "0",
        "prefix",
        "bytesRef",
        "start",
        "c",
        "src",
        "ch",
        "}",
        "<<",
        "'",
        "{",
        "]",
        "+=",
        ":",
        "remaining",
        "fst",
        "&",
        "_array",
        "br",
        "String",
        "value",
        "count",
        "\\n",
        "8",
        "BYTES",
        "object",
        "array"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c252": {
      "Unique tokens": [
        "StopMatchmakingRequest",
        "ListInvitationsRequest",
        "GetChangeRequest",
        "DetectStackDriftRequest",
        "CreateHITRequest",
        "TransferDomainRequest",
        "DescribeIdentityRequest",
        "DeleteContactRequest",
        "SelectRequest",
        "UpdatePublicKeyRequest",
        "PutExternalModelRequest",
        "UpdatePushTemplateRequest",
        "ApproveSkillRequest",
        "DeleteAlgorithmRequest",
        "DeleteEventTrackerRequest",
        "GetFaceSearchRequest",
        "GetOutcomesRequest",
        "StopImageBuilderRequest",
        "DeleteDeviceRequest",
        "UpdateIntegrationResponseRequest",
        "PutTargetsRequest",
        "DeleteEventStreamRequest",
        "DeleteObjectRequest",
        "UpdateNodeRequest",
        "DeleteApiMappingRequest",
        "DisableRuleRequest",
        "UpdateStageRequest",
        "CreateFleetRequest",
        "CompleteMigrationRequest",
        "SubscribeToEventRequest",
        "VerifyDomainIdentityRequest",
        "DeleteEventRequest",
        "RunJobFlowRequest",
        "DeleteDirectoryRequest",
        "RegisterImageRequest",
        "GetStaticIpRequest",
        "PutRecordsRequest",
        "DeleteBGPPeerRequest",
        "CreateNodeRequest",
        "GetRoutesRequest",
        "DescribeApplicationRequest",
        "DescribeComponentRequest",
        "TestDNSAnswerRequest",
        "CompleteLayerUploadRequest",
        "UpdateUsagePlanRequest",
        "DeleteTerminologyRequest",
        "ViewBillingRequest",
        "CreateDistributionRequest",
        "GetHITRequest",
        "DescribeCampaignRequest",
        "CopyImageRequest",
        "AssociateVirtualInterfaceRequest",
        "CreateEvaluationRequest",
        "TranslateTextRequest",
        "UpdateApplicationRequest",
        "GetInstanceSnapshotsRequest",
        "StartFaceDetectionRequest",
        "ApplySchemaRequest",
        "DeleteConferenceProviderRequest",
        "DescribeCoipPoolsRequest",
        "UpdateVoiceTemplateRequest",
        "UpdateFolderRequest",
        "AddFacetToObjectRequest",
        "CreateRouteResponseRequest",
        "GetIntegrationsRequest",
        "CreateHostedZoneRequest",
        "CreateVaultRequest",
        "UpdateUsageRequest",
        "PostToConnectionRequest",
        "VoteOnProposalRequest",
        "RecordHandlerProgressRequest",
        "SendMessageRequest",
        "DeleteDBInstanceRequest",
        "DisassociateFleetRequest",
        "TestRoleRequest",
        "GetDomainDetailRequest",
        "GetSendQuotaRequest",
        "PreviewAgentsRequest",
        "PutLifecycleHookRequest",
        "DeleteVpcLinkRequest",
        "DetectSentimentRequest",
        "DescribeScriptRequest",
        "DeleteApplicationOutputRequest",
        "RemoveTagsRequest",
        "CreateIdentityPoolRequest",
        "IndexDocumentsRequest",
        "DeleteAuthorizerRequest",
        "DetectFacesRequest",
        "GetRegionsRequest",
        "CreatePublicKeyRequest",
        "RenewDomainRequest",
        "CompareFacesRequest",
        "StartLabelDetectionRequest",
        "ListDevicesRequest",
        "CreateBackupRequest",
        "GetSchemaAsJsonRequest",
        "DescribeWorkforceRequest",
        "DetachStaticIpRequest",
        "SendUsersMessagesRequest",
        "DescribeEntityRecognizerRequest",
        "CreateCommentRequest",
        "DetectKeyPhrasesRequest",
        "GetAppsRequest",
        "RestoreWorkspaceRequest",
        "RegisterGameServerRequest",
        "DeleteConfigurationSetRequest",
        "CreateRouteRequest",
        "DescribeMatchmakingConfigurationsRequest",
        "CreateNetworkRequest",
        "DescribeOrganizationRequest",
        "DescribeTrialComponentRequest",
        "UpdateExpirationForHITRequest",
        "DeleteIntegrationResponseRequest",
        "DescribeLimitsRequest",
        "DescribeCollectionRequest",
        "GetAssessmentReportRequest",
        "DescribeUpdateRequest",
        "DescribeClustersRequest",
        "TestRenderTemplateRequest",
        "UpdateBrokerRequest",
        "DeleteTagsRequest",
        "CompleteLifecycleActionRequest",
        "TestInvokeAuthorizerRequest",
        "CreateAccessPointRequest",
        "ResolveRoomRequest",
        "StopDBInstanceRequest",
        "CancelClusterRequest",
        "CreateVoiceTemplateRequest",
        "GetSdkTypeRequest",
        "CreateLagRequest",
        "GetVariablesRequest",
        "GetDirectoryRequest",
        "DeleteAccountRequest",
        "DeleteStreamRequest",
        "GetDeploymentsRequest",
        "DescribeMatchmakingRequest",
        "SearchFacesByImageRequest",
        "GetUserRequest",
        "GetSearchSuggestionsRequest",
        "DeleteAttendeeRequest",
        "UpdateSegmentRequest",
        "GetMethodRequest",
        "DeleteDeploymentStrategyRequest",
        "PutSchemaFromJsonRequest",
        "RebootDBInstanceRequest",
        "CreatePresetRequest",
        "DeleteInternetGatewayRequest",
        "CreateTemplateRequest",
        "ReleaseStaticIpRequest",
        "ListApplicationSnapshotsRequest",
        "AddPermissionRequest",
        "ListObjectParentsRequest",
        "CancelResizeRequest",
        "CreateReceiptRuleRequest",
        "CreateApiKeyRequest",
        "UpdateDataSourceRequest",
        "DeregisterGameServerRequest",
        "GetLabelDetectionRequest",
        "DescribeParametersRequest",
        "DescribeTagsRequest",
        "DeleteVerifiedEmailAddressRequest",
        "BatchDetectSentimentRequest",
        "StopStreamProcessorRequest",
        "BatchGetQueryExecutionRequest",
        "GetSegmentsRequest",
        "CreateDetectorRequest",
        "PutVoiceConnectorTerminationRequest",
        "GetStageRequest",
        "ListServicesRequest",
        "DeregisterStreamConsumerRequest",
        "GetInstanceMetricDataRequest",
        "GetBatchPredictionRequest",
        "BatchDetectSyntaxRequest",
        "DetachTypedLinkRequest",
        "GetDeviceRequest",
        "RestorePhoneNumberRequest",
        "GetInstanceStateRequest",
        "DeleteMemberRequest",
        "PurgeQueueRequest",
        "DeleteServiceRequest",
        "SearchUsersRequest",
        "AttachObjectRequest",
        "UpdateClusterRequest",
        "StopDeploymentRequest",
        "ListQueryExecutionsRequest",
        "ListUpdatesRequest",
        "ListNamedQueriesRequest",
        "PauseClusterRequest",
        "ListLedgersRequest",
        "SuspendProcessesRequest",
        "DeleteHostedZoneRequest",
        "CreateAssessmentTargetRequest",
        "ModifyScheduledActionRequest",
        "CreateConferenceProviderRequest",
        "CreateIntegrationRequest",
        "ListDeploymentsRequest",
        "UpdateRelationalDatabaseRequest",
        "ReceiveMessageRequest",
        "ListSignalingChannelsRequest",
        "TestInvokeMethodRequest",
        "DeleteImageBuilderRequest",
        "UpdateRoomMembershipRequest",
        "DeleteContactMethodRequest",
        "GetRouteResponsesRequest",
        "ClassifyDocumentRequest",
        "CreateVpcLinkRequest",
        "ListRecordsRequest",
        "ListProxySessionsRequest",
        "AcceptMatchRequest",
        "DescribeDocumentClassifierRequest",
        "CreateStreamingURLRequest",
        "GetCampaignRequest",
        "DescribeSolutionRequest",
        "DeleteCollectionRequest",
        "ExportImageRequest",
        "ModifyVpcAttributeRequest",
        "ListMemberAccountsRequest",
        "SearchContactsRequest",
        "PutImageRequest",
        "GetTextDetectionRequest",
        "DeleteClusterRequest",
        "DeleteExpressionRequest",
        "CreateDocumentClassifierRequest",
        "DeleteIntegrationRequest",
        "CreateCampaignRequest",
        "DescribeStacksRequest",
        "DeleteSmsTemplateRequest",
        "DescribeDeviceRequest",
        "PutEventStreamRequest",
        "DeleteTrialComponentRequest",
        "CreateBotRequest",
        "UpdateDeploymentStrategyRequest",
        "UpdateDashboardRequest",
        "DeleteVolumeRequest",
        "CreateCollectionRequest",
        "RegisterDomainRequest",
        "DescribeJobFlowsRequest",
        "DeleteStackRequest",
        "CreateStreamRequest",
        "UpdateAddressBookRequest",
        "PutEventsRequest",
        "DescribeWorkspacesRequest",
        "ListDatasetsRequest",
        "ListGatewaysRequest",
        "DeleteStreamProcessorRequest",
        "CancelStepsRequest",
        "DeleteBackupRequest",
        "StopApplicationRequest",
        "ModifyClusterRequest",
        "DetachFromIndexRequest",
        "PutDashboardRequest",
        "GetFacetRequest",
        "BatchGetVariableRequest",
        "AttachToIndexRequest",
        "GetPredictionRequest",
        "StartMigrationRequest",
        "UpgradeAppliedSchemaRequest",
        "ListContactFlowsRequest",
        "DeleteTemplateAliasRequest",
        "ListProposalsRequest",
        "DeleteArchiveRequest",
        "CreateFacetRequest",
        "ResetPasswordRequest",
        "PredictRequest",
        "DescribeVpcAttributeRequest",
        "DescribeProjectsRequest",
        "UpdateVpcLinkRequest",
        "ListRulesRequest",
        "DeleteDeliveryStreamRequest",
        "DescribeRuleRequest",
        "ListShardsRequest",
        "AttachNetworkInterfaceRequest",
        "DescribeMountTargetsRequest",
        "DisassociateDomainRequest",
        "DeregisterTypeRequest",
        "ListTrialsRequest",
        "DescribeStreamConsumerRequest",
        "UpdateAuthorizerRequest",
        "GetAccountBalanceRequest",
        "DeleteBuildRequest",
        "ListStreamsRequest",
        "UpdateRoomRequest",
        "ListTagsForResourceRequest",
        "CreateSnapshotsRequest",
        "CreateVolumeRequest",
        "TagStreamRequest",
        "DescribeEventBusRequest",
        "PutMethodRequest",
        "GetQueryResultsRequest",
        "ReleaseAddressRequest",
        "PutConferencePreferenceRequest",
        "GetVoiceConnectorRequest",
        "DeleteTrialRequest",
        "ListIdentitiesRequest",
        "ListDomainsRequest",
        "GetClusterCredentialsRequest",
        "GetTerminologyRequest",
        "CreateReceiptFilterRequest",
        "StartMonitoringMemberRequest",
        "ListFleetsRequest",
        "ListResolverEndpointsRequest",
        "UpdateUserHierarchyRequest",
        "GetVoiceTemplateRequest",
        "SynthesizeSpeechRequest",
        "CreateClusterRequest",
        "PublishSchemaRequest",
        "PutLexiconRequest",
        "DeleteAddressBookRequest",
        "UpdateLagRequest",
        "ListImportsRequest",
        "UploadLayerPartRequest",
        "GetJobManifestRequest",
        "DeleteVpnGatewayRequest",
        "ListConfigurationsRequest",
        "DeleteMethodRequest",
        "ListAccountsRequest",
        "GetRouteResponseRequest",
        "GetDomainRequest",
        "DeleteAssessmentTemplateRequest",
        "ListObjectChildrenRequest",
        "UpdateBuildRequest",
        "UpdateLedgerRequest",
        "GetDigestRequest",
        "DescribeIdentityPoolRequest",
        "CreateSolutionRequest",
        "StopHumanLoopRequest",
        "AuthorizeIpRulesRequest",
        "AllocateHostsRequest",
        "DeactivateEventSourceRequest",
        "ListWorkerBlocksRequest",
        "GetAccountLimitRequest",
        "GetNetworkRequest",
        "UpdateTerminationProtectionRequest",
        "CreateEventBusRequest",
        "UpdateBatchPredictionRequest",
        "CreateIndexRequest",
        "CreateContactRequest",
        "ResetSnapshotAttributeRequest",
        "ListExportsRequest",
        "UntagStreamRequest",
        "DescribePoliciesRequest",
        "DescribeScheduledActionsRequest",
        "GetInstanceAccessRequest",
        "CloneReceiptRuleSetRequest",
        "UpdateUserSettingsRequest",
        "DeleteVoiceConnectorProxyRequest",
        "ListAssessmentRunsRequest",
        "UpdateGameServerRequest",
        "UpdateDataSetRequest",
        "DetectDocumentTextRequest",
        "DeleteLaunchTemplateRequest",
        "GetProposalRequest",
        "DeletePublicKeyRequest",
        "SendEventRequest",
        "DescribeTemplateRequest",
        "GetExportRequest",
        "DescribeAddressesRequest",
        "DescribeDatasetRequest",
        "ImportVolumeRequest",
        "UpdateDomainRequest",
        "DescribeAssessmentRunsRequest",
        "CreateDataSourceRequest",
        "DeleteRepositoryRequest",
        "StartDeploymentRequest",
        "BatchDeleteClusterSnapshotsRequest",
        "ListTasksRequest",
        "CreateDBClusterRequest",
        "DescribeIndexFieldsRequest",
        "DescribeTrialRequest",
        "ClaimGameServerRequest",
        "GetLoadBalancersRequest",
        "GetConferenceProviderRequest",
        "UpdateBotRequest",
        "DeleteStreamingDistributionRequest",
        "PutSkillAuthorizationRequest",
        "DeleteBrokerRequest",
        "GetEventStreamRequest",
        "ListStacksRequest",
        "DeleteNatGatewayRequest",
        "DescribeExpressionsRequest",
        "BatchGetImageRequest",
        "GetRecordsRequest",
        "GetRoomRequest",
        "CreateDirectConnectGatewayRequest",
        "DescribeStepRequest",
        "AddTagsToStreamRequest",
        "AttachVolumeRequest",
        "BulkPublishRequest",
        "ListSnapshotBlocksRequest",
        "UpdateGatewayResponseRequest",
        "GetInvalidationRequest",
        "GetPhoneNumberRequest",
        "DeleteNetworkInterfaceRequest",
        "RebuildWorkspacesRequest",
        "DeleteScheduledActionRequest",
        "CreateLedgerRequest",
        "DetachObjectRequest",
        "UpdateContainerAgentRequest",
        "DeleteHealthCheckRequest",
        "GetSolutionMetricsRequest",
        "DeleteConnectionRequest",
        "DeleteDeploymentRequest",
        "CreateRelationalDatabaseRequest",
        "AbortMultipartUploadRequest",
        "GetAutoSnapshotsRequest",
        "GetMetricStatisticsRequest",
        "DescribeStreamRequest",
        "PutInsightRuleRequest",
        "ListSolutionsRequest",
        "DescribeInstallationMediaRequest",
        "ModifyVolumeAttributeRequest",
        "UpdateCampaignRequest",
        "SendRawEmailRequest",
        "CreateMeetingRequest",
        "DescribeUsersRequest",
        "DescribeImagesRequest",
        "UploadDocumentsRequest",
        "SearchDashboardsRequest",
        "StopStreamEncryptionRequest",
        "CreateVoiceConnectorRequest",
        "DeregisterImageRequest",
        "ListOrganizationsRequest",
        "TagMeetingRequest",
        "ListAssessmentTargetsRequest",
        "DescribeSecurityGroupsRequest",
        "VerifyEmailAddressRequest",
        "DeleteAssessmentTargetRequest",
        "GetLoadBalancerRequest",
        "ListChangedBlocksRequest",
        "DeleteTemplateRequest",
        "StopMonitoringMembersRequest",
        "DeleteWorkteamRequest",
        "LookupDeveloperIdentityRequest",
        "UpdateDeviceRequest",
        "CreateEventTrackerRequest",
        "ListTerminologiesRequest",
        "DeleteEmailTemplateRequest",
        "CreateGameSessionRequest",
        "ListPartsRequest",
        "ListGameServersRequest",
        "DeleteGraphRequest",
        "GetResolverRuleRequest",
        "DescribeModelRequest",
        "GetSendStatisticsRequest",
        "DeleteVoiceConnectorTerminationRequest",
        "PutRecordRequest",
        "PutMethodResponseRequest",
        "SearchRoomsRequest",
        "ListFindingsRequest",
        "ListSchemasRequest",
        "ListTrialComponentsRequest",
        "StopActivityStreamRequest",
        "UpdateDetectorRequest",
        "DeleteFlowLogsRequest",
        "UpdateSmsTemplateRequest",
        "CreateInterconnectRequest",
        "SendDiagnosticInterruptRequest",
        "DescribeFeatureTransformationRequest",
        "CreateStageRequest",
        "DeletePhoneNumberRequest",
        "AllocatePublicVirtualInterfaceRequest",
        "CreateEntityRecognizerRequest",
        "UntagMeetingRequest",
        "GetDeploymentRequest",
        "ListNetworksRequest",
        "EnableAddOnRequest",
        "RotateEncryptionKeyRequest",
        "CreateSchemaRequest",
        "GetUserSettingsRequest",
        "UpdateServiceRequest",
        "DeleteVaultNotificationsRequest",
        "DescribeSchemaRequest",
        "GetMediaRequest",
        "UnlinkIdentityRequest",
        "TestAlarmRequest",
        "ModifyFleetRequest",
        "SearchGameSessionsRequest",
        "GetDataSourceRequest",
        "ListModelsRequest",
        "DescribeEventsRequest",
        "DeleteMeetingRequest",
        "CreateTrialComponentRequest",
        "DescribeServicesRequest",
        "CreateTagsRequest",
        "StartFleetRequest",
        "GetKeyPairRequest",
        "DeleteCampaignRequest",
        "DeleteDiskRequest",
        "UpdateMemberRequest",
        "DeleteInstallationMediaRequest",
        "DeleteDBClusterRequest",
        "DeleteEmailIdentityRequest",
        "DeleteFolderRequest",
        "DescribeDomainsRequest",
        "StopAssessmentRunRequest",
        "DeleteDirectConnectGatewayRequest",
        "SearchRequest",
        "DeleteInvitationsRequest",
        "DeleteKeyPairRequest",
        "DeleteSubnetRequest",
        "DescribeAlgorithmRequest",
        "DeleteDocumentClassifierRequest",
        "CreateDeploymentRequest",
        "PutVoiceConnectorProxyRequest",
        "GetNodeRequest",
        "DeleteRuleRequest",
        "DescribeWebsiteCertificateAuthorityRequest",
        "ReorderReceiptRuleSetRequest",
        "PutRuleRequest",
        "RevokeInvitationRequest",
        "RemoveFacetFromObjectRequest",
        "CreateDeliveryStreamRequest",
        "DeleteLoadBalancerRequest",
        "DeleteVpcEndpointsRequest",
        "OpenInstancePublicPortsRequest",
        "UpdateGatewayRequest",
        "CreateAuthorizerRequest",
        "ArchiveFindingsRequest",
        "ResetInstanceAttributeRequest",
        "RenderUiTemplateRequest",
        "CreatePushTemplateRequest",
        "AssociateRepositoryRequest",
        "UpdateVariableRequest",
        "GetFolderPathRequest",
        "DeleteSkillAuthorizationRequest",
        "GetAppRequest",
        "GetSmsTemplateRequest",
        "UpdateFleetRequest",
        "UpdatePipelineRequest",
        "UpdateDestinationRequest",
        "DeleteComponentRequest",
        "DescribeLocationsRequest",
        "DescribeAppRequest",
        "CreateObjectRequest",
        "DescribeTypeRequest",
        "GetTagsRequest",
        "DescribeLoadBalancersRequest",
        "GetMeetingRequest",
        "CreateConnectionRequest",
        "BatchDeleteImageRequest",
        "DeleteDomainRequest",
        "SignalWorkflowExecutionRequest",
        "DeleteResolverRuleRequest",
        "DeleteReceiptRuleSetRequest",
        "GetDetectorRequest",
        "DescribeAddressRequest",
        "DeleteModelRequest",
        "UpdateSchemaRequest",
        "DisableLoggingRequest",
        "CreateMembersRequest",
        "DescribeSnapshotAttributeRequest",
        "DescribeKeyPairsRequest",
        "ExecuteChangeSetRequest",
        "BatchReadRequest",
        "DeleteProxySessionRequest",
        "DeleteLabelsRequest",
        "UpdateApiMappingRequest",
        "DescribeFleetsRequest",
        "SendInvitationRequest",
        "UpdateJourneyRequest",
        "UpdateRecordsRequest",
        "InviteUsersRequest",
        "GetIntegrationResponseRequest",
        "DeleteFileSystemRequest",
        "DescribeIpv6PoolsRequest",
        "GetQueryExecutionRequest",
        "AcceptInvitationRequest",
        "FlushStageCacheRequest",
        "UpgradePublishedSchemaRequest",
        "DescribeEventTrackerRequest",
        "ModifyCertificatesRequest",
        "GetIdRequest",
        "CreateHealthCheckRequest",
        "RemovePermissionRequest",
        "GetUsageRequest",
        "GetAuthorizersRequest",
        "AssociateResolverRuleRequest",
        "AllocatePrivateVirtualInterfaceRequest",
        "DeleteFilterRequest",
        "GetFaceDetectionRequest",
        "GetSdkRequest",
        "DeletePipelineRequest",
        "CreateNotificationSubscriptionRequest",
        "DetectLabelsRequest",
        "UpdateRouteRequest",
        "ListNodesRequest",
        "UpdateConferenceProviderRequest",
        "DetectEntitiesRequest",
        "ListPhoneNumbersRequest",
        "DeleteDirectConnectGatewayAssociationRequest",
        "DescribeWorkspaceSnapshotsRequest",
        "DeleteIdentityRequest",
        "DeleteVpnConnectionRequest",
        "CreateAccountRequest",
        "ConfigureAgentRequest",
        "GetFilterRequest",
        "DescribeEndpointsRequest",
        "CreateDiskRequest",
        "UntagQueueRequest",
        "DeleteQueueRequest",
        "ResizeClusterRequest",
        "DescribeStorageRequest",
        "DescribeCertificatesRequest",
        "DisassociateMembersRequest",
        "InviteMembersRequest",
        "GetStagesRequest",
        "DeleteAccessPointRequest",
        "ConfirmConnectionRequest",
        "SearchDevicesRequest",
        "ListLexiconsRequest",
        "DescribeAssessmentTargetsRequest",
        "UpdateMethodResponseRequest",
        "CreateImageBuilderRequest",
        "DeleteIndexFieldRequest",
        "DeleteBasePathMappingRequest",
        "ListDeploymentTargetsRequest",
        "EnterStandbyRequest",
        "DeleteNotificationSubscriptionRequest",
        "GetMetricDataRequest",
        "GetEnvironmentRequest",
        "SendAnnouncementRequest",
        "GetRulesRequest",
        "DeleteBatchPredictionRequest",
        "DeleteAliasRequest",
        "SplitShardRequest",
        "DeleteSolutionRequest",
        "GetTemplateRequest",
        "RebootBrokerRequest",
        "GetConsoleOutputRequest",
        "DeleteReceiptFilterRequest",
        "RebootRelationalDatabaseRequest",
        "GetDeploymentStrategyRequest",
        "GetSegmentVersionsRequest",
        "GetOperationRequest",
        "ConfirmPublicVirtualInterfaceRequest",
        "CreateContactMethodRequest",
        "DetectSyntaxRequest",
        "DescribeWorkteamRequest",
        "DisassociateAddressRequest",
        "CreateScheduledActionRequest",
        "DeleteUserEndpointsRequest",
        "DeleteWorkerBlockRequest",
        "TestEventPatternRequest",
        "DeleteChangeSetRequest",
        "DomainMetadataRequest",
        "TagDeliveryStreamRequest",
        "GetConfigurationSetRequest",
        "DeleteSecurityGroupRequest",
        "GetModelRequest",
        "DisassociateResolverRuleRequest",
        "DeleteRouteSettingsRequest",
        "PutPermissionRequest",
        "DeleteInterconnectRequest",
        "RemoveTargetsRequest",
        "ListClustersRequest",
        "DeleteMessageRequest",
        "ReadPipelineRequest",
        "PutGatewayResponseRequest",
        "UpdateVoiceConnectorRequest",
        "DeleteGatewayResponseRequest",
        "ListAlgorithmsRequest",
        "UpdateWorkteamRequest",
        "PeerVpcRequest",
        "CreateChangeSetRequest",
        "ModifyImageAttributeRequest",
        "DescribeBundleTasksRequest",
        "CreateSubnetRequest",
        "DefineAnalysisSchemeRequest",
        "DescribeDataSourceRequest",
        "UploadMultipartPartRequest",
        "StartDBInstanceRequest",
        "AssociateDomainRequest",
        "SubscribeToDatasetRequest",
        "ListPipelinesRequest",
        "CreateKeyPairRequest",
        "CreateDeploymentStrategyRequest",
        "UpdateFilterRequest",
        "StartApplicationRequest",
        "UpdateResolverRuleRequest",
        "GetMasterAccountRequest",
        "CreateAttendeeRequest",
        "GetFieldLevelEncryptionRequest",
        "GetInstanceRequest",
        "ModifySnapshotAttributeRequest",
        "DescribeVpcEndpointsRequest",
        "UpdateIntegrationRequest",
        "DescribeChangeSetRequest",
        "ListMetricsRequest",
        "UnpeerVpcRequest",
        "RebootClusterRequest",
        "UpdateDomainNameRequest",
        "CreateComponentRequest",
        "UpdateUserRequest",
        "UpdateModelRequest",
        "ModifyHostsRequest",
        "PutAccountSettingRequest",
        "GetAuthorizerRequest",
        "DeleteRoomMembershipRequest",
        "CreateModelRequest",
        "DeleteSchemaRequest",
        "ListAliasesRequest",
        "DeleteModelPackageRequest",
        "DeleteIdentitiesRequest",
        "DeleteLexiconRequest",
        "UpdateDeploymentRequest",
        "AttachTypedLinkRequest",
        "ImportTerminologyRequest",
        "PutAccessControlRuleRequest",
        "UpdateAliasRequest",
        "DetachVolumeRequest",
        "CreateServiceRequest",
        "EnableDirectoryRequest",
        "ListEnvironmentsRequest",
        "CreateLabelsRequest",
        "GetAttendeeRequest",
        "DescribeNodegroupRequest",
        "BatchWriteRequest",
        "PutOutcomeRequest",
        "ListBuildsRequest",
        "DescribeWorkflowExecutionRequest",
        "DeleteFleetsRequest",
        "StartDocumentAnalysisRequest",
        "DescribeEvaluationsRequest",
        "GetRelationalDatabaseRequest",
        "GetResourcesRequest",
        "GetKeyPairsRequest",
        "GetUserEndpointsRequest",
        "UpdateRequestValidatorRequest",
        "DeleteNodeRequest",
        "ExpireSessionRequest",
        "DeleteCustomMetadataRequest",
        "AddApplicationInputRequest",
        "DescribeIdFormatRequest",
        "DeleteMethodResponseRequest",
        "ImportKeyPairRequest",
        "DeleteCustomerGatewayRequest",
        "DeleteIdentityPoolRequest",
        "UpdateMLModelRequest",
        "GetModelTemplateRequest",
        "CreateAliasRequest",
        "ReadPresetRequest",
        "BatchDetectEntitiesRequest",
        "CreateProjectRequest",
        "DeleteApplicationRequest",
        "GetIntegrationRequest",
        "DisassociateRepositoryRequest",
        "CopyWorkspaceImageRequest",
        "DeleteSnapshotScheduleRequest",
        "ListOperationsRequest",
        "CreateRequestValidatorRequest",
        "DeleteUsagePlanRequest",
        "CreateApplicationRequest",
        "SendBonusRequest",
        "PutDetectorRequest",
        "EnableVolumeIORequest",
        "RevokeIpRulesRequest",
        "RebootWorkspacesRequest",
        "UnsubscribeFromDatasetRequest",
        "BatchDeletePhoneNumberRequest",
        "CreateImageRequest",
        "ListStreamConsumersRequest",
        "ModifyIdFormatRequest",
        "ConfigureHealthCheckRequest",
        "DeleteScriptRequest",
        "UpdateIdentityPoolRequest",
        "DescribeBuildRequest",
        "DeleteAccountSettingRequest",
        "ListWorkteamsRequest",
        "DeprecateDomainRequest",
        "RejectSkillRequest",
        "CreateRuleRequest",
        "GetProxySessionRequest",
        "ListUsersRequest",
        "SendBounceRequest",
        "DescribeDeliveryStreamRequest",
        "TerminateWorkspacesRequest",
        "ConfirmPrivateVirtualInterfaceRequest",
        "UpdateGameSessionRequest",
        "RequestUploadCredentialsRequest",
        "DeleteStageRequest",
        "UpdateFacetRequest",
        "AnalyzeDocumentRequest",
        "DescribeObservationRequest",
        "GetContactRequest",
        "CreateDashboardRequest",
        "GetAccountRequest",
        "RegisterStreamConsumerRequest",
        "ListQueuesRequest",
        "DescribeGameServerRequest",
        "GetGatewayResponseRequest",
        "CreateProposalRequest",
        "DisableDirectoryRequest",
        "CreateNatGatewayRequest",
        "DeleteVoiceTemplateRequest",
        "DescribeStreamSummaryRequest",
        "DeleteRequestValidatorRequest",
        "DeleteLoadBalancerListenersRequest",
        "DeleteGroupMembershipRequest",
        "RequestSpotFleetRequest",
        "ListFiltersRequest",
        "DescribeDomainRequest",
        "ImportImageRequest",
        "DeleteNodegroupRequest",
        "GetChannelsRequest",
        "UpdateEnvironmentRequest",
        "DeleteExperimentRequest",
        "CreateAddressBookRequest",
        "GetSegmentRequest",
        "RejectAssignmentRequest",
        "UntagDeliveryStreamRequest",
        "PutAnomalyDetectorRequest",
        "ResolveAliasRequest",
        "PutAlarmRequest",
        "DefineExpressionRequest",
        "UpdateCodeRepositoryRequest",
        "PutIntegrationResponseRequest",
        "CreateDatasetRequest",
        "DeleteDataSetRequest",
        "CreateStreamProcessorRequest",
        "DescribeLocalGatewaysRequest",
        "CreateDBInstanceRequest",
        "DescribeBackupsRequest",
        "DeleteRouteRequest",
        "CreateInvalidationRequest",
        "DetectCustomLabelsRequest",
        "ListIndexRequest",
        "DeleteDBProxyRequest",
        "GetDisksRequest",
        "DeleteMonitoringScheduleRequest",
        "ListScriptsRequest",
        "ListStepsRequest",
        "CreateAddressRequest",
        "SearchFacesRequest",
        "DownloadDefaultKeyPairRequest",
        "GetDocumentRequest",
        "DescribeSnapshotsRequest",
        "ListTypesRequest",
        "DetachDiskRequest",
        "UpdateProxySessionRequest",
        "StopQueryExecutionRequest",
        "ListMultipartUploadsRequest",
        "CreateIntegrationResponseRequest",
        "AddTagsRequest",
        "ContinueUpdateRollbackRequest",
        "GetModelsRequest",
        "PhoneNumberValidateRequest",
        "CreateMemberRequest",
        "GetConnectionRequest",
        "CreateBuildRequest",
        "CreateMLModelRequest",
        "UpdateRouteResponseRequest",
        "DeletePublishingDestinationRequest",
        "CreateFileSystemRequest",
        "DeletePresetRequest",
        "DeleteFleetRequest",
        "DetachNetworkInterfaceRequest",
        "RejectInvitationRequest",
        "UpdateStackRequest",
        "TerminateWorkflowExecutionRequest",
        "UpdateScriptRequest",
        "UpdateFileSystemRequest",
        "AttachDiskRequest",
        "UnsubscribeFromEventRequest",
        "DeleteFacetRequest",
        "GetDistributionRequest",
        "DeletePartnerEventSourceRequest",
        "CreateDomainNameRequest",
        "DeleteEventBusRequest",
        "CreateRepositoryRequest",
        "UpdateTemplateRequest",
        "GetMembersRequest",
        "ResetImageAttributeRequest",
        "AllocateAddressRequest",
        "UpdateTrialRequest",
        "GetResourceRequest",
        "DeleteDomainNameRequest",
        "CreateWorkteamRequest",
        "DetectTextRequest",
        "DisconnectParticipantRequest",
        "VerifyEmailIdentityRequest",
        "DeleteAlarmsRequest",
        "DisableEnhancedMonitoringRequest",
        "UpdateStreamingDistributionRequest",
        "SearchProfilesRequest",
        "ConfirmTransitVirtualInterfaceRequest",
        "ImportApiKeysRequest",
        "GetMethodResponseRequest",
        "DeleteReceiptRuleRequest",
        "CreateFolderRequest",
        "BatchGetApplicationsRequest",
        "DeleteFacesRequest",
        "DeleteRoomRequest",
        "CreateTrialRequest",
        "CreateBatchPredictionRequest",
        "CreateApiMappingRequest",
        "ListTagsRequest",
        "GetHealthCheckRequest",
        "CreatePlayerSessionRequest",
        "MigrateWorkspaceRequest",
        "DescribeActivitiesRequest",
        "IsVpcPeeredRequest",
        "DeleteMLModelRequest",
        "RemoveTagsFromStreamRequest",
        "GetGatewayRequest",
        "UpdatePhoneNumberRequest",
        "DeleteDocumentRequest",
        "DeleteMountTargetRequest",
        "ModifyDBInstanceRequest",
        "StartStreamEncryptionRequest",
        "DescribeSubnetsRequest",
        "EnableRuleRequest",
        "StartFaceSearchRequest",
        "DeleteJourneyRequest",
        "DeleteDashboardRequest",
        "DetachLoadBalancersRequest",
        "DescribeProblemRequest",
        "BatchUpdatePhoneNumberRequest",
        "DescribePlayerSessionsRequest",
        "DescribeHostsRequest",
        "DeleteHumanLoopRequest",
        "GetBundlesRequest",
        "DeleteVpcRequest",
        "ValidateTemplateRequest",
        "DescribeBrokerRequest",
        "UpdatePipelineNotificationsRequest",
        "CreateDBProxyRequest",
        "DescribeRegionsRequest",
        "GetAccountSettingsRequest",
        "UpdateExperimentRequest",
        "DeleteMatchmakingRuleSetRequest",
        "ListApplicationsRequest",
        "SendVoiceMessageRequest",
        "BatchGetDeploymentsRequest",
        "GetBotRequest",
        "StartStreamProcessorRequest",
        "AssociateFleetRequest",
        "DescribeSessionsRequest",
        "ListMembersRequest",
        "DisassociateMembershipRequest",
        "SendEmailRequest",
        "StopFleetRequest",
        "DeleteCodeRepositoryRequest",
        "ExitStandbyRequest",
        "CreateLoadBalancerRequest",
        "ListSkillsRequest",
        "PutMetricAlarmRequest",
        "DeleteHITRequest",
        "SendMessagesRequest",
        "ListResolverRulesRequest",
        "DeleteEventSubscriptionRequest",
        "GetDomainNameRequest",
        "CreateQueueRequest",
        "DescribeStackResourcesRequest",
        "DescribeFindingsRequest",
        "DisableMetricsCollectionRequest",
        "PutCompositeAlarmRequest",
        "DescribeTasksRequest",
        "DescribeCommentsRequest",
        "ListLogPatternsRequest",
        "CreateGraphRequest",
        "DeleteAssessmentRunRequest",
        "DescribeLoaRequest",
        "CreateVpcRequest",
        "DeleteLedgerRequest",
        "DescribeLedgerRequest",
        "DeleteCommentRequest",
        "StopRelationalDatabaseRequest",
        "ListHealthChecksRequest",
        "DescribeAccountRequest",
        "GetApiKeyRequest",
        "AssociateAddressRequest",
        "GetAddressBookRequest",
        "DescribeConversionTasksRequest",
        "DeleteEntityRecognizerRequest",
        "ListCollectionsRequest",
        "ListPresetsRequest",
        "DescribeConfigurationSetRequest",
        "UpdateEvaluationRequest",
        "DeleteSegmentRequest",
        "UpdateTrialComponentRequest",
        "DescribeModelVersionsRequest",
        "CreateAppRequest",
        "GetRevisionRequest",
        "ListAppsRequest",
        "CreateStackRequest",
        "StartQueryExecutionRequest",
        "StartMatchmakingRequest",
        "StartWorkspacesRequest",
        "DeleteInsightRulesRequest",
        "PutModelRequest",
        "DiscoverInputSchemaRequest",
        "GetRequestValidatorRequest",
        "DescribeClusterRequest",
        "GetJobOutputRequest",
        "NotifyWorkersRequest",
        "UpdateComponentRequest",
        "SendCommandRequest",
        "DeleteDistributionRequest",
        "DeleteTagsForDomainRequest",
        "DeleteLagRequest",
        "DescribeReceiptRuleRequest",
        "DescribeGameSessionsRequest"
      ],
      "Syntactic Label": "Request Objects",
      "Semantic Tags": [
        "API Requests",
        "AWS SDK",
        "Service Interaction",
        "Cloud Computing",
        "Resource Management"
      ],
      "Description": "These tokens represent request objects used in an AWS SDK for interacting with various AWS services.  Each object encapsulates parameters for a specific API call, enabling interaction with cloud resources. The context shows a pattern of method calls that take these request objects as input, suggesting a client-side interaction with a remote service."
    }
  },
  {
    "c253": {
      "Unique tokens": [
        "in",
        ")",
        "out"
      ],
      "Syntactic Label": "Parameter Modifiers",
      "Semantic Tags": [
        "Data Serialization",
        "Input/Output Operations",
        "Data Structures",
        "Binary Data",
        "Little Endian"
      ],
      "Description": "In C#, 'in', 'out', and 'ref' are parameter modifiers that control how method parameters are handled.  'in' indicates that the parameter is passed by value and will not be modified by the method. 'out' indicates that the parameter is passed by reference and must be assigned a value within the method.  These are used extensively in the provided code examples for serializing data to a LittleEndianOutput stream, which is a common pattern in binary data handling. The context shows that these modifiers are crucial for managing data flow during serialization."
    }
  },
  {
    "c254": {
      "Unique tokens": [
        "TERM",
        "(null)",
        "[/PRECISION]",
        "position",
        "to",
        "don't",
        "~",
        "Type",
        "?",
        "rowIx=",
        "newObjectId",
        "formatAsString",
        "lookupName",
        "fastForward",
        "<",
        "mapping",
        "[/PRINTGRIDLINES]",
        "append",
        ")",
        "pattern",
        "...",
        "-StreamCopy",
        "[/FEATURE",
        "buffer",
        "getMargin",
        "found.",
        "-",
        "_name",
        "expectedOldObjectId",
        "@",
        "null",
        ",",
        "[/STRING]",
        "sb",
        "USERSVIEWBEGIN",
        ">",
        "[",
        "<=",
        "getIndex",
        "Arrays",
        "*",
        "locale",
        "getFormatIndex",
        "with",
        "getChartGroupIndex",
        ">=",
        "lastSheet=",
        "getLastModifiedInstant",
        "srcRef",
        "[/SAVERECALC]",
        "_numberOfArgs",
        "asFormulaString",
        "\\\"",
        "t",
        "status",
        "[/OBJ]",
        "CT",
        "for",
        "No",
        "locale:",
        "getChild",
        "getRowHeight",
        "LT(1)=",
        "<>",
        ".",
        "return",
        "(R2",
        "preserve_original",
        "RECORD]",
        "(RV",
        "_sfr",
        "+",
        "but",
        "[/",
        "forceUpdate",
        "R2",
        "nCRNs=",
        "col",
        "key:",
        "c:",
        "_functionName",
        "(CT",
        "_value",
        ")(",
        "English",
        "=",
        "message=",
        "srcRef=",
        "(",
        "[/HCENTER]",
        "Repository[",
        "message",
        "/",
        "!=",
        ";",
        "[/GRIDSET]",
        "\"",
        "at",
        "getStringValue",
        "row",
        "nArgs=",
        "toHex",
        "getObjectId",
        "r",
        "System",
        "}",
        "'",
        "HEADERFOOTER",
        "{",
        "getPrintGridlines",
        "\\\\",
        "top",
        "]",
        ":",
        "^",
        "_operator",
        "count",
        "\\n",
        "maxThreadCount=",
        "..",
        "String",
        "HexDump",
        "left"
      ],
      "Syntactic Label": "Lexical Tokens and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "Object Serialization",
        "Data Structures",
        "Logging",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a diverse set of C# language elements.  Many are identifiers for variables and methods, primarily used for string manipulation via StringBuilder objects.  Parentheses, brackets, and operators are used for method calls, object instantiation, and conditional statements.  The frequent use of StringBuilder suggests a focus on string formatting and output, potentially for logging or data serialization.  The presence of array manipulation and data structure usage (e.g., ArrayList) indicates data processing and management.  The semantic tags reflect these key aspects of the code."
    }
  },
  {
    "c255": {
      "Unique tokens": [
        "idx",
        "CellRangeAddress",
        "ptr",
        "field_5_page_break_zoom",
        "long",
        "TimeSpec",
        "else",
        "break",
        "append",
        ")",
        "int",
        "buf",
        "field_4_text",
        "available",
        "sz",
        "pos",
        "if",
        "posToF",
        "part2",
        "setError",
        "try",
        "q",
        "sb",
        "liftUp",
        "termFreqs",
        "Row",
        "[",
        "field_5_history",
        "BigInteger",
        "checkNotClosed",
        "Object",
        "fieldNames",
        "this",
        "ref",
        "open",
        "field_3_username_unicode_options",
        "DFA",
        "CoderResult",
        "size",
        "for",
        "field_4_formatstring",
        "thrown",
        "Map",
        "temp",
        "IllegalArgumentException",
        "output",
        "lastPositions",
        ".",
        "return",
        "_valuesAgg",
        "char",
        "throw",
        "enlargeBuffer",
        "new",
        "field_3_build",
        "interrupted",
        "FileKey",
        "field_4_value",
        "v",
        "flush",
        "precedenceDfa",
        "lastOffsets",
        "add",
        "=",
        "final",
        "field_1_string_len",
        "(",
        "queue",
        "SneakyThrow",
        "oldRevision",
        "n",
        "part",
        "PrecedencePredicate",
        "at",
        ";",
        "Iterator",
        "field_4_year",
        "field_3_username_value",
        "switch",
        "writer",
        "min",
        "0",
        "jumpTable",
        "start",
        "r",
        "BytesRef",
        "List",
        "out",
        "System",
        "case",
        "{",
        "text",
        "ATNDeserializationOptions",
        "_isAddInFunctions",
        "+=",
        ":",
        "searcherMgr",
        "subs",
        "keep",
        "flags",
        "minIn",
        "_uninterpretedData",
        "String",
        "field_5_options"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Exception Handling",
        "File I/O",
        "Object Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `for`, `switch`, `try`, `catch`, and `finally` control program flow.  Data structures such as `List`, `Map`, `Array`, `StringBuilder`, and `Queue` are used for data management.  Exception handling is implemented using `try`, `catch`, and `throw`. File I/O is suggested by the presence of `System.IO`.  The dot operator (`.`) is used extensively for object manipulation, including method calls and property access."
    }
  },
  {
    "c256": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Request Handling",
        "AWS SDK",
        "Client-Server Interaction",
        "API Calls"
      ],
      "Description": "The opening parenthesis '(' in C# is used to enclose parameters in method definitions and calls. In this context, it's part of the method signatures for various AWS SDK methods, indicating the input parameters (requests) required for each operation.  The parameters are typically objects representing the input data for the corresponding AWS service API call."
    }
  },
  {
    "c257": {
      "Unique tokens": [
        "INFO",
        "WriteLineDocTask",
        "EscherSimpleProperty",
        "escherBSERecords",
        "CryptoFunctions",
        "ATNState",
        "IndexFileNames",
        "SheetNameFormatter",
        "segmentInfo",
        "FieldQueryNode",
        "UDFFinder",
        "StringUtil",
        "IndexOptions",
        ")",
        "FooterKey",
        "EscherPropertyTypes",
        "CellReference",
        "ATN",
        "CodecUtil",
        "EscherRecordTypes",
        "EscherChildAnchorRecord",
        "ConfigConstants",
        "ATNConfigSet",
        "EscherTextboxRecord",
        "LittleEndianConsts",
        "QueryParserMessages",
        "RamUsageEstimator",
        "CellType",
        "metrics",
        "SpatialOperation",
        "blip",
        "SupBookRecord",
        "ValidationType",
        "writeFooter",
        "EscherContainerRecord",
        "GroupQueryNode",
        "CountUtils",
        "BoolErrRecord",
        "AggregateFunction",
        "SshConstants",
        "CodingErrorAction",
        "iwConf",
        "EscherOptRecord",
        "AbstractDictionary",
        "[",
        "TreeFilter",
        "OperatorType",
        "POIFSConstants",
        "typeString",
        "PaletteRecord",
        "AnalysisToolPak",
        "ConfigurationKeys",
        "ErrorEval",
        "_unmappableErrors",
        "PredictionMode",
        "CredentialItem",
        "SemanticContext",
        "Token",
        "_iBook",
        "_firstCell",
        "WordType",
        ".",
        "_valuesAgg",
        "BooleanQueryNode",
        "UScript",
        "StaticFontMetrics",
        "+",
        "instead.",
        "SimpleTextUtil",
        "HSSFSimpleShape",
        "as",
        "=",
        "EOFRecord",
        "AnchorType",
        "CFHeader12Record",
        "hssf",
        "(",
        "NameRecord",
        "_malformedErrors",
        "FormulaError",
        "CharSequenceOutputs",
        "_externSheetRecord",
        "MethodType",
        "JGitText",
        "GroupQueryNodeBuilder",
        "IntStream",
        "PathFilterGroup",
        "RevCommit",
        "getDataFormatStringCache",
        "DrawingGroupRecord",
        "fontMetricsProps",
        "SeekStatus",
        "CmpOp",
        "RawParseUtils",
        "get",
        "Implementation",
        "NoDeletionPolicy",
        "FSTTermsWriter",
        "returnCellReference",
        "Character",
        "FunctionMetadataRegistry",
        "ParseTree",
        "PointQueryNode",
        "ExtSSTRecord",
        "QueryTreeBuilder",
        "MAXIMUM_SUPPORTED_DISTANCE",
        "EscherRecordFactory",
        "Constants",
        "_lastCell",
        "CFHeaderRecord",
        "areaEval",
        "Decryptor",
        "Biff8EncryptionKey"
      ],
      "Syntactic Label": "C# identifiers, keywords, operators, and special characters",
      "Semantic Tags": [
        "Data Structures",
        "File I/O",
        "Data Processing",
        "Object Serialization",
        "Version Control"
      ],
      "Description": "The tokens represent a wide range of C# language elements used in various functionalities.  Identifiers name classes, methods, variables, and constants. Keywords define the structure and behavior of the code (e.g., public, void, if, while, etc.). Operators perform operations on data. Special characters like parentheses, brackets, and the dot operator contribute to the syntax. The code snippets demonstrate file I/O operations, data processing, object serialization, and version control tasks, common in software development."
    }
  },
  {
    "c258": {
      "Unique tokens": [
        "expect",
        "f",
        "Executor",
        "RemoteSession",
        "nodeName",
        "ATNState",
        "ObjectReader",
        "MutableObjectId",
        "Workbook",
        "DiffAlgorithm",
        "Collection",
        "FormulaCellCacheEntry",
        "token",
        "ParserExtension",
        "UDFFinder",
        "HSSFConditionalFormattingRule",
        "Message",
        "ByteBuffer",
        "CellRangeAddress",
        "Font",
        "<",
        "RecordVisitor",
        "long",
        "RenameCallback",
        "BreakIterator",
        "FreeRefFunction",
        "TermsEnum",
        "short",
        "TextFragment",
        "SpanQueryBuilder",
        "int",
        "ColumnInfoRecord",
        "RevFlag",
        "flag",
        "item",
        "merge",
        "ProgressMonitor",
        "PointTransitions",
        "ExtendedFormatRecord",
        "IndexChangedListener",
        "RecordStream",
        "PersonIdent",
        "AbstractTreeIterator",
        "FileHeader",
        "FST",
        "TermInfo",
        "URIish",
        "Cell",
        "LocalDate",
        "by",
        "CodepageRecord",
        "listFormula",
        "CellValueRecordInterface",
        "[",
        "WorkingTreeIterator",
        "TreeFilter",
        "RefEval",
        "V",
        "RuleContext",
        "FieldInvertState",
        "byte",
        "Object",
        "float",
        "name",
        "TokenStream",
        "executor",
        "s",
        "SubRecord",
        "InputStream",
        "RevFlagSet",
        "Collector",
        "Date",
        "double",
        "RevSort",
        "HSSFCell",
        "Token",
        "session",
        "output",
        "RefsChangedListener",
        "RefSpec",
        "boolean",
        "RawTextComparator",
        "SortField",
        "OneMerge",
        "PackConfig",
        "HSSFShape",
        "IndexOutput",
        "tag",
        ".",
        "char",
        "QueryConfigHandler",
        "FormatError",
        "id",
        "CredentialsProvider",
        "ObjectIdRef",
        "IndexInput",
        "AbstractEscherHolderRecord",
        "ClientAnchor",
        "wrap",
        "TreeFormatter",
        "Set",
        "RevObject",
        "final",
        "OutputStream",
        "QueryBuilder",
        "LocalDateTime",
        "Sort",
        "(",
        "File",
        "Point",
        "AnyObjectId",
        "CharTermAttribute",
        "NameRecord",
        "dc",
        "hide",
        "state",
        "TermData",
        "EscherProperty",
        "Item",
        "alg",
        "message",
        "string",
        "sort",
        "newState",
        "ConditionalFormattingRule",
        "Reduce",
        "Resolution",
        "EscherRecord",
        "ConfigChangedListener",
        "Color",
        "Parser",
        "FontRecord",
        "E",
        "RevCommit",
        "StringBuffer",
        "DateTools",
        "Reader",
        "BytesRef",
        "Lexer",
        "List",
        "collector",
        "Name",
        "RevFilter",
        "lexer",
        "TreeWalk",
        "FormulaRenderingWorkbook",
        "String",
        "Repository",
        "DirCache",
        "column",
        "AbbreviatedObjectId",
        "pc",
        "FieldConfigListener",
        "CharSequence",
        "DataValidationConstraint",
        "FieldInfo",
        "object"
      ],
      "Syntactic Label": "Methods, Objects, Variables, Dot Operator, Parameters, Data Types, Keywords, Array Access, Generic Types",
      "Semantic Tags": [
        "Data Processing",
        "Object Manipulation",
        "Filtering",
        "Stream Processing",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Methods are frequently called using the dot operator, manipulating objects and their properties.  Variables store data of various types (int, string, boolean, etc.), often used as parameters in method calls.  Arrays are accessed using the array access operator ([]). Generic types (e.g., List<T>, Set<T>) are used for collections. Keywords (e.g., if, public, static) control program flow and access modifiers.  The code snippets show common operations like creating and manipulating objects, filtering data, and performing various utility functions."
    }
  },
  {
    "c259": {
      "Unique tokens": [
        "{"
      ],
      "Syntactic Label": "Method",
      "Semantic Tags": [
        "AWS SDK",
        "Resource Management",
        "Cloud Services",
        "API Interaction",
        "Request-Response Cycle"
      ],
      "Description": "These C# code snippets represent methods within an AWS SDK. Each method likely interacts with a specific AWS service's API to perform a create, get, update, or delete operation on a particular resource.  The pattern of taking a request object, performing pre-execution steps ('beforeClientExecution'), and then executing a service-specific operation ('execute...') is common in SDKs for managing cloud resources."
    }
  },
  {
    "c260": {
      "Unique tokens": [
        ",",
        "XmlPullParserException",
        "IOException",
        "ClientException",
        "EvaluationException",
        "LineNumberReader",
        "MissingObjectException",
        "NoHeadException",
        "InvalidRefNameException",
        "ServiceNotEnabledException",
        "IncorrectObjectTypeException",
        "RecognitionException",
        "{",
        "QueryNodeException",
        "ParseException",
        "GitAPIException",
        "CharacterCodingException",
        "int",
        "LargeObjectException",
        "HPSFException",
        "Exception",
        "NotSupportedException",
        "hasNext",
        "URISyntaxException",
        "RepositoryNotFoundException",
        "InterruptedException",
        "RefNotFoundException",
        "throws",
        "for",
        "InvalidShapeException",
        "IllegalArgumentException",
        "ParserException",
        "TransportException",
        "CorruptObjectException",
        "FileNotFoundException",
        "if"
      ],
      "Syntactic Label": "Exception Handling, Control Flow, and Data Types",
      "Semantic Tags": [
        "Exception Handling",
        "File Input/Output",
        "Iteration",
        "Conditional Logic",
        "Data Processing"
      ],
      "Description": "The tokens represent various aspects of C# programming.  'throws' is used for exception handling, declaring that a method might throw specific exceptions.  'IOException', 'XmlPullParserException', etc., are exception types. 'for' and 'if' are control flow statements for iteration and conditional logic.  'int' is a data type.  These tokens and sentences are significant in C# because they demonstrate fundamental programming concepts such as error handling, data manipulation, and control flow within file processing and other operations."
    }
  },
  {
    "c261": {
      "Unique tokens": [
        "f",
        "1D",
        "reverse",
        "position",
        "to",
        "defaultValue",
        "query",
        "UTF_8",
        "qf",
        "b",
        "Math",
        "suffix",
        "?",
        "2",
        "lowerInclusive",
        "asList",
        "getBytes",
        "chars",
        "getTime",
        "<",
        "getValue",
        "long",
        "date",
        "Interval",
        "clone",
        "copy",
        "short",
        "getPathString",
        "reader",
        "multiplier",
        ")",
        "length",
        "toCharArray",
        "upperInclusive",
        "-",
        "x",
        "fieldName",
        "round",
        "limit",
        "null",
        ",",
        "o1",
        "100",
        "obj",
        "of",
        "args",
        ">",
        "toLowerCase",
        "len",
        "substring",
        "files",
        "[",
        "getName",
        "fs",
        "end",
        "FALSE",
        "locale",
        "*",
        "V",
        "==",
        "values",
        "false",
        "float",
        "0.0",
        ">=",
        "this",
        "name",
        "trim",
        "l",
        "resolution",
        "true",
        "s",
        "bindings",
        "hashCode",
        "1",
        "size",
        "getClass",
        "msg",
        "class",
        "bool",
        "!",
        "IS_COMPLEX",
        ".",
        "bytes",
        "TRUE",
        "new",
        "id",
        "+",
        "col",
        "transportNeedsRepository",
        "equals",
        "word",
        "currentTimeMillis",
        "1.0d",
        "response",
        "o2",
        "toString",
        "ext",
        "field",
        "final",
        "SHOULD",
        "Boolean",
        "arg0",
        "key",
        "sqrt",
        "(",
        "d",
        "o",
        "valueOf",
        "i",
        "in",
        "instanceof",
        ">>",
        "/",
        "!=",
        "Loc",
        "\"",
        "arg1",
        "path",
        "_string",
        "ROOT",
        "max",
        "pow",
        "now",
        "input",
        "0",
        "TYPE",
        "section",
        "get",
        "endpoint",
        "r",
        "start",
        "Locale",
        "c",
        "List",
        "System",
        "}",
        "cfg",
        "{",
        "filter",
        "y",
        "current",
        "MUST",
        "]",
        "cmd",
        ":",
        "prohibited",
        "&",
        "String",
        "&&",
        "replacement",
        "value",
        "subs",
        "T",
        "->",
        "numberVE",
        "Double",
        "a",
        "object",
        "other",
        "getDefault"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Method Definitions",
        "Mathematical Operations",
        "String Manipulation",
        "Object Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including method definitions (public, static, return), mathematical functions (Math.log, Math.sqrt, Math.pow), string manipulation (append, toString, substring, toLowerCase), object handling (null, Object, equals, hashCode, instanceof), and data structures (List, Set, Map, Array).  These elements are fundamental to C# programming and are used extensively in various aspects of software development."
    }
  },
  {
    "c262": {
      "Unique tokens": [
        "\"",
        "n,",
        "",
        ",",
        "normalized",
        ".",
        "df",
        "docCount)",
        "computed",
        "of",
        "documents",
        "details",
        "+",
        "?",
        "1)",
        "match",
        "0.5))",
        "sum",
        "of:",
        "docCount,",
        "s3:",
        "log(1",
        "}",
        "'",
        "getDocFreq",
        "*",
        "(n",
        "docCount",
        "(F",
        "scoreTimes1pTfn",
        "idf,",
        "docFreq,",
        "from:",
        "with",
        "total",
        "field",
        "occurrences",
        "all",
        "float",
        "as",
        "idf(),",
        "lambda",
        "Explanation",
        ")",
        "stats",
        "0.5)",
        "number",
        "getTotalTermFreq",
        "(",
        "1f",
        "(N",
        "1",
        "getClass",
        "tfn,",
        "idf(docFreq,",
        "0.1f",
        "(tfn",
        "frequency",
        "across",
        "term",
        "-",
        "n",
        "1))",
        "containing",
        "F,",
        "tfn",
        "/",
        ";",
        "N,"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c263": {
      "Unique tokens": [
        "hiknoengine",
        "GetPhotoStore",
        "ToggleFeatures",
        "GetPrivateAccessUrls",
        "DeleteRepoWebhook",
        "QueryAddUserInfo",
        "UpdateFace",
        "MoPenFindGroup",
        "InactivatePhotos",
        "GetRepoBatch",
        "GetRepoBuildLogs",
        "DeletePhotoStore",
        "UpdateRepoBuildRule",
        "DeleteNamespace",
        "GetRepoList",
        "DeleteImage",
        "GetRepoSourceRepo",
        "CancelRepoBuild",
        "StartRepoBuildByRule",
        "GetIndustryInfo",
        "SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredential",
        "GetFramedPhotoUrls",
        "SetQuota",
        "UnbindInstance2Vpc",
        "GetIndustryInfoLineageList",
        "QueryCustomerByPhone",
        "GetMirrorList",
        "cloudphoto",
        "GetDownloadUrls",
        "SetMe",
        "GetPhotos",
        "MoPenDeleteGroupMember",
        "MergeFaces",
        "SubmitCutoutTask",
        "CreateCollection",
        "QuerySyncPicSchedule",
        "DeleteAlbums",
        "CreateRepoWebhook",
        "CreateEvent",
        "ModifyJumpserverPassword",
        "DeleteDeviceAllGroup",
        "CreateNamespaceAuthorization",
        "QueryLicenses",
        "DeleteFace",
        "ListMomentPhotos",
        "UpdateRepoSourceRepo",
        "GetQuota",
        "RemoveAlbumPhotos",
        "OperateEquipment",
        "ListTimeLines",
        "GetCollection",
        "/namespace",
        "MoPenCreateDevice",
        "MoPenQueryCanvas",
        "InvokeServiceAsync",
        "GetRepoSyncTask",
        "SearchRepo",
        "SetFaceCover",
        "MoPenDeleteGroup",
        "ListTimeLinePhotos",
        "PredictCategory",
        "UpdateNamespaceAuthorization",
        "SetAlbumCover",
        "QueryAuthentication",
        "GetNamespaceAuthorizationList",
        "MoPenDoRecognize",
        "GetImageScan",
        "EditPhotoStore",
        "ListEvents",
        "Hadoop",
        "Ccs",
        "MoveAlbumPhotos",
        "Ots",
        "GetImageManifest",
        "RecognizePet",
        "MoPenBindIsv",
        "StartImageScan",
        "GetOnlineServiceResult",
        "MopenCreateGroup",
        "CreateRepoSyncTask",
        "QueryAllGroups",
        "RebootInstance",
        "DeleteRepo",
        "GetUserSourceRepoList",
        "DeleteDeviceGroup",
        "ListPhotoStores",
        "RebootJumpserver",
        "StartRepoBuild",
        "RecognizeLabel",
        "OnsMqtt",
        "RecognizeEntity",
        "/collections",
        "PostRealTimeDeviceData",
        "GetEvent",
        "BindInstance2Vpc",
        "SendMessage",
        "CreateUserInfo",
        "/mirrors",
        "SearchImage",
        "QueryCustomerById",
        "ListFacePhotos",
        "DeleteCollection",
        "ReactivatePhotos",
        "ApplyToken",
        "RegisterFace",
        "GetOSSImageAccess",
        "GetRepoSyncTaskList",
        "ModifyStrategyTarget",
        "TranslateText",
        "GetUserSourceRepoRefList",
        "GetSearch",
        "GetNamespaceList",
        "LinkFace",
        "GetSubUserList",
        "ListPhotos",
        "GetRepoBuildStatus",
        "GetLibrary",
        "RegistrantProfileRealNameVerification",
        "ListPhotoFaces",
        "GetAlgorithmList",
        "aegis",
        "StartJumpserver",
        "/regions",
        "ots",
        "GetSimilarPhotos",
        "DeleteRepoAuthorization",
        "Chatbot",
        "RenameAlbum",
        "ListMoments",
        "GetIndustryInfoList",
        "DeleteNamespaceAuthorization",
        "DeleteTags",
        "/search",
        "UpdateKnowledge",
        "GetRepoAuthorizationList",
        "BuyOriginPictures",
        "ImageSearch",
        "EditPhotos",
        "luban",
        "QueryGroupUsers",
        "/users",
        "SyncFacePictures",
        "BatchSendMessages",
        "GetImageLayer",
        "CloudPhoto",
        "\"",
        "SaveTaskForUpdatingRegistrantInfoByIdentityCredential",
        "imagesearch",
        "onsmqtt",
        "MoveFacePhotos",
        "MoPenSendMqttMessage",
        "MoPenAddGroupMember",
        "DeleteEvent",
        "CreateUserSourceAccount",
        "QueryFace",
        "hpc",
        "DeleteUserSourceAccount",
        "ListRegisteredTags",
        "GetNamespace",
        "EditEvent",
        "SubmitGenerateTask",
        "AddImage",
        "HPC",
        "RecognizeFlower",
        "UpdateUserInfo",
        "GetRepoWebhook",
        "RegisterPhoto",
        "mopen",
        "CreateNamespace",
        "GetIndustryInfoChildrenList",
        "/batchsearch",
        "UpdateInstance",
        "UpdateNamespace",
        "ccs",
        "RevokeToken",
        "SearchPhotos",
        "ListFaces",
        "beebot",
        "/users/sourceAccount",
        "GetDownloadUrl",
        "SearchFace",
        "GetRepoTags",
        "GetRegion",
        "AsyncResponsePost",
        "GetAlbumsByNames",
        "LikePhoto",
        "FetchMomentPhotos",
        "RemoveFacePhotos",
        "GetRepoListByNamespace",
        "CreateTicket",
        "MoPen",
        "CreatePhotoStore",
        "GetThumbnails",
        "TagPhoto",
        "RegisterTag",
        "DeleteRepoBuildRule",
        "UpdateRepoAuthorization"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "API",
        "Request",
        "Cloud Services",
        "Resource Management",
        "Asynchronous Operations"
      ],
      "Description": "These tokens represent names of methods in a C# application, likely designed to interact with various cloud services and manage resources.  The methods appear to be part of a larger API, handling requests and potentially performing asynchronous operations.  The naming convention suggests a RESTful API design, with methods corresponding to specific actions (e.g., Get, Update, Delete, Create)."
    }
  },
  {
    "c264": {
      "Unique tokens": [
        "",
        "\"",
        "proto",
        "data",
        "remove",
        "switch",
        ".",
        "return",
        "sb",
        "res",
        "throw",
        "finally",
        "Thread",
        "to",
        "min",
        "max",
        "new",
        "b",
        ">",
        "++",
        "2",
        "r",
        "out",
        "c",
        "if",
        "ptr",
        "addAll",
        "System",
        "alphabetSize",
        "{",
        "field_4_string_len",
        ";",
        "flush",
        "else",
        "byte",
        "retval",
        "=",
        ">=",
        "append",
        ")",
        "int",
        "repetitions",
        "buf",
        "&&",
        "s",
        "(",
        "true",
        "synSetID",
        "b=",
        "db",
        "IllegalStateException",
        "i",
        "operands",
        "checkBufferSize",
        "pos",
        "base=inpack:"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Exception Handling",
        "File I/O",
        "Object Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `switch`, `return`, `throw`, and `finally` control program flow.  Data structures such as `StringBuilder`, `byte[]`, `ArrayList`, `List<>`, `Map<>`, and `Set<>` are used for data management.  Exception handling is implemented with `try`, `catch`, and `throw`. File I/O is suggested by `InputStream`, `OutputStream`, `Reader`, and `Writer`.  The `System` namespace and various object manipulations using the dot operator (`.`) are also present."
    }
  },
  {
    "c265": {
      "Unique tokens": [
        "",
        "newbuf",
        "b",
        "getValueString",
        "toArray",
        "0.0D",
        "1099511628211L",
        "isSymbolic",
        "IdentityHashMap",
        "ruleIndex",
        ")",
        "int",
        "w5",
        "length",
        "tooBig",
        "Integer",
        "w3",
        "bytesEquals",
        "null",
        "o1",
        ",",
        "ParserRuleContext",
        ">",
        "[",
        "getName",
        "MutableValueBool",
        "exists",
        "MutableValueStr",
        "parents",
        "==",
        "w4",
        "false",
        ">=",
        "FieldAndTerm",
        "this",
        "s",
        "label",
        "size",
        "for",
        "push",
        "!",
        "pair",
        "arraycopy",
        "localctx",
        ".",
        "return",
        "throw",
        "w2",
        "source",
        "new",
        "Pair",
        "equals",
        "matches",
        "v",
        "o2",
        "field",
        "=",
        "copyBytes",
        "rval",
        "assert",
        "lock",
        "(",
        "o",
        "fill",
        "state",
        "instanceof",
        "term",
        "_ctx",
        ";",
        "unchecked",
        "0",
        "cmp",
        "get",
        "}",
        "invokingStateNumber",
        "{",
        "_parentContextStack",
        "MutableValueDate",
        "_other",
        "current",
        "parent",
        "]",
        ":",
        "MutableValueDouble",
        "&&",
        "4294967295L",
        "LabelAndValue",
        "value",
        "rc",
        "invokingState",
        "exceptions",
        "contains",
        "super",
        "enterRecursionRule",
        "String",
        "other",
        "w1",
        "compareTo"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Object Comparison",
        "Data Structures",
        "Exception Handling",
        "Method Implementation",
        "Object Copying"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Many are identifiers for objects, methods, and variables.  Operators like `==`, `!=`, `&&`, and `instanceof` are used for comparisons and logical operations. Keywords such as `new`, `return`, `throw`, `if`, `for`, `assert`, and `lock` control program flow and exception handling.  The code snippets demonstrate object comparison, data structure manipulation (arrays, maps), exception handling, method implementations, and object copying.  The presence of `MutableValue` classes suggests a system for managing mutable values with existence flags. The use of `IdentityHashMap` indicates the use of identity-based hashing."
    }
  },
  {
    "c266": {
      "Unique tokens": [
        "_evaluationFrames",
        "addName",
        "field_1_seriesNumbers",
        ".",
        "return",
        "sb",
        "_validationList",
        "StringBuilder",
        "b",
        "nItems",
        "checkHeaderNoMagic",
        "bytesUsed",
        "_is16bitUnicode",
        "out",
        "[",
        "}",
        "outputPos",
        "totalMaxDoc",
        "HashMap",
        "Arrays",
        "<",
        "{",
        "_numberOfFormulas",
        "else",
        "_numberOfRegions",
        "false",
        "capacity",
        "add",
        "=",
        "encoding",
        "Files",
        "final",
        "this",
        "Entry",
        "append",
        ")",
        "name",
        "elementData",
        "int",
        "rval",
        "assert",
        "s",
        "(",
        "true",
        "NameRecord",
        "buffer",
        "initMap",
        "deserializer",
        "absRowIx",
        "catch",
        "result",
        "_shift_count",
        "for",
        "retVal",
        "sort",
        "if"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Object Manipulation",
        "File I/O",
        "Assertions"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `for`, `return`, `catch` control program flow.  Data structures such as `StringBuilder`, `HashMap`, `Arrays`, and `List` are used for data management.  The dot operator (`.`) is extensively used for object manipulation, including method calls and property access.  `Files` suggests file I/O operations.  `assert` indicates the use of assertions for debugging and verification."
    }
  },
  {
    "c267": {
      "Unique tokens": [
        "",
        "off",
        "MAX_TOKEN_POSITION_KEY",
        "b",
        "Math",
        "NGramTokenFilter",
        "++",
        "2",
        "?",
        "val",
        "<",
        "dx2",
        "bucket",
        "copy",
        "short",
        "Short",
        ")",
        "ord",
        "int",
        "length",
        "buf",
        "MIN_BLOCK_SIZE",
        "Integer",
        "list",
        "MAX_KEY",
        "PATTERN",
        "newArray",
        "-",
        "x",
        "Float",
        "subfilters",
        "group",
        "3",
        "RamUsageEstimator",
        "MAX_TOKEN_COUNT_KEY",
        "offset",
        "data",
        "null",
        ",",
        "dy2",
        ">>>",
        "args",
        "len",
        "maxSizeNeeded",
        "[",
        "*",
        "values",
        "false",
        "byte",
        "float",
        "bPtr",
        ">=",
        "this",
        "Byte",
        "rows",
        "pAt",
        "ints",
        "s",
        "MIN_KEY",
        "t",
        "1",
        "size",
        "MAX_BLOCK_SIZE",
        "output",
        "StandardAnalyzer",
        ".",
        "return",
        "index",
        "DEFAULT_MAX_CODE_LENGTH",
        "k",
        "new",
        "+",
        "totalFormulaLen",
        "resultLength",
        "MAX_CODE_LENGTH",
        "strkey",
        "=",
        "(",
        "PROTECTED_TOKENS",
        "hdr",
        "state",
        "MIN_CAPACITY_INCREMENT",
        "dx1",
        "i",
        "in",
        "Long",
        "n",
        ">>",
        "/",
        "postingsArray",
        ";",
        "GROUP",
        "\"",
        "nAvailableBytes",
        "valueCount",
        "lexerActions",
        "20",
        "CONSUME_ALL_TOKENS_KEY",
        "0",
        "start",
        "workingTreeIt",
        "'",
        "<<",
        "remap",
        "}",
        "Character",
        "maxTokenLength",
        "RADIX",
        "dy1",
        "numPoints",
        "%",
        "precedence",
        "]",
        "oversize",
        "+=",
        ":",
        "&",
        "&&",
        "Constants",
        "count",
        "->",
        "Double",
        "BYTES",
        "array",
        "minSize",
        "valuesOffset"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Structures",
        "Control Flow",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language constructs.  Keywords like \"public\", \"if\", \"for\", \"return\" control program flow.  Operators like \"+\", \"-\", \"*\", \">>\", \"&&\" perform arithmetic and logical operations.  Identifiers such as \"args\", \"data\", \"buffer\", \"length\" refer to variables and objects.  The dot operator (\".\") is used for method invocation.  The tokens also show the use of various data structures like arrays, lists, and maps.  There is evidence of file I/O operations as well."
    }
  },
  {
    "c268": {
      "Unique tokens": [
        "="
      ],
      "Syntactic Label": "Assignment Operator",
      "Semantic Tags": [
        "Parameter Passing",
        "Method Chaining",
        "Request Preprocessing",
        "AWS SDK",
        "Client-Side Logic"
      ],
      "Description": "The '=' operator is used extensively to assign values, particularly in the context of method parameters.  In this C# code, it's used to assign a request object after preprocessing ('beforeClientExecution') before passing it to another method ('execute...'). This pattern is common in AWS SDKs where client-side logic modifies requests before execution."
    }
  },
  {
    "c269": {
      "Unique tokens": [
        "getInt",
        "getBigBlockSize",
        ",",
        ".",
        "getShort",
        "findBiggest",
        "putCompressedUnicode",
        "args",
        "writeShort",
        "readCRC",
        "BytesRef",
        "putShort",
        "coerceValueToDouble",
        "decodeInt32",
        "readInt",
        "grow",
        "nextLF",
        "readUShort",
        "compareUInt32",
        "writeLong",
        "readUByte",
        "fillSlice",
        "writeUnicodeString",
        ")",
        "writeInt",
        "getByteOrder",
        "putInt",
        "(",
        "writeByte",
        "coerceValueToInt",
        "readUnicodeString",
        "putUnicodeLE",
        "hasMultibyte",
        "findSmallest"
      ],
      "Syntactic Label": "Methods and parameters",
      "Semantic Tags": [
        "Data Input/Output",
        "Data Serialization",
        "Data Structure Manipulation",
        "File Processing",
        "Data Transformation"
      ],
      "Description": "The tokens represent methods used for reading and writing data, manipulating data structures, and performing file processing operations.  These methods are commonly used in C# applications that handle binary data or files, such as those dealing with configuration, data storage, or document processing.  The parameters often represent data buffers, file streams, or other data structures used in these operations."
    }
  },
  {
    "c270": {
      "Unique tokens": [
        "getType",
        "_ptgs",
        "offsetAttribute",
        "f",
        "off",
        "facetEntry",
        "head",
        "b",
        "digest",
        "vs",
        "property",
        "ptr",
        "algorithm",
        "edges",
        "ends",
        "lines",
        "cal",
        "document",
        "ruleIndex",
        "length",
        "shapes",
        "matcher",
        "buffer",
        "otherCommit",
        "arraySize",
        "walker",
        "_list",
        "-",
        "limit",
        "fromBound",
        "rawPath",
        "data",
        "q",
        "fieldData",
        "anal",
        "blocks",
        "args",
        "len",
        "categoriesName",
        "[",
        "fis",
        "keySet",
        "inclusive",
        "_count",
        "readerIndex",
        "eval",
        "ttype",
        "snapshot",
        "pList",
        "foreground",
        "commitUserData",
        "_rows",
        "output",
        "commit",
        "sf",
        "bytes",
        "prevPtr",
        "oldProcessor",
        "alts",
        "v",
        "rootMap",
        "bytesStart",
        "fr",
        "elements",
        "final",
        "builders",
        "tmpFreqs",
        "_factory",
        "baos",
        "raw",
        "newName",
        "db",
        "in",
        "fieldInfo",
        "term",
        "treeData",
        "Trees",
        "string",
        "at",
        "dbf",
        "location",
        "docs",
        "collator",
        "newMap",
        "termsEnum",
        "states",
        "sve",
        "bufferStart",
        "top",
        "errors",
        "e",
        "processor",
        "toInclusive",
        "renameDetector",
        "testValue",
        "nextPtr",
        "program",
        "func",
        "Constants",
        "fields",
        "docSize",
        "numfonts",
        "separatorIndex",
        "packed",
        "nodes",
        "atMax",
        "heap",
        "rec",
        "charFilter",
        "nameIndex",
        "blockSize",
        "all",
        "fetch",
        "pmt",
        "cell",
        "find",
        "serialize",
        "deserializer",
        "list",
        "repo",
        "ks",
        "sheetRefIndex",
        "offset",
        "rectypes",
        "endIndex",
        "props",
        "uris",
        "boostAtt",
        "infoOffset",
        "posLengths",
        "currPtr",
        "bi",
        "builder",
        "timeout",
        "newObjectIds",
        "processors",
        "last",
        "_breaks",
        "roleName",
        "this",
        "collectionStats",
        "host",
        "arrays",
        "es",
        "popCount",
        "copyOfHeads",
        "listener",
        "push",
        "resolved",
        "currentBlock",
        ".",
        "pushURIs",
        "sid",
        "hashes",
        "user",
        "runData",
        "mem",
        "dim",
        "hashFunction",
        "original",
        "parser",
        "cells",
        "_value",
        "decisionToState",
        "endOffset",
        "field",
        "=",
        "key",
        "commitGen",
        "state",
        "directory",
        "cnt",
        "_ctx",
        "tokenSource",
        "path",
        "_representation",
        "row",
        "res",
        "cmpResult",
        "context",
        "0",
        "currentTop",
        "fullPath",
        "format",
        "r",
        "src",
        "System",
        "}",
        "params",
        "Character",
        "filter",
        "text",
        ":",
        "records",
        "iter",
        "xf",
        "value",
        "siblings",
        "bytesID",
        "a",
        "object",
        "starts",
        "position",
        "startIndex",
        "iw",
        "token",
        "StringUtil",
        "distErr",
        "details",
        "bmap",
        "millis",
        "formula1",
        "Collections",
        "treeStart",
        "root",
        "fontFormatting",
        "bsrs",
        "instance",
        "buf",
        "upstreamName",
        "child",
        "qrj",
        "modCount",
        "docIn",
        "subAgg",
        "entrySet",
        "startOffset",
        "oldValue",
        "freqs",
        "group",
        "limit_backward",
        ",",
        "evals",
        "Cell",
        "desc",
        "active",
        "italic",
        "termStats",
        "_limit",
        "ints",
        "_character",
        "pack",
        "task",
        "ourMin",
        "t",
        "mark",
        "tempParent",
        "intervals",
        "p",
        "idf",
        "it",
        "rawData",
        "factory",
        "ArrayUtil",
        "sst",
        "k",
        "loose",
        "nameRecord",
        "_offset",
        "currentOffset",
        "sheetIndex",
        "url",
        "passphrase",
        "properties",
        "cache",
        "filename",
        "recognizer",
        "tracker",
        "record",
        "n",
        "!=",
        "\"",
        "Block",
        "bufferLength",
        "toBound",
        "attribute",
        "now",
        "doc",
        "input",
        "nItems",
        "port",
        "shortPath",
        "sheet",
        "getRow",
        "get",
        "out",
        "ptg",
        "docIDs",
        "bos",
        "iterator",
        "termOrd",
        "count",
        "rv",
        "logger",
        "ti",
        "token_source",
        "flags",
        "termAttribute",
        "array",
        "cc",
        "bcsg",
        "ByteArrayOutputStream",
        "BitSet",
        "stringToMatch",
        "formatIndex",
        "threshold",
        "hash",
        "positions",
        "attributes",
        "dst",
        "reader",
        ")",
        "ord",
        "int",
        "smap",
        "refSpecs",
        "str",
        "startCommit",
        "tfr",
        "startPoint",
        "result",
        "ctx",
        "finished",
        "bold",
        "region",
        "config",
        "instances",
        "null",
        "sheetRecords",
        "_sheetIndex",
        "fieldConfig",
        "bra",
        "workbook",
        "labels",
        "frame",
        "otherState",
        "shape",
        "offsetAtt",
        "csq",
        "==",
        "Bound",
        "values",
        "stateNumber",
        "retval",
        "Object",
        ">=",
        "fetchedEOF",
        "name",
        "tokens",
        "objects",
        "elementData",
        "decisions",
        "s",
        "label",
        "DFA",
        "target",
        "upto",
        "size",
        "cur",
        "opName",
        "decision",
        "dir",
        "removeTop",
        "index",
        "new",
        "numxfs",
        "+",
        "password",
        "voidLink",
        "ket",
        "entries",
        "previous",
        "ext",
        "terms",
        "next",
        "(",
        "transitions",
        "perField",
        "i",
        "stemClass",
        "beginA",
        ";",
        "getTarget",
        "writer",
        "channel",
        "thedata",
        "tokenizer",
        "start",
        "c",
        "parseTrees",
        "_re",
        "current",
        "pool",
        "names",
        "]",
        "tmpDocs",
        "kid",
        "widthInteger",
        "_array",
        "bufferPosition",
        "cursor",
        "entry",
        "fetched",
        "block",
        "other",
        "w1"
      ],
      "Syntactic Label": "Method Names, Variables, Parameters, and Objects",
      "Semantic Tags": [
        "Object Creation",
        "Data Structures",
        "Record Management",
        "Algorithm Implementation",
        "Query Processing"
      ],
      "Description": "The tokens represent a mix of method names (e.g., removeShape, kthLargest, create), variables (e.g., shape, v, k), parameters (e.g., tokenName, type, label), and objects (e.g., StringBuffer, TermsEnum, QueryNode).  These are fundamental elements in C# programming, used for various purposes such as object manipulation, data storage and retrieval, algorithm execution, and query processing. The context sentences show their usage in different scenarios, including object instantiation, method calls, data structure manipulation, and algorithm implementation."
    }
  },
  {
    "c271": {
      "Unique tokens": [
        "K",
        "null",
        "table",
        ",",
        ".",
        "prev",
        "return",
        "eKey",
        "--",
        "index",
        "new",
        ">",
        "first",
        "++",
        "[",
        "if",
        "}",
        "<",
        "{",
        "hash",
        "V",
        "==",
        "postRemove",
        "e",
        "]",
        "=",
        ":",
        ")",
        "HashtableEntry",
        "next",
        "&",
        "int",
        "key",
        "length",
        "modCount",
        "&&",
        "(",
        "tab",
        "value",
        "size",
        "1",
        "-",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Hash Table Implementation Tokens",
      "Semantic Tags": [
        "Hash Table",
        "Data Structure",
        "Key-Value Pairs",
        "Collision Handling",
        "Dynamic Resizing"
      ],
      "Description": "The tokens represent elements of a C# hash table implementation.  They are involved in key-value storage, hash function calculation, collision resolution (chaining), and dynamic resizing of the hash table to maintain performance as the number of elements increases.  The code shows operations like put (insertion), get (retrieval), remove (deletion), and containsKey/containsValue (membership checks).  Special characters like '[' and ']' denote array access, '.' is the member access operator, and '==' and '!=' are comparison operators.  The overall structure demonstrates a common approach to implementing hash tables in C#."
    }
  },
  {
    "c272": {
      "Unique tokens": [
        "stop",
        "off",
        "f",
        "blocksOffset",
        "srcCnt",
        "query",
        "startIndex",
        "BitSet",
        "maxTokenPosition",
        "patternRuleIndex",
        "defaultValue",
        "nPoints",
        "charCount",
        "version",
        "exactFirst",
        "grams",
        "dateFormat",
        "val",
        "bitsPerValue",
        "doubleCount",
        "green",
        "fontIndex",
        "blockSize",
        "dx2",
        "basis",
        "long",
        "maxWriteLen",
        "bytesPerElement",
        "bucket",
        "minInclusive",
        "short",
        "root",
        "namePos",
        "ruleIndex",
        "longArray",
        "instruction",
        ")",
        "startInclusive",
        "int",
        "shareMaxTailLength",
        "length",
        "startRow",
        "startOffset",
        "sz",
        "pos",
        "sheetRefIndex",
        "tfn",
        "CellType",
        "scoreMode",
        "offset",
        "data",
        ",",
        "dy2",
        "lstartIndex",
        "endIndex",
        "desc",
        "ruleStatus",
        "len",
        "maxLevels",
        "facetFieldMultivalued",
        "stopIndex",
        "use",
        "ip",
        "maxIn",
        "[",
        "y2",
        "end",
        "pOffset",
        "minVersion",
        "x1",
        "exact",
        "iterations",
        "floatCount",
        "values",
        "echo",
        "srcColNum",
        "timeout",
        "srcCellCol",
        "byte",
        "name",
        "postags",
        "array",
        "inContext",
        "ttype",
        "subFrom",
        "pre",
        "t",
        "longestOnly",
        "higherWeightsFirst",
        "double",
        "maxShingleSize",
        "prefixLength",
        "maxThreadCount",
        "maxExpansions",
        "transpositions",
        "ie",
        "p",
        "decision",
        "intCount",
        "boolean",
        "packedIntsVersion",
        "srcLen",
        "writeProx",
        "endRow",
        "nameLen",
        "facetPrefix",
        "char",
        "bytes",
        "binaryExponent",
        "srcOffset",
        "x2",
        "+",
        "srcIdx",
        "arr",
        "longIndex",
        "writeOffsets",
        "externNameIndex",
        "width",
        "endOffset",
        "originalLength",
        "time",
        "pictureIndex",
        "height",
        "sheetIndex",
        "textStart",
        "stemDerivational",
        "docNameExtractTime",
        "shortCount",
        "longCount",
        "sizeLimit",
        "fullCtx",
        "o",
        "stage",
        "gen",
        "cnt",
        "i",
        "maxMS",
        "typeHint",
        "mode",
        "hi",
        "type",
        "valueCount",
        "definedNameIndex",
        "y1",
        "startColumn",
        "maxVersion",
        "channel",
        "rstartIndex",
        "min",
        "separator",
        "subTo",
        "BytesRef",
        "start",
        "idBuf",
        "newLen",
        "workspaceName",
        "col2",
        "shortIndex",
        "endColumn",
        "array2",
        "blue",
        "dy1",
        "srcColumnIndex",
        "externSheetIndex",
        "y",
        "capacity",
        "numDocs",
        "ambigAlts",
        "body",
        "]",
        "consumeAllTokens",
        "activeCellCol",
        "prompt",
        "dstOffset",
        "row2",
        "extendedDataSize",
        "fragment",
        "replacement",
        "value",
        "count",
        "dedup",
        "yPoints",
        "maxInclusive",
        "fields",
        "columnIndex",
        "endInclusive",
        "post",
        "String",
        "maxEdits",
        "FileMode",
        "rarray",
        "valuesOffset"
      ],
      "Syntactic Label": "Variables,Parameters,Method names,Keywords,Operators,Data Types",
      "Semantic Tags": [
        "Data Structures",
        "Data Processing",
        "Algorithm Implementation",
        "Input/Output",
        "Control Flow"
      ],
      "Description": "The tokens represent a mix of variables, method parameters, method names, keywords (like public, void, int, if, for, while, etc.), operators (+, =, ==, etc.), and data types (int, long, byte, float, double, String, BitSet, etc.).  These tokens are fundamental to C# programming, enabling the definition of data structures, implementation of algorithms, control of program flow, and handling of input/output operations. The context sentences show these tokens in action within various methods, suggesting data processing, algorithm implementation, and control flow within a larger application. The presence of data types like BitSet and BytesRef hints at potential bit manipulation or low-level data handling."
    }
  },
  {
    "c273": {
      "Unique tokens": [
        ";"
      ],
      "Syntactic Label": "Statement Terminator",
      "Semantic Tags": [
        "Method Declaration",
        "Code Structure",
        "Control Flow",
        "Program Termination",
        "C# Syntax"
      ],
      "Description": "In C#, the semicolon (;) acts as a statement terminator, signifying the end of a single executable statement.  In the provided code, it's crucial for defining the structure of methods (functions) and ensuring correct execution. Each method declaration is followed by a semicolon, separating it from the next statement.  This is fundamental to C#'s syntax and essential for the compiler to parse and execute the code correctly."
    }
  },
  {
    "c274": {
      "Unique tokens": [
        "mValues",
        "setReadOnly",
        "linkTable",
        "head",
        "b",
        "idx",
        "put",
        "docFreq",
        "upstream",
        "securityDescriptor",
        "similarity",
        "ptr",
        "allocationSite",
        "currentSentence",
        "ve",
        "boundsheets",
        "octal",
        "name2",
        "rectype",
        "ruleIndex",
        "isClone",
        "set",
        "dsInf",
        "length",
        "shapes",
        "fromHexString",
        "buffer",
        "totalBoost",
        "datFileName",
        "termAtt",
        "boost",
        "_list",
        "nextFinalOutput",
        "currentRow",
        "escherRecords",
        "functions",
        "forwardIndex",
        "ln_max",
        "from",
        "pos",
        "bytesAfterHeader",
        "vspace",
        "data",
        "fromBound",
        "indexedField",
        "[",
        "getSheetName",
        "dgId",
        "setReadonly",
        "end",
        "main",
        "removeName",
        "name1",
        "fis",
        "rvalue",
        "getTransition",
        "snapshot",
        "oneByte",
        "semanticContext",
        "commitUserData",
        "objectId",
        "setPassword",
        "output",
        "commit",
        "closer",
        "passwordVerifier",
        "findTerm",
        "canonicalName",
        "return",
        "bytes",
        "Password",
        "searcher",
        "nRows",
        "ch3",
        "isOpen",
        "rules",
        "getElementType",
        "fillBlock",
        "packValues",
        "searchers",
        "rootMap",
        "tokenizePos",
        "taxonomyWriter",
        "ipmt",
        "reset",
        "lastDateFormat",
        "fracPart",
        "mCurrentDrawable",
        "term",
        "mode",
        "field_6_unknown",
        "findNextRecordBySid",
        "viableAlts",
        "totalScore",
        "compact",
        "predIndex",
        "_mode",
        "_str",
        "getNumNames",
        "findBounded",
        "parent",
        "e",
        "seek",
        "renameDetector",
        "Head",
        "stoplist",
        "hierarchical",
        "doUpdate",
        "s0",
        "indexFieldName",
        "usableBitSetSizes",
        "version",
        "minValues",
        "charFilter",
        "zzAtBOL",
        "mismatchedNode",
        "kx",
        "nameIndex",
        "vocabulary",
        "inputStr",
        "numberToLength",
        "chrA",
        "matchedSymbol",
        "currentLevel",
        "pmt",
        "rowRecord",
        "ln_steep",
        "formula",
        "list",
        "pubdate",
        "repo",
        "keepImages",
        "arrayValues",
        "fileName",
        "offset",
        "maxformatid",
        "beforeAdd",
        "zzCurrentPos",
        "_type",
        "existing",
        "decode",
        "sentenceStarts",
        "insert",
        "getName",
        "previousValue",
        "seekPending",
        "bufferSize",
        "UNDEFINED",
        "last",
        "_breaks",
        "ptgs",
        "nextTokenWithinRule",
        "ivalues",
        "chunks",
        "yychar",
        "Bits",
        "popCount",
        "Date",
        "getURL",
        "lastFormats",
        "setBody",
        "sInf",
        "fastAdd",
        "formula2",
        "ruleNames",
        "resolved",
        ".",
        "_text",
        "sid",
        "_shapes",
        "updateDocument",
        "_value",
        "field",
        "=",
        "oso",
        "_channel",
        "state",
        "directory",
        "equalNames",
        "_in",
        "valueOf",
        "cnt",
        "_ctx",
        "upstreamCommitName",
        "drawingGroups",
        "ch4",
        "path",
        "sortValues",
        "bDate",
        "row",
        "getParent",
        "cmpResult",
        "endpoint",
        "Record",
        "sourceFiles",
        "currentSubtree",
        "oldSize",
        "}",
        "params",
        "oeo",
        "atn",
        "fmt",
        ":",
        "trie",
        "&&",
        "parentDir",
        "records",
        "xf",
        "value",
        "m",
        "modeDiff",
        "Double",
        "defaultPalette",
        "externalRecord",
        "LL",
        "getEndOffset",
        "formulaColumn",
        "position",
        "LastHead",
        "token",
        "distance",
        "longitude",
        "lastCommit",
        "nameName",
        "formula1",
        "Toffs",
        "bits",
        "fieldsToLoad",
        "_constraint",
        "nodeFlags",
        "getNumBreaks",
        "root",
        "getNameName",
        "elemType",
        "getColumn",
        "overflowBuffer",
        "buckets",
        "clearValue",
        "removeCase",
        "zzReader",
        "bq",
        "getSid",
        "_colors",
        "setURL",
        "getSFR",
        ",",
        "usedCells",
        "ch1",
        "getNumTransitions",
        "bytesUsed",
        "maxLevels",
        "updateIndex",
        "reB",
        "newForwardType",
        "docCount",
        "lower",
        "parents",
        "revisionVersion",
        "map",
        "lemmaDictionaries",
        "_character",
        "readHeader",
        "firstLabel",
        "setUsername",
        "msg",
        "classmap",
        "p",
        "zzBuffer",
        "idf",
        "formulaRow",
        "indexReader",
        "inputPending",
        "author",
        "sst",
        "exception",
        "zzStartRead",
        "Break",
        "docs.file",
        "freeByteBlocks",
        "step",
        "setSize",
        "LL_Fallback",
        "spans",
        "docID",
        "nextLF",
        "Publish",
        "_token",
        "sheetIndex",
        "evaluate",
        "_funcMap",
        "passphrase",
        "Span",
        "repetitions",
        "indexedBytes",
        "isRemoved",
        "properties",
        "cache",
        "posIncAtt",
        "recognizer",
        "zzAtEOF",
        "getRecordSize",
        "tracker",
        "sentenceOp",
        "record",
        "nextWrite",
        "n",
        "sortRange",
        "!=",
        "latitude",
        "postingsArray",
        "\"",
        "tries",
        "escape",
        "level",
        "sizeInBytes",
        "toBound",
        "tokenStream",
        "doc",
        "input",
        "Trie",
        "ObjectId",
        "shortPath",
        "sheet",
        "getRow",
        "get",
        "out",
        "Lexer",
        "dg",
        "_buf",
        "nextArc",
        "didNext",
        "normalize",
        "precedence",
        "currentValues",
        "forwardID",
        "kv",
        "ch2",
        "appendArgs",
        "roundLevel",
        "mState",
        "cmds",
        "shorty",
        "upper",
        "_input",
        "currentRun",
        "termOrd",
        "outputs",
        "count",
        "defVal",
        "fallBack",
        "numArcs",
        "fieldsData",
        "command",
        "si",
        "zzEndRead",
        "stop",
        "trimToSize",
        "_modeStack",
        "PropertyIDMap",
        "setTerm",
        "_rowRecords",
        "alt",
        "waccess",
        "revisionFiles",
        "hash",
        ">>=",
        "getFormatID",
        "dic",
        "getStart",
        ")",
        "ord",
        "aeRange",
        "_firstrow",
        "numTransitions",
        "lastDot",
        "result",
        "ctx",
        "if",
        "refLogMessage",
        "config",
        "region",
        "Transition",
        "Ref",
        "currMap",
        "sync",
        "tailBlock",
        "offsetAtt",
        "numStates",
        "valueKeyMap",
        "probs",
        "filepaths",
        "zzEOFDone",
        "Author",
        "heads",
        "descriptor",
        "ref",
        "getField",
        "elementData",
        "name",
        "decisions",
        "label",
        "zzLexicalState",
        "getWeight",
        "upto",
        "1",
        "actualHeader",
        "returnState",
        "extensionKey",
        "Token",
        "_lastRowIndex",
        "nextPos",
        "queryID",
        "isRow",
        "setFontpos",
        "_values",
        "yyline",
        "localctx",
        "restoreState",
        "dir",
        "index",
        "new",
        "nColumns",
        "+",
        "match",
        "voidLink",
        "space",
        "yycolumn",
        "posIncr",
        "previous",
        "queryTerm",
        "HashtableEntry",
        "next",
        "remainingData",
        "sessionID",
        "(",
        "transitions",
        "perField",
        "i",
        "charWidths",
        "dfa",
        "nextTokens",
        "getStartOffset",
        ";",
        "beginA",
        "State",
        "maxVersion",
        "writer",
        "channel",
        "doOrd",
        "lowerTerm",
        "frec",
        "_book",
        "thedata",
        "_sensitiveInputCells",
        "bitTable",
        "start",
        "style",
        "title",
        "wholePart",
        "currentRevision",
        "usingAnd",
        "]",
        "cmd",
        "transition",
        ",i",
        "breakItem",
        "entry",
        "hunk",
        "sdp",
        "rc",
        "_parseListeners",
        "rptInd",
        "parseFormula",
        "equivChar",
        "sorter",
        "setOptions",
        "getNumStates",
        "dgg",
        "getDirCacheEntry"
      ],
      "Syntactic Label": "Variables, Methods, and Objects",
      "Semantic Tags": [
        "Object Manipulation",
        "Data Structures",
        "File Processing",
        "Program Control Flow",
        "Data Serialization"
      ],
      "Description": "The tokens represent a mix of variables (e.g., mValues, linkTable, head, securityDescriptor), methods (e.g., removeShape, runInShell, setReadOnly, fromHexString, getEscherContainer), and objects (e.g., HSSFShape, ProcessBuilder, AttributeSource, CharsRef, FSTCompletion).  These are fundamental elements in C# programming, used for managing data, controlling program flow, and interacting with external resources like files. The sentences show various operations including object creation, method calls, data manipulation, and conditional logic.  The semantic tags reflect the diverse functionalities observed in the code snippets."
    }
  },
  {
    "c275": {
      "Unique tokens": [
        "findAllNodes",
        "subSet",
        "descendingKeySet",
        "vs",
        "ceilingEntry",
        "?",
        "toArray",
        "asList",
        "Collections",
        "EnumSet",
        "<",
        "valueIterator",
        "ArrayListIterator",
        "clone",
        "getChildren",
        ")",
        "int",
        "newValueIterator",
        "KeyIterator",
        "entrySet",
        "KeySet",
        "Integer",
        "sequence",
        "list",
        "getRemoved",
        "getTokens",
        "TreeSet",
        "ks",
        "K",
        "null",
        ",",
        "of",
        "ValueIterator",
        ">",
        "filteredEntrySet",
        "[",
        "UnmodifiableIterator",
        "read",
        "V",
        "ArrayList",
        "subMap",
        "values",
        "Object",
        "AtomicInteger",
        "keySet",
        "this",
        "UnmodifiableRandomAccessList",
        "Runnable",
        "delegate",
        "firstEntry",
        "newLength",
        "c2",
        "MapBasedMultisetIterator",
        "snapshot",
        "immutableCopy",
        "Map",
        "!",
        "Matcher",
        "tailMap",
        "Multiset",
        "slice",
        ".",
        "return",
        "throw",
        "new",
        "Comparator",
        "headMap",
        "LinkIterator",
        "o2",
        "elements",
        "=",
        "Comparable",
        "evaluate",
        "final",
        "Entry",
        "next",
        "key",
        "TreeMap",
        "esDelegate",
        "(",
        "File",
        "descendingMap",
        "comparator",
        "floorEntry",
        "!=",
        "descendingSet",
        ";",
        "Iterator",
        "lst",
        "E",
        "location",
        "MultisetKeyIterator",
        "0",
        "endpoint",
        "get",
        "headSet",
        "}",
        "mutex",
        "Values",
        "listIterator",
        "{",
        "backingMap",
        "newEntryIterator",
        "lowerEntry",
        "EntryIterator",
        "descendingIterator",
        "e",
        "]",
        ":",
        "getHunks",
        "newKeyIterator",
        "iterator",
        "iter",
        "entry",
        "hasNext",
        "higherEntry",
        "value",
        "count",
        "nextEntry",
        "countMap",
        "super",
        "subList"
      ],
      "Syntactic Label": "Methods and Data Structures",
      "Semantic Tags": [
        "Collection Manipulation",
        "Iteration",
        "Data Access",
        "Map and Set Operations",
        "Tree Traversal"
      ],
      "Description": "The tokens represent a combination of methods (e.g., iterator, get, next, subList) operating on various C# data structures (e.g., Map, Set, List, Iterator).  These methods are used for accessing, iterating, and manipulating data within these collections.  The context shows common patterns in collection processing, such as iterating through elements, accessing specific elements by key, and creating sub-collections.  The use of interfaces like Iterator and NavigableMap suggests a focus on efficient data handling and traversal."
    }
  },
  {
    "c276": {
      "Unique tokens": [
        "unused1",
        "dataValues",
        "ByteArrayOutputStream",
        "_records",
        "position",
        "Collection",
        "_sheetGroupsByBookSheet",
        "h",
        "++",
        "inDegree",
        "securityDescriptor",
        "similarity",
        "getFirstImpl",
        "Collections",
        "preservePositionIncrements",
        "field_1_numShapes",
        "<",
        "1.0",
        "peekFirstImpl",
        "DEFAULT_COLUMN_WIDTH",
        "copy",
        ")",
        "_totalSize",
        "authority",
        "available",
        "connectionTimeoutInMilliseconds",
        "address",
        "ATN",
        "createEscherAnchor",
        "listImpl",
        "escherRecords",
        "-",
        "DEFAULT_TIMEOUT_IN_MILLISECONDS",
        "getBATEntriesPerBlock",
        "formatReferenceAsString",
        "atnSimulator",
        ",",
        "null",
        "lItr",
        "unmodifiableSet",
        "decode",
        "EMPTY_BYTE_ARRAY",
        "[",
        "EXPONENT_OFFSET",
        "getName",
        "field_1_col_width",
        "POIFSConstants",
        "end",
        "subMap",
        "values",
        "amount",
        "false",
        "_limit",
        "name",
        "_escherChildAnchor",
        "true",
        "1",
        "size",
        "doUpdates",
        "getTruncated",
        "STATE_IDLE",
        "_engineId",
        "ISO_8859_1",
        "mPopup",
        "_tabids",
        ".",
        "return",
        "field_1_hide_obj",
        "new",
        "ccis",
        "+",
        "DefaultSetHolder",
        "password",
        "field_1_value",
        "dictionary",
        "_reserved0",
        "16",
        "flush",
        "DEFAULT_STOP_SET",
        "ANIMATION_START",
        "-=",
        "totalHits",
        "subrecords",
        "=",
        "associatedRange",
        "getPointer",
        "mStartTime",
        "createEmpty",
        "_lei",
        "removeFirstImpl",
        "(",
        "SpreadsheetVersion",
        "_in",
        "AbstractMultimap",
        "ERR#",
        "clear",
        "unwriteProtectWorkbook",
        "w",
        "stsClient",
        "drawingGroups",
        "/",
        "calcmode",
        "EMPTY_SHORT_ARRAY",
        ";",
        "\"",
        "readDouble",
        "path",
        "field_1_reserved",
        "0",
        "get",
        "_reserved",
        "}",
        "mSize",
        "backingMap",
        "{",
        "storageId",
        "field_1_calcmode",
        "fieldsToAdd",
        "codePage",
        "field_2_ixals",
        "remaining",
        "mState",
        "Impl",
        "field_5_stream_id",
        "maxChange",
        "AbstractBiMap",
        "fragment",
        "removeAllElements",
        "field_2_first_col",
        "bufferPosition",
        "replacement",
        "_predicate",
        "value",
        "column",
        "_parseListeners",
        "T",
        "pw",
        "EXCEL97",
        "EMPTY",
        "ramBytesUsed",
        "configLookup",
        "schemeSpecificPart"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Instantiation",
        "Method Invocation",
        "Data Structures",
        "Attribute Assignment",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Many are identifiers for objects, methods, or variables.  Several are operators (=, +, -, ++, /, etc.) used for assignment, arithmetic, and increment/decrement operations.  Keywords like 'public', 'void', 'return', 'new', 'static', 'if', 'else', 'while', 'for', 'this', 'assert', etc. control program flow and define method signatures.  Data structures like arrays, lists, maps (HashMap, etc.) are used to store and manage data.  The code snippets show method definitions, object instantiations, attribute assignments, and control flow statements, typical of C# programming."
    }
  },
  {
    "c277": {
      "Unique tokens": [
        "path",
        ".",
        "regionId",
        "1.2f",
        "pathStr",
        "id",
        "segmentsFileName",
        "encodingName",
        "roleSessionName",
        "vaultNotificationConfig",
        "==",
        "toString",
        "field",
        "gitDir",
        ")",
        "cp",
        "showNameAndStatusOnly",
        "originalText",
        "(",
        "dateResolution",
        "scriptBootstrapAction",
        "getUserLocale"
      ],
      "Syntactic Label": "Variable, Method, Parameter, Dot Operator, Equality Operator, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Object Instantiation",
        "Method Invocation",
        "Data Serialization",
        "String Manipulation",
        "Configuration"
      ],
      "Description": "The tokens represent a mix of variable names (path, regionId, pathStr, etc.), method names (toString, getUserLocale), parameters in method signatures and calls, the dot operator for member access, equality operator for comparison, and parentheses for grouping.  These are fundamental C# language constructs used extensively in object-oriented programming and configuration.  The semantic tags reflect the common operations performed using these tokens, such as creating objects, invoking methods, and manipulating strings for configuration or data processing."
    }
  },
  {
    "c278": {
      "Unique tokens": [
        "defaultValue",
        "MutableValue",
        "Collections",
        "else",
        "old",
        "break",
        "copy",
        "reader",
        ")",
        "int",
        "fromHexString",
        "buffer",
        "result",
        "-",
        "EOF",
        "retVal",
        "PredictionContext",
        "null",
        "BoolEval",
        "lastChar",
        "default",
        "ancestors",
        "existing",
        "decode",
        "DONE",
        "exists",
        "BigInteger",
        "false",
        "this",
        "continue",
        "name",
        "tokens",
        "eval",
        "array",
        "NumberEval",
        "pAt",
        "ErrorEval",
        "true",
        "request",
        "1",
        "double",
        "session",
        "boolean",
        "LittleEndian",
        "ins",
        ".",
        "return",
        "throw",
        "growExact",
        "new",
        "accept",
        "ret",
        "=",
        "final",
        "Boolean",
        "rval",
        "key",
        "assert",
        "(",
        "i",
        "n",
        ";",
        "type",
        "\"",
        "err",
        "level",
        "E",
        "res",
        "RevCommit",
        "cmpResult",
        "context",
        "0",
        "cmp",
        "start",
        "c",
        "c1",
        "}",
        "e",
        ":",
        "&&",
        "value",
        "create",
        "EMPTY",
        "Double",
        "0f",
        "a",
        "String",
        "other",
        "md"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Object Manipulation",
        "Exception Handling",
        "Algorithm"
      ],
      "Description": "The tokens represent a wide range of C# language features. Keywords like \"else\", \"break\", \"continue\", and \"return\" control program flow.  \"Collections\" suggests the use of collection classes. Identifiers like \"defaultValue\", \"MutableValue\", \"PredictionContext\" and others refer to objects and variables.  The presence of \"throw\" indicates exception handling. The overall code snippets appear to implement algorithms involving data processing and manipulation."
    }
  },
  {
    "c279": {
      "Unique tokens": [
        "{",
        "return",
        "field_1_max_change",
        "field_1_password"
      ],
      "Syntactic Label": "Return Statement",
      "Semantic Tags": [
        "Getter Methods",
        "Data Access",
        "Object Attributes",
        "Return Values",
        "Method Implementation"
      ],
      "Description": "The tokens are part of C# return statements within getter methods.  They are used to return the value of an object's attribute. The '{' and '}' are opening and closing curly braces that define the method body. 'field_1_max_change' and 'field_1_password' appear to be instance variables or fields of a class, accessed within the context of a getter method.  The semantic tags reflect the common usage of these tokens in accessing and returning data within object-oriented programming."
    }
  },
  {
    "c280": {
      "Unique tokens": [
        "public"
      ],
      "Syntactic Label": "Access Modifier",
      "Semantic Tags": [
        "Method Declaration",
        "Access Control",
        "Object-Oriented Programming",
        "Encapsulation",
        "API Design"
      ],
      "Description": "The `public` keyword is an access modifier in C#. It specifies that the methods declared after it are accessible from any other class or part of the code.  This is crucial for defining the public interface of a class, which is a core concept in object-oriented programming and API design. In the context provided, all the methods are public, suggesting that they are part of a publicly accessible API for interacting with some underlying service or system."
    }
  },
  {
    "c281": {
      "Unique tokens": [
        "Iterator",
        "field_1_foregroundColor",
        "rt",
        "field_1_xAxisUpperLeft",
        "return",
        "ATNState",
        "field_1_x",
        "StringBuilder",
        "setConditionType",
        "sid",
        "field_1_version",
        "field_1_font_height",
        "field_1_readonly",
        "field_1_id",
        "_options",
        "termsToFind",
        "out",
        "_externalBookRecord",
        "field_1_minimumAxisValue",
        "field_1_xBasis",
        "field_1_pane",
        "{",
        "Set",
        ";",
        "checkPath",
        "field_1_axisType",
        "_workbookRecordList",
        "byte",
        "field_1_option_flag",
        "Object",
        "=",
        "field_1_number_crn_records",
        "field_1_lineColor",
        "final",
        "this",
        "type",
        "field_1_horizontalAlignment",
        "int",
        "isxvdData",
        "setComparisonOperation",
        "field_1_paper_size",
        "checkBlockSize",
        "scratch",
        "field_1_font_index",
        "field_1_index_code",
        "_countRecord",
        "queue",
        "buffer",
        "token_source",
        "double",
        "field_1_majorTickType",
        "flags",
        "field_1_last_column_index",
        "for",
        "field_1_first_row",
        "field_1_record_type",
        "a",
        "field_1_row",
        "super",
        "boolean",
        "String",
        "field_1_options",
        "field1_x_position",
        "if",
        "_sxaxis"
      ],
      "Syntactic Label": "C# identifiers, keywords, operators, and data types",
      "Semantic Tags": [
        "Object Serialization",
        "Data Structures",
        "Control Flow",
        "Input/Output Operations",
        "Data Processing"
      ],
      "Description": "The tokens represent a mix of C# language elements.  Identifiers like `field_1_foregroundColor` suggest object properties or fields. Keywords such as `return`, `if`, `for` denote control flow mechanisms. Operators like `=` and `.` are used for assignment and member access. Data types such as `int`, `byte`, `double`, `StringBuilder`, and `String` indicate the types of data being handled. The sentences show various operations, including object initialization, method calls, loops, conditional statements, and data manipulation, common in C# programming."
    }
  },
  {
    "c282": {
      "Unique tokens": [
        "{"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "AWS SDK",
        "API Calls",
        "Resource Management",
        "Cloud Services",
        "Request-Response"
      ],
      "Description": "These C# methods appear to be part of an AWS SDK, each making an API call to manage a specific AWS resource.  The pattern of taking a request object, performing pre-execution actions (beforeClientExecution), executing the core operation (execute...), and returning a result object is typical of client-side SDK interactions with cloud services."
    }
  },
  {
    "c283": {
      "Unique tokens": [
        "sqi",
        "packed",
        "adverb",
        "nodes",
        "f",
        "indexWriter",
        "_root",
        "linkTable",
        "segmentInfo",
        "_sewb",
        "to",
        "IndexFileNames",
        "version",
        "_startIndex",
        "mrk",
        "interval",
        "analyzer",
        "formula1",
        "termsWithScoreCollector",
        "ByteBuffer",
        "_boundAggregate",
        "fieldPhraseList",
        "name2",
        "drawingGroup",
        "listFiles",
        "root",
        "reader",
        "xcell",
        ")",
        "disjuncts",
        "fetcher",
        "queryScorer",
        "buf",
        "length",
        "_palette",
        "cell",
        "child",
        "decoder",
        "augmentative",
        "buffer",
        "vlst",
        "_mergedRegions",
        "termAtt",
        "list",
        "ctx",
        "tw",
        "boost",
        "repo",
        "postingsWriter",
        "getSid",
        "config",
        "openObject",
        "data",
        "wildcardText",
        "o1",
        ",",
        "part2",
        "spare",
        "phraseList",
        "passage",
        "endIndex",
        "obj",
        "weightedSpanTerm",
        "stream",
        "ssh",
        "args",
        "workbook",
        "keys",
        "existing",
        "recordFactory",
        "iwConf",
        "uri",
        "pathName2Type",
        "stat2",
        "files",
        "shape",
        "[",
        "offsetAtt",
        "XPath",
        "policy",
        "fs",
        "specs",
        "alternates",
        "readRemainder",
        "name1",
        "escherGroup",
        "values",
        "sessions",
        "crB",
        "dateResMap",
        "utf8",
        "inc",
        "firstCell",
        "ptgs",
        "buffers",
        "this",
        "fieldIndex",
        "readUByte",
        "map",
        "ref",
        "tokens",
        "elementData",
        "objects",
        "wSpanTerm",
        "evaluator",
        "rows",
        "s",
        "BYTE_BLOCK_SIZE",
        "t",
        "anchor",
        "arg",
        "getClass",
        "orig",
        "plainText",
        "intervals",
        "_iBook",
        "wildcardquery",
        "_firstCell",
        "protocols",
        "CFRuleBase",
        "_record",
        "ident",
        "table",
        "_externalBookBlocks",
        "it",
        ".",
        "localctx",
        "currentBlock",
        "re",
        "dir",
        "DirectoryReader",
        "bytes",
        "pm",
        "runData",
        "source",
        "subSlices",
        "searcher",
        "loose",
        "lf",
        "destCell",
        "origNameRecord",
        "delta",
        "_recs",
        "ts",
        "st",
        "header",
        "parts",
        "dictionary",
        "objdb",
        "searchers",
        "readFully",
        "indexEnum",
        "font",
        "o2",
        "readInt",
        "termBytesReader",
        "cells",
        "getInputStream",
        "previous",
        "getSize",
        "=",
        "safelyAllocate",
        "terms",
        "rp",
        "stats",
        "next",
        "newLeaf",
        "key",
        "ebr",
        "(",
        "d",
        "o",
        "posIncAtt",
        "_bookEvaluator",
        "state",
        "directory",
        "dc",
        "_in",
        "other",
        "recognizer",
        "I",
        "i",
        "lastIndexOf",
        "in",
        "dfa",
        "matchingDocs",
        "clazz",
        "_ctx",
        "part",
        "ite",
        ";",
        "tokenGroup",
        "cs",
        "getTarget",
        "rowCells",
        "output1",
        "path",
        "postingsReader",
        "ps",
        "row",
        "_string",
        "booleanNode",
        "output2",
        "qp",
        "crA",
        "now",
        "input",
        "context",
        "master",
        "indexOf",
        "walk",
        "format",
        "get",
        "r",
        "c",
        "}",
        "Character",
        "termsIndexWriter",
        "backingMap",
        "states",
        "indexIter",
        "nameProposal",
        "packList",
        "ppt",
        "reopenCond",
        "LEVEL_SIZE_ARRAY",
        "e",
        "FSDirectory",
        "taxoWriter",
        "pool",
        "]",
        "line",
        "seqnum",
        "readUShort",
        "bos",
        "expr",
        "cmds",
        "revision",
        "_input",
        "iterator",
        "_sheet",
        "records",
        "iter",
        "retctx",
        "entry",
        "_parentctx",
        "ec",
        "nextValues",
        "m",
        "dsq",
        "rv",
        "hasNext",
        "registry",
        "value",
        "otherBuffer",
        "subs",
        "fields",
        "ic",
        "getSheet",
        "subRecord",
        "utf32",
        "rs",
        "super",
        "areaEval",
        "array",
        "md"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Opening Parenthesis, Closing Parenthesis, Assignment Operator, Semicolon",
      "Semantic Tags": [
        "Data Structures",
        "File I/O",
        "Data Processing",
        "Object Manipulation",
        "Exception Handling"
      ],
      "Description": "The tokens represent a mix of data structures (objects, arrays, lists), file I/O operations (reading and writing files), data processing (string manipulation, data transformations), object manipulation (method calls, object creation), and exception handling (handling runtime exceptions and IO exceptions).  These are fundamental aspects of C# programming, similar to their counterparts in Java."
    }
  },
  {
    "c284": {
      "Unique tokens": [
        "\"",
        "JGitInternalException",
        "ConnectException",
        "XmlPullParserException",
        ".",
        "IOException",
        "EvaluationException",
        "ClientException",
        "OutOfMemoryError",
        "Error",
        "throwIndexOutOfBoundsException",
        "id",
        "InvalidRefNameException",
        "out",
        "ReadOnlyBufferException",
        "TokenMgrError",
        "NotImplementedException",
        "UnsupportedOperationException",
        "is",
        "IndexOutOfBoundsException",
        "ConcurrentModificationException",
        "Unknown",
        "SessionExpiredException",
        "RuntimeException",
        "bad",
        "BufferUnderflowException",
        "StringIndexOutOfBoundsException",
        "EOFException",
        "NullPointerException",
        ")",
        "AlreadyClosedException",
        "EmptyStackException",
        "(",
        "Exception",
        "URISyntaxException",
        "SdkClientException",
        "parameters:",
        "IllegalStateException",
        "RefNotFoundException",
        "IndexNotFoundException",
        "ArrayIndexOutOfBoundsException",
        "IllegalArgumentException",
        "TreeSet",
        "NoSuchElementException",
        "FileNotFoundException",
        "BufferOverflowException"
      ],
      "Syntactic Label": "Exception Types and Other Tokens",
      "Semantic Tags": [
        "Exception Handling",
        "Input/Output Operations",
        "Data Structures",
        "Error Handling",
        "Resource Management"
      ],
      "Description": "The tokens represent various exception types commonly encountered in C# programming, along with other tokens such as operators and data structure identifiers.  The context sentences demonstrate how these exceptions are handled within the code, often using try-catch blocks or conditional checks to prevent program crashes and ensure robust error handling.  The exceptions cover a wide range of scenarios, from invalid input parameters to resource exhaustion. The use of data structures like TreeSet and Hashtable is also shown in the context of managing data and resources."
    }
  },
  {
    "c285": {
      "Unique tokens": [
        "="
      ],
      "Syntactic Label": "Assignment Operator",
      "Semantic Tags": [
        "Parameter Assignment",
        "Request Handling",
        "Method Invocation",
        "AWS SDK",
        "Client-side logic"
      ],
      "Description": "The '=' operator assigns the result of the 'beforeClientExecution' method to the 'request' parameter before invoking the 'execute...' methods. This pattern is common in AWS SDKs where client-side pre-processing or request modification is performed before sending the request to the AWS service."
    }
  },
  {
    "c286": {
      "Unique tokens": [
        "_firstColumn",
        "commitNames",
        "_childRecords",
        "getAuthor",
        "linkTable",
        "sIconIds",
        "allowNonFastForwards",
        "setHierarchical",
        "TermQuery",
        "getHiddenTokensToRight",
        "newReader",
        "SynonymFilter",
        "currentSentence",
        "sheetName",
        "maxDeltaDepth",
        "addConfigChangedListener",
        "OrdTermState",
        "groupDocsOffset",
        "workingDirectoryMessage",
        "dirCacheTree",
        "getQueryConfigHandler",
        "getCharacterInstance",
        "getUpdatedFiles",
        "findFunction",
        "textComparator",
        "_list",
        "escherRecords",
        "EditList",
        "createExplicitListConstraint",
        "checkIndex",
        "createCachedErrorCode",
        "matchPrefix",
        "customRefLog",
        "_isError",
        "deltaBaseCacheLimit",
        "deltaSearchMemoryLimit",
        "isWholeColumnReference",
        "getSheetName",
        "specialCachedValue",
        "checkExternSheet",
        "field_2_unknownFormulaData",
        "removeName",
        "findFirstWithId",
        "setPreferredSize",
        "dataCategoryLabels",
        "getObjectDatabase",
        "keySet",
        "field_5_dbcells",
        "_consumingCells",
        "sourceCommits",
        "getOrCreateLinkTable",
        "_udfFinder",
        "outCandidate",
        "findSheetLastNameFromExternSheet",
        "checkFileNames",
        "mKeyProgressIncrement",
        "packedGitOpenFiles",
        "EmptyArray",
        "ChangeType",
        "onIndexChanged",
        "_valuesAgg",
        "notifyUpdateCell",
        "REPORTER",
        "setObjectChecker",
        "DefaultProfile",
        "forceUpdate",
        "countsByTime",
        "newTree",
        "textStartPos",
        "remove1stProperty",
        "getBooleanQuery",
        "getMergeResults",
        "createPicture",
        "elements",
        "rawDoubleBitsToText",
        "getScriptText",
        "setShortBoolean",
        "ImageUtils",
        "oldMode",
        "getExternalSheetIndex",
        "renameDetectionType",
        "subSlice",
        "groupSort",
        "workingTreeIterator",
        "FormulaError",
        "addRule",
        "isSupported",
        "conflictState",
        "batchMode",
        "FS_Win32",
        "diffAlgorithm",
        "sourceAuthors",
        "outRegion",
        "getPartOfSpeech",
        "modifiedFiles",
        "getReading",
        "mProgress",
        "_xfs",
        "SpatialArgsParser",
        "addConditionalFormatting",
        "getInflectionType",
        "backingMap",
        "getTokenName",
        "_str",
        "getAccessKeySecret",
        "requiresCommitBody",
        "renameCallback",
        "FieldIndexData",
        "_definedNames",
        "getExcelDate",
        "advertisedRefs",
        "renameDetector",
        "containsKey",
        "getExternalName",
        "termList",
        "_byname",
        "checkRuleIndex",
        "getBaseForm",
        "makeLuceneQueryNoBoost",
        "_conditionalFormattingTable",
        "isPeeled",
        "postInvalidate",
        "numfonts",
        "deltaCacheLimit",
        "getFirstSheetIndexFromExternSheetIndex",
        "getMatchingDocs",
        "_sewb",
        "isBuiltinFlag",
        "fstArc",
        "bytesUsedPerBlock",
        "getRuleInvocationStack",
        "refLogIdent",
        "formatAsString",
        "minMergeSize",
        "_fractionalPart",
        "resetState",
        "MULTI_FIELDS",
        "setQueryNodeProcessor",
        "changeExternalReference",
        "reuseDeltas",
        "expire",
        "_mergedRegions",
        "dateToBeFormatted",
        "EMU_PER_POINT",
        "getFunctionByIndexInternal",
        "isSet",
        "getCellRanges",
        "pathToString",
        "shouldCreateEmptyCells",
        "showSeriesKey",
        "maxObjectSizeLimit",
        "_firstRow",
        "field_3_strings",
        "listFormula",
        "getExpectedTokens",
        "packConfig",
        "MODIFY",
        "horizontalBorder",
        "getRelativeValue",
        "errorRecoveryMode",
        "getLeaf",
        "oldModes",
        "outputUnigramsIfNoShingles",
        "dropChanges",
        "_tabids",
        "getLineInstance",
        ".",
        "groupDocsLimit",
        "getCapabilities",
        "_validationList",
        "pushURIs",
        "maxCharsToAnalyze",
        "renameTo",
        "brToString",
        "setObjectId",
        "pReleventSum",
        "_value",
        "getNameText",
        "add",
        "=",
        "BuiltinFormats",
        "encodeASCII",
        "followFileRenames",
        "LocaleUtil",
        "findSheetFirstNameFromExternSheet",
        "getRefLogMessage",
        "resultStart",
        "mThumbOffset",
        "_bookEvaluator",
        "concatenate",
        "mNoInvalidate",
        "verticalBorder",
        "queryConfigHandler",
        "_externSheetRecord",
        "formatValue",
        "markedUpText",
        "mergeResults",
        "onConfigChanged",
        "retainBody",
        "getNameIndex",
        "putItemDelegate",
        "writeProtectWorkbook",
        "_current_offset",
        "_binaryExponent",
        "workingTreeIt",
        "contextLines",
        "field_6_author",
        "refreshData",
        "alignObjectSize",
        "dircache",
        "thumbOffset",
        ":",
        "sourceLines",
        "forInt",
        "getPronunciation",
        "showNameAndStatusOnly",
        "getFontFormatting",
        "_firstCol",
        "implicitDirCache",
        "createComment",
        "getWeightedFragInfoList",
        "fromRaw",
        "addName",
        "escherBSERecords",
        "deltaPri",
        "findUserDefinedFunction",
        "FunctionEval",
        "hasNonConflictingAltSet",
        "bitsPerValue",
        "refreshDone",
        "getNameRecord",
        "addFirstImpl",
        "allowThin",
        "textEndPos",
        "sinceLastIndex",
        "capablities",
        "getAccessKeyId",
        "MIN_VALUE",
        "refCount",
        "_uBook",
        "expireAgeMillis",
        "_totalSize",
        "buf",
        "RenameDetectionType",
        "htmlEncode",
        "deltaCompress",
        "downHeap",
        "requery",
        "setRefLogMessage",
        "field_4_last_column",
        "createCachedBoolean",
        "getEncodedSize",
        ">",
        "toBeCheckedOut",
        "bytesUsed",
        "sourcePaths",
        "modifiedList",
        "newToken",
        "goNext",
        "active",
        "startTimeMillis",
        "toStringTree",
        "getPerThreadsIterator",
        "cfAggregate",
        "matchAlmost",
        "createFormulaListConstraint",
        "rawDataContainer",
        "AnalysisToolPak",
        "resolveNameXText",
        "deref",
        "writeCoordinates",
        "getCustomPalette",
        "getSortedDocValues",
        "NOPOutput",
        "insertElementAt",
        "getString",
        "mIndeterminate",
        "zzBuffer",
        "remoteUpdates",
        "_lastSheetIndex",
        "expectDataAfterPackFooter",
        "remove",
        "sourceCommitters",
        "getChildRecords",
        "cherryPickedRefs",
        "addBuilder",
        "setFontStyle",
        "getCherryPickedRefs",
        "isBinary",
        "messageBuffer",
        "setChannel",
        "_funcMap",
        "Packed64SingleBlock",
        "reverse0",
        "addAndGet",
        "createCustomFormulaConstraint",
        "init",
        "cacheMissesUntilFill",
        "writeSpatialArgs",
        "includeMaxScore",
        "getClientAnchor",
        "dropMergingUpdates",
        "getLastInternalSheetIndexForExtIndex",
        "sortWithinGroup",
        "makeDistanceValueSource",
        "ReInit",
        "removeFirstOccurrenceImpl",
        "getPreferredSize",
        "field_1_options",
        "pendingDeletes",
        "FormulaSpecialCachedValue",
        "isVeryHidden",
        "DEFAULT_STOP_TAGS",
        "tokenSeparator",
        "sizeInBytes",
        "refLogIncludeResult",
        "copyUpdatedCells",
        "buildExtensionField",
        "parentIds",
        "sourceStart",
        "registerFunction",
        "oldTree",
        "getObjectId",
        "mProgressDrawable",
        "getRecordSizeForStrings",
        "derefTags",
        "nameValPairs",
        "accessOrder",
        "BOFRecord",
        "canHandle",
        "encoding",
        "oldPrefix",
        "floorKey",
        "ExtSSTRecord",
        "reuseObjects",
        "setRefLogIdent",
        "termOrd",
        "bigFileThreshold",
        "mSecondaryProgress",
        "fileNameFromGeneration",
        "getJavaDate",
        "field_5_name_definition",
        "packedGitWindowSize",
        "ramBytesUsed",
        "maxDocCharsToAnalyze",
        "trimToSize",
        "setTerm",
        "packedGitLimit",
        "getStage",
        "mCursor",
        "insertCell",
        "runInBackground",
        "CellRangeAddress",
        "_breakMap",
        "binaryFileThreshold",
        "updateDropDownForFilter",
        "updatedFiles",
        "indexVersion",
        "newMode",
        "removeBuiltinRecord",
        "DEFAULT_CHARSET",
        ")",
        "_lastCol",
        "conflictingPaths",
        "_cfHeaders",
        "RowRecord",
        "RecallPoint",
        "maxChainLength",
        "pathFilter",
        "refSpecs",
        "markSupported",
        "computeId",
        "QueryParserBase",
        "putItem",
        "getSingleViableAlt",
        "ensureId",
        "setMaxDocFreq",
        "currentPutField",
        "dstSavings",
        "createDataFormat",
        "refLogMessage",
        "config",
        "revertedRefs",
        "userAgentConfig",
        "getBoundSheetRec",
        "getPatternFormatting",
        "_externalNameRecords",
        "localPatternChars",
        "containsValue",
        "getATN",
        "getOriginalMatchingDocs",
        "filteredEntrySet",
        "lockMessage",
        "setLeaf",
        "TreeFilter",
        "getRunData",
        "maxGoodPoints",
        "newPrefix",
        "getRevSort",
        "sourceTrees",
        "setWritable",
        "exportAll",
        "shouldBeRecursive",
        "getToBeCheckedOut",
        "queryFactory",
        "heads",
        "elementData",
        "lastFailedRefreshTime",
        "setColumnWidth",
        "endErrorCondition",
        "mInterpolator",
        "removedList",
        "idealByteArraySize",
        "oldIds",
        "zzLexicalState",
        "addLastImpl",
        "size",
        "getEscherRecords",
        "onRefsChanged",
        "_iBook",
        "createSafeSheetName",
        "DVConstraint",
        "getSections",
        "getPathLength",
        "calculateMaximumSize",
        "allGroupHeads",
        "applyFont",
        "wasEscaped",
        "numxfs",
        "characterCategoryMap",
        "flushOnEnd",
        "getRawValue",
        "decodeNumber",
        "useCnt",
        "recallPoints",
        "posIncr",
        "mIndeterminateDrawable",
        "toIntegerList",
        "_headerRec",
        "(",
        "getInflectionForm",
        "getQueryMaker",
        "getBuiltinFormat",
        "conflictList",
        ";",
        "indexMessage",
        "wrapToCaching",
        "_usedToolPacks",
        "getSheetEvaluator",
        "resultPath",
        "nameFinder",
        "_firstSheetIndex",
        "clearAdaptiveData",
        "lookupSegmentation",
        "findNewDrawingGroupId",
        "toObjectId",
        "_array",
        "ANY_DIFF",
        "invokeMap",
        "compressionLevel",
        "getSheetIndex",
        "entry",
        "getWorkbook",
        "removeSheet",
        "notifyDeleteCell",
        "setDrawingsSaved",
        "_marked_offset",
        "filenamesToFiles",
        "UserSViewBegin",
        "traverseEmptyCells",
        "dgg",
        "surfaceForm"
      ],
      "Syntactic Label": "Variables and Methods",
      "Semantic Tags": [
        "Data Structures",
        "Object Manipulation",
        "Data Access",
        "State Management",
        "Utility Functions"
      ],
      "Description": "The tokens represent a mix of variables (e.g., _firstColumn, commitNames) and methods (e.g., getAuthor, setHierarchical).  These are fundamental elements in C# programming, used to store data, manage objects, access data from various sources, maintain application state, and provide reusable functionality. The context sentences show their usage in various scenarios, including data manipulation, object creation, and state changes."
    }
  },
  {
    "c287": {
      "Unique tokens": [
        "",
        "forwardType",
        "stop",
        "off",
        "arity",
        "6",
        "Collection",
        "b",
        "~",
        "idx",
        "++",
        "?",
        "2",
        "ptr",
        "chars",
        "searchTime",
        "<",
        "blockSize",
        "hash",
        "positions",
        "oneChar",
        "long",
        "bit_pattern",
        "capacityIncrement",
        "short",
        "reader",
        ")",
        "int",
        "length",
        "buf",
        "components",
        "maxBufferedBlocks",
        "strlen",
        "Integer",
        "-",
        "x",
        "freqs",
        "bytesRemaining",
        "sz",
        "pos",
        "3",
        "if",
        "RamUsageEstimator",
        "IntBlockPool",
        "offset",
        "limit",
        "null",
        ",",
        "data",
        "readShort",
        ">>>",
        "15",
        "stream",
        "unused",
        "blocks",
        ">",
        "13",
        "bytesUsed",
        "decode",
        "len",
        "otherState",
        "[",
        "<=",
        "maxGoodPoints",
        "*",
        "end",
        "foldToASCII",
        "DEFAULT_BLOCK_SIZE",
        "==",
        "de",
        "byte",
        "float",
        ">=",
        "payload",
        "this",
        "48",
        "ref",
        "nameB",
        "4",
        "c2",
        "l",
        "s",
        "true",
        "activeBytes",
        "target",
        "weight",
        "*=",
        "t",
        "upto",
        "parseInt",
        "1",
        "size",
        "|=",
        "LittleEndian",
        "21",
        "table",
        ".",
        "return",
        "ArrayUtil",
        "char",
        "5381",
        "--",
        "index",
        "bytePool",
        "bytes",
        "new",
        "k",
        "wasEscaped",
        "+",
        "arr",
        "dim",
        "clock",
        "is",
        "16",
        "31",
        "strkey",
        "markLimit",
        "-=",
        "=",
        "final",
        "minCount",
        "while",
        "next",
        "scan",
        "key",
        "assert",
        "(",
        "&=",
        "hashSize",
        "d",
        "other",
        "totalMissingCount",
        "i",
        "in",
        "infoRecs",
        "n",
        "string",
        "/",
        "depth",
        "!=",
        ";",
        "type",
        "\"",
        "PackedInts",
        "collection",
        "binarySearch",
        "level",
        "maxVersion",
        "location",
        "bufferLength",
        "max",
        "min",
        "mask",
        "requireInt",
        "totalCount",
        "RawParseUtils",
        "0",
        "intStart",
        "start",
        "r",
        "c",
        "}",
        "<<",
        "'",
        "totalTermFreq",
        "top",
        "numPoints",
        "blockBits",
        "current",
        "capacity",
        "%",
        "e",
        "y",
        "nChars",
        "]",
        "factor",
        "cmd",
        "+=",
        ":",
        "remaining",
        "numPending",
        "readUShort",
        "46",
        "&",
        "maxrow",
        "^",
        "24",
        "&&",
        "payloads",
        "value",
        "count",
        "tableMask",
        "ByteBlockPool",
        "skip",
        "minLength",
        "EMPTY",
        "8",
        "a",
        "BYTES",
        "ids",
        "left"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "File I/O",
        "Algorithm Implementation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language elements including keywords, operators, identifiers, and literals.  They are used in various functions that perform array manipulation, data structure management (e.g., hash tables, arrays), file input/output operations, algorithm implementations (e.g., binary search, sorting), and general utility functions. The code snippets demonstrate common programming tasks in C#, such as data processing, file handling, and algorithm implementation."
    }
  },
  {
    "c288": {
      "Unique tokens": [
        "LOG",
        "position",
        "StringBuilder",
        "Math",
        "put",
        "?",
        "INIT",
        "Collections",
        "long",
        "grow",
        "append",
        ")",
        "int",
        "set",
        "buf",
        "result",
        "list",
        "pos",
        "println",
        "if",
        "limit",
        "null",
        "Ref",
        "try",
        "sb",
        "Cell",
        "print",
        "decode",
        "insert",
        "substring",
        "shape",
        "[",
        "Arrays",
        "end",
        "byte",
        "float",
        "Object",
        "this",
        "map",
        "name",
        "delegate",
        "snapshot",
        "Date",
        "size",
        "1",
        "status",
        "synchronized",
        "for",
        "exports",
        "resolve",
        "Lists",
        "!",
        "addCommand",
        ".",
        "return",
        "char",
        "throw",
        "index",
        "new",
        "wrap",
        "matches",
        "features",
        "v",
        "connect",
        "=",
        "add",
        "Slice",
        "evaluate",
        "final",
        "while",
        "Span",
        "rval",
        "assert",
        "filename",
        "(",
        "side",
        "reset",
        "write",
        "o",
        "sourceLength",
        "in",
        "isValid",
        "switch",
        "E",
        "StringBuffer",
        "now",
        "doc",
        "input",
        "0",
        "cmp",
        "get",
        "r",
        "c",
        "List",
        "System",
        "mutex",
        "listIterator",
        "current",
        "profile",
        "iterator",
        "outputs",
        "value",
        "create",
        "Double",
        "a",
        "super",
        "update",
        "String",
        "other"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Method Definitions",
        "Object Manipulation",
        "Data Structures",
        "Control Flow",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, for, while, etc.), operators (=, ., etc.), data types (int, long, float, double, string, etc.), built-in classes (StringBuilder, Math, Arrays, Collections, System, etc.), identifiers (method names, variable names, class names, etc.), and special characters.  These tokens are used to define methods, manipulate objects, work with data structures, control program flow, and provide utility functions. The context sentences show these tokens in action within various C# methods, demonstrating their syntactic roles and semantic significance in the context of C# programming."
    }
  },
  {
    "c289": {
      "Unique tokens": [
        "postBreak",
        "getType",
        "paths",
        "generator",
        "startRuleStartState",
        "f",
        "fanout",
        "queries",
        "onDiskFile",
        "position",
        "bounds",
        "head",
        "tags",
        "rec",
        "b",
        "token",
        "children",
        "alt",
        "dateFormat",
        "biffName",
        "val",
        "interval",
        "analyzer",
        "frozen",
        "eq",
        "chars",
        "edges",
        "StringType",
        "vocabulary",
        "ve",
        "positions",
        "sheetName",
        "bigBlockSize",
        "name2",
        "expr1",
        "getChildren",
        "pathFilters",
        "longArray",
        "xcell",
        ")",
        "aliased",
        "expr2",
        "set",
        "length",
        "authority",
        "str",
        "cell",
        "matcher",
        "decoder",
        "unSafeParser",
        "deletePriorCommits",
        "buffer",
        "result",
        "textComparator",
        "list",
        "escherRecords",
        "getDirectory",
        "x",
        "second",
        "repo",
        "freqs",
        "fieldName",
        "heightStr",
        "reducer",
        "following",
        "_allKnownRecordSIDs",
        "configs",
        "SpatialOperation",
        "null",
        "passage",
        "rowNumber",
        "deletionPolicyName",
        "obj",
        "weightedSpanTerm",
        "ssh",
        "args",
        "keys",
        "ud",
        "lexerAction",
        "first",
        "cce",
        "serializerClasses",
        "stat2",
        "rebaseResult",
        "done",
        "files",
        "terminal",
        "[",
        "shape",
        "<=",
        "queryString",
        "encoderClass",
        "separatorChar",
        "Arrays",
        "updatedLexerActions",
        "locale",
        "alternates",
        "lemmas",
        "_workbook",
        "==",
        "exact",
        "name1",
        "stopWordFiles",
        "prop",
        "crB",
        "dateResMap",
        "inc",
        "fieldNames",
        "this",
        "symbol",
        "map",
        "getField",
        "ref",
        "lowerCaseStr",
        "tokens",
        "rb",
        "name",
        "number",
        "eval",
        "writeMonitor",
        "trim",
        "nameArg",
        "wSpanTerm",
        "getPublicAccessBlockRequest",
        "s",
        "number1",
        "target",
        "t",
        "fetchResult",
        "arg",
        "getClass",
        "cur",
        "cfRules",
        "plainText",
        "session",
        "output",
        "commit",
        "testedValue",
        "p",
        "suffixes",
        "optiIf",
        "upstreamId",
        "_firstCell",
        "shortArray",
        "ruleNames",
        "resolved",
        "it",
        "bucketAbsoluteOffsets",
        ".",
        "rawData",
        "metaData",
        "currentBlock",
        "getChangeRequest",
        "readonly",
        "segmentsFile",
        "relative",
        "bytes",
        "actualCodec",
        "DirectoryReader",
        "runData",
        "credentials",
        "_recStream",
        "sst",
        "preBreak",
        "t2",
        "expression",
        "semiVolatile",
        "_recs",
        "link",
        "_errHandler",
        "rules",
        "attributeImpls",
        "st",
        "password",
        "parts",
        "dictionary",
        "indexEnum",
        "searchers",
        "externs",
        "tagName",
        "font",
        "regions",
        "_value",
        "getInputStream",
        "dateRes",
        "ext",
        "cells",
        "deletePublicAccessBlockRequest",
        "entryForNullKey",
        "characterDefinition",
        "commentRecords",
        "array1",
        "isEmpty",
        "t1",
        "stats",
        "next",
        "arg0",
        "key",
        "remainingData",
        "reference",
        "listMode",
        "ebr",
        "(",
        "endsWith",
        "queue",
        "o",
        "scheme",
        "state",
        "tracker",
        "i",
        "record",
        "byteBuffer",
        "sampledDocs",
        "instanceof",
        "dfa",
        "in",
        "clazz",
        "_ctx",
        "w",
        "nextTokens",
        "part",
        "ite",
        "eofToken",
        "string",
        "mode",
        "!=",
        "diffAlgorithm",
        "type",
        "optRecord",
        "arg1",
        "rowCells",
        "output1",
        "path",
        "dictionaryLemmatizer",
        "row",
        "lexerActions",
        "crA",
        "userPassword",
        "doc",
        "lowerTerm",
        "prefix",
        "sheet",
        "mergeResult",
        "r",
        "out",
        "deletePublicKeyRequest",
        "lastReturned",
        "c",
        "ptg",
        "src",
        "lastEntryReturned",
        "params",
        "leq",
        "filenames",
        "filter",
        "indexIter",
        "text",
        "nameProposal",
        "packList",
        "ppt",
        "currentRevision",
        "serializedAtn",
        "current",
        "parent",
        "e",
        "BIT_FINAL_ARC",
        "larray",
        "optiChoose",
        "]",
        "line",
        "encoding",
        "ev",
        "commits",
        "arrayPtgs",
        "firstArg",
        "_linkPtg",
        "fst",
        "_currentRectangleGroup",
        "packs",
        "iterator",
        "filepatterns",
        "replacement",
        "ru",
        "rr",
        "value",
        "m",
        "_parseListeners",
        "phraseCandidate",
        "fields",
        "noBreak",
        "numberVE",
        "inf",
        "utf32",
        "cvr",
        "s0",
        "a",
        "getPolicyRequest",
        "subquery",
        "rs",
        "object",
        "super",
        "other",
        "rarray",
        "info",
        "currentRef"
      ],
      "Syntactic Label": "Variables, Methods, Operators, Objects",
      "Semantic Tags": [
        "Object Management",
        "Data Processing",
        "Program Control Flow",
        "Exception Handling",
        "File I/O"
      ],
      "Description": "The tokens represent a mix of variables (e.g., paths, generator, repo), methods (e.g., isEmpty, next, toString), operators (e.g., ., ==, !=), and objects (e.g., StringBuilder, ArrayList, File).  These are fundamental elements in C# programming, used for managing objects, processing data, controlling program flow, handling exceptions, and performing file input/output operations. The sentences show these tokens in action within various C# code snippets, demonstrating common programming patterns and practices."
    }
  },
  {
    "c290": {
      "Unique tokens": [
        "MissingRecordAwareHSSFListener",
        "setRef",
        "setTitle",
        "addURI",
        "updateFormulaResult",
        "seekExact",
        "put",
        "setLastFailedRefreshTime",
        "currentScore",
        "writeTo",
        "setParsedExpression",
        "simpleValue",
        "getFormatString",
        "clone",
        "setRevFilter",
        "deleteDocument",
        "popMode",
        "set",
        "setNextEnum",
        "removeAuthor",
        "matcher",
        "UAX29URLEmailTokenizerImpl",
        "removeParCount",
        "getBucket",
        "rewind",
        "getNode",
        "resetFontStyle",
        "insertRow",
        "print",
        "anyDeletions",
        "getSheetName",
        "setValidating",
        "checkExternSheet",
        "end",
        "removeName",
        "setResult",
        "setDate",
        "readUByte",
        "removeSlideCount",
        "open",
        "setMax",
        "disconnect",
        "setCredentialsProvider",
        "setValuesCellRange",
        "encodeText",
        "SwitchTo",
        "getStringWidth",
        "clearEscherRecords",
        "notifyUpdateCell",
        "updateCell",
        "isSupportedType",
        "removeLinksDirty",
        "removeDocparts",
        "setHorizontalBorder",
        "addFirst",
        "readFully",
        "flush",
        "toString",
        "findStartOffset",
        "getScriptText",
        "getExternalSheetIndex",
        "getCnt",
        "putAttribute",
        "writeObject",
        "setDiffComparator",
        "writeByte",
        "reset",
        "setIndexVersion",
        "clear",
        "addRule",
        "removeKeywords",
        "getBuffer",
        "fieldInfo",
        "isSupported",
        "onInvalidated",
        "message",
        "getText",
        "setObjectChecking",
        "readRecordSID",
        "getPartOfSpeech",
        "addSSTString",
        "getReading",
        "addConditionalFormatting",
        "getInflectionType",
        "close",
        "writeDouble",
        "onChanged",
        "follows",
        "seek",
        "reportMatch",
        "addCellRangeAddress",
        "tagResource",
        "removeApplicationName",
        "getBaseForm",
        "setCountsByTime",
        "setPrintArea",
        "setFallbackAlgorithm",
        "keep",
        "setPathFilter",
        "contains",
        "postInvalidate",
        "writeBytes",
        "processMatch",
        "addDbcell",
        "keyAt",
        "resolvesToJustOneViableAlt",
        "setExecute",
        "nextKeyString",
        "setLength",
        "removeLastAuthor",
        "incRef",
        "getCellsPnt",
        "clearRect",
        "changeExternalReference",
        "removeLastSaveDateTime",
        "serialize",
        "removeNoteCount",
        "setPlaceholder",
        "removeThumbnail",
        "offset",
        "shouldRefresh",
        "getCellsVal",
        "clearDFA",
        "removeCompany",
        "decode",
        "setPrefix",
        "drawArc",
        "insert",
        "removeScale",
        "getName",
        "addPositionSpans",
        "getDFASize",
        "undeleteAll",
        "newSlice",
        "drawRect",
        "removeEditTime",
        "removePageCount",
        "yypushback",
        "setDirCache",
        "recover",
        "setFillColor",
        "startWorkers",
        "HSSFRichTextString",
        "getAvp",
        "doPrune",
        "setFillerToken",
        "setDefault",
        "setColor",
        "setCodePage",
        "isExpired",
        "drawPolyline",
        "dropChanges",
        "canReuse",
        "readDataSize",
        "push",
        "setStringValue",
        "copyTo",
        "ensureCapacity",
        "disableRefLog",
        "removeParseListeners",
        "setProperty",
        "addListener",
        "renameTo",
        "processContinueRecord",
        "exportRepository",
        "delete",
        "narrowSearch",
        "setObjectId",
        "setVerticalBorder",
        "clipRect",
        "getNameText",
        "add",
        "more",
        "peel",
        "removeCategory",
        "newField",
        "clearSubRecords",
        "incrementDrawingsSaved",
        "concatenate",
        "getAccessSecret",
        "removeMMClipCount",
        "updateCacheResult",
        "readDouble",
        "setDirCacheIterator",
        "getLuceneTerm",
        "removeCreateDateTime",
        "writeProtectWorkbook",
        "format",
        "outputToString",
        "inform",
        "addEscherRecord",
        "addError",
        "HSSFHyperlink",
        "addQueryBuilder",
        "setParentIds",
        "setCurrent",
        "writeContinue",
        "setWorkingTreeIterator",
        "subSequence",
        "readUShort",
        "fillArc",
        "getPronunciation",
        "adjustIndex",
        "addDataValidation",
        "numBits",
        "skipBytes",
        "create",
        "drawOval",
        "clearFormulaEntry",
        "getIndexFile",
        "run",
        "join",
        "fromRaw",
        "addChar",
        "addName",
        "getEntryLength",
        "addChildRecord",
        "removeTitle",
        "advertiseCapability",
        "putDouble",
        "setExecutor",
        "isDone",
        "getSourceStart",
        "hash2",
        "setParentId",
        "drawLine",
        "getAccessKeyId",
        "downsize",
        "writeLong",
        "append",
        "emit",
        "addElement",
        "build",
        "removeByteCount",
        "removeManager",
        "removeURI",
        "setup",
        "merge",
        "hasEntry",
        "removeState",
        "stopWalk",
        "removeHyperlink",
        "dispatch",
        "setFiles",
        "addRecords",
        "setValue",
        "onUpdate",
        "setParams",
        "numNodes",
        "readShort",
        "simpleFormat",
        "setExpire",
        "removeRevNumber",
        "setLocalPatternChars",
        "idFor",
        "getDbcellAt",
        "toStringTree",
        "clearData",
        "onChange",
        "publish",
        "startNewSlice",
        "removeSecurity",
        "addPattern",
        "resolveNameXText",
        "decRef",
        "removeShape",
        "mark",
        "setRate",
        "complement",
        "setTreeFilter",
        "removeHeadingPair",
        "getString",
        "setThreads",
        "addSubRecord",
        "recycleByteBlocks",
        "getSourceEnd",
        "addEscherProperty",
        "isHidden",
        "parse",
        "remove",
        "removeCharCount",
        "writeData",
        "abort",
        "addBuilder",
        "setChild",
        "setFontStyle",
        "setSize",
        "cleanupSession",
        "setText",
        "cloneStyleFrom",
        "setDiffAlgorithm",
        "removeComments",
        "removeFontRecord",
        "evaluate",
        "insertSST",
        "getSourcePath",
        "createInformationProperties",
        "write",
        "setTag",
        "yybegin",
        "lookingAt",
        "unregister",
        "setData",
        "addShape",
        "ReInit",
        "serializeTokens",
        "sort",
        "ordVal",
        "stopNow",
        "setContext",
        "createName",
        "copyUpdatedCells",
        "addField",
        "get",
        "getObjectId",
        "execute",
        "signString",
        "getRKNumberAt",
        "getEntryFile",
        "beginTask",
        "setMessage",
        "setLineStyleColor",
        "setCollector",
        "removeLastPrinted",
        "setFont",
        "docScore",
        "removeWordCount",
        "addChild",
        "removeTemplate",
        "deleteFile",
        "appendTail",
        "copyArea",
        "skip",
        "writeChars",
        "duplicate",
        "ramBytesUsed",
        "removeCell",
        "serializeArrayConstantData",
        "useAnchoringBounds",
        "trimToSize",
        "setNewPrefix",
        "insertCell",
        "setOffset",
        "unread",
        "setEncoding",
        "showMessage",
        "addToolPack",
        "previousIndex",
        "baselineTf",
        "setDbcell",
        "addParseListener",
        "setSort",
        "setQueryConfigHandler",
        "reduce",
        "putFloat",
        "markSupported",
        "writeContinueIfRequired",
        "unlinkSharedFormulas",
        "removePresentationFormat",
        "addTask",
        "appendUserAgent",
        "subpath",
        "clearDrawingGroups",
        "assume",
        "readBytes",
        "addFiles",
        "println",
        "toFormulaString",
        "setCmd",
        "sync",
        "removePrintArea",
        "pathCompare",
        "valueAt",
        "asFormulaString",
        "indexOfKey",
        "size",
        "getRef",
        "removeConditionalFormatting",
        "addArea",
        "resolve",
        "containsColumn",
        "getPayload",
        "removeHiddenCount",
        "releaseSession",
        "setNewObjectId",
        "include",
        "restoreState",
        "applyFont",
        "getEntryObjectId",
        "match",
        "notifySetFormula",
        "endTask",
        "startsWith",
        "pushMode",
        "addState",
        "afterRefresh",
        "connect",
        "stem",
        "writeInt",
        "next",
        "resize",
        "addLast",
        "removeLineCount",
        "putInt",
        "apply",
        "fill",
        "release",
        "addChars",
        "getInflectionForm",
        "willSoonExpire",
        "writeFields",
        "lastIndexOf",
        "nextTokens",
        "drawRoundRect",
        "hasDirectoryEntry",
        "getFunctionIndex",
        "resolveDistErr",
        "removeExFormatRecord",
        "containsCell",
        "indexOf",
        "start",
        "setDateResolution",
        "removeSubject",
        "encode",
        "setElement",
        "setPackConfig",
        "getResultEnd",
        "initReader",
        "removeChildRecord",
        "setID",
        "toObjectId",
        "carry",
        "findNewDrawingGroupId",
        "setCRC",
        "getSheetIndex",
        "finish",
        "getCells",
        "removeSheet",
        "startFragment",
        "dequote",
        "setRule",
        "notifyDeleteCell",
        "addFile",
        "update",
        "setBorder"
      ],
      "Syntactic Label": "Methods and Objects",
      "Semantic Tags": [
        "Data Processing",
        "Event Handling",
        "File I/O",
        "Data Structures",
        "Utility Functions"
      ],
      "Description": "The tokens represent a mix of methods and objects commonly used in C# applications.  Methods like `startsWith`, `put`, `clear`, `add`, etc., perform various operations on data structures or files. Objects such as `MissingRecordAwareHSSFListener`, `UAX29URLEmailTokenizerImpl`, `HSSFRichTextString` suggest handling specific data formats or tasks. The semantic tags reflect the broad range of functionalities these tokens and their associated code snippets are likely involved in."
    }
  },
  {
    "c291": {
      "Unique tokens": [
        "getRecordClass",
        "copyOf",
        "getAncestors",
        "BitSet",
        "vs",
        "MutableValue",
        "?",
        "Query",
        "HashMap",
        "<",
        "Interval",
        "<boolean",
        "toMap",
        ")",
        "HashSet",
        "int",
        "entrySet",
        "Integer",
        "list",
        "TreeSet",
        "ks",
        "PredictionContext",
        "K",
        ",",
        "Ref",
        "Cell",
        "ancestors",
        ">",
        "Row",
        "[",
        "V",
        "ArrayList",
        "extends",
        "values",
        "byte",
        "Object",
        "this",
        "tokens",
        "Term",
        "cnstr",
        "s",
        "toList",
        "SegToken",
        "1",
        "double",
        "IndexableField",
        "Token",
        "Map",
        "boolean",
        "getAllTokens",
        "it",
        ".",
        "char",
        "Class",
        "new",
        "OBJECT",
        "Set",
        "=",
        "Explanation",
        "Entry",
        "(",
        "LinkedList",
        "i",
        "PerfTask",
        "DedicatedCapacityInner",
        "nextPageLink",
        "Long",
        ">>",
        ";",
        "collection",
        "Analyzer",
        "E",
        "reverseOrder",
        "Trie",
        "List",
        "newMap",
        "Character",
        "ParseTree",
        "DVRecord",
        "capacity",
        "]",
        "oversize",
        "Head",
        "entry",
        "ListenerHandle",
        "m",
        "CharSequence",
        "T",
        "FacetEntry",
        "Tree",
        "MultiMap",
        "String"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "Data Structures",
        "Algorithm Implementation",
        "Collection Manipulation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including class names (e.g., ArrayList, HashMap, TreeSet), keywords (e.g., new, public, static, this), operators (e.g., ., =, <, >), data types (e.g., int, double, boolean, String), and identifiers (e.g., getRecordClass, copyOf, getAllTokens).  These tokens are used in various code snippets to create objects, manipulate collections, implement algorithms, and perform utility functions. The context sentences show their usage in different programming scenarios, such as creating and managing collections, implementing search algorithms, and handling data structures."
    }
  },
  {
    "c292": {
      "Unique tokens": [
        "int",
        "{",
        "(",
        ")"
      ],
      "Syntactic Label": "Data Type, Opening Brace, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Return Statement",
        "Data Access",
        "Object Instantiation",
        "Control Flow"
      ],
      "Description": "The tokens 'int', '{', '(', and ')' are fundamental C# language constructs.  'int' is a data type, used here in method signatures to specify the return type of methods. '{' and '}' define the scope of a method or block of code. '(' and ')' are used to enclose method parameters and in method calls.  The context shows these tokens are used in getter methods, which are common in C# for accessing object properties. The semantic tags reflect the overall role of these tokens in the provided code snippets, which are primarily focused on defining and implementing methods that retrieve data."
    }
  },
  {
    "c293": {
      "Unique tokens": [
        "compareAndSet",
        "setIndex",
        "StringBuilder",
        "charCount",
        "_startIndex",
        "b",
        "toQueryString",
        "put",
        "docId",
        "toArray",
        "asList",
        "gt",
        "gc",
        "parameter",
        "setLength",
        "<",
        "StringType",
        "getValue",
        "toByteArray",
        "grow",
        "clone",
        "addBlock",
        "getChildren",
        "copy",
        "printf",
        "append",
        ")",
        "addElement",
        "set",
        "build",
        "unQuoteUnEscape",
        "find",
        "check",
        "entrySet",
        "buffer",
        "merge",
        "serialize",
        "list",
        "tieBreakerMultiplier",
        "group",
        "println",
        "if",
        ",",
        "sb",
        "Cell",
        "missing",
        "getSingleton",
        "print",
        ">",
        "setCellValue",
        "toLowerCase",
        "substring",
        "sync",
        "[",
        "compareToIgnoreCase",
        "addAll",
        "getName",
        "k2",
        "UnsupportedOperationException",
        "toStringTree",
        "*",
        "read",
        "ArrayList",
        "compressed",
        "RuntimeException",
        "thumbnail",
        "keySet",
        "this",
        "parseDouble",
        "subtract",
        "open",
        "getBackgroundColorString",
        "trim",
        "escapeWhitespace",
        "hashCode",
        "emptyList",
        "parseInt",
        "size",
        "1",
        "msg",
        "cur",
        "getRef",
        "CharsRef",
        "work",
        "resolve",
        "getString",
        "IllegalArgumentException",
        "commit",
        "sleep",
        "newInstance",
        "info",
        "parse",
        "codePointAt",
        "Arc",
        "charAt",
        "remove",
        "arraycopy",
        "preWrite",
        ".",
        "IOException",
        "throw",
        "dir",
        "new",
        "POILogger",
        "+",
        "isError",
        "split",
        "accept",
        "log",
        "consume",
        "ppClass",
        "Occur",
        "equals",
        "putIfAbsent",
        "currentTimeMillis",
        "flush",
        "startsWith",
        "toString",
        "wait",
        "lt",
        "add",
        "isEmpty",
        "=",
        "currentPosition",
        "getTag",
        "tmp",
        "next",
        "replace",
        "appendFormat",
        "apply",
        "upperTerm",
        "init",
        "(",
        "reset",
        "write",
        "forName",
        "fill",
        "release",
        "strcmp",
        "concatenate",
        "valueOf",
        "clear",
        "catch",
        "lastIndexOf",
        "in",
        "getCause",
        "dfa",
        "i",
        "checkRange",
        "Long",
        "getText",
        "sort",
        "incrementAndGet",
        "sizeOf",
        "at",
        ";",
        "type",
        "\"",
        "switch",
        "path",
        "binarySearch",
        "replaceAll",
        "doc",
        "Builder",
        "getMessage",
        "indexOf",
        "walk",
        "format",
        "execute",
        "out",
        "List",
        "lookup",
        "inflate",
        "}",
        "close",
        "'",
        "forEach",
        "encode",
        "Unknown",
        "{",
        "usage",
        "text",
        "\\\\",
        "setCharAt",
        "readLine",
        "top",
        "numDocs",
        "seek",
        "line",
        "remaining",
        "getCachedBytes",
        "iterator",
        "addChild",
        "pop",
        "hasNext",
        "readData",
        "create",
        "parameters:",
        "skip",
        "Invalid",
        "intersect",
        "contains",
        "update",
        "unlock",
        "String",
        "subList",
        "compareTo"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "File Processing",
        "Exception Handling",
        "String Manipulation",
        "Algorithm and Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language features, including keywords (if, for, switch, catch), operators (+, -, =, <, >, ., etc.), data types (String, StringBuilder, List, Long, etc.), identifiers (methods, variables, classes), and exception handling mechanisms.  The sentences show these tokens used in various contexts, such as array manipulation, file I/O, string processing, algorithm implementation, and exception handling.  The code snippets demonstrate common programming patterns in C#, such as iterating over collections, working with files, and handling potential errors."
    }
  },
  {
    "c294": {
      "Unique tokens": [
        "",
        "calls:",
        "_sheetEvaluators",
        "maxSubwordSize",
        "6",
        "j",
        "b",
        "CJKBigramFilter",
        "h",
        "Math",
        "CLIENT_ANCHOR",
        "idx",
        "++",
        "?",
        "indexCommitGen",
        "ptr",
        "chars",
        "<",
        "ethat",
        "subDocs",
        "long",
        "else",
        "_jumpTable",
        "be",
        "break",
        "part1",
        "%0",
        "rPtr",
        "(see",
        "isBiff2",
        "append",
        ")",
        "overflowBuffer",
        "int",
        "w5",
        "set",
        "buf",
        "length",
        "findFirstRecordLocBySid",
        "Exception",
        "CommonToken",
        "toHexString",
        "od",
        "buffer",
        "CodecUtil",
        "Integer",
        "result",
        "DocMaker",
        "-",
        "must",
        "Function",
        "pos",
        "if",
        "Hunspell",
        "config",
        "fieldInfos",
        "denseBuffer",
        "addUnknownRecord",
        "null",
        ",",
        "data",
        "erroneous",
        "discardCompoundToken",
        "try",
        "_isError",
        "sb",
        "Default",
        "SetTransition",
        "wbRecords",
        "obj",
        "default",
        "args",
        "CompoundWordTokenFilterBase",
        ">",
        "deserializationOptions",
        "precedencePredicates",
        "backType",
        "newBackType",
        "elser",
        "RefCountedRevision",
        "uri",
        "dd",
        "substring",
        "shape",
        "inSection",
        "[",
        "<=",
        "maxIn",
        "k2",
        "pos2",
        "read",
        "decompressor",
        "==",
        "ArrayList",
        "formatString",
        "with",
        "false",
        "byte",
        ">=",
        "NameEval,",
        "this",
        "continue",
        "\\r",
        "EMPTY_BYTES",
        "ref",
        "CRNCountRecord",
        "array",
        "trim",
        "s",
        "true",
        "nextOnChannel",
        "CoderResult",
        "userData:",
        "size",
        "1",
        "|=",
        "resourcePath",
        "hookOutRedirect",
        "for",
        "thrown",
        "output",
        "IllegalArgumentException",
        "file:",
        "suffixes",
        "Dictionary",
        "boolean",
        "!",
        "KATAKANA",
        "sp",
        "currentBlock",
        "_externalBookBlocks",
        ".",
        "return",
        "ClientException",
        "char",
        "throw",
        "3600",
        "synset",
        "Class",
        "new",
        "k",
        "trans",
        "+",
        "interrupted",
        "NO_MORE_DOCS",
        "but",
        "trace",
        "f1",
        "FileKey",
        "arr",
        "2;",
        "ppClass",
        "equals",
        "expected",
        "thisByte",
        "is",
        "FieldName",
        "writeOffsets",
        "valueLongBits",
        "isRoot",
        "points",
        "setGenerateRuleBypassTransitions",
        "invalid",
        "toString",
        "H:",
        "add",
        "=",
        "isEmpty",
        "elseflags",
        "final",
        "while",
        "labelValue",
        "byteLength",
        "many",
        "key",
        "has",
        "10",
        "assert",
        "(",
        "eThis",
        "lastSheetName",
        "d",
        "o",
        "fill",
        "okPrefix",
        "parallel",
        "_defaultFormat",
        "numToCopy",
        "write",
        "gen",
        "logStep",
        "i",
        "phraseInfo",
        "catch",
        "in",
        "got",
        "instanceof",
        "getFirstColumn",
        "rollBufferSize",
        "getForegroundColorString",
        "BIT_TARGET_NEXT",
        "StringUtils",
        "!=",
        ";",
        "\"",
        "Malformed-input",
        "prePush",
        "switch",
        "the",
        "&=",
        "getParent",
        "same",
        "elseresult",
        "0",
        "contain",
        "format",
        "get",
        "BytesRef",
        "r",
        "ch",
        "}",
        "case",
        "remap",
        "'",
        "wmfImageLength",
        "{",
        "Inflater",
        "text",
        "taskLogStepAtt",
        "clause",
        "ATNDeserializationOptions",
        "currentRevision",
        "parent",
        "e",
        "oldToken",
        "error",
        "]",
        "precedenceState",
        "getEncoder",
        ":",
        "spec",
        "provided",
        "QueryNode",
        "instead",
        "&",
        "setRemoteLocation",
        "revision",
        "&&",
        "iter",
        "SPGR",
        "replacement",
        "DOMUtils",
        "hasNext",
        "value",
        "&amp;",
        "m",
        "count",
        "_lastCell",
        "lastSheetIndex",
        "parameters:",
        "firstSize",
        "CharBuffer",
        "cchar",
        "merged",
        "flags",
        "NOT_SET",
        "Double",
        "exceptions",
        "f0",
        "dup",
        "rs",
        "sheetNames",
        "was",
        "String",
        "field_5_options",
        "isLegalReplacement",
        "fd",
        "removeCell"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Exception Handling",
        "File I/O",
        "String Manipulation"
      ],
      "Description": "The C# code snippets demonstrate various programming concepts. Tokens like keywords (if, else, for, while, try, catch), operators (+, -, *, /, %, =, ==, !=, <, >, <=, >=, ++, --, &, |, ^, !, &&, ||), and special characters ((), {}, [], ., ',', :) are used to construct statements and expressions.  Data structures such as arrays, lists, and strings are used to store and manipulate data. Control flow statements manage the execution sequence. Exception handling mechanisms (try-catch) gracefully handle errors. File I/O operations are used to read and write data to files. String manipulation functions are used to process strings."
    }
  },
  {
    "c295": {
      "Unique tokens": [
        "K",
        "CharsetEncoder",
        "Ref",
        "Policy",
        ".",
        "RevCommit",
        "char",
        "static",
        "Class",
        "Collection",
        "FormulaCellCacheEntry",
        "Charset",
        "toLowerCase",
        "Console",
        "ObjectId",
        "apiVersion",
        "format",
        "get",
        "Break",
        "ByteBuffer",
        "[",
        "List",
        "LongBuffer",
        "equals",
        "ValueEval",
        "<",
        "Set",
        "long",
        "V",
        "hash",
        "void",
        "byte",
        "float",
        "]",
        "short",
        "Object",
        "add",
        "final",
        "Buffer",
        "byteCount",
        "Calendar",
        "int",
        "hashCode",
        "sign",
        "Date",
        "size",
        "double",
        "synchronized",
        "isExpired",
        "T",
        "CharBuffer",
        "Map",
        "ByteOrder",
        "boolean",
        "String",
        "IntBuffer",
        "FileDescriptor"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Utility Functions",
        "Data Structures",
        "Date and Time Manipulation",
        "String Manipulation",
        "Input/Output Operations"
      ],
      "Description": "The tokens represent a wide variety of C# language elements, including keywords (static, public, final, void, etc.), data types (int, byte, float, double, String, etc.), operators (., ==, +, -, etc.), and identifiers (hashCode, startsWith, getJavaDate, etc.).  These tokens are used in various utility functions, data structure manipulations (arrays, lists, maps, etc.), date and time handling, string processing, and input/output operations. The context sentences show their usage in a variety of common programming tasks."
    }
  },
  {
    "c296": {
      "Unique tokens": [
        "pushIsNotSupportedForBundleTransport",
        "childScorer",
        "f",
        "TermQuery",
        "toQueryString",
        "HSSFConditionalFormattingRule",
        "isPrecedenceDfa",
        "DirectField",
        "Storage",
        "IndexOptions",
        "EscherPropertyTypes",
        "Ptg",
        "BasicQueryFactory",
        "getComplexData",
        "LittleEndianConsts",
        "getGitDir",
        "PathFilter",
        "BlockTermState",
        "BearerTokenCredentials",
        "FormatRun",
        "ComparisonOperator",
        "[",
        "getSheetName",
        "RuleContext",
        "StatePair",
        "dataCategoryLabels",
        "DFAState",
        "CellUtil",
        "Result",
        "SimpleFieldFragList",
        "NoteRecord",
        "publicIp",
        "_evaluationListener",
        "IntervalSet",
        "StopFilter",
        "_evaluator",
        "DFAs",
        "RecordBase",
        "StandardQueryConfigHandler",
        "newMessageDigest",
        "posSpan",
        "IEvaluationListener",
        "BufferedIndexInput",
        "UnescapedCharSequence",
        "StatusType",
        "HSSFSheet",
        "Sorter",
        "ScoreComparator",
        "Explanation",
        "BoostAttribute",
        "Calendar",
        "descendingMap",
        "AnyObjectId",
        "FakeDeleteLeafIndexReader",
        "termOffsets",
        "db",
        "FormulaError",
        "JGitText",
        "EscapeQuerySyntaxImpl",
        "boundSheetRecords",
        "IntStream",
        "makeLuceneSubQueriesField",
        "SheetRefEvaluator",
        "BytesRef",
        "BasicSessionCredentials",
        "_tracker",
        "Unpeeled",
        "findBounded",
        "FieldIndexData",
        "processor",
        "HSSFClientAnchor",
        "isValidHead",
        "OpenNLPOpsFactory",
        "_sheet",
        "Repository",
        "EscherRecordFactory",
        "HSSFDataFormat",
        "HSSFObjectData",
        "EvaluationTracker",
        "CharBuffer",
        "MultiMap",
        "queryNode",
        "EscherSimpleProperty",
        "optiSkip",
        "DigestOutputStream",
        "FragmentsBuilder",
        "automaton",
        "ATNConfigSet",
        "getRepository",
        "QueryParserMessages",
        "SharedFormulaRecord",
        "CellType",
        "BoolEval",
        "isMainThread",
        "_type",
        "isDeletedCellRef",
        "maxMultiTermExpansions",
        "matchedToken",
        "OperatorType",
        "ArrayList",
        "BooleanClause",
        "AttributeReflector",
        "YesNoType",
        "this",
        "setCellStyleProperty",
        "HSSFConditionalFormatting",
        "newFactory",
        "HSSFRichTextString",
        "getStubWorkbook",
        "optiSum",
        "RevSort",
        "listener",
        "optiIf",
        "complexData",
        "FormulaUsedBlankCellSet",
        ".",
        "_validationList",
        "XmlPullParser",
        "getLastSheetName",
        "POILogger",
        "DocFreqValueSource",
        "getPtgClass",
        "StandardQueryTreeBuilder",
        "WeightedFieldFragList",
        "NIOFSIndexInput",
        "StringEval",
        "field",
        "WeightedFragInfo",
        "delegateFieldsProducer",
        "FieldCacheSource",
        "_bookEvaluator",
        "ScanRequest",
        "CharFilter",
        "ConditionalFormattingRule",
        "_externSheetRecord",
        "Analyzer",
        "JobFlowInstancesDetail",
        "StringValueEval",
        "getUDFFinder",
        "r",
        "Locale",
        "RevFilter",
        "aptg",
        "ReaderSlice",
        "evalCell",
        "error",
        "offendingState",
        "HashMapEntry",
        ":",
        "QueryNode",
        "queryConfig",
        "TransportProtocol",
        "LargeObjectException",
        "LabelAndValue",
        "FieldConfigListener",
        "cvRec",
        "_byteEncoding",
        "IndexFileNames",
        "NullEscherSerializationListener",
        "postings",
        "getNameDefinition",
        "getNameRecord",
        "HSSFCellStyle",
        "StandardQueryNodeProcessorPipeline",
        "usedBlankAreas",
        "isDocumentSummaryInformation",
        "_uBook",
        "CellReference",
        "subAgg",
        "ArrayRecord",
        "CellCacheEntry",
        "HSSFEvaluationWorkbook",
        "RamUsageEstimator",
        "FSLockFactory",
        ",",
        "URIishField",
        "TableRecord",
        "sets",
        "isSummaryInformation",
        "ParserRuleContext",
        ">",
        "hasWindowFocus",
        "DirCacheIterator",
        "FixedBitSet",
        "TopFieldDocs",
        "_workbook",
        "HSSFEvaluationSheet",
        "AnalysisToolPak",
        "ErrorEval",
        "AggregatingUDFFinder",
        "t",
        "FastCharStream",
        "CredentialItem",
        "ArrayUtil",
        "nameRecord",
        "ObjectIdRef",
        "FileKey",
        "clauses",
        "emptyComplexPart",
        "tme",
        "isAStaticFlagAndHasNorevWalkInstance",
        "rptg",
        "SimpleTimeZone",
        "ruleToStartState",
        "RefDatabase",
        "RevTree",
        "EscherRGBProperty",
        "postingsArray",
        "phraseTerms",
        "FieldsProducer",
        "sheet",
        "get",
        "QRelJudgement",
        "List",
        "ptg",
        "_propertyName",
        "MultiFunction",
        "StoredField",
        "icredential",
        "NGramDistance",
        "CompositeReaderContext",
        "_cache",
        "SimScorer",
        "PackedObjectInfo",
        "SerializingRecordVisitor",
        "SimilarityBase",
        "LittleEndianOutput",
        "DataValidationConstraint",
        "StringCharacterIterator",
        "parentScorer",
        "bcsg",
        "WindowsIndexInput",
        "PropertyIDMap",
        "ATNState",
        "runAutomaton",
        "FacetResult",
        "areaRef",
        "CellRangeAddress",
        "DocValuesProducer",
        "IndexRevision",
        "DirectoryEntry",
        ")",
        "RevFlag",
        "copyOfSubArray",
        "isGitRepository",
        "getAllEmbeddedObjects",
        "FormulaRecordAggregate",
        "Hashtable",
        "ValidationType",
        "sheetRecords",
        "getATN",
        "fieldConfig",
        "ParseTreePattern",
        "_sharedValueManager",
        "newRecord",
        "shape",
        "getGeohash",
        "ExtRst",
        "References",
        "MutableValueBool",
        "TreeFilter",
        "MutableValueStr",
        "HSSF",
        "StandardSyntaxParser",
        "CompiledAutomaton",
        "delegate",
        "NumberEval",
        "getEscherContainer",
        "ChildScorable",
        "mcrs",
        "HSSFCell",
        "SnapshotDeletionPolicy",
        "SheetRangeEvaluator",
        "CharsRef",
        "BoundSheetRecord",
        "_iBook",
        "letChildReport",
        "RefSpec",
        "HSSFShape",
        "ATNConfig",
        "GhCell",
        "escapeSyntaxParser",
        "termBytesReader",
        "OffsetAttribute",
        "getIndexOptions",
        "newHeads",
        "HashtableEntry",
        "IndexCommit",
        "(",
        "perField",
        "UpdateCondition",
        "NameRecord",
        "FunctionQuery",
        "FieldReader",
        "posTaggerModelFile",
        "ValueEval",
        "_workbookIx",
        "subScorer",
        "HSSFEvaluationCell",
        "ParseTree",
        "SlicedIndexInput",
        "ScriptBootstrapActionConfig",
        "BlankCellSheetGroup",
        "entry",
        "PredictionContextCache",
        "T",
        "ExternSheetRecord",
        "_tokenFactorySourcePair",
        "other"
      ],
      "Syntactic Label": "Method Names, Objects, Arrays, Variables, Dot Operator, Opening Parenthesis, Closing Parenthesis, Square Brackets",
      "Semantic Tags": [
        "Spreadsheet Manipulation",
        "Formula Evaluation",
        "Object Management",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent a mix of method names (e.g., removeShape, getFormulaTokens), objects (e.g., HSSFShape, HSSFEvaluationCell), arrays (e.g., mcrs, ptgs), variables (e.g., shape, evalCell), the dot operator for method calls, parentheses for method arguments, and square brackets for array access.  These are fundamental elements in C# programming, particularly within the context of handling spreadsheet data, formulas, and other objects. The semantic tags reflect the overall functionality of the code snippets, which appear to be related to spreadsheet manipulation, formula evaluation, and file I/O operations."
    }
  },
  {
    "c297": {
      "Unique tokens": [
        "",
        "AND",
        "other_",
        "OR",
        "null",
        "bytesEquals",
        "Edit",
        ".",
        "obj",
        "_code",
        "b",
        "format",
        "Rect",
        "c",
        "equals",
        "==",
        "_other",
        "Predicate",
        "Interval",
        "field",
        "=",
        "this",
        ")",
        "key",
        "Sort",
        "&&",
        "(",
        "side",
        "Point",
        "o",
        "value",
        "getClass",
        "class",
        "instanceof",
        "QueryValueSource",
        "a",
        "fieldsData",
        "super",
        "!",
        "object",
        "CFHeaderBase",
        "other",
        "!="
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Object Comparison",
        "Type Checking",
        "Equality Checks",
        "Object Removal",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a wide range of C# language elements used in object comparisons, type checking (instanceof), equality checks (==, !=, .equals()), object removal from collections, and conditional logic (if, &&, ||).  These are fundamental aspects of C# programming, essential for building robust and functional applications. The specific usage in the examples demonstrates common patterns in object-oriented programming, data structure manipulation, and algorithm implementation."
    }
  },
  {
    "c298": {
      "Unique tokens": [
        "\"",
        "IntegerField",
        ",",
        ".",
        "return",
        "P_FLAGS",
        "new",
        "0",
        "+",
        "but",
        "?",
        "[",
        "if",
        "}",
        "{",
        "-=",
        "false",
        "byte",
        "getRecordSize()",
        "=",
        "]",
        "short",
        "+=",
        ":",
        ")",
        "int",
        "4",
        "getWriteIndex",
        "(",
        "size",
        "getRecordSize",
        "for",
        "-",
        "!",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in Serialization and Data Processing",
      "Semantic Tags": [
        "Data Serialization",
        "Byte Stream Manipulation",
        "Error Handling",
        "Data Structure",
        "Record Management"
      ],
      "Description": "The tokens represent a wide array of C# language constructs integral to data serialization, byte stream manipulation, and error handling within a data structure or record management system.  They include keywords (if, for, return), operators (+, -, +=, -=, =, !=, /), data types (int, byte, short), method calls (getRecordSize, getWriteIndex, serialize), array handling (byte[]), exception handling (try-catch), and control flow structures.  The code snippets demonstrate the process of serializing data into byte arrays, handling potential errors during serialization, and managing data structures. The frequent use of LittleEndianByteArrayOutputStream and LittleEndian suggests a specific byte order and data format are being used."
    }
  },
  {
    "c299": {
      "Unique tokens": [
        "LittleEndianOutput",
        "MutableValue",
        "out",
        ".",
        "in",
        ")",
        "LittleEndianInput",
        "io",
        "w",
        "EscapeQuerySyntax"
      ],
      "Syntactic Label": "Data Input/Output and Serialization Methods",
      "Semantic Tags": [
        "Data Serialization",
        "Binary Data",
        "Little Endian Encoding",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent methods and classes involved in serializing and deserializing data in little-endian format.  `LittleEndianOutput` and `LittleEndianInput` are used for writing and reading binary data, respectively.  `out` and `in` are parameters representing the output and input streams. The `.` operator is used for method calls.  `MutableValue` suggests a mutable data structure. `EscapeQuerySyntax` seems unrelated to the primary serialization functionality shown in the provided code snippets."
    }
  },
  {
    "c300": {
      "Unique tokens": [
        "\"",
        "",
        "null",
        ",",
        "getErrorEval",
        ".",
        "return",
        "NumberFormatException",
        "throw",
        "min",
        "new",
        "k",
        "VALUE_INVALID",
        "form",
        ">",
        "+",
        "Math",
        "Type",
        "++",
        "?",
        "!",
        "equals",
        "ValueEval",
        "}",
        "case",
        "ne",
        "<",
        "{",
        "*",
        ";",
        "==",
        "else",
        "N",
        "with",
        "e",
        "RuntimeException",
        "Unexpected",
        "=",
        "]",
        "final",
        ":",
        "this",
        ")",
        "int",
        "NumberEval",
        "length",
        "SUMPRODUCT:",
        "&&",
        "(",
        "d",
        "unsigned",
        "double",
        "result",
        "valueOf",
        "catch",
        "ev.getClass().getName()",
        "instanceof",
        "Invalid",
        "for",
        "minIn",
        "Double",
        "-",
        "n",
        "boolean",
        "String",
        "!=",
        "if",
        "type"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Spreadsheet Calculation",
        "Error Handling",
        "Data Type Conversion",
        "Conditional Logic",
        "Function Evaluation"
      ],
      "Description": "The tokens represent a wide range of C# language constructs used in spreadsheet-like calculations.  They include keywords (if, else, for, catch, throw), operators (+, -, *, /, ==, !=, <, >, &&, ++, !, ?), data types (int, double, boolean, String), objects (ValueEval, NumberEval, StringEval, ErrorEval, etc.), method calls (e.g., getSingleValue, coerceValueToDouble), and exception handling. The code snippets perform calculations, handle potential errors (EvaluationException, NumberFormatException, RuntimeException), and convert between data types. The semantic tags reflect the core functionality of these code segments, which are primarily focused on evaluating formulas and expressions within a spreadsheet context."
    }
  },
  {
    "c301": {
      "Unique tokens": [
        "DefaultColWidthRecord",
        "EvaluationException",
        "Ref3DPtg",
        "ObjectReader",
        "CellRangeAddressList",
        "TeeInputStream",
        "SelectRequest",
        "InstanceGroupConfig",
        "TermQuery",
        "ChartFormatRecord",
        "StandardSyntaxParserTokenManager",
        "PrintStream",
        "ClasspathResourceLoader",
        "AnalyzerFactory",
        "DirCacheEntry",
        "StreamCopyThread",
        "FeatProtection",
        "LiteralValueSource",
        "EventBasedExcelExtractor",
        "StepExecutionStatusDetail",
        "SeriesListRecord",
        "PageBreakRecord",
        "RunJobFlowRequest",
        "CanonicalTreeParser",
        "FtrHeader",
        "Note",
        "RefWriter",
        "StyleRecord",
        "StringMatcher",
        "MetricsTagPredicate",
        "QueryNodeError",
        "MulBlankRecord",
        "ChangeBatch",
        "StempelStemmer",
        "LBCookieStickinessPolicy",
        "BasicQueryFactory",
        "IndexDiffFilter",
        "StringReader",
        "MoreLikeThisQuery",
        "MergedCellsTable",
        "RebootInstancesRequest",
        "ByteOrder",
        "WordnetSynonymParser",
        "CFRuleRecord",
        "SpanOrBuilder",
        "PatternSyntaxException",
        "CRNBlock",
        "RemoveTagsRequest",
        "ByteSequencesWriter",
        "DeletableItem",
        "MultiSimilarity",
        "ErrorMatcher",
        "MultiTerms",
        "CharVector",
        "DirCacheBuildIterator",
        "MFADevice",
        "PlotWalk",
        "RawSubStringPattern",
        "ThrowingPrintWriter",
        "ParserATNSimulator",
        "LoggingConfig",
        "LruTaxonomyWriterCache",
        "WindowTwoRecord",
        "ReadTask",
        "BitField",
        "MissingResourceException",
        "DirectPostingsFormat",
        "ComposedQuery",
        "SaveRecalcRecord",
        "StempelFilter",
        "StatePair",
        "QueryTermScorer",
        "IteratorQueue",
        "NoteMapMerger",
        "PipedInputStream",
        "CRNCountRecord",
        "TypedPropertyValue",
        "RevWalk",
        "UnbufferedCharStream",
        "NLPNERTaggerOp",
        "ApplyCommand",
        "ProductDomain",
        "DefaultAcsClient",
        "NoteRecord",
        "HSSFFormulaEvaluator",
        "AtomTransition",
        "LexerPushModeAction",
        "IntervalSet",
        "PrecedenceQueryParser",
        "BootstrapActionConfig",
        "LogDocMergePolicy",
        "ReverseBytesReader",
        "ExpandedDouble",
        "SearcherTracker",
        "SendMessageBatchRequestEntry",
        "StringBufferInputStream",
        "SSTRecord",
        "NamePtg",
        "PushCommand",
        "ClassificationResult",
        "SimpleBoundaryScanner",
        "DuplicateFormatFlagsException",
        "BooleanQueryNode",
        "Extensions",
        "ATNDeserializer",
        "ReplaceableItem",
        "Destination",
        "ExtensionQuery",
        "SpanFirstBuilder",
        "PrecedencePredicateTransition",
        "UnitsRecord",
        "FnGroupCountRecord",
        "VCenterRecord",
        "SpanPositionCheckQuery",
        "AbstractEscherHolderRecord",
        "FileIdCluster",
        "S3Origin",
        "QueryNodeProcessorPipeline",
        "FlushInfo",
        "StreamTokenizer",
        "FSTCompletion",
        "DocFreqSorter",
        "OrdRange",
        "PassageScorer",
        "RefCount",
        "PayloadSpanUtil",
        "ViewSourceRecord",
        "LinkTable",
        "LoginProfile",
        "ConstValueSource",
        "HyphenationTree",
        "SimpleFragmenter",
        "CalcCountRecord",
        "Item",
        "SliceWriter",
        "PrecedencePredicate",
        "DBCellRecord",
        "DVALRecord",
        "UTF8Sequence",
        "TickRecord",
        "StemmerOverrideMap",
        "GroupedFacetResult",
        "SimpleQQParser",
        "MalformedInputException",
        "VectorValueSource",
        "FormatAndBits",
        "FreeTextSuggester",
        "UnknownFormatFlagsException",
        "SheetRefEvaluator",
        "EveryNTermSelector",
        "DConRefRecord",
        "BytesRef",
        "Name",
        "FuzzyLikeThisQuery",
        "SSTSerializer",
        "PrintHeadersRecord",
        "Placement",
        "SpanTermQuery",
        "NullReader",
        "UserInputQueryBuilder",
        "Allocator",
        "DataFormatRecord",
        "DocumentDictionary",
        "PartETag",
        "PagedBytes",
        "Listener",
        "PasswordRev4Record",
        "DeleteAttributesRequest",
        "SeriesChartGroupIndexRecord",
        "BoolDocValues",
        "Initial",
        "EvaluationTracker",
        "ParseTreePatternMatcher",
        "SharedFormula",
        "CFHeaderRecord",
        "SpanNearClauseFactory",
        "Instance",
        "ParameterNameValue",
        "IndexUpgrader",
        "OutputStreamDataOutput",
        "DimensionsRecord",
        "Vector",
        "SpotPlacement",
        "StepConfig",
        "TokenCollector",
        "UploadPackInternalServerErrorException",
        "LazyDocument",
        "Message",
        "TokenMgrError",
        "AnalyticsTagPredicate",
        "JschSession",
        "FieldConfig",
        "TimeSpec",
        "MergeAlgorithm",
        "SpatialPrefixTree",
        "SubscribeRequest",
        "PackedDataOutput",
        "FooterKey",
        "FacetLabel",
        "BufferedTokenStream",
        "StandardTokenizerImpl",
        "FileTreeIterator",
        "AbstractBlockPackedWriter",
        "TextProgressMonitor",
        "FormulaRecord",
        "SigningCertificate",
        "MultiPhraseQueryNode",
        "NLPTokenizerOp",
        "QueryValueSource",
        "StringRecord",
        "AlphaAnimation",
        "WriteRequest",
        "PredictionContext",
        "MergedGroup",
        "BinarySearchIndexes",
        "SetTransition",
        "GutsRecord",
        "IterationRecord",
        "Restrictions",
        "DatRecord",
        "SideBandOutputStream",
        "InitiateJobRequest",
        "HSSFShapeGroup",
        "CalcModeRecord",
        "FormatTrackingHSSFListener",
        "IdentityEncoder",
        "DirectTrackingAllocator",
        "CatLabRecord",
        "UserSViewEnd",
        "RunInstancesRequest",
        "EscherPropertyMetaData",
        "IndexAndTaxonomyRevision",
        "UncalcedRecord",
        "PackLock",
        "Term",
        "NRTCachingDirectory",
        "SeriesLabelsRecord",
        "HSSFPictureData",
        "RefModeRecord",
        "FeatSmartTag",
        "NativeUnixIndexInput",
        "HSSFRichTextString",
        "ChartEndBlockRecord",
        "SynonymQuery",
        "BottomMarginRecord",
        "ListJobsRequest",
        "SheetVector",
        "UnknownRecord",
        "PathEdit",
        "PositionTrackingVisitor",
        "Patch",
        "LeftMarginRecord",
        "ExpectedAttributeValue",
        "SCLRecord",
        "Intercept",
        "PackConfig",
        "FormulaUsedBlankCellSet",
        "TrustedSigners",
        "NameCommentRecord",
        "LexerNoViableAltException",
        "FileDictionary",
        "ExceedsLimit",
        "NodeHash",
        "NameIdentifier",
        "CommitBuilder",
        "HeaderBlock",
        "DocFreqValueSource",
        "IndexEnum",
        "UseSelFSRecord",
        "StandardQueryTreeBuilder",
        "FSTCompletionBuilder",
        "QueryRescorer",
        "ATNSimulator",
        "NIOFSIndexInput",
        "DistanceValueSource",
        "GetUserPolicyRequest",
        "StringEval",
        "PutAttributesRequest",
        "TokenGroup",
        "AttributeValueUpdate",
        "Predicate",
        "SpatialArgs",
        "AccessKey",
        "ShingleFilter",
        "CountingOutputStream",
        "FieldCacheSource",
        "PolicyAttribute",
        "ScanRequest",
        "SimpleSpanFragmenter",
        "PushbackReader",
        "ReflectionMethodRecordCreator",
        "HSSFDataValidation",
        "SortRescorer",
        "PendingOutputs",
        "CharFilter",
        "LocalFile",
        "DFRSimilarity",
        "ContinuableRecordInput",
        "LogByteSizeMergePolicy",
        "Analyzer",
        "LexerActionExecutor",
        "JobFlowInstancesDetail",
        "NameXPxg",
        "PlainValueCellCacheEntry",
        "InstanceGroupModifyConfig",
        "Lift",
        "StandardQueryParser",
        "Builder",
        "TokenStreamToAutomaton",
        "FormatRecord",
        "SimpleHTMLFormatter",
        "DrillSidewaysResult",
        "FieldsQuery",
        "Thumbnail",
        "ReaderSlice",
        "LittleEndianByteArrayOutputStream",
        "ConstantStringFormat",
        "ByteArrayDataOutput",
        "MultiTermsEnum",
        "SimpleRateLimiter",
        "ByteArrayBackedDataSource",
        "AttrPtg",
        "LargeObjectException",
        "URISyntaxException",
        "PrintSetupRecord",
        "FacetEntry",
        "AliasTarget",
        "FieldInfo",
        "PositionSpan",
        "LexerATNConfig",
        "PlacementType",
        "IllegalFormatFlagsException",
        "DrillSideways",
        "FileResolver",
        "LexerCustomAction",
        "RefMap",
        "BlockPackedReaderIterator",
        "SimpleDate",
        "Toffs",
        "Area3DPtg",
        "AutoCRLFOutputStream",
        "SheetRecordCollectingListener",
        "QueryNodeException",
        "RawCharSequence",
        "SpanNotQuery",
        "PlainTextDictionary",
        "TermStats",
        "PLSAggregate",
        "HSSFRequest",
        "IndexRecord",
        "DoubleDocValues",
        "CharArrayReader",
        "MMSRecord",
        "SmallObject",
        "LegendRecord",
        "DiffFormatter",
        "IgnoreNode",
        "QualityQuery",
        "BufferedChecksum",
        "IBSimilarity",
        "InputIteratorWrapper",
        "AttributeSource",
        "LMSimilarity",
        "ConsoleWriter",
        "RawText",
        "QueryPhraseMap",
        "CachedOrdinalsReader",
        "SupBookRecord",
        "CredentialsProviderUserInfo",
        "GeoRestriction",
        "BytesRefArray",
        "PushbackInputStream",
        "MLTConfig",
        "FileOutputStream",
        "PaneInformation",
        "RowColKey",
        "DrawingRecord",
        "HCenterRecord",
        "DirCacheIterator",
        "ConditionalFormattingTable",
        "UnmonitorInstancesRequest",
        "ViewFieldsRecord",
        "HSSFEvaluationSheet",
        "PaletteRecord",
        "ObjectWalk",
        "InMemorySorter",
        "SmallDocSet",
        "PredPrediction",
        "Credential",
        "SegToken",
        "RevFlagSet",
        "FastCharStream",
        "QueryScorer",
        "CredentialItem",
        "FieldMaskingSpanQuery",
        "JobFlowExecutionStatusDetail",
        "PathQueryNode",
        "TerminateInstancesRequest",
        "PipedOutputStream",
        "DocumentStoredFieldVisitor",
        "BitsSlice",
        "SimpleQueryParser",
        "SpanNotBuilder",
        "VaultNotificationConfig",
        "SingleValueVector",
        "DeltaRecord",
        "GrowableWriter",
        "SmallStream",
        "ModifyInstanceGroupsRequest",
        "DocOffsetSorter",
        "FeatHdrRecord",
        "Break",
        "AttributeValue",
        "FastVectorHighlighter",
        "Tag",
        "NameXPtg",
        "AppCookieStickinessPolicy",
        "DoubleList",
        "PacketLineOut",
        "TreeFormatter",
        "TokenizedPhraseQueryNode",
        "SortingBits",
        "Trec1MQReader",
        "ObjectProtectRecord",
        "SelectionRecord",
        "InterfaceHdrRecord",
        "CRNRecord",
        "ResourceRecordSet",
        "GridsetRecord",
        "PatternFormatting",
        "Credentials",
        "ObjectLinkRecord",
        "CellWalk",
        "FunctionNameEval",
        "DeletedArea3DPtg",
        "BloomFilteredTerms",
        "DefaultUDFFinder",
        "RecalcIdRecord",
        "PropertyTable",
        "MutableFPNumber",
        "ExternalNameRecord",
        "TermsEnumIndex",
        "Parser",
        "RuleTransition",
        "HighFreqTerm",
        "ScoreDoc",
        "NotImplementedFunction",
        "SpanNearBuilder",
        "SearchFind",
        "SingleTermsEnum",
        "Trie",
        "BookBoolRecord",
        "SortingFields",
        "HideObjRecord",
        "LexerChannelAction",
        "SheetRecordCollector",
        "SessionToken",
        "FrameRecord",
        "SnowballFilter",
        "SharedFormulaGroup",
        "StoredField",
        "AddInstanceGroupsRequest",
        "LineParser",
        "CompositeReaderContext",
        "CellFormatter",
        "SynonymMap",
        "Body",
        "BOFRecord",
        "LayoutParams",
        "Area3DPxg",
        "LexerModeAction",
        "SerializingRecordVisitor",
        "RangeTransition",
        "XORShift64Random",
        "FileInputStream",
        "CharArrayWriter",
        "ResourceRecord",
        "DataValidationConstraint",
        "LittleEndianOutputStream",
        "PipedWriter",
        "DelegationSet",
        "StringCharacterIterator",
        "HSSFDataValidationHelper",
        "WSBoolRecord",
        "DatasetSplitter",
        "FacetsCollector",
        "BorderFormatting",
        "InputStreamDataInput",
        "BaseRef",
        "HeaderFooterRecord",
        "PhraseWildcardQuery",
        "InvalidationBatch",
        "HighFrequencyDictionary",
        "SheetIdentifier",
        "WriteAccessRecord",
        "MultiFields",
        "FederatedUser",
        "MissingCellDummyRecord",
        "ListOfOutputs",
        "QueryParserTokenManager",
        "FuzzyQuery",
        "SimpleFraction",
        "XPathTokenAnywhereElement",
        "CellRangeAddress",
        "IndexRevision",
        "StepDetail",
        "LineFormatRecord",
        "FilteredDocIdSetIterator",
        "InterruptTimer",
        "ServerException",
        "FreeRefFunction",
        "StringPtg",
        "PruneByAge",
        "WrappedPositionArray",
        "Principal",
        "DataValidation",
        "PipedReader",
        "DiffCommand",
        "PasswordRecord",
        "ColumnInfoRecord",
        "QueryParser",
        "HSSFAnchor",
        "ComplexPhraseQuery",
        "ATN",
        "CommonToken",
        "MissingFormatWidthException",
        "S3Signer",
        "BasicStats",
        "ExternalBookBlock",
        "ExtendedFormatRecord",
        "StrDocValues",
        "LikeThisQueryBuilder",
        "LazyAreaEval",
        "BlameGenerator",
        "ExpPtg",
        "MergeInfo",
        "Resource",
        "BundleWriter",
        "RefSubRecord",
        "OperationEvaluationContext",
        "PackedDataInput",
        "QualityStats",
        "AddTagsRequest",
        "ParseTreePattern",
        "Row",
        "PrintGridlinesRecord",
        "BaseFragListBuilder",
        "IndexedUDFFinder",
        "AutomatonQuery",
        "LegacyCredentials",
        "CloseIgnoringInputStream",
        "WindowCacheConfig",
        "ListIterator",
        "DocValuesOrdinalsReader",
        "ChartRecord",
        "ExternalNameEval",
        "ForwardBytesReader",
        "StandardSyntaxParser",
        "LongMap",
        "LexerTypeAction",
        "InfoSubRecord",
        "CherryPickResult",
        "JobParameters",
        "NumberEval",
        "PostingsEnum",
        "PacketLineOutRefAdvertiser",
        "NumberFormatIndexRecord",
        "SheetRangeEvaluator",
        "CharsRef",
        "DecisionInfo",
        "BoundSheetRecord",
        "Token",
        "NotImplemented",
        "MergeCellsRecord",
        "ByteVector",
        "OneMerge",
        "NumberPtg",
        "MonitorInstancesRequest",
        "HSSFShape",
        "ApostropheFilter",
        "InclusiveRange",
        "MemAreaPtg",
        "FontDetails",
        "DataLabelExtensionRecord",
        "DirectBytesStartArray",
        "PageItemRecord",
        "ArrayDataSource",
        "BundleInstanceRequest",
        "ProtectionRev4Record",
        "ATNConfig",
        "BootstrapActions",
        "LuceneDictionary",
        "SeriesTextRecord",
        "DocState",
        "Filter",
        "BookSheetKey",
        "RightMarginRecord",
        "RefValueArray",
        "TextRecord",
        "DoubleConstValueSource",
        "NumberMatcher",
        "BytesRefHash",
        "AreaFormatRecord",
        "EscherAggregate",
        "PlacementGroup",
        "PagedMutable",
        "TermVectorsPostingsArray",
        "NetworkInterface",
        "FieldDoc",
        "SpanPositionRangeQuery",
        "JobFlowDetail",
        "BarRecord",
        "Sort",
        "BackupRecord",
        "OpenStringBuilder",
        "Slope",
        "BufferedOutputStream",
        "NameRecord",
        "UpdateCondition",
        "DeletedRef3DPtg",
        "LooseRef",
        "SheetBuilder",
        "FunctionQuery",
        "TermRangeQueryNode",
        "DataValidityTable",
        "PublishRequest",
        "UnicodeMapping",
        "EscherRecord",
        "Policy",
        "FontRecord",
        "StringBuffer",
        "NativeUnixDirectory",
        "KeyValue",
        "LinearOffsetRange",
        "ChangeInfo",
        "FeatFormulaErr2",
        "CredentialsBackupCompatibilityAdaptor",
        "DefaultRowHeightRecord",
        "ValueEval",
        "DeltaIndex",
        "CountryRecord",
        "BatchDeleteAttributesRequest",
        "ByteArrayDataInput",
        "NormalisedDecimal",
        "LastCellOfRowDummyRecord",
        "DateFormatTokenizer",
        "ScriptBootstrapActionConfig",
        "Deleted3DPxg",
        "ByteSliceWriter",
        "SliceReader",
        "GroupMerger",
        "OldStringRecord",
        "MissingRowDummyRecord",
        "SerializationHandleMap",
        "PackParser",
        "AutoCRLFInputStream",
        "StaticCredentialsProvider",
        "Content",
        "DistributionConfig",
        "TabIdRecord",
        "DataItemRecord",
        "UserSViewBegin",
        "ScenarioProtectRecord",
        "LowFreqTerm"
      ],
      "Syntactic Label": "Constructor",
      "Semantic Tags": [
        "Object Creation",
        "Initialization",
        "Dependency Injection",
        "Resource Management",
        "State Setting"
      ],
      "Description": "These tokens represent constructors in C#.  Constructors are special methods used to initialize objects when they are created. The provided examples show constructors taking various parameters, including other objects (dependency injection), primitive types, and arrays.  The semantic tags reflect the common purposes of constructors: creating objects, setting initial state, managing resources, and establishing dependencies between objects."
    }
  },
  {
    "c302": {
      "Unique tokens": [
        "\"",
        "null",
        ".",
        "return",
        "label_1",
        "defaultValue",
        "relative",
        "crA",
        "new",
        "b",
        "default",
        "0",
        "wtMode",
        "prefix",
        "cmp",
        "len",
        "DONE",
        "r",
        "files",
        "[",
        "if",
        "}",
        "avg",
        "filenames",
        "==",
        "INSTANCE",
        "false",
        "e",
        "old",
        "t1",
        "break",
        "0.0",
        "this",
        "continue",
        "statuses",
        "NO_OUTPUT",
        ")",
        "aliased",
        "success",
        "true",
        "(",
        "0.0f",
        "o",
        "value",
        "state",
        "m",
        "1",
        "result",
        "NONE",
        "ic",
        "columnIndex",
        "EMPTY",
        "output",
        "-",
        "a",
        "super",
        "finished",
        "other",
        "following",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Object Manipulation",
        "Data Structures",
        "String Operations",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (return, if, else, break, continue), operators (., ==, -, +, !=, <, >), literals (null, 0, 0.0, 0.0f, true, false), identifiers (output, inc, length, etc.), and special symbols (, ), {, }, [, ], ;).  These elements are fundamental to constructing C# programs, enabling control flow, object manipulation, data structure usage, string operations, and conditional logic. The context sentences demonstrate their use in various programming tasks, such as string manipulation, array processing, object creation, and conditional execution."
    }
  },
  {
    "c303": {
      "Unique tokens": [
        "FileHeader",
        "{",
        "files=",
        ","
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Object Initialization",
        "Constructor Parameter",
        "Dependency Injection",
        "Data Transfer",
        "State Setting"
      ],
      "Description": "The tokens represent parameters within constructor methods.  In C#, this is a common pattern for initializing object state and establishing dependencies between objects.  `FileHeader` likely represents a custom class or type, while `files` is a parameter that holds a collection of `FileHeader` objects. The curly braces `{` and `}` denote the start and end of the constructor's body. The comma `,` acts as a separator between parameters in the constructor's parameter list."
    }
  },
  {
    "c304": {
      "Unique tokens": [
        "\"",
        ".fgcoloridx=",
        ".",
        "return",
        ".visibility",
        ".isUnicode",
        "._dxMin:",
        ".horizPos",
        "checkEmptyCellRef",
        "\\t",
        "'",
        "==",
        ".lastrow",
        ".options",
        "REF",
        "=",
        "getProperty",
        "append",
        ")",
        "(",
        "childCount",
        "buffer",
        ".frt",
        "Integer",
        ".yPosition",
        ".nSheets",
        ".reserved",
        ".lastrowadd1"
      ],
      "Syntactic Label": "StringBuilder, Methods, Operators, Variables, Data Structures",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Output Formatting",
        "Data Structures"
      ],
      "Description": "The tokens represent elements of C# code focused on string manipulation and data representation.  `StringBuilder` is a mutable string object used for efficient string concatenation.  Various methods like `append` are used to build strings.  Operators such as `.` (dot operator for member access), `=` (assignment), `==` (equality comparison), and `+` (string concatenation) are used extensively.  Tokens like `rt`, `grbitFrt`, `reserved`, etc., represent variables storing data, often hexadecimal values, which are formatted into strings. The overall purpose is to create string representations of data structures or objects for output or logging purposes."
    }
  },
  {
    "c305": {
      "Unique tokens": [
        "\"",
        "offset",
        ",",
        "getTreeCount",
        ".",
        "position",
        "throw",
        "startIndex",
        "bytes",
        "index",
        "MAX_VALUE",
        "b",
        "0",
        "+",
        ">",
        "len",
        "++",
        "[",
        "rules",
        "if",
        "chars",
        "<",
        "{",
        "16",
        "blockSize",
        "==",
        "values",
        "arrayOffset",
        "getSize",
        "=",
        "]",
        ">=",
        "keySet",
        "remaining",
        "getNumColumns",
        "append",
        ")",
        "::",
        "name",
        "10",
        "length",
        "iterator",
        "modCount",
        "(",
        "size",
        "\\n",
        "cnt",
        "i",
        "getChildCount",
        "-",
        "a",
        "cbuf.length",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "String Manipulation",
        "Array Manipulation",
        "Exception Handling",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"if\", \"for\", \"throw\", and operators like \"+\", \"==\", \"<\", \">\", etc., control program flow.  Methods like \"append\", \"length\", \"getChars\", and array access using \"[]\" are used for string and array manipulation.  The \"throw\" keyword handles exceptions.  File I/O is implied through the use of File objects and related methods."
    }
  },
  {
    "c306": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "AWS SDK",
        "API Interaction",
        "Client-side Request",
        "Service Operation"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK, handling requests for different service operations. Each method takes a request object as input, performs pre-execution steps ('beforeClientExecution'), executes the core service operation ('execute...'), and returns a result object. The semantic tags highlight the role of 'request' in facilitating API interaction on the client-side."
    }
  },
  {
    "c307": {
      "Unique tokens": [
        "HSSFShape",
        "setLineStyle",
        ",",
        ".",
        "getRed",
        "setShapeType",
        "OBJECT_TYPE_RECTANGLE",
        "new",
        "getBlue",
        "Math",
        "+",
        "shape",
        "createPolygon",
        "}",
        "{",
        "setLineStyleColor",
        "escherGroup",
        "setLineWidth",
        "false",
        "HSSFSimpleShape",
        "=",
        ")",
        "HSSFChildAnchor",
        "LINESTYLE_NONE",
        "setFillColor",
        "getGreen",
        "(",
        "true",
        "foreground",
        "setNoFill",
        "\\n",
        "getWorkbook",
        "getWorldBounds",
        "createShape",
        "bse",
        ";"
      ],
      "Syntactic Label": "Object, Method, Property, Operator, Literal",
      "Semantic Tags": [
        "Shape Creation",
        "Shape Manipulation",
        "Color Management",
        "Drawing",
        "Graphics"
      ],
      "Description": "The tokens represent objects related to shapes (HSSFShape, HSSFSimpleShape, HSSFPolygon), methods to manipulate shapes (setLineStyle, setShapeType, setFillColor, etc.), properties of shapes (line style, fill color), operators (., +, =), and literals (OBJECT_TYPE_RECTANGLE, LINESTYLE_NONE, true, false).  These are used to create and modify shapes within a graphics context, likely for a spreadsheet or document generation library.  The methods often involve setting properties of shapes, such as color and line style, and creating shapes of different types (rectangles, ovals, polygons)."
    }
  },
  {
    "c308": {
      "Unique tokens": [
        "",
        "byte",
        "=",
        "[",
        "final",
        "}",
        "<<",
        ")",
        "int",
        "block",
        "long",
        "(",
        ";",
        "++"
      ],
      "Syntactic Label": "C# Tokens and Operators in Data Decoding",
      "Semantic Tags": [
        "Data Decoding",
        "Bit Manipulation",
        "Array Processing",
        "Data Transformation",
        "Byte Manipulation"
      ],
      "Description": "The tokens represent a combination of C# data types (byte, int, long), operators (=, <<, >>>, &, |, ++), array indexing ([]), and control flow (for loop).  They are used in multiple decode functions to process byte arrays, extracting and transforming bit patterns into long or int arrays. The bitwise operators perform bit shifting and masking operations to extract specific bits from bytes, and the increment operator (++) is used to iterate through the byte arrays. The overall semantic significance is the efficient decoding of data from a byte stream into a more usable format."
    }
  },
  {
    "c309": {
      "Unique tokens": [
        "AlibabaCloudCredentialsProvider",
        "_root",
        "b",
        "defaultDistErrPct",
        "upstream",
        "ByteBuffer",
        "TokenizerFactory",
        "Pattern",
        "ve",
        "sheetName",
        "ScoreMode",
        "cal",
        "startState",
        "joinQuery",
        "set",
        "matcher",
        "MergeStrategy",
        "executionStatusDetail",
        "BasicQueryFactory",
        "currentTokenVal",
        "Lambda",
        "walker",
        "x",
        "from",
        "Config",
        "infos",
        "data",
        "FST",
        "q",
        "BlockTermState",
        "altsets",
        "stream",
        "[",
        "specs",
        "fs",
        "PayloadEncoder",
        "main",
        "capacityParameters",
        "secretAccessKey",
        "RuleContext",
        "newHead",
        "semanticContext",
        "nonNotesMergeStrategy",
        "anchor",
        "IntervalSet",
        "output",
        "sheetEvaluator",
        "operator",
        "searcher",
        "dce",
        "sessionToken",
        "preserveOriginal",
        "regions",
        "range",
        "Weight",
        "rp",
        "stats",
        "bookEvaluator",
        "subSlice",
        "AnyObjectId",
        "TermStates",
        "o",
        "dc",
        "lsnr",
        "in",
        "fieldInfo",
        "docFreqThresh",
        "categoryPath",
        "term",
        "instanceRole",
        "mode",
        "ps",
        "wb",
        "mbk",
        "encoder",
        "CmpOp",
        "childWeight",
        "TaxonomyReader",
        "Reader",
        "walk",
        "BytesRef",
        "operation",
        "termsEnum",
        "states",
        "parent",
        "e",
        "processor",
        "I_MatchPredicate",
        "tokenizerFactory",
        "EvaluationTracker",
        "normalization",
        "refEval",
        "fd",
        "info",
        "queryNode",
        "roleArn",
        "securityToken",
        "loader",
        "bytesStartArray",
        "RecognitionException",
        "ObjRecord",
        "vocabulary",
        "automaton",
        "why",
        "cell",
        "formula",
        "list",
        "repo",
        "PredictionContext",
        "startTerm",
        "EscherContainerRecord",
        "recordFactory",
        "deserializationOptions",
        "cce",
        "totalMaxDoc",
        "builtInCode",
        "items",
        "firstCell",
        "ptgs",
        "fragmentsBuilder",
        "BitSetProducer",
        "collectionStats",
        "carray",
        "newFactory",
        "stemmer",
        "phoneticTextFirstCharacterOffset",
        "compiled",
        "listener",
        "dvRecord",
        "slice",
        "toAppendTo",
        ".",
        "FS",
        "pm",
        "TermStatistics",
        "runData",
        "source",
        "Normalization",
        "dBInstanceClass",
        "INSTANCE",
        "ValueSource",
        "newSegmentSuffix",
        "lambda",
        "key",
        "ifSource",
        "RefUpdate",
        "state",
        "tokenSource",
        "queryConfigHandler",
        "Analyzer",
        "LexerActionExecutor",
        "row",
        "crA",
        "context",
        "tenum",
        "falseSource",
        "r",
        "or",
        "src",
        "lexer",
        "filter",
        "trueSource",
        "atn",
        "aptg",
        "evalCell",
        "consumeAllTokens",
        "AlibabaCloudCredentials",
        "estimatedMergeBytes",
        "ec",
        "LabelAndValue",
        "value",
        "cvRec",
        "FieldInfo",
        "a",
        "cmit",
        "bigBlockSize",
        "strategy",
        "query",
        "token",
        "<",
        "clientProfile",
        "old",
        "fromIx",
        "objRecord",
        "TermStats",
        "child",
        "parent2",
        "docIn",
        "innerIter",
        "ent",
        "fieldName",
        "lruType",
        "scoreMode",
        ",",
        "realTextLength",
        "encryptionMaterials",
        "Shape",
        ">",
        "hasWindowFocus",
        "IndexWriterConfig",
        "CharStream",
        "termStats",
        "file",
        "repository",
        "TokenStream",
        "evaluator",
        "queryTree",
        "t",
        "maxShingleSize",
        "double",
        "status",
        "exc",
        "SemanticContext",
        "ae",
        "JobFlowExecutionStatusDetail",
        "p",
        "realTextFirstCharacterOffset",
        "IndexReader",
        "stopState",
        "proto",
        "TextObjectRecord",
        "ruleStart",
        "factory",
        "credentials",
        "id",
        "lexerActionExecutor",
        "longLivedCredentials",
        "externalWorkbookNumber",
        "LanguageSet",
        "o2",
        "fragListBuilder",
        "newText",
        "deadEndConfigs",
        "rptg",
        "credentialsProvider",
        "bsk",
        "Point",
        "recognizer",
        "tracker",
        "sharedContextCache",
        "FragListBuilder",
        "parent1",
        "\"",
        "builtInName",
        "Directory",
        "normalizer",
        "RevCommit",
        "EvaluationWorkbook",
        "tokenStream",
        "parentsFilter",
        "input",
        "termText",
        "cmp",
        "sheet",
        "out",
        "List",
        "dedicatedCapacityName",
        "dy1",
        "indexCommit",
        "_other",
        "maxAgeSec",
        "profile",
        "upper",
        "packFile",
        "rv",
        "newFragment",
        "words",
        "udf",
        "rs",
        "allocatedStorage",
        "constraint",
        "ATNState",
        "workingTreeIndex",
        "SheetIdentifier",
        "qf",
        "FieldQueryNode",
        "analyzer",
        "CellRangeAddress",
        "areaRef",
        "articles",
        "EncryptionMaterials",
        "textObjectRecord",
        "attributes",
        "topLevelParser",
        "reader",
        "pattern",
        ")",
        "int",
        "RevFlag",
        "criteriaPredicate",
        "HSSFAnchor",
        "srcCell",
        "startPoint",
        "tree",
        "result",
        "ctx",
        "isExternal",
        "FormulaRecordAggregate",
        "config",
        "ConfigLine",
        "instances",
        "o1",
        "Ref",
        "OperationEvaluationContext",
        "spContainer",
        "fieldConfig",
        "workbook",
        "ParseTreePattern",
        "otherState",
        "shape",
        "TermState",
        "maxGoodPoints",
        "csq",
        "basicModel",
        "crB",
        "ref",
        "grid",
        "s",
        "perThread",
        "target",
        "useRomaji",
        "mcrs",
        "CharsRef",
        "Map",
        "RefSpec",
        "localctx",
        "dir",
        "queueControl",
        "iwc",
        "ATNConfig",
        "+",
        "IClientProfile",
        "match",
        "defaultAnalyzer",
        "isCtxDependent",
        "escapeSyntaxParser",
        "engine",
        "BytesRefHash",
        "newHeads",
        "phrasedQueryStringContents",
        "cr",
        "scratch",
        "upperTerm",
        "(",
        "i",
        "DedicatedCapacityInner",
        "extBookIndex",
        "NullOutputStream",
        "tokenGroup",
        "valueIfKeyNotFound",
        "writer",
        "SortedSetDocValuesReaderState",
        "IntsRefBuilder",
        "childQuery",
        "namePtg",
        "lowerTerm",
        "CharArraySet",
        "c",
        "shifter",
        "oldUrl",
        "taxoReader",
        "evaluationListener",
        "weekStartOn",
        "agg",
        "escaper",
        "headerBlock",
        "csn",
        "dBInstanceIdentifier",
        "languages",
        "dirCacheIndex",
        "frag2",
        "taxoCommit",
        "patternTree",
        "numberVE",
        "..",
        "String",
        "other",
        "FacetsConfig"
      ],
      "Syntactic Label": "Variables and Objects",
      "Semantic Tags": [
        "Credential Management",
        "Configuration",
        "Data Structures",
        "Text Processing",
        "Object Serialization"
      ],
      "Description": "The tokens represent various objects and variables used in C# programming.  AlibabaCloudCredentialsProvider and AlibabaCloudCredentials suggest interaction with Alibaba Cloud services, handling credentials.  Objects like ByteBuffer, Pattern, and TokenizerFactory point towards data handling, text processing, and potentially tokenization within a larger system.  Other tokens like MergeStrategy, ScoreMode, and various record types (e.g., FormulaRecordAggregate, DVRecord) hint at specific data structures and operations within a spreadsheet or document processing application. The presence of keywords like 'new' indicates object instantiation. The dot operator (.) is used for method invocation on objects."
    }
  },
  {
    "c310": {
      "Unique tokens": [
        "[SUPBOOK",
        "[GUTS]",
        "SymbolicRef[",
        "input='%s'",
        "sheetname",
        "DiffEntry[",
        "[DAT]",
        ".type",
        "isBorder",
        "[ENDBLOCK]",
        "following:",
        "spanNot(",
        "[CHARTFRTINFO]",
        "append",
        ")",
        "int",
        "dim=",
        "[STYLE]",
        ".rowlevelmax",
        "[DVAL]",
        "buffer",
        "Integer",
        "[SXDI]",
        "[SXVD]",
        "[FRAME]",
        "[CHARTFORMAT]",
        "[NAMECMT]",
        "if",
        "[CHARTTITLEFORMAT]",
        "token>",
        "PersonIdent[",
        "[AREA]",
        "[INDEX]",
        "sb",
        "ERROR:",
        ".vertPos",
        "getOptions",
        "isxvi=",
        "[",
        "\\t",
        "[ArrayPtg]",
        "[COLINFO]",
        "Collection)",
        "getDenominator",
        "[BOF",
        "[PALETTE]",
        "ObjectToPack[",
        "[DATALABEXT]",
        "fieldNames",
        "[OBJECTLINK]",
        "\\\"",
        "***",
        "field='",
        "[TABLE]",
        "TrackingRefUpdate[",
        "[BOUNDSHEET]",
        "for",
        "[ENDOBJECT]",
        "shortToHex",
        "[SELECTION]",
        ".",
        "[LABEL]",
        "[DIMENSIONS]",
        "[FILEPASS]",
        "RECORD]",
        "[SERIESTEXT]",
        ".iObjectKind=",
        "nRows",
        "+",
        "style=",
        "[NOTE]",
        "toString",
        "[STARTBLOCK]",
        "FORMULA",
        "=",
        "state:",
        "(0x",
        "[FORMAT]",
        "Row[rownum=",
        "(",
        "[STARTOBJECT]",
        "title::date)!",
        "ERRORS]",
        ".bgcoloridx=",
        "[TABID]",
        "iObjectKind",
        ";",
        ".grbitSub",
        "\"",
        "[/STYLE]",
        "[CATLAB]",
        "getActiveCellCol",
        "0",
        "Tree={",
        "r",
        "'",
        "}",
        "{",
        "[ftLbsData]",
        "]",
        "[SST]",
        "[MERGEDCELLS]",
        "[EXTERNALNAME]",
        "[SCL]",
        "[WSBOOL]",
        "\\n",
        "[LbsDropData]",
        "[/SERIESTEXT]",
        "date::body)!",
        "getSheetname",
        "String",
        "[HYPERLINK",
        "HexDump"
      ],
      "Syntactic Label": "StringBuilder Object and its methods, other objects, variables, operators, and keywords",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Conditional Logic",
        "File Representation"
      ],
      "Description": "The tokens represent a cluster of C# code snippets focused on constructing string representations of various data structures and objects.  The core functionality revolves around the use of StringBuilder objects to efficiently build strings.  The code uses methods like append() to concatenate data, including hexadecimal representations of data fields (using HexDump), and conditional logic (if statements) to handle different scenarios.  The overall purpose is to serialize data into a human-readable string format, often for debugging or logging purposes.  The tokens represent objects, variables, methods, operators, and keywords used in this process.  The frequent use of StringBuilder suggests an emphasis on efficient string manipulation."
    }
  },
  {
    "c311": {
      "Unique tokens": [
        "",
        "StringBuilder",
        "6",
        "b",
        "writeShort",
        "put",
        "++",
        "?",
        "2",
        "<",
        "0xffff",
        "writeLong",
        ")",
        "buf",
        "length",
        "strlen",
        "-",
        "reserve",
        "pos",
        "println",
        "if",
        "null",
        ",",
        "getShort",
        "sb",
        "readShort",
        "print",
        "len",
        "[",
        "FALSE",
        "read",
        "==",
        "encodeTS",
        "byte",
        "4",
        "s",
        "isUpperCase",
        "exec",
        ".",
        "return",
        "char",
        "TRUE",
        "new",
        "writeHex",
        "log",
        "readFully",
        "16",
        "toString",
        "0x",
        "=",
        "isLetter",
        "writeInt",
        "10",
        "scratch",
        "writeObject",
        "(",
        "writeByte",
        "write",
        "forName",
        "fill",
        "written",
        "valueOf",
        "in",
        "Long",
        "n",
        "0xFFFF",
        ";",
        "\"",
        "0xFF",
        "[]",
        "getChars",
        "Z",
        "0",
        "0xFFFFFFFFL",
        "0xFFFFL",
        "LC",
        "toHex",
        "out",
        "c",
        "}",
        "close",
        "'",
        "isDigit",
        "{",
        "writeDouble",
        "18",
        "0xFFL",
        "]",
        "+=",
        ":",
        "&",
        "xf",
        "value",
        "count",
        "64",
        "Double",
        "8",
        "String",
        "fromRaw"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Data Serialization",
        "Input/Output Operations",
        "String Manipulation",
        "Data Conversion",
        "Boolean Logic"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords (if, return, for, new), operators (+, -, ==, +=, &, |, ?, ++), data types (byte, char, int, long, double, String, StringBuilder, boolean), method calls (read, write, get, serialize, toString, encodeTS, etc.), and array handling ([]).  The code snippets demonstrate various operations such as reading and writing data (readFully, writeInt, writeByte), string manipulation (StringBuilder, toString, getChars), data type conversion (valueOf, toHex, toLong), boolean logic (TRUE, FALSE), and serialization (serialize method with LittleEndianOutput). The semantic tags reflect these core functionalities."
    }
  },
  {
    "c312": {
      "Unique tokens": [
        "pluralStep",
        "getFontIndex",
        "mValues",
        "matched",
        "linkTable",
        "put",
        "newReader",
        "upstream",
        "similarity",
        "ptr",
        "Pattern",
        "simpleValue",
        "clone",
        "_range",
        "isClone",
        "popMode",
        "set",
        "expiration",
        "_palette",
        "fromHexString",
        "buffer",
        "Integer",
        "boost",
        "_list",
        "appendCodePoint",
        "pos",
        "stopFilter",
        "getNode",
        "base",
        "terminate",
        "of",
        "stream",
        "print",
        "blocks",
        "FormatRun",
        "uri",
        "tagger",
        "sorted",
        "addAll",
        "addCluster",
        "setResult",
        "after",
        "sourcePrefix",
        "removeName",
        "getObjectDatabase",
        "timeToString",
        "cardinality",
        "isInBounds",
        "stopWords",
        "disconnect",
        "getOrCreateLinkTable",
        "timSort",
        "commitUserData",
        "objectId",
        "compare",
        "dryRun",
        "SwitchTo",
        "commit",
        "ASCII_ONLY",
        "SortField",
        "canonicalName",
        "_record",
        "composer",
        "normMap",
        "bytes",
        "indexFile",
        "DefaultProfile",
        "getInterpreter",
        "fastKeep",
        "getRule",
        "upHeap",
        "readFully",
        "bytesStart",
        "onDelete",
        "toString",
        "elements",
        "Explanation",
        "schema",
        "Calendar",
        "ipmt",
        "has",
        "side",
        "reset",
        "newName",
        "clear",
        "in",
        "getErrorDisplay",
        "Trees",
        "message",
        "getText",
        "locked",
        "mode",
        "at",
        "finalState",
        "type",
        "forwardCount",
        "Position",
        "outRegion",
        "boundSheetRecords",
        "totalScore",
        "wb",
        "fixed",
        "mProgress",
        "walk",
        "Name",
        "getFeature",
        "mutex",
        "segments",
        "close",
        "backingMap",
        "termsEnum",
        "states",
        "parent",
        "onChanged",
        "inflTypeTranslations",
        "commits",
        "fv",
        "containsKey",
        "tasks",
        "_sheet",
        "_functionsByName",
        "fields",
        "contains",
        "getPath",
        "paths",
        "lastElement",
        "Match",
        "heap",
        "BulkOperation",
        "consumed",
        "loader",
        "pass",
        "gc",
        "setLength",
        "payloadLength",
        "ns",
        "onInsert",
        "HashSet",
        "peek",
        "pmt",
        "uploadPack",
        "cell",
        "udfs",
        "posTranslations",
        "find",
        "formula",
        "serialize",
        "evaluateReference",
        "list",
        "ks",
        "CellType",
        "beforeAdd",
        "matchesImpl",
        "implReset",
        "decode",
        "markedLineNumber",
        "serializeExtraData",
        "getName",
        "undeleteAll",
        "compile",
        "externSheetRecords",
        "inflFormTranslations",
        "subMap",
        "termArrays",
        "newSlice",
        "_breaks",
        "getRelativeValue",
        "symbol",
        "subtract",
        "perMin",
        "hashCode",
        "setColor",
        "growAt",
        "segmentations",
        "newInstance",
        "getSubsections",
        ".",
        "pm",
        "getNewMode",
        "isNewFrag",
        "Maps",
        "_shapes",
        "mem",
        "append0",
        "sorting",
        "cells",
        "getRefCount",
        "getNameText",
        "deleteNode",
        "field",
        "commentRecords",
        "add",
        "=",
        "byName",
        "getJavaCalendar",
        "getValueType",
        "rate",
        "calendar",
        "_bookEvaluator",
        "state",
        "_in",
        "valueOf",
        "_precedenceStack",
        "upstreamCommitName",
        "currentTextFragment",
        "incrementAndGet",
        "formatValue",
        "path",
        "numMarkers",
        "_string",
        "copyBuffer",
        "fstCompiler",
        "getNameIndex",
        "r",
        "currentSubtree",
        "foundTerms",
        "headSet",
        "delete0",
        "System",
        "RevFilter",
        "filter",
        "_regions",
        "text",
        "writeContinue",
        "setPosition",
        "fmt",
        "body",
        "queryConfig",
        "_table",
        "marklimit",
        "assertNotStarted",
        "records",
        "invert",
        "username",
        "value",
        "\\n",
        "subRecord",
        "commonGrams",
        "score",
        "FieldInfo",
        "run",
        "object",
        "expValue",
        "fromRaw",
        "_formats",
        "getState",
        "getFileMode",
        "IndexFileNames",
        "startIndex",
        "getFormat",
        "distErr",
        "details",
        "toArray",
        "postings",
        "userData",
        "isDefaultField",
        "getNameRecord",
        "offsets",
        "<",
        "point",
        "drawLine",
        "extractTasks",
        "downsize",
        "notesRef",
        "copy",
        "root",
        "append",
        "getColumn",
        "refCount",
        "_uBook",
        "isConnected",
        "getTextBuffer",
        "buf",
        "mTabs",
        "addAttribute",
        "merge",
        "hasEntry",
        "mergeAux",
        "removeCase",
        "stopWalk",
        "indexCommits",
        "getTokens",
        "setFiles",
        "mAdapter",
        "setParams",
        "postingsEnum",
        "URIish",
        "ords",
        "deleteEntry",
        "series",
        "Cell",
        "doWait",
        "bytesUsed",
        "maxLevels",
        "idFor",
        "toStringTree",
        "ensureMatch",
        "cfAggregate",
        "read",
        "map",
        "fillerToken",
        "getLabels",
        "keepOrig",
        "sizeChanged",
        "task",
        "ordinal",
        "writeCoordinates",
        "parseEntry",
        "mark",
        "getTerms",
        "complement",
        "matchFilter",
        "getString",
        "p",
        "hash32",
        "remove",
        "ArrayUtil",
        "deleted",
        "inserter",
        "characterClass",
        "sst",
        "setDepth",
        "id",
        "Break",
        "FileKey",
        "getOldPath",
        "slop",
        "getSchemes",
        "evaluate",
        "getNewPath",
        "prior",
        "gitdir",
        "sortedTerms",
        "properties",
        "assert",
        "lock",
        "appendNull",
        "Transport",
        "booleanValue",
        "refCounts",
        "nextWrite",
        "addShape",
        "ReInit",
        "sort",
        "lazyInit",
        "ENABLED",
        "tokenSeparator",
        "now",
        "UnicodeString",
        "parentIds",
        "getBytesReader",
        "ObjectId",
        "_options",
        "Git",
        "getRow",
        "get",
        "mId",
        "out",
        "matchOffsets",
        "Lexer",
        "mergeSort",
        "_buf",
        "carryFlags",
        "tf_base",
        "nameValPairs",
        "normalize",
        "_cache",
        "precedence",
        "perfObjects",
        "newFilter",
        "expiredDate",
        "profile",
        "removeAllElements",
        "receivePack",
        "outputs",
        "getOldId",
        "getJavaDate",
        "count",
        "createCell",
        "skip",
        "getSheet",
        "explain",
        "flags",
        "newFragment",
        "intOffset",
        "transparentBounds",
        "FuzzySet",
        "findAllNodes",
        "children",
        "subSet",
        "initialSet",
        "threshold",
        "IndexRevision",
        "getSortField",
        "_crns",
        "positions",
        "streamId",
        "xfptr",
        "attributes",
        "getImpl",
        "reader",
        "pathFilters",
        ")",
        "force",
        "_cfHeaders",
        "doWrite",
        "refSpecs",
        "startCommit",
        "oi",
        "overhead",
        "upstreamCommit",
        "result",
        "assume",
        "findPos",
        "intSet",
        "commands",
        "Edit",
        "addFiles",
        "println",
        "getCurrentState",
        "region",
        "remote",
        "workbook",
        "Row",
        "mKeys",
        "shape",
        "stripTags",
        "offsetAtt",
        "valueKeyMap",
        "TreeFilter",
        "pathCompare",
        "values",
        "commitsToDelete",
        "stateNumber",
        "retval",
        "sre",
        "isBare",
        "Side",
        "heads",
        "parsePersonIdent",
        "threadSafe",
        "ref",
        "getNewId",
        "name",
        "OLD",
        "monitor",
        "findNext",
        "DFA",
        "upto",
        "size",
        "resourcePath",
        "getFile",
        "cur",
        "termState",
        "returnState",
        "nextPos",
        "Token",
        "resolve",
        "LengthFilter",
        "_iBook",
        "matchFound",
        "getHeader",
        "table",
        "include",
        "restoreState",
        "index",
        "newline",
        "new",
        "+",
        "_parent",
        "match",
        "getRawValue",
        "matches",
        "endTask",
        "startsWith",
        "pushMode",
        "entries",
        "useHash",
        "connect",
        "maxCount",
        "terms",
        "stem",
        "tailSet",
        "replace",
        "next",
        "appendFormat",
        "TreeMap",
        "apply",
        "(",
        "scheme",
        "lastIndexOf",
        "WHITESPACE",
        "checkRange",
        ";",
        "State",
        "fileOffset",
        "getOldMode",
        "insert0",
        "credential",
        "indexOf",
        "c",
        "encode",
        "treeFilter",
        "nameFinder",
        "resort",
        "current",
        "names",
        "isComplete",
        "positionSpans",
        "setID",
        "toObjectId",
        "_array",
        "filepatterns",
        "counts",
        "CharacterClass",
        "rc",
        "getWorkbook",
        "dequote",
        "setRule",
        "sock",
        "filenamesToFiles",
        "update",
        "subList",
        "checkCallable",
        "compareTo"
      ],
      "Syntactic Label": "Method Names, Object identifiers, Variables, Keywords, Operators",
      "Semantic Tags": [
        "Object Management",
        "Data Structures",
        "Input/Output",
        "State Management",
        "Control Flow"
      ],
      "Description": "The tokens represent a mix of method names (e.g., getFontIndex, appendCodePoint), object identifiers (e.g., linkTable, newReader), variables (e.g., mValues, matched), keywords (e.g., public, void, if, else), and operators (e.g., ., =, +, -, <).  These tokens are fundamental to C# programming, enabling object manipulation, data processing, and control flow within the program. The context sentences show their use in defining classes, methods, and variables, and in implementing program logic.  The significance in the context of C# is that these tokens are building blocks for creating and controlling the behavior of C# applications."
    }
  },
  {
    "c313": {
      "Unique tokens": [
        "createInstances",
        "updateBot",
        "executeChangeSet",
        "describeType",
        "getExportJobs",
        "updateEvaluation",
        "createDomainName",
        "getConfigurationProfile",
        "getMedia",
        "getGateway",
        "putOutcome",
        "batchGetNamedQuery",
        "removePermission",
        "createImageBuilder",
        "describeHosts",
        "getDevice",
        "validateConfiguration",
        "getResolverRule",
        "deleteIdentity",
        "releaseStaticIp",
        "listNetworks",
        "acceptMatch",
        "deleteComment",
        "listParts",
        "lookupPolicy",
        "listPresets",
        "describeStacks",
        "listBuilds",
        "describeExpressions",
        "deleteParameterGroup",
        "describeVolumes",
        "describeSolutionVersion",
        "getDocumentationPart",
        "describeLimits",
        "createBuild",
        "createTemplate",
        "getRouteResponse",
        "getShippingLabel",
        "putDashboard",
        "describeAutoScalingGroups",
        "getInstances",
        "updateUserSettings",
        "describeTags",
        "describeClusterParameterGroups",
        "deleteDocument",
        "deleteMethod",
        "deleteBroker",
        "createRelationalDatabase",
        "createLogPattern",
        "describeSubnets",
        "listServices",
        "updateUsage",
        "describeSpotPriceHistory",
        "registerImage",
        "describeFolderContents",
        "compareFaces",
        "enableRule",
        "deleteCollection",
        "createDBClusterSnapshot",
        "describeDeliveryStream",
        "getSolutionMetrics",
        "rejectInvitation",
        "deleteStream",
        "describeStream",
        "getNode",
        "listMembers",
        "importSnapshot",
        "describeRouteTables",
        "getBatchPrediction",
        "getRoutes",
        "getExportSnapshotRecords",
        "deleteTags",
        "listActivityTypes",
        "createFileSystem",
        "describeMatchmakingConfigurations",
        "deleteStage",
        "deleteSubnet",
        "updateRelationalDatabase",
        "describeRootFolders",
        "updateDomainName",
        "getDeployment",
        "importInstance",
        "createRule",
        "sendMessage",
        "exportApi",
        "describeDBClusterBacktracks",
        "describeDomain",
        "enableOrganizationAdminAccount",
        "createDefaultSubnet",
        "createLaunchTemplate",
        "listScripts",
        "updateIdentityPool",
        "describeEntitiesDetectionJob",
        "updateUserProfile",
        "listQueues",
        "deleteTrafficPolicy",
        "describeDBParameterGroups",
        "modifyHosts",
        "describeSnapshots",
        "stopFleet",
        "updateSubnetGroup",
        "describeReservedNodeOfferings",
        "getChange",
        "describeIndexFields",
        "describeTemplate",
        "getCampaignVersion",
        "deleteSecurityGroup",
        "listCollections",
        "modifyDBClusterSnapshotAttribute",
        "receiveMessage",
        "describeAssessmentRuns",
        "createDistribution",
        "describeWorkspaceImages",
        "describePlayerSessions",
        "invokeEndpoint",
        "getNetworkProfile",
        "describeCollection",
        "describeVpnConnections",
        "getConfigurationSet",
        "getStaticIp",
        "getBlueprints",
        "resolveRoom",
        "updateLedger",
        "listDeployments",
        "describeNetworkAcls",
        "updateRoom",
        "getAssessmentReport",
        "createFolder",
        "describeDomains",
        "createDefaultVpc",
        "describeDBClusterSnapshots",
        "describeAccount",
        "describeApplication",
        "describeOptionGroups",
        "getEventsConfiguration",
        "describeVolumesModifications",
        "describeContainerInstances",
        "deleteRoom",
        "describeAutoScalingInstances",
        "deleteConfigurationSet",
        "getMailboxDetails",
        "getDisks",
        "listHostedZones",
        "listOrganizations",
        "getClientCertificates",
        "createIntegration",
        "updateStack",
        "rebootRelationalDatabase",
        "readPipeline",
        "createProject",
        "updateCluster",
        "getManagedScalingPolicy",
        "getActiveNames",
        "associateResolverRule",
        "bundleInstance",
        "getAccountSendingEnabled",
        "updateProfile",
        "getRestApi",
        "describeClusterTracks",
        "updateAddressBook",
        "getCampaigns",
        "attachDisk",
        "getVaultAccessPolicy",
        "rejectAssignment",
        "describeGameServer",
        "createProfile",
        "detectLabels",
        "describeDefaultParameters",
        "getQualificationType",
        "describeNotificationSubscriptions",
        "purchaseReservedDBInstancesOffering",
        "getDiskSnapshot",
        "listClosedWorkflowExecutions",
        "acceptInvitation",
        "searchUsers",
        "enableDirectory",
        "scan",
        "getGeoLocation",
        "getQueueAttributes",
        "updateResource",
        "previewAgents",
        "getUsage",
        "updateRoute",
        "describeTransitGateways",
        "describeInstallationMedia",
        "describeOrganizationConfiguration",
        "getEmailTemplate",
        "suspendProcesses",
        "deleteVolume",
        "createAddress",
        "getEventStream",
        "describeLedger",
        "getExclusionsPreview",
        "deleteExpression",
        "createLedger",
        "createQueue",
        "createVoiceConnector",
        "deleteSchema",
        "describeLaunchConfigurations",
        "detectText",
        "getContact",
        "listWorkflowTypes",
        "getAddressBook",
        "deleteResource",
        "getMetricStatistics",
        "describeComments",
        "defineExpression",
        "listStreams",
        "exportSnapshot",
        "setActiveReceiptRuleSet",
        "getResource",
        "addPermission",
        "deleteApplication",
        "listDomains",
        "expireSession",
        "describeActivityType",
        "setVaultNotifications",
        "getTrafficPolicyInstanceCount",
        "describeDataSetPermissions",
        "createNetworkAcl",
        "removeTags",
        "getRelationalDatabaseBundles",
        "describeCacheClusters",
        "getSdk",
        "startNotebookInstance",
        "describeDataSources",
        "getStackPolicy",
        "createGraph",
        "createDataSource",
        "createHealthCheck",
        "importImage",
        "copySnapshot",
        "listEnvironments",
        "describeOrganization",
        "createDBParameterGroup",
        "getSegmentImportJobs",
        "describeMountTargets",
        "updateDetector",
        "updateService",
        "disconnectParticipant",
        "describeRulesPackages",
        "describeFleetInstances",
        "classifyDocument",
        "updateSchema",
        "describeIpGroups",
        "deleteLoadBalancer",
        "deleteFolder",
        "getHealthCheck",
        "detectEntities",
        "describeComponent",
        "getDomainName",
        "createConfiguration",
        "describeAlarmHistory",
        "getBasePathMapping",
        "deleteAddressBook",
        "describeReservedInstancesListings",
        "cancelResize",
        "describeTaskSets",
        "deleteDBClusterSnapshot",
        "updateModel",
        "resetClusterParameterGroup",
        "getRelationalDatabaseMasterUserPassword",
        "deleteScript",
        "purchaseProvisionedCapacity",
        "updatePipeline",
        "listSchemas",
        "describeClusterVersions",
        "disassociateAddress",
        "describeInstances",
        "createPublicVirtualInterface",
        "getLoadBalancer",
        "getMeeting",
        "createSubnetGroup",
        "updateJob",
        "deleteIntegration",
        "getOperationDetail",
        "listClusters",
        "listJobs",
        "getSegments",
        "describeStaleSecurityGroups",
        "getDomainNames",
        "getClusterCredentials",
        "describeWebsiteCertificateAuthority",
        "putEvents",
        "deleteRepository",
        "createDirectConnectGateway",
        "resolveAlias",
        "getEmailIdentity",
        "deleteContact",
        "describeConfiguration",
        "listDomainNames",
        "getIdentityPoolRoles",
        "domainMetadata",
        "describeFleetEvents",
        "describeDBClusterSnapshotAttributes",
        "restoreWorkspace",
        "getLifecyclePolicy",
        "deletePolicy",
        "getQueryExecution",
        "updateFleet",
        "getMLModel",
        "getConferencePreference",
        "describeInternetGateways",
        "describeActivities",
        "describeSessions",
        "describeAccessPoints",
        "describeConversionTasks",
        "describeAssessmentTargets",
        "describeImages",
        "describeVirtualInterfaces",
        "registerDomain",
        "describeGameSessionQueues",
        "exitStandby",
        "describeClusterSubnetGroups",
        "getSuppressedDestination",
        "getPolicy",
        "createModelPackage",
        "getSearchSuggestions",
        "getSmsTemplate",
        "describeClusterSecurityGroups",
        "deleteFilter",
        "deleteAccount",
        "applySchema",
        "rebootWorkspaces",
        "getBot",
        "splitShard",
        "getId",
        "createNode",
        "updateFileSystem",
        "listOperations",
        "describeResource",
        "updateApi",
        "getAccountBalance",
        "createIdentityPool",
        "describeBundleTasks",
        "listFilters",
        "disassociateMembership",
        "createSubnet",
        "stopApplication",
        "getUsagePlanKeys",
        "createObject",
        "modifyCluster",
        "createVpc",
        "describeAvailabilityZones",
        "describeUserProfile",
        "deleteChangeSet",
        "describeDBClusterParameters",
        "getExportJob",
        "getResolverRuleAssociation",
        "describeRegions",
        "getFederationToken",
        "describeEndpoints",
        "monitorInstances",
        "getRelationalDatabase",
        "copyImage",
        "updateTable",
        "getMethod",
        "getRouteResponses",
        "getVaultLock",
        "putModel",
        "getInvalidation",
        "deleteService",
        "describeScalingActivities",
        "deleteHealthCheck",
        "createStack",
        "describePrefixLists",
        "getAccountSettings",
        "createService",
        "getSendStatistics",
        "describeVolumeStatus",
        "describeBroker",
        "updateStage",
        "createNamedQuery",
        "getPrediction",
        "unpeerVpc",
        "getSegmentExportJobs",
        "createBot",
        "describeUpdateActions",
        "getRelationalDatabaseSnapshot",
        "getConfigurationSetEventDestinations",
        "deleteDisk",
        "listFleets",
        "getInstanceState",
        "updateDataSource",
        "getMethodResponse",
        "runInstances",
        "peerVpc",
        "describeNotificationConfigurations",
        "createComponent",
        "createSnapshots",
        "updateUserHierarchy",
        "describeWorkspaces",
        "listApplications",
        "getModelVersion",
        "configureHealthCheck",
        "getSdkType",
        "describeTemplateAlias",
        "createEventTracker",
        "describeClusterDbRevisions",
        "describeLoggingStatus",
        "getEmailChannel",
        "describeFindings",
        "describeExportTasks",
        "getReusableDelegationSetLimit",
        "getSkillGroup",
        "detachVolume",
        "describeCampaign",
        "describeCacheSecurityGroups",
        "createModel",
        "getOperationsForResource",
        "updateRecords",
        "putRecord",
        "describeAlgorithm",
        "getApp",
        "describeProjects",
        "removeTargets",
        "createStream",
        "getCognitoEvents",
        "describeReservedNodes",
        "listTags",
        "createStage",
        "describeReservedInstancesModifications",
        "describeCapacityProviders",
        "bulkPublish",
        "batchGetDeployments",
        "deleteIdentityPool",
        "getUserEndpoints",
        "getTemplateSummary",
        "deleteNode",
        "getImportJobs",
        "addResourcePermissions",
        "describeFleetCapacity",
        "deleteLag",
        "getPasswordData",
        "select",
        "createUserProfile",
        "getJourney",
        "importVolume",
        "rebootInstances",
        "detachInstances",
        "describeVpnGateways",
        "describeParameterGroups",
        "analyzeDocument",
        "createInstanceSnapshot",
        "updateFolder",
        "batchDeletePhoneNumber",
        "detectCustomLabels",
        "getAuthorizationToken",
        "updateVariable",
        "attachTypedLink",
        "getKeyPair",
        "listGateways",
        "getRelationalDatabaseEvents",
        "deactivateEventSource",
        "phoneNumberValidate",
        "getCampaign",
        "deleteDirectConnectGateway",
        "viewBilling",
        "describeScheduledActions",
        "describeAccountAttributes",
        "getDeploymentStrategy",
        "deleteSnapshot",
        "updateBuild",
        "getBlacklistReports",
        "describeCertificates",
        "getRoom",
        "unmonitorInstances",
        "describeVirtualGateways",
        "putAccountSetting",
        "describeUpdate",
        "createResourceGroup",
        "getSpeechSynthesisTask",
        "getRelationalDatabaseSnapshots",
        "describeParameters",
        "describeScalingPolicies",
        "getRoomSkillParameter",
        "describeWorkflowType",
        "modifyDBClusterParameterGroup",
        "deleteVpc",
        "detachStaticIp",
        "inviteUsers",
        "getMetricData",
        "inviteMembers",
        "stopInstances",
        "createCacheParameterGroup",
        "describeWorkspaceBundles",
        "createKeyPair",
        "listMetrics",
        "getVpcLinks",
        "detectSyntax",
        "detectKeyPhrases",
        "createAuthorizer",
        "describeFleetHistory",
        "deleteResolverRule",
        "putAlarm",
        "updateUser",
        "deleteRule",
        "describeDBSubnetGroups",
        "getRelationalDatabases",
        "describeFleetMetadata",
        "getApiMappings",
        "getInstanceSnapshots",
        "createLabels",
        "createParameterGroup",
        "createInvalidation",
        "createNotebookInstance",
        "updateAlias",
        "deleteInterconnect",
        "updateDataSet",
        "describeKeyPairs",
        "getSmsChannel",
        "describeRuntimeConfiguration",
        "describeDBEngineVersions",
        "readJob",
        "describeApplicationSnapshot",
        "describeLoadBalancerPolicies",
        "createComment",
        "createClusterSecurityGroup",
        "getInstancePortStates",
        "deleteLexicon",
        "getSoftwareUpdates",
        "getIdentityPoolConfiguration",
        "describeProblem",
        "createAddressBook",
        "createHostedZone",
        "getTerminology",
        "stopMatchmaking",
        "describeHumanLoop",
        "updateEndpoint",
        "createMembers",
        "listDevices",
        "describeReservedDBInstances",
        "describeDocumentClassifier",
        "cancelSteps",
        "batchGetVariable",
        "listIndex",
        "getLoadBalancers",
        "getVoiceConnector",
        "getCampaignVersions",
        "detachTypedLink",
        "listAlgorithms",
        "predict",
        "updateConfiguration",
        "getDataSource",
        "getIntegrations",
        "updateMember",
        "detachNetworkInterface",
        "getRecords",
        "deleteDistribution",
        "describeFeatureTransformation",
        "createDeployment",
        "getRelationalDatabaseLogStreams",
        "modifyReservedInstances",
        "createUser",
        "getEndpoint",
        "deleteObject",
        "testAlarm",
        "describeMatchmaking",
        "getTrafficPolicyInstance",
        "updateFacet",
        "getNamedQuery",
        "describeCustomerGateways",
        "createGameSession",
        "createAlias",
        "createGroup",
        "createVolume",
        "createCampaign",
        "describeEvents",
        "getHIT",
        "describeDBSnapshots",
        "getIntegration",
        "confirmConnection",
        "getApplicationSettings",
        "deleteFaces",
        "describeDatasetGroup",
        "deletePipeline",
        "getVoiceTemplate",
        "resetDBClusterParameterGroup",
        "getConferenceProvider",
        "deleteHostedZone",
        "getVaultNotifications",
        "deleteCampaign",
        "signalResource",
        "createSchema",
        "putLexicon",
        "listRecords",
        "verifyEmailAddress",
        "releaseAddress",
        "getDataEndpoint",
        "putMethod",
        "updateDashboard",
        "listSteps",
        "createModelVersion",
        "getQualificationScore",
        "archiveFindings",
        "createClusterSubnetGroup",
        "associateContactWithAddressBook",
        "addFacetToObject",
        "createInterconnect",
        "getDeployments",
        "listTypes",
        "attachPolicy",
        "getDomainDetail",
        "describeModel",
        "describeFleetAttributes",
        "attachVolume",
        "getExternalModels",
        "deleteFleet",
        "describeGroup",
        "describeJob",
        "getDiskSnapshots",
        "getFolderPath",
        "describeGameSessions",
        "createChangeSet",
        "createDetector",
        "cancelJob",
        "describeDBInstances",
        "getDetectors",
        "getUsagePlan",
        "deletePreset",
        "describeEvaluations",
        "deleteLedger",
        "deleteDashboard",
        "describeReservedDBInstancesOfferings",
        "describeScheduledInstances",
        "logoutUser",
        "unarchiveFindings",
        "updateDevice",
        "getBundles",
        "initiateJob",
        "deleteUser",
        "deleteInstance",
        "sendMessageBatch",
        "describeServices",
        "describeClusters",
        "describeAssessmentTemplates",
        "createApiKey",
        "listSkills",
        "getDomains",
        "describeLaunchTemplates",
        "createDashboard",
        "getInstanceMetricData",
        "describeLocations",
        "detachLoadBalancers",
        "listExports",
        "describeClientProperties",
        "listGroups",
        "resetPassword",
        "describeComponentConfiguration",
        "getLoadBalancerMetricData",
        "updateCampaign",
        "stopDeployment",
        "updateScript",
        "describeDBLogFiles",
        "describeTasks",
        "continueUpdateRollback",
        "purgeQueue",
        "describeReservedInstances",
        "getDocumentPath",
        "describeDevice",
        "getLifecyclePolicies",
        "describeLifecycleConfiguration",
        "getDeploymentGroup",
        "listObjectParents",
        "getProxySession",
        "createPreset",
        "getAuthorizers",
        "describeDataset",
        "purchaseScheduledInstances",
        "getDocumentationParts",
        "describeReplicationGroups",
        "updateNode",
        "getRepositoryPolicy",
        "sendEmail",
        "createMember",
        "updateAuthorizer",
        "getTextDetection",
        "describeLocalGateways",
        "createFacet",
        "sendInvitation",
        "getFaceDetection",
        "describePlacementGroups",
        "deleteTemplate",
        "describeWorkforce",
        "getClientCertificate",
        "deleteMember",
        "getReusableDelegationSet",
        "updateApplication",
        "createJob",
        "allocateAddress",
        "migrateWorkspace",
        "deleteSolution",
        "getConsoleScreenshot",
        "createAccount",
        "deactivateUser",
        "listImports",
        "deregisterImage",
        "renewDomain",
        "createEndpoint",
        "deleteFacet",
        "getApiKeys",
        "deleteIdentities",
        "listAttributes",
        "batchRead",
        "registerUser",
        "associateFleet",
        "createHIT",
        "deleteDomain",
        "describeScript",
        "listUpdates",
        "describeSnapshotAttribute",
        "describeStreamSummary",
        "getAuthorizer",
        "uploadDocuments",
        "createFleet",
        "putAttributes",
        "createApp",
        "getJobManifest",
        "updateIntegration",
        "createClusterParameterGroup",
        "updatePhoneNumber",
        "describeDBParameters",
        "getStages",
        "getChannels",
        "putTargets",
        "getStaticIps",
        "describeFleetUtilization",
        "getInstance",
        "exportImage",
        "resetDBParameterGroup",
        "getDedicatedIps",
        "getVoiceConnectorTerminationHealth",
        "createLoadBalancer",
        "enableUser",
        "describeEventSubscriptions",
        "deleteAttributes",
        "getOperation",
        "getSdkTypes",
        "getUserSettings",
        "deleteDomainName",
        "createLag",
        "stopInstance",
        "describeAlarms",
        "approveSkill",
        "getTrafficPolicy",
        "createSnapshot",
        "deleteComponent",
        "describeIdentity",
        "getDocumentationVersion",
        "searchDevices",
        "runTask",
        "getFindingsStatistics",
        "enableAddOn",
        "getDistribution",
        "associateVirtualInterface",
        "rebuildWorkspaces",
        "updateDomain",
        "untagDeliveryStream",
        "describeJobFlows",
        "startDeployment",
        "getRegions",
        "listGeoLocations",
        "getProposal",
        "listStacks",
        "updateSegment",
        "translateText",
        "deleteExperiment",
        "restorePhoneNumber",
        "updateExperiment",
        "tagStream",
        "getAccount",
        "createClientVpnEndpoint",
        "testRole",
        "getLabelDetection",
        "updateResolverRule",
        "startInstances",
        "sendCommand",
        "unlinkIdentity",
        "describeEventCategories",
        "describeBackups",
        "allocateHosts",
        "cancelCluster",
        "getDefaultCreditSpecification",
        "describeGroups",
        "deleteDirectory",
        "describeNotebookInstance",
        "deleteDataSet",
        "attachObject",
        "listShards",
        "describeReservedInstancesOfferings",
        "associateIamInstanceProfile",
        "describeDefaultClusterParameters",
        "listFindings",
        "describeApp",
        "getStage",
        "describeTemplatePermissions",
        "createLaunchConfiguration",
        "revokeInvitation",
        "describeDirectoryConfigs",
        "getVoiceConnectorTermination",
        "describeAddresses",
        "startInstance",
        "deleteAlias",
        "describeDBSecurityGroups",
        "describeInterconnects",
        "deleteStack",
        "deleteBackup",
        "getSegmentVersion",
        "listAliases",
        "getQueueUrl",
        "detachObject",
        "describeInstanceTypeOfferings",
        "getQueryResults",
        "describeReservedCacheNodes",
        "createVault",
        "describeChangeSet",
        "describeCluster",
        "getOpenIdToken",
        "deleteMessage",
        "getDomainDeliverabilityCampaign",
        "notifyWorkers",
        "createProposal",
        "stopDBInstance",
        "describeIdentityPool",
        "getRequestValidator",
        "describeUser",
        "createDeliveryStream",
        "createClientVpnRoute",
        "listRules",
        "getFaceSearch",
        "searchFaces",
        "modifyFleet",
        "deleteSegment",
        "getJobOutput",
        "getInstanceAccess",
        "batchGetImage",
        "rebootBroker",
        "describeNatGateways",
        "tagDeliveryStream",
        "describeFileSystemPolicy",
        "createDataset",
        "describeClusterParameters",
        "describeSubnetGroups",
        "detectFaces",
        "detachInternetGateway",
        "describeConfigurationRevision",
        "updateGameSession",
        "changeMessageVisibility",
        "getSegmentVersions",
        "deleteFleets",
        "deleteKeyPair",
        "updateFilter",
        "listPipelines",
        "createPublicKey",
        "updateDeployment",
        "describeClusterSnapshots",
        "associateAddress",
        "describeWorkspaceSnapshots",
        "getDocumentationVersions",
        "getDigest",
        "getHostedZone",
        "getObjectAttributes",
        "getIdentityNotificationAttributes",
        "getOutcomes",
        "indexDocuments",
        "getDashboardEmbedUrl",
        "getDocumentTextDetection",
        "startMatchmaking",
        "rejectSkill",
        "createTags",
        "deleteProfile",
        "disableRule",
        "getRelationalDatabaseMetricData",
        "createRoute",
        "getVpcLink",
        "rebootInstance",
        "getCampaignActivities",
        "describeVpcs",
        "getAlarms",
        "countOpenWorkflowExecutions",
        "updateTemplate",
        "getInstanceSnapshot",
        "createRequestValidator",
        "putRule",
        "getMetricWidgetImage",
        "deleteDeployment",
        "searchProfiles",
        "associateWebsiteCertificateAuthority",
        "deleteLabels",
        "getFacet",
        "describeVpcEndpoints",
        "getDetectorVersion",
        "detachPolicy",
        "describeAdjustmentTypes",
        "batchGetApplications",
        "describeFleets",
        "startWorkspaces",
        "disassociateMembers",
        "createDisk",
        "getSnowballUsage",
        "batchWrite",
        "enableDomainAutoRenew",
        "readPreset",
        "updateLag",
        "setInstanceHealth",
        "detachDisk",
        "describeConfigurationSet",
        "getHostedZoneCount",
        "putImage",
        "listApps",
        "getVoiceChannel",
        "associateRepository",
        "describeWorkflowExecution",
        "deleteDevice",
        "deregisterType",
        "deletePublicKey",
        "describeHsmConfigurations",
        "getIdentityVerificationAttributes",
        "describeStep",
        "describeAddress",
        "createIndex",
        "describeSolution",
        "createSolution",
        "getBulkPublishDetails",
        "updateComponent",
        "describeGameSessionPlacement",
        "describeHostedConnections",
        "attachInstances",
        "addTags",
        "createReceiptRuleSet",
        "createRepository",
        "deleteBuild",
        "updateGateway",
        "getSnapshotBlock",
        "describeCustomAvailabilityZones",
        "listOpenWorkflowExecutions",
        "associateDomain",
        "describeEndpoint",
        "deleteGraph",
        "describeBuild",
        "createApplication",
        "listUsers",
        "getBasePathMappings",
        "deleteFileSystem",
        "deleteAlgorithm",
        "deleteDeliveryStream",
        "createApi",
        "createCollection",
        "putDetector",
        "createContact",
        "createEvaluation",
        "describeGlobalClusters",
        "getModels",
        "disableDirectory",
        "getGlobalSettings",
        "listTables",
        "deleteAuthorizer",
        "getAutoSnapshots",
        "stopNotebookInstance",
        "getApps",
        "getApiKey",
        "deleteGlobalCluster",
        "disassociateRepository",
        "createResource",
        "getRelationalDatabaseParameters",
        "getIdentityPolicies",
        "createEventBus",
        "updateBroker",
        "deletePhoneNumber",
        "detachVpnGateway",
        "stopRelationalDatabase",
        "disassociateFleet",
        "listTasks",
        "listConfigurations",
        "createNetwork",
        "getModelTemplate",
        "describeActiveReceiptRuleSet",
        "putRecords",
        "updateDestination",
        "getPhoneNumberOrder",
        "searchContacts",
        "attachNetworkInterface",
        "updateGroup",
        "getUser",
        "disableLogging",
        "getUsagePlans",
        "describeEngineDefaultParameters",
        "describeWorkspaceDirectories",
        "describeRule",
        "terminateWorkspaces",
        "importKeyPair",
        "describeExclusions",
        "getAccountLimit",
        "listModels",
        "describeAccountLimits",
        "putPermission",
        "deleteEvent",
        "createCluster",
        "disableUser",
        "describeSecurityConfiguration",
        "getDetector",
        "getApnsChannel",
        "getLinkAttributes",
        "describeAccountModifications",
        "getRelationalDatabaseLogEvents",
        "createImage",
        "describeDataSource",
        "describeSchema",
        "describeTable",
        "getVoiceConnectorGroup",
        "describeSourceRegions",
        "getApplicationRevision",
        "startFleet",
        "publishSchema",
        "describeInstanceStatus",
        "updatePublicKey",
        "updateNotebookInstance",
        "addApplicationInput",
        "updateVoiceConnector",
        "modifyDBParameterGroup",
        "sendEvent",
        "enterStandby",
        "configureAgent",
        "updatePrimaryEmailAddress",
        "getMasterAccount",
        "getKeyPairs",
        "deleteArchive",
        "startApplication",
        "getDomainStatisticsReport",
        "describeUsers",
        "getSendQuota",
        "describeStorage",
        "sendMessages",
        "restoreDomainAccess",
        "getHostReservationPurchasePreview",
        "describeReceiptRule",
        "describePolicies",
        "executePolicy",
        "describeMonitoringSchedule",
        "getStreamingDistribution",
        "getPublicKeyConfig",
        "createDocumentClassifier",
        "listNodes",
        "listIdentities",
        "createConnection",
        "getFieldLevelEncryption",
        "getCurrentMetricData",
        "describeSecurityGroups",
        "updateEnvironment",
        "describeLoadBalancers",
        "listHealthChecks",
        "describeDirectConnectGatewayAttachments",
        "attachToIndex",
        "abortMultipartUpload",
        "removeAttributes",
        "listAccounts",
        "createBackup",
        "listInstances",
        "getPhoneNumber",
        "createInternetGateway"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "AWS SDK",
        "API Gateway",
        "Cloud Services",
        "Resource Management",
        "Service Operations"
      ],
      "Description": "These tokens represent methods in an AWS SDK for interacting with various AWS services.  The methods are used to perform actions such as getting attributes, listing resources, creating resources, updating resources, and deleting resources. The methods' names clearly indicate the operations they perform on different AWS services. The context shows a pattern of taking a request object, performing some pre-execution actions, and then executing the core service operation."
    }
  },
  {
    "c314": {
      "Unique tokens": [
        "UpdatePrimaryEmailAddressRequest",
        "CreateTrafficMirrorTargetRequest",
        "ListLabelingJobsForWorkteamRequest",
        "DescribeDBSecurityGroupsRequest",
        "ListConfigurationProfilesRequest",
        "CreateDeliverabilityTestReportRequest",
        "DescribeTableReplicaAutoScalingRequest",
        "UpdateDataRetentionRequest",
        "DescribeIdentityPoolUsageRequest",
        "ModifyClusterDbRevisionRequest",
        "ListAttendeesRequest",
        "ListOrganizationAdminAccountsRequest",
        "AcceptTransitGatewayVpcAttachmentRequest",
        "CreateUsagePlanRequest",
        "ModifyCacheClusterRequest",
        "SetVaultNotificationsRequest",
        "DisassociateSubnetCidrBlockRequest",
        "ListContributorInsightsRequest",
        "DisassociateTransitGatewayMulticastDomainRequest",
        "DisassociateTransitGatewayRouteTableRequest",
        "RegisterDBProxyTargetsRequest",
        "ModifyWorkspaceCreationPropertiesRequest",
        "UnassignIpv6AddressesRequest",
        "DisassociateWebsiteAuthorizationProviderRequest",
        "UnlinkDeveloperIdentityRequest",
        "GetApiKeysRequest",
        "CreateEgressOnlyInternetGatewayRequest",
        "GetEmailTemplateRequest",
        "RegisterActivityTypeRequest",
        "DescribeTaskSetsRequest",
        "ListPhoneNumberOrdersRequest",
        "CreatePublishingDestinationRequest",
        "DescribeImageAttributeRequest",
        "ListAssessmentRunAgentsRequest",
        "ListMonitoringSchedulesRequest",
        "CreateNetworkInterfacePermissionRequest",
        "DeleteDirectConnectGatewayAssociationProposalRequest",
        "DisassociateDeviceFromRoomRequest",
        "DescribeLoadBalancerPoliciesRequest",
        "UpdateLoadBalancerAttributeRequest",
        "DescribeReservedInstancesListingsRequest",
        "ListOutgoingTypedLinksRequest",
        "ModifySpotFleetRequestRequest",
        "BatchGetNamedQueryRequest",
        "PromoteReadReplicaRequest",
        "ModifyMountTargetSecurityGroupsRequest",
        "ListFieldLevelEncryptionConfigsRequest",
        "GetVoiceConnectorTerminationRequest",
        "ListProblemsRequest",
        "GetGeoLocationRequest",
        "DescribeScalingParametersRequest",
        "DetachInternetGatewayRequest",
        "DescribeConnectionLoaRequest",
        "DescribeNotificationConfigurationsRequest",
        "StartSmartHomeApplianceDiscoveryRequest",
        "AssociateContactWithAddressBookRequest",
        "CreateLaunchTemplateRequest",
        "GetVoiceConnectorOriginationRequest",
        "DescribeExclusionsRequest",
        "ListDocumentClassifiersRequest",
        "GetDocumentationVersionsRequest",
        "ListResourceDelegatesRequest",
        "GetBlacklistReportsRequest",
        "RequestCancelWorkflowExecutionRequest",
        "ListS3ResourcesRequest",
        "CreatePartnerEventSourceRequest",
        "GetDeliverabilityTestReportRequest",
        "AddRoleToDBClusterRequest",
        "DescribeClientVpnRoutesRequest",
        "SendAlexaOfferToMasterRequest",
        "UpdateScalingParametersRequest",
        "DescribeDataSetPermissionsRequest",
        "DeleteUsagePlanKeyRequest",
        "DescribeStaleSecurityGroupsRequest",
        "DeleteDBInstanceAutomatedBackupRequest",
        "DescribeAnalysisSchemesRequest",
        "ListRecipesRequest",
        "DisassociateVpcCidrBlockRequest",
        "DescribeDBInstanceAutomatedBackupsRequest",
        "GetIdentityPoliciesRequest",
        "DeleteQualificationTypeRequest",
        "ListHoursOfOperationsRequest",
        "ListDeviceEventsRequest",
        "DescribeSourceRegionsRequest",
        "ListHostedZonesRequest",
        "CreateDataSourceFromS3Request",
        "ListDeploymentStrategiesRequest",
        "ModifyCurrentDBClusterCapacityRequest",
        "CreateEmailIdentityRequest",
        "CancelIngestionRequest",
        "AdvertiseByoipCidrRequest",
        "DeclineInvitationsRequest",
        "ListAccessControlRulesRequest",
        "DescribeTrafficMirrorSessionsRequest",
        "CreateModelPackageRequest",
        "ModifyInstanceCreditSpecificationRequest",
        "ModifyClusterIamRolesRequest",
        "UpdateClusterSettingsRequest",
        "BatchCheckLayerAvailabilityRequest",
        "ListTaskDefinitionsRequest",
        "GetCloudFrontOriginAccessIdentityRequest",
        "DeleteAccessLogSettingsRequest",
        "GetEbsEncryptionByDefaultRequest",
        "ListPublicKeysRequest",
        "DescribeLaunchConfigurationsRequest",
        "DescribeMonitoringScheduleRequest",
        "DescribeImageBuildersRequest",
        "CopyFpgaImageRequest",
        "DescribeOrderableDBInstanceOptionsRequest",
        "ListDistributionsByWebACLIdRequest",
        "GetFileUploadURLRequest",
        "GetUsagePlanKeysRequest",
        "ListModelPackagesRequest",
        "IncreaseStreamRetentionPeriodRequest",
        "ListCustomVerificationEmailTemplatesRequest",
        "DisassociateWebsiteCertificateAuthorityRequest",
        "ModifyClusterSnapshotScheduleRequest",
        "RegenerateSecurityTokenRequest",
        "RemoveRoleFromDBClusterRequest",
        "DeregisterDBProxyTargetsRequest",
        "DeleteRouteRequestParameterRequest",
        "GetLifecyclePoliciesRequest",
        "GetRecommenderConfigurationsRequest",
        "CreateTransitGatewayVpcAttachmentRequest",
        "UpdateRelationalDatabaseParametersRequest",
        "DeleteDBSecurityGroupRequest",
        "AuthorizeCacheSecurityGroupIngressRequest",
        "DescribeEC2InstanceLimitsRequest",
        "GetCustomVerificationEmailTemplateRequest",
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest",
        "GetCampaignDateRangeKpiRequest",
        "DescribeInterconnectLoaRequest",
        "GetReservedInstancesExchangeQuoteRequest",
        "CreatePublicVirtualInterfaceRequest",
        "CreateGameSessionQueueRequest",
        "ModifyClusterMaintenanceRequest",
        "GetConsoleScreenshotRequest",
        "CreateFlowLogsRequest",
        "BatchDetectDominantLanguageRequest",
        "ModifyNetworkInterfaceAttributeRequest",
        "RejectTransitGatewayVpcAttachmentRequest",
        "DeregisterFromWorkMailRequest",
        "ReplaceIamInstanceProfileAssociationRequest",
        "CreateCodeRepositoryRequest",
        "GetActiveNamesRequest",
        "FlushStageAuthorizersCacheRequest",
        "CountPendingActivityTasksRequest",
        "EnableMetricsCollectionRequest",
        "DeregisterTransitGatewayMulticastGroupSourcesRequest",
        "DescribeGameSessionPlacementRequest",
        "DescribeSubscribedWorkteamRequest",
        "DescribeCacheParametersRequest",
        "CreateDBSecurityGroupRequest",
        "UpdateTemplateAliasRequest",
        "DisableDomainTransferLockRequest",
        "DeleteCacheClusterRequest",
        "CreateDefaultVpcRequest",
        "BatchPutScheduledUpdateGroupActionRequest",
        "GetContentModerationRequest",
        "DescribePendingMaintenanceActionsRequest",
        "DescribeEventSubscriptionsRequest",
        "DescribeUsageReportSubscriptionsRequest",
        "CheckDomainTransferabilityRequest",
        "DescribeNodeConfigurationOptionsRequest",
        "BatchAssociateUserStackRequest",
        "AssociateTransitGatewayRouteTableRequest",
        "CreateRoomMembershipRequest",
        "DescribeFastSnapshotRestoresRequest",
        "ListRulesPackagesRequest",
        "ListResolverRuleAssociationsRequest",
        "UpdateFleetCapacityRequest",
        "DescribeLocalGatewayRouteTablesRequest",
        "ModifyWorkspaceStateRequest",
        "ApplySecurityGroupsToLoadBalancerRequest",
        "GetMediaForFragmentListRequest",
        "VerifyDomainDkimRequest",
        "SetLoadBalancerPoliciesForBackendServerRequest",
        "DeleteTrafficMirrorFilterRuleRequest",
        "ListSmartHomeAppliancesRequest",
        "UpdateDataSetPermissionsRequest",
        "PurchaseReservedDBInstancesOfferingRequest",
        "GetCampaignVersionsRequest",
        "CreateSpotDatafeedSubscriptionRequest",
        "ListBusinessReportSchedulesRequest",
        "GetVoiceConnectorTerminationHealthRequest",
        "DescribeConnectionsOnInterconnectRequest",
        "CreateTemplateAliasRequest",
        "DescribeInstanceTypeOfferingsRequest",
        "GetBasePathMappingRequest",
        "DescribeComponentConfigurationRecommendationRequest",
        "ListAssociatedFleetsRequest",
        "StartLifecyclePolicyPreviewRequest",
        "DescribeNetworkAclsRequest",
        "AssociateClientVpnTargetNetworkRequest",
        "PutConfigurationSetDeliveryOptionsRequest",
        "EnableDomainAutoRenewRequest",
        "GetDomainDeliverabilityCampaignRequest",
        "DeleteConfigurationSetEventDestinationRequest",
        "StartChatContactRequest",
        "CreateVpcPeeringAuthorizationRequest",
        "GetOperationsForResourceRequest",
        "GetApplicationDateRangeKpiRequest",
        "RevokeClientVpnIngressRequest",
        "DeleteApplicationCloudWatchLoggingOptionRequest",
        "ListTemplateVersionsRequest",
        "StartDeviceSyncRequest",
        "ListStackSetOperationsRequest",
        "GetCapacityReservationUsageRequest",
        "ModifyGlobalClusterRequest",
        "GetOperationDetailRequest",
        "CancelSpotInstanceRequestsRequest",
        "CreateClientVpnRouteRequest",
        "DescribeScheduledInstanceAvailabilityRequest",
        "ListPublishedSchemaArnsRequest",
        "UpdatePublishingDestinationRequest",
        "GetHostedZoneRequest",
        "CreateBGPPeerRequest",
        "DescribeResourcePermissionsRequest",
        "BatchCreateAttendeeRequest",
        "DescribeRouteTablesRequest",
        "GetRelationalDatabaseMasterUserPasswordRequest",
        "ExportJournalToS3Request",
        "DescribeHsmClientCertificatesRequest",
        "AttachInstancesToLoadBalancerRequest",
        "DescribeBrokerInstanceOptionsRequest",
        "ListMailboxPermissionsRequest",
        "DescribeSnapshotCopyGrantsRequest",
        "DescribeReservedCacheNodesRequest",
        "DescribeScalingPoliciesRequest",
        "SetIdentityNotificationTopicRequest",
        "AllocateConnectionOnInterconnectRequest",
        "GetTrafficPolicyInstanceCountRequest",
        "ModifyVpcEndpointConnectionNotificationRequest",
        "DescribeDBProxyTargetsRequest",
        "ListJournalS3ExportsRequest",
        "RegisterApplicationRevisionRequest",
        "DescribeLaunchTemplatesRequest",
        "AttachLoadBalancerToSubnetsRequest",
        "DescribeDomainEndpointOptionsRequest",
        "DeleteTransitGatewayRouteRequest",
        "PutConfigurationSetTrackingOptionsRequest",
        "ModifyVpnTunnelOptionsRequest",
        "EnableVpcClassicLinkDnsSupportRequest",
        "DescribeUserHierarchyStructureRequest",
        "CreateReceiptRuleSetRequest",
        "CreateTransitVirtualInterfaceRequest",
        "DescribeDataSourcesRequest",
        "GetDiskSnapshotsRequest",
        "GetSdkTypesRequest",
        "ListAccountSettingsRequest",
        "DescribeFleetMetadataRequest",
        "ReplaceNetworkAclAssociationRequest",
        "GetDomainStatisticsReportRequest",
        "ReplaceNetworkAclEntryRequest",
        "PurchaseReservedNodeOfferingRequest",
        "EnableDomainTransferLockRequest",
        "GetApiMappingsRequest",
        "StartDBClusterRequest",
        "StartOutboundVoiceContactRequest",
        "DeleteTrafficMirrorSessionRequest",
        "DescribeClusterDbRevisionsRequest",
        "ListRuleNamesByTargetRequest",
        "CreateVPCAssociationAuthorizationRequest",
        "GetRestApisRequest",
        "GetRecommendationsRequest",
        "ListDomainNamesRequest",
        "FailoverDBClusterRequest",
        "DescribeDhcpOptionsRequest",
        "CreateImageBuilderStreamingURLRequest",
        "DescribeRulesPackagesRequest",
        "ListQualificationTypesRequest",
        "BatchApplyUpdateActionRequest",
        "UpdateFleetPortSettingsRequest",
        "BatchDisassociateUserStackRequest",
        "ReplaceRouteTableAssociationRequest",
        "EnableEnhancedMonitoringRequest",
        "RecordActivityTaskHeartbeatRequest",
        "DescribeScalingProcessTypesRequest",
        "DescribeTemplatePermissionsRequest",
        "GetBasePathMappingsRequest",
        "ReplaceTransitGatewayRouteRequest",
        "DecreaseStreamRetentionPeriodRequest",
        "ResetPersonalPINRequest",
        "PutVoiceConnectorOriginationRequest",
        "DeleteVpcEndpointServiceConfigurationsRequest",
        "DescribeDBClusterParametersRequest",
        "GetRelationalDatabaseLogEventsRequest",
        "ListTagsForStreamRequest",
        "SetInstanceHealthRequest",
        "RemoveRoleFromDBInstanceRequest",
        "GetFindingsStatisticsRequest",
        "ListWorkflowTypesRequest",
        "DescribeFpgaImageAttributeRequest",
        "DescribeVirtualGatewaysRequest",
        "WithdrawByoipCidrRequest",
        "StartCelebrityRecognitionRequest",
        "DescribeDBClusterSnapshotsRequest",
        "CreateClusterSecurityGroupRequest",
        "UpdateEndpointWeightsAndCapacitiesRequest",
        "CreateDataSourceFromRDSRequest",
        "SearchNetworkProfilesRequest",
        "DescribeIAMPolicyAssignmentRequest",
        "ListCodeRepositoriesRequest",
        "CreateRouteTableRequest",
        "AddRoleToDBInstanceRequest",
        "DescribeDBParametersRequest",
        "ListDashboardVersionsRequest",
        "DeleteVoiceConnectorTerminationCredentialsRequest",
        "DescribeVpcClassicLinkRequest",
        "DescribeCacheEngineVersionsRequest",
        "ModifyTransitGatewayVpcAttachmentRequest",
        "CreateIngestionRequest",
        "ListWebsiteCertificateAuthoritiesRequest",
        "GetStaticIpsRequest",
        "PurchaseReservedInstancesOfferingRequest",
        "ListInstanceFleetsRequest",
        "GetBulkPublishDetailsRequest",
        "AssociateRouteTableRequest",
        "ModifySnapshotScheduleRequest",
        "GetUsagePlanKeyRequest",
        "CreateTrafficMirrorFilterRequest",
        "DeleteConfigurationSetTrackingOptionsRequest",
        "ListTagsForDomainRequest",
        "DescribeTransitGatewayPeeringAttachmentsRequest",
        "ListTagsForVaultRequest",
        "DeleteLaunchTemplateVersionsRequest",
        "GetRelationalDatabaseParametersRequest",
        "DescribeVpcPeeringAuthorizationsRequest",
        "DetectStackSetDriftRequest",
        "AddResourcePermissionsRequest",
        "DescribeNetworkInterfaceAttributeRequest",
        "DeleteVpcEndpointConnectionNotificationsRequest",
        "CreateTypedLinkFacetRequest",
        "GetAssociatedIpv6PoolCidrsRequest",
        "DescribeAdjustmentTypesRequest",
        "GetSnowballUsageRequest",
        "PutRoomSkillParameterRequest",
        "GetPhoneNumberOrderRequest",
        "GetDefaultCreditSpecificationRequest",
        "DeleteClusterSecurityGroupRequest",
        "ListConfigurationRevisionsRequest",
        "GetDashboardEmbedUrlRequest",
        "CreateNetworkAclEntryRequest",
        "GetCognitoEventsRequest",
        "AssociateS3ResourcesRequest",
        "DescribeConfigurationRevisionRequest",
        "DescribeImagePermissionsRequest",
        "GetRelationalDatabaseLogStreamsRequest",
        "AddInstanceFleetRequest",
        "ModifyDBClusterSnapshotAttributeRequest",
        "BuildSuggestersRequest",
        "CancelSpotFleetRequestsRequest",
        "ModifyInstanceAttributeRequest",
        "DeleteIAMPolicyAssignmentRequest",
        "DescribeWorkspaceBundlesRequest",
        "DescribeDominantLanguageDetectionJobRequest",
        "DeleteSpotDatafeedSubscriptionRequest",
        "DescribeVolumeAttributeRequest",
        "CreateLoadBalancerListenersRequest",
        "BatchCreateVariableRequest",
        "ModifyInstanceEventStartTimeRequest",
        "PutDeliverabilityDashboardOptionRequest",
        "ListTypedLinkFacetNamesRequest",
        "SendCustomVerificationEmailRequest",
        "DeleteNetworkAclRequest",
        "ListConfigurationSetsRequest",
        "UpdateConfigurationSetEventDestinationRequest",
        "UpdateApplicationSettingsRequest",
        "DeleteSuppressedDestinationRequest",
        "DeleteNetworkInterfacePermissionRequest",
        "StartDocumentTextDetectionRequest",
        "SendBulkTemplatedEmailRequest",
        "ModifyTrafficMirrorFilterNetworkServicesRequest",
        "DeleteVpcPeeringAuthorizationRequest",
        "UnassignPrivateIpAddressesRequest",
        "ListHostedZonesByNameRequest",
        "GetRawMessageContentRequest",
        "DescribeClusterSecurityGroupsRequest",
        "PurchaseReservedCacheNodesOfferingRequest",
        "CountClosedWorkflowExecutionsRequest",
        "ModifyVpcPeeringConnectionOptionsRequest",
        "MergeDeveloperIdentitiesRequest",
        "DescribeTrafficMirrorTargetsRequest",
        "DeleteGlobalClusterRequest",
        "GetDocumentTextDetectionRequest",
        "ListIdentityPoliciesRequest",
        "GetExportSnapshotRecordsRequest",
        "GetCloudFormationStackRecordsRequest",
        "GetVpcLinksRequest",
        "UpdateMonitoringScheduleRequest",
        "ListGitHubAccountTokenNamesRequest",
        "DescribeExportTasksRequest",
        "DescribePublishingDestinationRequest",
        "GetRoomSkillParameterRequest",
        "DeleteTransitGatewayMulticastDomainRequest",
        "DescribeCapacityProvidersRequest",
        "ListRepositoryAssociationsRequest",
        "UpdateLogPatternRequest",
        "UntagAttendeeRequest",
        "RemoveFromGlobalClusterRequest",
        "UpdateQualificationTypeRequest",
        "UpdateSecurityGroupRuleDescriptionsIngressRequest",
        "GetClientCertificatesRequest",
        "EnableVpcClassicLinkRequest",
        "CreateDirectConnectGatewayAssociationProposalRequest",
        "UpdateDomainEndpointOptionsRequest",
        "ChangeResourceRecordSetsRequest",
        "DescribeAlarmsForMetricRequest",
        "AddAttributesToFindingsRequest",
        "ListIAMPolicyAssignmentsForUserRequest",
        "BatchGetApplicationRevisionsRequest",
        "AbortVaultLockRequest",
        "AcceptQualificationRequestRequest",
        "GetRelationalDatabaseMetricDataRequest",
        "CreateCloudFormationStackRequest",
        "DescribeProjectVersionsRequest",
        "ModifyWorkspacePropertiesRequest",
        "DescribeVpnGatewaysRequest",
        "GetStreamingDistributionRequest",
        "GetWorkflowExecutionHistoryRequest",
        "CreateEmailTemplateRequest",
        "RespondActivityTaskCanceledRequest",
        "StopGameSessionPlacementRequest",
        "CreatePrivateVirtualInterfaceRequest",
        "DeprecateWorkflowTypeRequest",
        "ListSkillsStoreCategoriesRequest",
        "DeleteGameSessionQueueRequest",
        "DescribeEngineDefaultClusterParametersRequest",
        "UpdateCloudFrontOriginAccessIdentityRequest",
        "DescribeClusterVersionsRequest",
        "DescribeCustomAvailabilityZonesRequest",
        "CancelReservedInstancesListingRequest",
        "DescribeUserStackAssociationsRequest",
        "AddApplicationOutputRequest",
        "DeleteTransitGatewayVpcAttachmentRequest",
        "AuthorizeClusterSecurityGroupIngressRequest",
        "DescribeInsightRulesRequest",
        "EnableEbsEncryptionByDefaultRequest",
        "DefineIndexFieldRequest",
        "AssociateSkillWithUsersRequest",
        "GetAuthorizationTokenRequest",
        "RejectQualificationRequestRequest",
        "DescribeTransitGatewayRouteTablesRequest",
        "DescribeDataRepositoryTasksRequest",
        "DisableDomainAutoRenewRequest",
        "DisassociateSigninDelegateGroupsFromAccountRequest",
        "ModifyDefaultCreditSpecificationRequest",
        "StartImageBuilderRequest",
        "CreateNetworkAclRequest",
        "SetDesiredCapacityRequest",
        "RestoreDomainAccessRequest",
        "PutConfigurationSetSendingOptionsRequest",
        "DeleteLocalGatewayRouteTableVpcAssociationRequest",
        "PutImageTagMutabilityRequest",
        "ListFacetNamesRequest",
        "DescribeVolumesModificationsRequest",
        "AssociateDhcpOptionsRequest",
        "SendTestEventNotificationRequest",
        "ModifyInstanceFleetRequest",
        "DescribeContributorInsightsRequest",
        "AssociateWebsiteCertificateAuthorityRequest",
        "CreatePhoneNumberOrderRequest",
        "DescribeReservedCacheNodesOfferingsRequest",
        "DescribeFolderContentsRequest",
        "GetApplicationSettingsRequest",
        "CreateHumanTaskUiRequest",
        "EnableVgwRoutePropagationRequest",
        "ListStackResourcesRequest",
        "DescribeImageScanFindingsRequest",
        "DescribeRootFoldersRequest",
        "ListTrafficPolicyInstancesByHostedZoneRequest",
        "ListReceiptFiltersRequest",
        "ModifyLaunchTemplateRequest",
        "CreateQualificationTypeRequest",
        "GetInvitationsCountRequest",
        "TransferDomainToAnotherAwsAccountRequest",
        "AssociateResolverEndpointIpAddressRequest",
        "RevokeDomainAccessRequest",
        "CreateTransitGatewayMulticastDomainRequest",
        "ListGroupMembersRequest",
        "CountOpenWorkflowExecutionsRequest",
        "UpdateUserSecurityProfilesRequest",
        "ListHumanLoopsRequest",
        "RetrieveDomainAuthCodeRequest",
        "DescribeNetworkInterfacePermissionsRequest",
        "ModifySelfservicePermissionsRequest",
        "ListTypeRegistrationsRequest",
        "GetInstancePortStatesRequest",
        "ListFieldLevelEncryptionProfilesRequest",
        "DescribeClientPropertiesRequest",
        "ChangeTagsForResourceRequest",
        "AddApplicationReferenceDataSourceRequest",
        "PutAccountSettingDefaultRequest",
        "ImportWorkspaceImageRequest",
        "GetTransitGatewayRouteTableAssociationsRequest",
        "EnableOrganizationAdminAccountRequest",
        "ListResolverEndpointIpAddressesRequest",
        "UpdateFindingsFeedbackRequest",
        "DescribeDirectConnectGatewayAttachmentsRequest",
        "PutClusterCapacityProvidersRequest",
        "RemoveAllResourcePermissionsRequest",
        "ImportClientVpnClientCertificateRevocationListRequest",
        "AcceptDomainTransferFromAnotherAwsAccountRequest",
        "DescribeTransitGatewaysRequest",
        "ListWebsiteAuthorizationProvidersRequest",
        "ListProvisionedCapacityRequest",
        "DescribeEgressOnlyInternetGatewaysRequest",
        "UpdateContainerInstancesStateRequest",
        "DescribeSpotPriceHistoryRequest",
        "DescribeUpdateActionsRequest",
        "GetPersonalizedRankingRequest",
        "RecognizeCelebritiesRequest",
        "ListDomainDeliverabilityCampaignsRequest",
        "PutVoiceConnectorTerminationCredentialsRequest",
        "AddApplicationCloudWatchLoggingOptionRequest",
        "ListFlowDefinitionsRequest",
        "DescribeAccountModificationsRequest",
        "DescribeReservedInstancesModificationsRequest",
        "DescribeDBEngineVersionsRequest",
        "GetSnapshotBlockRequest",
        "RejectVpcPeeringConnectionRequest",
        "DescribeWorkspaceImagesRequest",
        "ListTrafficPoliciesRequest",
        "ListSkillsStoreSkillsByCategoryRequest",
        "ListRoutingProfilesRequest",
        "UpdateAvailabilityOptionsRequest",
        "RevokeDBSecurityGroupIngressRequest",
        "DeprovisionByoipCidrRequest",
        "GetJourneyRequest",
        "DescribeSecurityGroupReferencesRequest",
        "ListNodegroupsRequest",
        "GetOpenIdTokenForDeveloperIdentityRequest",
        "SetAlarmStateRequest",
        "DescribeHsmConfigurationsRequest",
        "DescribeAutoScalingNotificationTypesRequest",
        "DetectModerationLabelsRequest",
        "CloseInstancePublicPortsRequest",
        "RegisterWorkflowTypeRequest",
        "GetCredentialsForIdentityRequest",
        "CreateTransitGatewayRouteRequest",
        "DeleteCustomVerificationEmailTemplateRequest",
        "AssignPrivateIpAddressesRequest",
        "UpdateTrafficPolicyCommentRequest",
        "DescribeClientVpnAuthorizationRulesRequest",
        "UpdateDomainEntryRequest",
        "DescribeExportImageTasksRequest",
        "CreateCustomVerificationEmailTemplateRequest",
        "AttachVpnGatewayRequest",
        "ModifyVpnConnectionRequest",
        "RestoreDBClusterFromS3Request",
        "ListDevelopmentSchemaArnsRequest",
        "ModifyTrafficMirrorSessionRequest",
        "ResendContactReachabilityEmailRequest",
        "DescribeReservedInstancesOfferingsRequest",
        "CreateTransitGatewayRouteTableRequest",
        "ListAllowedNodeTypeModificationsRequest",
        "CreateSampleFindingsRequest",
        "DescribeDirectoryConfigsRequest",
        "DescribeSpotFleetRequestHistoryRequest",
        "UpdateAccountSettingsRequest",
        "ForgetSmartHomeAppliancesRequest",
        "SetIdentityFeedbackForwardingEnabledRequest",
        "CreateConfigurationSetTrackingOptionsRequest",
        "GetHealthCheckLastFailureReasonRequest",
        "UpdateDomainNameserversRequest",
        "ListJobsByPipelineRequest",
        "DescribeAvailabilityZonesRequest",
        "RejectDomainTransferFromAnotherAwsAccountRequest",
        "DisassociateQualificationFromWorkerRequest",
        "CreateFpgaImageRequest",
        "RegisterToWorkMailRequest",
        "DescribeCacheSecurityGroupsRequest",
        "DescribeAlarmHistoryRequest",
        "AuthorizeSecurityGroupEgressRequest",
        "ListClosedWorkflowExecutionsRequest",
        "SubmitAttachmentStateChangesRequest",
        "ListQualificationRequestsRequest",
        "DecreaseReplicaCountRequest",
        "ListSubscribedWorkteamsRequest",
        "SearchTransitGatewayRoutesRequest",
        "StartMatchBackfillRequest",
        "DescribeLocalGatewayRouteTableVpcAssociationsRequest",
        "DisassociateTrialComponentRequest",
        "DescribeInstanceAttributeRequest",
        "UpdateDocumentationPartRequest",
        "GetTypedLinkFacetInformationRequest",
        "GetHLSStreamingSessionURLRequest",
        "UpdateGameSessionQueueRequest",
        "CreateVpnConnectionRouteRequest",
        "DisableAvailabilityZonesForLoadBalancerRequest",
        "DescribeVpcEndpointServicePermissionsRequest",
        "InitiateDocumentVersionUploadRequest",
        "ListPolicyAttachmentsRequest",
        "UpdateConfigurationSetReputationMetricsEnabledRequest",
        "PutConfigurationSetReputationOptionsRequest",
        "GetDedicatedIpsRequest",
        "DeleteTransitGatewayPeeringAttachmentRequest",
        "ListQueueTagsRequest",
        "DescribeIdentityUsageRequest",
        "GetLexiconRequest",
        "ListReceiptRuleSetsRequest",
        "CreateGlobalClusterRequest",
        "DescribeSuggestersRequest",
        "DescribeCustomerGatewaysRequest",
        "DescribeDefaultParametersRequest",
        "DeleteTypedLinkFacetRequest",
        "DescribeJournalS3ExportRequest",
        "DescribeHostReservationOfferingsRequest",
        "UpdateDirectConnectGatewayAssociationRequest",
        "ListEndpointConfigsRequest",
        "GetJourneyExecutionMetricsRequest",
        "ListProposalVotesRequest",
        "CreateTransitGatewayPeeringAttachmentRequest",
        "ModifyDBClusterRequest",
        "AssociateDeviceWithRoomRequest",
        "RebootCacheClusterRequest",
        "GetDownloadUrlForLayerRequest",
        "AcceptReservedInstancesExchangeQuoteRequest",
        "BatchCreateRoomMembershipRequest",
        "ListDeploymentConfigsRequest",
        "DescribeValidDBInstanceModificationsRequest",
        "GetSuppressedDestinationRequest",
        "UpdateTypedLinkFacetRequest",
        "SetIdentityPoolRolesRequest",
        "ListBrokersRequest",
        "DescribeNotificationSubscriptionsRequest",
        "DescribeFleetUtilizationRequest",
        "PutScheduledUpdateGroupActionRequest",
        "GetSoftwareUpdatesRequest",
        "DescribeGameSessionDetailsRequest",
        "GetMLModelRequest",
        "GetInsightRuleReportRequest",
        "CancelDomainTransferToAnotherAwsAccountRequest",
        "GetQualificationTypeRequest",
        "ModifyClientPropertiesRequest",
        "SetLoadBalancerPoliciesOfListenerRequest",
        "GetApplicationRevisionRequest",
        "ListDataSourcesRequest",
        "UpdateTemplatePermissionsRequest",
        "GetRelationalDatabaseBundlesRequest",
        "ListThreatIntelSetsRequest",
        "DeleteImagePermissionsRequest",
        "EstimateTemplateCostRequest",
        "CreateCacheSecurityGroupRequest",
        "DescribeHumanLoopRequest",
        "ListActivityTypesRequest",
        "ListTypeVersionsRequest",
        "ListTargetsByRuleRequest",
        "UpdateIAMPolicyAssignmentRequest",
        "GetRelationalDatabasesRequest",
        "DescribeElasticGpusRequest",
        "DescribeScalingActivitiesRequest",
        "DisableSnapshotCopyRequest",
        "DeregisterInstancesFromLoadBalancerRequest",
        "DeleteGitHubAccountTokenRequest",
        "SetActiveReceiptRuleSetRequest",
        "ListEntityRecognizersRequest",
        "UpdateConfigurationSetTrackingOptionsRequest",
        "SetIdentityHeadersInNotificationsEnabledRequest",
        "ListStackSetsRequest",
        "RevokeCacheSecurityGroupIngressRequest",
        "RespondActivityTaskFailedRequest",
        "DescribeClientVpnTargetNetworksRequest",
        "CreatePresignedNotebookInstanceUrlRequest",
        "DefineSuggesterRequest",
        "StopDBClusterRequest",
        "StopFleetActionsRequest",
        "ListSecurityProfilesRequest",
        "UpdateBusinessReportScheduleRequest",
        "GetJourneyDateRangeKpiRequest",
        "DescribeClientVpnEndpointsRequest",
        "ListSolutionVersionsRequest",
        "DescribeVirtualInterfacesRequest",
        "DescribeSpotDatafeedSubscriptionRequest",
        "StartHumanLoopRequest",
        "DescribeFleetEventsRequest",
        "GetCheckerIpRangesRequest",
        "AcceptReservedNodeExchangeRequest",
        "GetReusableDelegationSetLimitRequest",
        "GetGameSessionLogUrlRequest",
        "CreateVpcEndpointConnectionNotificationRequest",
        "DeprecateActivityTypeRequest",
        "DescribePublicIpv4PoolsRequest",
        "BatchDetectKeyPhrasesRequest",
        "DeleteVpcPeeringConnectionRequest",
        "SkipWaitTimeForInstanceTerminationRequest",
        "CreateInternetGatewayRequest",
        "ProvisionByoipCidrRequest",
        "GetCampaignActivitiesRequest",
        "ModifyTrafficMirrorFilterRuleRequest",
        "DescribeVpcEndpointConnectionNotificationsRequest",
        "AuthorizeSnapshotAccessRequest",
        "ListAttendeeTagsRequest",
        "ListDataSetsRequest",
        "UpdateDomainMetadataRequest",
        "SearchLocalGatewayRoutesRequest",
        "GetPasswordDataRequest",
        "ListVerifiedEmailAddressesRequest",
        "RemoveAttributesFromFindingsRequest",
        "StartVpcEndpointServicePrivateDnsVerificationRequest",
        "DisableEbsEncryptionByDefaultRequest",
        "CreateLogPatternRequest",
        "CreateEventSubscriptionRequest",
        "CreateWorkerBlockRequest",
        "DescribeClusterParametersRequest",
        "DeleteBusinessReportScheduleRequest",
        "DescribeInternetGatewaysRequest",
        "StartWorkflowExecutionRequest",
        "DeleteFolderContentsRequest",
        "IncreaseReplicationFactorRequest",
        "ModifyVpcTenancyRequest",
        "ListInvalidationsRequest",
        "DescribeIdentityIdFormatRequest",
        "ListMeetingTagsRequest",
        "DisableVpcClassicLinkDnsSupportRequest",
        "DescribeEngineDefaultParametersRequest",
        "ListMeetingsRequest",
        "StopTrainingDocumentClassifierRequest",
        "GetTemplateSummaryRequest",
        "DownloadDBLogFilePortionRequest",
        "DeleteClientVpnRouteRequest",
        "GetVaultLockRequest",
        "DescribeServiceAccessPoliciesRequest",
        "DescribeReservedNodeOfferingsRequest",
        "CreateStreamingDistributionWithTagsRequest",
        "ApplyPendingMaintenanceActionRequest",
        "CreateHITTypeRequest",
        "DescribePrefixListsRequest",
        "AddSourceIdentifierToSubscriptionRequest",
        "CreateExclusionsPreviewRequest",
        "ListBootstrapActionsRequest",
        "ListDedicatedIpPoolsRequest",
        "DescribeHostedConnectionsRequest",
        "ListLogPatternSetsRequest",
        "ListVPCAssociationAuthorizationsRequest",
        "EnableInsightRulesRequest",
        "ListHITsForQualificationTypeRequest",
        "CreateLocalGatewayRouteRequest",
        "DescribeDataSourcePermissionsRequest",
        "RejectVpcEndpointConnectionsRequest",
        "ListGeoLocationsRequest",
        "RevokeSecurityGroupIngressRequest",
        "DescribeTrafficMirrorFiltersRequest",
        "DescribeEventCategoriesRequest",
        "DescribeActivityTypeRequest",
        "AddTagsToVaultRequest",
        "CreateGroupMembershipRequest",
        "DescribeSpotInstanceRequestsRequest",
        "DescribeFleetCapacityRequest",
        "CreateTrafficMirrorFilterRuleRequest",
        "GetMailboxDetailsRequest",
        "RegisterCrossAccountAccessRoleRequest",
        "UpdateFleetMetadataRequest",
        "CreateMonitoringScheduleRequest",
        "GetConferencePreferenceRequest",
        "AllocateTransitVirtualInterfaceRequest",
        "GetTransitGatewayAttachmentPropagationsRequest",
        "DescribeIngestionRequest",
        "UpdateShardCountRequest",
        "GetDocumentationPartRequest",
        "DetectStackResourceDriftRequest",
        "DescribeDBClusterBacktracksRequest",
        "GetLoadBalancerTlsCertificatesRequest",
        "CreateNamedQueryRequest",
        "ListManagedSchemaArnsRequest",
        "ChangeMessageVisibilityRequest",
        "DescribeDirectConnectGatewayAssociationsRequest",
        "UpdateSecurityGroupRuleDescriptionsEgressRequest",
        "ListHumanTaskUisRequest",
        "AssociateSubnetCidrBlockRequest",
        "DescribeBrokerEngineTypesRequest",
        "AddJobFlowStepsRequest",
        "ListNotebookInstanceLifecycleConfigsRequest",
        "ModifyEbsDefaultKmsKeyIdRequest",
        "CreateSnapshotCopyGrantRequest",
        "StartAssessmentRunRequest",
        "DeleteDhcpOptionsRequest",
        "ListConfigurationHistoryRequest",
        "UpdateNotificationSettingsRequest",
        "UndeprecateWorkflowTypeRequest",
        "ListEmailIdentitiesRequest",
        "ListDeliverabilityTestReportsRequest",
        "DeleteCacheSecurityGroupRequest",
        "DescribeWorkspaceDirectoriesRequest",
        "DescribeLoadBalancerPolicyTypesRequest",
        "ListTemplateAliasesRequest",
        "DescribeLifecycleHookTypesRequest",
        "ListCompatibleImagesRequest",
        "UpdateGlobalSettingsRequest",
        "GetExclusionsPreviewRequest",
        "SetCognitoEventsRequest",
        "PurchaseProvisionedCapacityRequest",
        "AssociateTrialComponentRequest",
        "GetReservedNodeExchangeOfferingsRequest",
        "ListEventBusesRequest",
        "ListDeadLetterSourceQueuesRequest",
        "GetDocumentationPartsRequest",
        "DisassociateFromMasterAccountRequest",
        "DeleteEgressOnlyInternetGatewayRequest",
        "CreateCapacityReservationRequest",
        "RejectTransitGatewayPeeringAttachmentRequest",
        "DescribeAccessPointsRequest",
        "ListOpenWorkflowExecutionsRequest",
        "GetOpenIdTokenRequest",
        "UpdateRuleMetadataRequest",
        "DescribeVpnConnectionsRequest",
        "UpdatePhoneNumberSettingsRequest",
        "CreateDefaultSubnetRequest",
        "DescribeAssessmentTemplatesRequest",
        "UnarchiveFindingsRequest",
        "DescribeVpcEndpointServiceConfigurationsRequest",
        "GetResolverRuleAssociationRequest",
        "ModifyDBSnapshotAttributeRequest",
        "DeleteUsageReportSubscriptionRequest",
        "DetachClassicLinkVpcRequest",
        "GetIdentityPoolRolesRequest",
        "UpdateImagePermissionsRequest",
        "AuthorizeClientVpnIngressRequest",
        "GetTransitGatewayRouteTablePropagationsRequest",
        "DescribeAlarmsRequest",
        "GetLoadBalancerMetricDataRequest",
        "CreateDirectConnectGatewayAssociationRequest",
        "UpdateHostedZoneCommentRequest",
        "UpdateTagsForDomainRequest",
        "CreateUsagePlanKeyRequest",
        "RemoveTagsFromVaultRequest",
        "ModifyWorkspaceAccessPropertiesRequest",
        "SetIdentityMailFromDomainRequest",
        "AcceptVpcPeeringConnectionRequest",
        "UpdateUserIdentityInfoRequest",
        "RevokeSnapshotAccessRequest",
        "AttachInternetGatewayRequest",
        "CountPendingDecisionTasksRequest",
        "DescribeOptionGroupOptionsRequest",
        "CreateMountTargetRequest",
        "RemoveResourcePermissionRequest",
        "StartGameSessionPlacementRequest",
        "DisassociateSkillFromUsersRequest",
        "ListIAMPolicyAssignmentsRequest",
        "GetUsagePlanRequest",
        "ListIncomingTypedLinksRequest",
        "GetRelationalDatabaseSnapshotsRequest",
        "SetIdentityDkimEnabledRequest",
        "DescribeTerminationPolicyTypesRequest",
        "GetHostedZoneCountRequest",
        "GetNamedQueryRequest",
        "PutPartnerEventsRequest",
        "UpdateDashboardPermissionsRequest",
        "ListFargateProfilesRequest",
        "GetConfigurationSetEventDestinationsRequest",
        "DescribeInstanceCreditSpecificationsRequest",
        "ResetFpgaImageAttributeRequest",
        "DescribeHumanTaskUiRequest",
        "CreateHITWithHITTypeRequest",
        "StartTextDetectionRequest",
        "DescribeTransitGatewayAttachmentsRequest",
        "CreateIAMPolicyAssignmentRequest",
        "CreateBusinessReportScheduleRequest",
        "GetExternalModelsRequest",
        "DescribeReservedDBInstancesOfferingsRequest",
        "GetGlobalSettingsRequest",
        "ListStreamingDistributionsRequest",
        "DescribeAggregateIdFormatRequest",
        "DeleteAnomalyDetectorRequest",
        "ListEventTrackersRequest",
        "UpdateDomainContactPrivacyRequest",
        "DescribeCrossAccountAccessRoleRequest",
        "SendContactMethodVerificationRequest",
        "ListIPSetsRequest",
        "RevokeSecurityGroupEgressRequest",
        "UndeprecateActivityTypeRequest",
        "DeleteCloudFrontOriginAccessIdentityRequest",
        "GetDomainNamesRequest",
        "AssociatePhoneNumbersWithVoiceConnectorRequest",
        "DescribeTransitGatewayMulticastDomainsRequest",
        "GetQueueUrlRequest",
        "PutSuppressedDestinationRequest",
        "AssociateHostedConnectionRequest",
        "AssociateConnectionWithLagRequest",
        "ListQueryLoggingConfigsRequest",
        "DescribeIamInstanceProfileAssociationsRequest",
        "ListEventSourcesRequest",
        "StopMonitoringScheduleRequest",
        "CreateTransitGatewayRequest",
        "DescribeVpcEndpointConnectionsRequest",
        "UpdateDomainContactRequest",
        "ListTagsForResourcesRequest",
        "GetFederationTokenRequest",
        "CreateCustomAvailabilityZoneRequest",
        "GetVpcLinkRequest",
        "DescribeVpcsRequest",
        "DescribePartnerEventSourceRequest",
        "ListProfileTimesRequest",
        "DeleteCustomAvailabilityZoneRequest",
        "DisassociateMemberAccountRequest",
        "CreateVpnGatewayRequest",
        "RestoreAddressToClassicRequest",
        "DeleteDeviceUsageDataRequest",
        "DescribeImportSnapshotTasksRequest",
        "GetCurrentMetricDataRequest",
        "ListTagsForDeliveryStreamRequest",
        "PutInstancePublicPortsRequest",
        "DisassociateVPCFromHostedZoneRequest",
        "SetVisibleToAllUsersRequest",
        "DeleteRoomSkillParameterRequest",
        "AssociateQualificationWithWorkerRequest",
        "RecordLifecycleActionHeartbeatRequest",
        "DescribeGameSessionQueuesRequest",
        "AcceptTransitGatewayPeeringAttachmentRequest",
        "DescribeOrderableClusterOptionsRequest",
        "ListEventSubscriptionsRequest",
        "ListExperimentsRequest",
        "DisassociateClientVpnTargetNetworkRequest",
        "UpdateAccountSendingEnabledRequest",
        "GetShippingLabelRequest",
        "ListPartnerEventSourcesRequest",
        "DescribeNatGatewaysRequest",
        "DescribeDefaultClusterParametersRequest",
        "CreateFileSystemFromBackupRequest",
        "CreateConfigurationSetEventDestinationRequest",
        "EnableFastSnapshotRestoresRequest",
        "CreateCapacityProviderRequest",
        "UpdateTableReplicaAutoScalingRequest",
        "DisableTransitGatewayRouteTablePropagationRequest",
        "GetDocumentPathRequest",
        "ModifyInstanceMetadataOptionsRequest",
        "DisassociateSkillGroupFromRoomRequest",
        "DeleteTrafficMirrorTargetRequest",
        "ApplySecurityGroupsToClientVpnTargetNetworkRequest",
        "ListStackSetOperationResultsRequest",
        "CreateBasePathMappingRequest",
        "DescribeClusterTracksRequest",
        "DescribeTemplateAliasRequest",
        "CreateDBInstanceReadReplicaRequest",
        "AbortDocumentVersionUploadRequest",
        "DescribeDirectConnectGatewayAssociationProposalsRequest",
        "ListSecurityConfigurationsRequest",
        "CreateCustomerGatewayRequest",
        "ModifyEventSubscriptionRequest",
        "RespondDecisionTaskCompletedRequest",
        "StopTrainingEntityRecognizerRequest",
        "DescribeFleetPortSettingsRequest",
        "ResetEbsDefaultKmsKeyIdRequest",
        "AttachClassicLinkVpcRequest",
        "DeleteLocalGatewayRouteRequest",
        "GetUsagePlansRequest",
        "ListWorkersWithQualificationTypeRequest",
        "DeleteSnapshotCopyGrantRequest",
        "InitiateVaultLockRequest",
        "GetQualificationScoreRequest",
        "GetEbsDefaultKmsKeyIdRequest",
        "DescribeLaunchTemplateVersionsRequest",
        "DeleteTransitGatewayRouteTableRequest",
        "UpdateMailboxQuotaRequest",
        "ListApplicationRevisionsRequest",
        "DeleteVPCAssociationAuthorizationRequest",
        "DisassociateS3ResourcesRequest",
        "CreateUsageReportSubscriptionRequest",
        "DescribeMLModelsRequest",
        "GetEmailIdentityRequest",
        "BatchStopUpdateActionRequest",
        "SendTemplatedEmailRequest",
        "GetTelemetryMetadataRequest",
        "GetMetricWidgetImageRequest",
        "ModifyVpcEndpointServicePermissionsRequest",
        "RegisterTransitGatewayMulticastGroupSourcesRequest",
        "DescribeVpcClassicLinkDnsSupportRequest",
        "UpdateEmailTemplateRequest",
        "DeleteEventSubscriptionRequest",
        "GetRelationalDatabaseEventsRequest",
        "DescribeGlobalClustersRequest",
        "EnableAvailabilityZonesForLoadBalancerRequest",
        "EnableTransitGatewayRouteTablePropagationRequest",
        "UpdateServiceAccessPoliciesRequest",
        "DescribeDirectConnectGatewaysRequest",
        "BatchModifyClusterSnapshotsRequest",
        "UpdateJourneyStateRequest",
        "DeleteDedicatedIpPoolRequest",
        "SearchAvailablePhoneNumbersRequest",
        "StartMonitoringMembersRequest",
        "RestoreDBInstanceFromS3Request",
        "RestoreDBInstanceToPointInTimeRequest",
        "RegisterAVSDeviceRequest",
        "PutDedicatedIpInPoolRequest",
        "DescribeFpgaImagesRequest",
        "DeleteTrafficMirrorFilterRequest",
        "StartImageScanRequest",
        "PurchaseHostReservationRequest",
        "CreateAdditionalAssignmentsForHITRequest",
        "DetachLoadBalancerFromSubnetsRequest",
        "DisableAlarmActionsRequest",
        "ListAttachedIndicesRequest",
        "DeleteKnownHostKeysRequest",
        "GetAccountSendingEnabledRequest",
        "ModifyInstancePlacementRequest",
        "PutMailboxPermissionsRequest",
        "AssociateVpcCidrBlockRequest",
        "DetectDominantLanguageRequest",
        "DetachInstancesFromLoadBalancerRequest",
        "GetJourneyExecutionActivityMetricsRequest",
        "ListDistributionsRequest",
        "ListJournalS3ExportsForLedgerRequest",
        "DescribeVpcPeeringConnectionsRequest",
        "ModifyFpgaImageAttributeRequest",
        "ListTrafficPolicyVersionsRequest",
        "StartDeliveryStreamEncryptionRequest",
        "DisableFastSnapshotRestoresRequest",
        "RevokeClusterSecurityGroupIngressRequest",
        "CreateCacheClusterRequest",
        "DeleteFpgaImageRequest",
        "AcceptVpcEndpointConnectionsRequest",
        "GetAlarmsRequest",
        "DisableVgwRoutePropagationRequest",
        "DescribeActiveReceiptRuleSetRequest",
        "GetDASHStreamingSessionURLRequest",
        "ExportTransitGatewayRoutesRequest",
        "AuthorizeDBSecurityGroupIngressRequest",
        "GetDeliverabilityDashboardOptionsRequest",
        "DescribeDBLogFilesRequest",
        "ListSpeechSynthesisTasksRequest",
        "DescribeFleetHistoryRequest",
        "DescribeClusterSnapshotsRequest",
        "CreateDhcpOptionsRequest",
        "DescribeReservedNodesRequest",
        "CheckDomainAvailabilityRequest",
        "DetachVpnGatewayRequest",
        "ModifySubnetAttributeRequest",
        "PutConfigurationSetSuppressionOptionsRequest",
        "GetHostReservationPurchasePreviewRequest",
        "StartMonitoringScheduleRequest",
        "ListReviewPolicyResultsForHITRequest",
        "CreateVpcPeeringConnectionRequest",
        "GetVaultNotificationsRequest",
        "DisassociateContactFromAddressBookRequest",
        "DescribeWorkflowTypeRequest",
        "AssignIpv6AddressesRequest",
        "SetReceiptRulePositionRequest"
      ],
      "Syntactic Label": "Request Objects",
      "Semantic Tags": [
        "AWS SDK",
        "API Gateway",
        "Cloud Services",
        "Resource Management",
        "AWS"
      ],
      "Description": "These tokens represent request objects used in the AWS SDK for various services.  They are parameters passed to methods that interact with different AWS cloud services for managing resources. The methods shown are examples of how these requests are used to interact with AWS services."
    }
  },
  {
    "c315": {
      "Unique tokens": [
        "",
        "valueCount",
        "0xFF",
        "65535",
        ",",
        "3",
        "blocksOffset",
        "7",
        "62",
        ">>>",
        "15",
        "blocks",
        "0",
        "decode",
        "+",
        "2",
        "60",
        "0x00FF",
        "255",
        "}",
        "<<",
        "encode",
        "readLong",
        "{",
        "16",
        "long",
        "hash",
        "0xFFL",
        "values",
        "-=",
        "byte",
        "=",
        "]",
        ">=",
        "+=",
        "final",
        "writeLong",
        "byte2",
        "48",
        ")",
        "int",
        "&",
        "4",
        "24",
        "valuesOffset",
        "byte0",
        "0xff",
        "(",
        "shift",
        "1",
        "for",
        "63",
        "8",
        "p",
        "block",
        "56",
        ";"
      ],
      "Syntactic Label": "C# Operators, Data Types, Control Structures, and Array Manipulation",
      "Semantic Tags": [
        "Data Decoding",
        "Bitwise Operations",
        "Data Transformation",
        "Array Processing",
        "Data Structures"
      ],
      "Description": "The tokens represent a combination of C# operators (+, -, =, &, |, <<, >>, >>>), data types (long, int, byte, char), control structures (for loop), and array manipulation (accessing and modifying array elements).  The code snippets demonstrate various data decoding techniques, primarily involving bitwise operations to extract and transform data from byte or long arrays into other data types.  The semantic tags reflect the core functionality of these code segments, which focus on processing and manipulating data within arrays using bitwise operations and data type conversions."
    }
  },
  {
    "c316": {
      "Unique tokens": [
        "compareValues",
        "HSSFPolygon",
        "createObjectProtect",
        "termsSet",
        "Ref3DPtg",
        "hasNextRecord",
        "HAN",
        "newReader",
        "ByteBuffer",
        "KEY_PUSHURL",
        "eq",
        "readVLong",
        "_flags",
        "getParsedExpressionScale",
        "putShort",
        "ve",
        "setParsedExpression",
        "sheetName",
        "reverseMul",
        "addBlock",
        "set",
        "length",
        "_palette",
        "flag",
        "dateTimeInstance",
        "pref",
        "preTag",
        "setNoFill",
        "buffer",
        "getComplexData",
        "charsetForAlias",
        "findFunction",
        "hasAttributes",
        "SystemReader",
        "x",
        "field_11_font_name",
        "waitForMsec",
        "data",
        "nFullMergedCellsRecords",
        "numShapeIdsUsed",
        "KEY_RECEIVEPACK",
        "HIT_PRED",
        "createRecord",
        "oldRef",
        "_firstColumnIndex",
        "isMultibyte",
        "CellFormatPart",
        "FormatRun",
        "substring",
        "setZeroHeight",
        "[",
        "max.facet.depth",
        "getSheetName",
        "setFontColorIndex",
        "checkExternSheet",
        "_reserved1",
        "lemmas",
        "getDx2",
        "needsInput",
        "nLeftoverMergedRegions",
        "isRowHidden",
        "field_2_color2",
        "setMaxCodeLen",
        "openIfChanged",
        "setProtect",
        "CFRule12Record",
        "lookupPrefix",
        "Packed64SingleBlock10",
        "TimeZone",
        "findRefIndexFromExtBookIndex",
        "field_4_isMultibyteUnicode",
        "getStateString",
        "step3",
        "lastEscape",
        "sharedFeature",
        "_record",
        "_valuesAgg",
        "return",
        "rule20",
        "getRawData",
        "serializeComplexPart",
        "%,d",
        "field_1_shapeIdMax",
        "TotalTermFreqComparator",
        "countsByTime",
        "header",
        "_idEdit",
        "FileIdCluster",
        "pow10",
        "font",
        "rule11",
        "toString",
        "addRef",
        "field_2_col1",
        "uniformSkip",
        "rrIx",
        "copyBytes",
        "maxDoc",
        "field_3_dx2",
        "getNumShapeIdsUsed",
        "acceptRow",
        "setFontOutlineModified",
        "isAccept",
        "writeByte",
        "raw",
        "getPatriarch",
        "fieldsStream",
        "evaluateSingleProduct",
        "setIndexReader",
        "in",
        "findEndOfRowOutlineGroup",
        "getDrawingGroupId",
        "currentExternSheetIx",
        "setAccept",
        "DBCellRecord",
        "tagMessage",
        "JGitText",
        "valueCount",
        "definedNameIndex",
        "findFirstRow",
        "utf8State",
        "_next",
        "convertOneEdge",
        "binarySearch",
        "SimpleTextBits",
        "scratchInts",
        "getTagOpt",
        "mGlowScaleY",
        "extraData",
        "fmtBuf",
        "seek",
        "drawingGroupId",
        "a3p",
        "_linkPtg",
        "HSSFClientAnchor",
        "_dropData",
        "&",
        "seeThruPreds",
        "_rowRecordValues",
        "evaluateDatesArg",
        "lastSheetIndex",
        "hasLF",
        "firstSheetIndex",
        "valEnd",
        "visitRecord",
        "chooseSingleElementFromArea",
        "serializeSimplePart",
        "EscherComplexProperty",
        "areaEval",
        "bse",
        "maxEdits",
        "HSSFTextbox",
        "-batch",
        "HexDump",
        "otherRow",
        "getNumberOfNames",
        "findBiggest",
        "segmentInfo",
        "lemmatizerME",
        "Packed64SingleBlock9",
        "DataFormatException",
        "numFields",
        "mrk",
        "?",
        "multiplyByPowerOfTen",
        "fmtOverflowBuffer",
        "norm1",
        "Specified",
        "HSSFFont",
        "hasOffsets",
        "numTerms",
        "optiSkip",
        "getMatchStarts",
        "fontIndex",
        "tryToDeleteArrayFormula",
        "setParsedExpression2",
        "holidaysCell",
        "rule12",
        "cell",
        "setRow2",
        "getRecordId",
        "serialize",
        "_mergedRegions",
        "thisWbIndex",
        "addToSSTIfRequired",
        "field_7_dx2",
        "pload",
        "setNeedSnapshot",
        "round",
        "evaluateFirstArg",
        "_scenarioProtectRecord",
        "readVInt",
        "not",
        "rule18",
        "field_6_col2",
        "scratchUTF16",
        "setXFIndex",
        "_objectProtectRecord",
        "recordFactory",
        "decode",
        "excelFont",
        "phRuns",
        "dashEven",
        "rowHasCells",
        "getParsedExpression2",
        "utf8Bom",
        "hasPayloads",
        "termArrays",
        "ptgs",
        "payload",
        "setUnderlineTypeModified",
        "setCol2",
        "setMinimumNumberShouldMatch",
        "HSSFRichTextString",
        "charArray",
        "weight",
        "pauseMSec",
        "optiSum",
        "getURL",
        "DEFAULT_MIRROR",
        "remains:",
        "BaseRowColShifter",
        "Packed64SingleBlock12",
        "rule17",
        "firstSheetName",
        "writeCharacterData",
        "_firstCell",
        "BUILTIN_FILTER_DB",
        "removeParticle",
        "termArraysArray",
        "lemmatize",
        "newDoc",
        "getReceivePack",
        "_isPaddedToQuadByteMultiple",
        "currentBlock",
        "getSheetNames",
        ".",
        "setUnderlineType",
        "isNewFrag",
        "field_1_dx1",
        "CFRTID",
        "POILogger",
        "field_8_usage",
        "createScenarioProtect",
        "field_4_color4",
        "Packed64SingleBlock21",
        "assignSpec",
        "getPicturedata",
        "rule6",
        "getNameText",
        "entryForNullKey",
        "resizeComplexData",
        "add",
        "=",
        "resultCol",
        "readNextRecord",
        "byteLength",
        "findStartOfRowOutlineGroup",
        "matchFont",
        "rowCellSize",
        "setStrikeout",
        "isRowAbsolute",
        "fieldNumber",
        "bAvail",
        "tokenImage",
        "I_MatchAreaPredicate",
        "_externSheetRecord",
        "eqSkip",
        "externalBookIndex",
        "dictionaryLemmatizer",
        "row",
        "_string",
        "fragmentSize",
        "max",
        "putCompressedUnicode",
        "findLastRow",
        "fic",
        "RawParseUtils",
        "0",
        "field_7_offset",
        "_subtotalName",
        "norm2",
        "r",
        "getCmd",
        "currentFont",
        "src",
        "ElapsedPartHandler",
        "foundTerms",
        "}",
        "_iSel",
        "jj_la1",
        "positionSpan",
        "ParseException",
        "setNumStringsPerBucket",
        "field_3_rectX2",
        "_hasPositions",
        ":",
        "formatIterator",
        "field_2_dy1",
        "evaluateDateArg",
        "_lastColumnIndex",
        "curPayload",
        "numBits",
        "makeChar",
        "\\n",
        "getLastSheetIndexFromRefIndex",
        "subRecord",
        "isCommentMultiByte",
        "utf32",
        "rule14",
        "readWeight",
        "copyChars",
        "endOfParagraph",
        "_formats",
        "setParsedExpression1",
        "Packed64SingleBlock32",
        "addChildRecord",
        "position",
        "readUnicodeLEString",
        "setDx2",
        "step1",
        "osVersion2",
        "getRowRecord",
        "_end",
        "createMBR",
        "nameName",
        "bits",
        "field_3_color3",
        "sumTotalTermFreq",
        "getNameDefinition",
        "getNameRecord",
        "inStream",
        "packfileCorruptionDetected",
        "getCharacterPos",
        "getUnicodeString",
        "append",
        "setBucketOffsets",
        "refCount",
        "_lastrow",
        "CellReference",
        "onObjectData",
        "checkFieldSummary",
        "child",
        "shIx2",
        "setFontShadowModified",
        "cchSubName",
        "doStem",
        "removeArticle",
        "Formula",
        "getModuloHash",
        "makeAnyChar",
        "isBelowMaxRep",
        "r3p",
        "_arrayValues",
        "isRowGroupHiddenByParent",
        "writeUnicodeString",
        "RamUsageEstimator",
        ",",
        "setOutline",
        "spare",
        "getHighFreqTerms",
        "isNameMultiByte",
        "valStart",
        "passage",
        "TagOpt",
        "fra",
        ">",
        "getNumTransitions",
        "getNumIdClusters",
        "look",
        "docCount",
        "incrementToken",
        "_workbook",
        "setColapsed",
        "ExternalSheetRange",
        "utf8",
        "_cellType",
        "_hasPayloads",
        "fillSlice",
        "createFormat",
        "createState",
        "setShadow",
        "is16bit",
        "postags",
        "decRef",
        "lookBusy",
        "readHeader",
        "_remainingData",
        "parseEntry",
        "rule16",
        "field_1_shapeId",
        "maxExpansions",
        "CLASS_REF",
        "newExtSheetIx",
        "p",
        "field_4_drawingsSaved",
        "Automata",
        "addInternal",
        "WordType",
        "field_9_name",
        "rule",
        "printfFmt",
        "elseresetTailBlock",
        "automata",
        "getXFAt",
        "field_1_color1",
        "actualSize",
        "rule2",
        "reportAmbiguity",
        "addFormatRun",
        "visitCellsForRow",
        "ClassID",
        "setTimeZone",
        "NameXPtg",
        "getFirstSheetIndexFromRefIndex",
        "equals",
        "indexSin",
        "subRecordData",
        "field_3_numShapesSaved",
        "setExternSheetIndex",
        "setShort",
        "docID",
        "nextLF",
        "slop",
        "positionsArray",
        "nextRecord",
        "safelyAllocate",
        "classID2",
        "getClassID",
        "rule8",
        "HSSFChildAnchor",
        "field_1_blipTypeWin32",
        "adjustFormula",
        "field_5_fileIdClusters",
        "lastSheetName",
        "write",
        "getRecordSize",
        "cosTab",
        "classID1",
        "n",
        "createTextbox",
        "hssfFont",
        "serializeTokens",
        "!=",
        "\"",
        "numberOfRichTextRuns",
        "stopNow",
        "getCommitSnapshot",
        "DOCS",
        "setDataFormat",
        "BlankCellRectangleGroup",
        "doc",
        "UnicodeString",
        "input",
        "topmost",
        "shortListToArray",
        "requiresSeek",
        "setComplexData",
        "_options",
        "getRow",
        "out",
        "getRKNumberAt",
        "field_5_size",
        "ptg",
        "rule19",
        "maxDgId",
        "resetTailBlock",
        "field_10_unused2",
        "postTag",
        "_formula2",
        "addNewEntry",
        "positionSensitive",
        "shallowSizeOf",
        "_cLine",
        "setFont",
        "guessEncoding",
        "_currentRectangleGroup",
        "fileNameFromGeneration",
        "cfrtid",
        "field_3_stringHasMultibyte",
        "Rounder",
        "keyEnd",
        "optionFlags",
        "hasMultibyte",
        "maxEntLemmas",
        "cellRefs",
        "fanout",
        "createBuiltInName",
        "format1",
        "field_11_tickColor",
        "setHidden",
        "setOffset",
        "_rowRecords",
        "field_6_ref",
        "writeShort",
        "field_7_comment_text",
        "createRichTextString",
        "CellRangeAddress",
        "convertFromExternSheetIndex",
        "OperandPtg",
        "field_3_formula1_len",
        "_significand",
        "record.",
        "sinTab",
        "ExternalSheet",
        "tempFileNamePrefix",
        "RecordFormatException",
        "_bsels",
        "arrayPtg",
        ")",
        "stv",
        "rule10",
        "_firstrow",
        "RowRecord",
        "rule21",
        "_rgLines",
        "isVerticallyFlipped",
        "rcIx",
        "criteriaPredicate",
        "format2",
        "osVersion1",
        "_cLines",
        "vlst",
        "_lastRecordWasEOFLevelZero",
        "createNewFont",
        "FormulaRecordAggregate",
        "field_12_blipRecord",
        "EscherSpRecord",
        "hasFreqs",
        "getCellFormula",
        "numIdClusters",
        "shiftRange",
        "newSheetIndex",
        "nextCTF",
        "setCellType",
        "extSST",
        "shape",
        "visitRowRecordsForBlock",
        "shouldProtectScenarios",
        "closeWhileHandlingException",
        "EscherBlipRecord",
        "rule3",
        "*",
        "fillFields",
        "isColAbsolute",
        "==",
        "field_2_rectY1",
        "cannotCommitWriteTo",
        "escherGroup",
        "setParsedExpressionScale",
        "baxcel",
        "adjustSeekIndex",
        "numberOfNames",
        "sumDocFreq",
        "bcrg",
        "ref",
        "rule5",
        "byteOrder2",
        "removePlural",
        "target",
        "utf32State",
        "1",
        "getOutlineLevel",
        "_plsContinues",
        "isRowGroupCollapsed",
        "writeTokenValueBytes",
        "Token",
        "checkFooter",
        "MergeCellsRecord",
        "CorruptObjectException",
        "rule15",
        "calculateWorkdays",
        "CFRuleBase",
        "HSSFShape",
        "hrow",
        "getMaxClauseCount",
        "rule4",
        "_externalBookBlocks",
        "getSections",
        "getRefIxForSheet",
        "visitContainedRecords",
        "FontDetails",
        "applyFont",
        "new",
        "Functions'",
        "getUploadPack",
        "+",
        "isRetained",
        "setNameDefinition",
        "field_12_textRotation",
        "setCellRanges",
        "destUTF32",
        "matches",
        "space",
        "ArrayPtg",
        "isVowel",
        "is16bitEncoded",
        "terms",
        "pruneLoosePackedObjects",
        "field_4_tag",
        "setInput",
        "remainingData",
        "appendFormat",
        "setStringList",
        "scratch",
        "ebr",
        "(",
        "queue",
        "fill",
        "getStartRowNumberForBlock",
        "NameRecord",
        "Packed64SingleBlock16",
        "rule7",
        "getFormulaTokens",
        "Corrupted",
        "_unknownPostFormulaByte",
        "holidays",
        "checkRange",
        "rule1",
        "eofToken",
        "setEscapementType",
        ";",
        "outputFromResultBuffer",
        "destUTF8",
        "EscherRecord",
        "rule22",
        "getBytesRef",
        "commitMessage",
        "fieldAndWeights",
        "readInputToBuffer",
        "containsCell",
        "initTransition",
        "rule0",
        "afterRecordSerialize",
        "dfe",
        "thedata",
        "newNameRecord",
        "sIx",
        "opnds",
        "WorkdayCalculator",
        "pd",
        "shifter",
        "field_11_unused3",
        "ValueEval",
        "alphabetSize",
        "getConflictingAlts",
        "rule13",
        "{",
        "44",
        "getFontDetails",
        "current",
        "sectionCount1",
        "removeRow",
        "]",
        "isInternalReferences",
        "cmd",
        "transition",
        "RelativeDateFormatter",
        "_unknownRecords",
        "serializeUnicodeString",
        "getSheetIndex",
        "areaPredicate",
        "getNextTransition",
        "_lastCell",
        "getWorkbook",
        "_formula1",
        "readAndNormalizeFromInput",
        "_rectangleGroups",
        "rule9",
        "field_2_marker",
        "KEY_MIRROR",
        "ScenarioProtectRecord"
      ],
      "Syntactic Label": "Variables, Methods, Objects, Dot Operator, Opening Parenthesis, Closing Parenthesis, Array Access Operator",
      "Semantic Tags": [
        "Data Structures",
        "File IO",
        "Exception Handling",
        "Text Processing",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a mix of data structures (objects, arrays), file I/O operations (reading and writing data), methods (functions) performing various tasks, exception handling mechanisms, and algorithm implementations (e.g., searching, sorting).  The dot operator is used extensively for method calls on objects. Parentheses and array access operators are used for function calls and array manipulation respectively.  These elements are fundamental to C# programming and are crucial for building complex applications."
    }
  },
  {
    "c317": {
      "Unique tokens": [
        "getInt",
        "ensureCapacity",
        "slice",
        "limit",
        ",",
        ".",
        "return",
        "char",
        "position",
        "SHORT",
        "new",
        "ShortBuffer",
        "compact",
        "+",
        "order",
        "get",
        "allocateDirect",
        "ByteBuffer",
        "start",
        "LongBuffer",
        "if",
        "}",
        "*",
        "read",
        "SizeOf",
        "==",
        "byte",
        "bufferSize",
        "=",
        "copy",
        "short",
        "+=",
        "final",
        "this",
        "LONG",
        "byteCount",
        "peekShort",
        ")",
        "int",
        "next",
        "addAndGet",
        "buf",
        "length",
        "(",
        "bb",
        "mark",
        "Memory",
        "buffer",
        "result",
        "clear",
        "byteBuffer",
        "in",
        "duplicate",
        "-",
        "INT",
        "IntBuffer",
        "DoubleBuffer",
        ";",
        "newPosition"
      ],
      "Syntactic Label": "Methods and Operators in Buffer Manipulation",
      "Semantic Tags": [
        "Buffer Management",
        "Data Access",
        "Byte Manipulation",
        "Memory Management",
        "Exception Handling"
      ],
      "Description": "The tokens represent methods and operators used for manipulating buffers (ByteBuffer, ShortBuffer, IntBuffer, LongBuffer, FloatBuffer, DoubleBuffer, CharBuffer).  These methods handle reading, writing, and resizing buffer data, along with managing buffer position, limit, and mark.  Operators like '+' and '=' are used for arithmetic and assignment operations within the buffer manipulation context.  The code includes exception handling for cases like BufferUnderflowException and BufferOverflowException, ensuring robust buffer operations."
    }
  },
  {
    "c318": {
      "Unique tokens": [
        "_options",
        "private",
        "=",
        "null",
        "final",
        "this",
        ".",
        "}",
        "return",
        ")",
        "lineNumber",
        "{",
        "unused2",
        "minValue",
        "lastNS",
        "0",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Object Instantiation",
        "Method Invocation",
        "Variable Assignment",
        "Return Statement",
        "Class Member Access"
      ],
      "Description": "The tokens represent a variety of C# language constructs.  'private', 'public', and 'final' are access modifiers. '=' is the assignment operator. 'null' is a literal value. 'this' refers to the current instance of a class. '.' is the member access operator. '{' and '}' are used for code blocks. 'return' is a keyword to return a value from a method.  'int', 'String', 'byte[]', etc., are data types.  The tokens are used in method signatures, method bodies, and constructors to define and manipulate objects and data within the C# code.  The context sentences show common patterns in C# class definitions and method implementations, including constructor initialization, getter methods, and setter methods."
    }
  },
  {
    "c319": {
      "Unique tokens": [
        "",
        "position",
        "segmentInfo",
        "6",
        "b",
        "Username",
        "?",
        "2",
        "interval",
        "bitsPerValue",
        "formatAsString",
        "<",
        "getChildren",
        "ruleIndex",
        ")",
        "instance",
        "length",
        "str",
        "cell",
        "0xff",
        "wordType",
        "result",
        "getDirectory",
        "-",
        "getSid",
        "tfn",
        "configs",
        "SpatialOperation",
        "null",
        ",",
        "URIish",
        "rowNumber",
        "obj",
        "collectPredicates",
        "stream",
        "args",
        "fontName",
        ">",
        "13",
        "len",
        "opaque",
        "IsWithin",
        "[",
        "getInnerValueEval",
        "getName",
        "fs",
        "newColumn",
        "_workbook",
        "==",
        "stopWordFiles",
        "1E-6",
        "false",
        "firstCell",
        "stateNumber",
        "validationType",
        "_cellType",
        ">=",
        "this",
        "rootIsWildcard",
        "name",
        "CopyOnWriteArrayList",
        "4",
        "biff2_sid",
        "s",
        "true",
        "allowEmpty",
        "t",
        "anchor",
        "size",
        "32768",
        "fragCharSize",
        "1",
        "class",
        "nextPos",
        "plainText",
        "listener",
        "segmentSuffix",
        "currentCharIndex",
        "SEP",
        "zeroFillBuffers",
        "ruleNames",
        ".",
        "re",
        "dir",
        "debug",
        "prevPtr",
        "index",
        "source",
        "sid",
        "new",
        "_format",
        "+",
        "RECORD_ID",
        "cells",
        "getInputStream",
        "pictureIndex",
        "terms",
        "NO_OUTPUT",
        "BlankEval",
        "getCol",
        "key",
        "sortedTerms",
        "(",
        "o",
        "state",
        "recognizer",
        "rand.seed",
        "getTotalScore",
        "directory",
        "fromField",
        "instanceof",
        "_ctx",
        "chan",
        "n",
        "message",
        "ignoreCase",
        "/",
        "!=",
        "\"",
        "tokenGroup",
        "min",
        "Number",
        "getOperation",
        "0",
        "lastDocId",
        "_options",
        "format",
        "getRow",
        "r",
        "'",
        "states",
        "ccid",
        "numPoints",
        "e",
        "]",
        "remaining",
        ":",
        "bucketRelativeOffsets",
        "46",
        "YEAR",
        "&",
        "24",
        "br",
        "&&",
        "value",
        "Constants",
        "otherBuffer",
        "numberVE",
        "nameOrSpec",
        "a",
        "fieldsData",
        "getNumStates",
        "other",
        "w1",
        "info",
        "predicate"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "File I/O",
        "Data Structures",
        "Algorithm",
        "Exception Handling",
        "Object-Oriented Programming"
      ],
      "Description": "The tokens represent a wide range of C# language elements including identifiers, keywords, operators, and literals.  They are used in various contexts such as method definitions, loops, conditional statements, exception handling, and object manipulation. The semantic tags reflect the common operations performed in the code snippets, such as file input/output, use of data structures (arrays, lists, maps), implementation of algorithms (searching, sorting, string manipulation), exception handling, and object-oriented programming concepts (method calls, object creation). The significance in the context of C# programming is that these tokens and their usage demonstrate fundamental programming constructs and techniques used in C# applications."
    }
  },
  {
    "c320": {
      "Unique tokens": [
        "\"",
        "XmlPullParserException",
        ".",
        "IOException",
        "EvaluationException",
        "Error",
        "new",
        "UnsupportedOperationException",
        "MessageFormat",
        "Unknown",
        "v",
        "RecordFormatException",
        "RuntimeException",
        "StringIndexOutOfBoundsException",
        "EOFException",
        "NullPointerException",
        ")",
        "QueryNodeError",
        "(",
        "HPSFException",
        "could",
        "IllegalStateException",
        "ArrayIndexOutOfBoundsException",
        "IllegalArgumentException",
        "EncryptedDocumentException",
        "offset+length"
      ],
      "Syntactic Label": "Exception Types, Keywords, Operators, and identifiers",
      "Semantic Tags": [
        "Exception Handling",
        "Object Creation",
        "Parameter Validation",
        "Resource Management",
        "Error Handling"
      ],
      "Description": "The tokens represent various exception types in C#, keywords like \"new\" for object creation, operators like \".\" for member access, and identifiers for variables and methods.  The context sentences show how these tokens are used within exception handling blocks to validate parameters, manage resources, and handle errors during program execution.  The significance in C# programming is that these elements are fundamental to building robust and error-tolerant applications."
    }
  },
  {
    "c321": {
      "Unique tokens": [
        "",
        "\"",
        "null",
        ",",
        ".",
        "getClassLoader",
        "query",
        "bytes",
        "index",
        "new",
        "changes",
        "input",
        "0",
        "id",
        "ErrorType",
        "prefix",
        "entryPath",
        "?",
        "match",
        "analyzer",
        "[",
        "List",
        "header",
        "'",
        "cfg",
        "<",
        "{",
        "*",
        "termBytes",
        "==",
        "toString",
        "values",
        "sheetName",
        "false",
        "field",
        "CombinedHunkHeader",
        "subject",
        "body",
        "=",
        "nextKey",
        ">=",
        "short",
        "readlimit",
        ":",
        "getHunks",
        "sizeIsValid",
        "model",
        ")",
        "name",
        "LocaleUtil",
        "&",
        "int",
        "why",
        "String",
        "&&",
        "label",
        "(",
        "true",
        "find",
        "value",
        "state",
        "1",
        "size",
        "fields",
        "in",
        "protect",
        "term",
        "sS",
        "-",
        "action",
        "from",
        "object",
        "/",
        "!=",
        "type"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Method Invocation",
        "Object Manipulation",
        "Data Structures",
        "Control Flow",
        "Input/Output"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (public, static, new, if, return, etc.), operators (., ==, !=, +, -, &&, ||, etc.), data types (int, String, byte[], etc.), and identifiers (method names, variable names, class names, etc.).  These tokens are used to define methods, manipulate objects, control program flow, and handle data. The context sentences show these tokens in action within various methods, demonstrating their roles in constructing and executing C# code.  The semantic tags reflect the common operations performed in the code snippets."
    }
  },
  {
    "c322": {
      "Unique tokens": [
        "",
        "svm",
        "f",
        "getState",
        "0L",
        "TYPE_UNMAPPABLE_CHAR",
        "maxFacetDepth",
        "1.0f",
        "rec",
        "b",
        "getCurrentToken",
        "?",
        "analyzer",
        "TYPE_MALFORMED_INPUT",
        "<",
        "predicateIndex",
        "ft",
        "DATE_MSEC_FIELD",
        "0x14",
        "short",
        "append",
        ")",
        "pattern",
        "(new=",
        "int",
        "PredicateTransition",
        "buf",
        "length",
        "TITLE_FIELD",
        "Integer",
        "EscherRecordTypes",
        "result",
        "numericFields",
        "EscherChildAnchorRecord",
        "boost",
        "getGramAnalyzer",
        "ATNConfigSet",
        "indexAnalyzer",
        "bq",
        "from",
        "fieldName",
        "_initialRecordsSize",
        "CellFormatType",
        "config",
        "null",
        ",",
        "reduced",
        "q",
        "sb",
        "spContainer",
        "tokenIndex",
        "EscherClientAnchorRecord",
        "stream",
        "args",
        "Field",
        ">",
        "deserializationOptions",
        "precedencePredicates",
        "substring",
        "[",
        "Arrays",
        "IndexWriterConfig",
        "read",
        "==",
        "file",
        "false",
        "byte",
        "slices",
        "IntPoint",
        "subRecStream",
        "s",
        "true",
        "rulefilesArg",
        "isDeltaRepresentation",
        "class",
        "orig",
        "DEFAULT_LOG_STEP",
        "affixFile",
        "_crnBlocks",
        ".",
        "return",
        "throw",
        "dir",
        "AbstractPredicateTransition",
        "new",
        "iwc",
        "EscherSpgrRecord",
        "+",
        "built-in",
        "rules",
        "subRecordData",
        "original",
        "valueLongBits",
        "NAME_FIELD",
        "toString",
        "=",
        "queryAnalyzer",
        "10",
        "assert",
        "(",
        "File",
        "recognizer",
        "i",
        "in",
        "instanceof",
        "got:",
        "w",
        "LongPoint",
        "!=",
        ";",
        "\"",
        "JGitText",
        "AND",
        "path",
        "writer",
        "ROOT",
        "tokenStream",
        "ioe",
        "doc",
        "0",
        "getMessage",
        "DATE_FIELD",
        "ID_FIELD",
        "List",
        "ch",
        "}",
        "logStepAtt",
        "{",
        "states",
        "text",
        "atn",
        "MultiTermQuery",
        "serializedAtn",
        "e",
        "oldToken",
        "precedenceState",
        "local",
        ":",
        "spec",
        "BODY_FIELD",
        "_default_value",
        "bodyFt",
        "getIndexWriterConfig",
        "&&",
        "DOMUtils",
        "StringField",
        "fields",
        "operands",
        "TIME_SEC_FIELD",
        "a",
        "rs",
        "info",
        "predicate"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Version Control",
        "File System Operations",
        "Exception Handling",
        "Data Structures",
        "Text Processing"
      ],
      "Description": "The tokens represent a wide range of C# language elements including keywords, operators, identifiers, and literals.  They are used in various contexts such as object creation, method invocation, exception handling, file system operations, string manipulation, and data structure usage. The code snippets demonstrate common programming patterns in C#, such as switch statements, exception handling, and iterative processing. The semantic tags highlight the broader functionality of the code, focusing on its role in version control, file system interactions, and text processing."
    }
  },
  {
    "c323": {
      "Unique tokens": [
        "{",
        "for"
      ],
      "Syntactic Label": "Code Block Delimiters and Looping Keyword",
      "Semantic Tags": [
        "Control Flow",
        "Iteration",
        "Code Structure",
        "Method Definition",
        "Object Initialization"
      ],
      "Description": "The tokens '{' and 'for' are fundamental in C#.  '{' denotes the start and end of code blocks, defining the scope of variables and statements. 'for' is a keyword that introduces a for loop, a common iterative construct used for repeating a block of code a specific number of times.  These tokens are crucial for structuring C# programs and controlling program flow."
    }
  },
  {
    "c324": {
      "Unique tokens": [
        "off",
        "paths",
        "f",
        "minVocabSymbol",
        "commitNames",
        "jsonString",
        "deltaPri",
        "nodeName",
        "userName",
        "BitSet",
        "readLimit",
        "subexLen",
        "tags",
        "version",
        "b",
        "idx",
        "ignoredReadlimit",
        "postings",
        "threshold",
        "val",
        "interval",
        "objectType",
        "bitsPerValue",
        "ptr",
        "chars",
        "coffset",
        "nameIndex",
        "fontIndex",
        "<",
        "blockSize",
        "canExec",
        "offsets",
        "numerator",
        "oneChar",
        "long",
        "date",
        "object",
        "sheetName",
        "point",
        "all",
        "codec",
        "sliceOffset",
        "way",
        "short",
        "dst",
        "groupDocsOffset",
        "ruleIndex",
        ")",
        "ord",
        "export",
        "int",
        "expireAgeMillis",
        "set",
        "originalText",
        "buf",
        "length",
        "str",
        "cell",
        "flag",
        "deltaCompress",
        "dateResolution",
        "formula",
        "buffer",
        "startOffset",
        "expire",
        "bs",
        "x",
        "from",
        "fieldName",
        "sz",
        "pos",
        "group",
        "sheetIdx",
        "wordId",
        "rowOffset",
        "toRemove",
        "awareness",
        "seed",
        "offset",
        "blockCount",
        "data",
        "limit",
        ",",
        "base",
        "surface",
        "rowNumber",
        "altsets",
        "obj",
        "ageSec",
        "crc32",
        "args",
        ">",
        "len",
        "uri",
        "tagger",
        "bitmask",
        "listFormula",
        "files",
        "[",
        "nth",
        "dgId",
        "inum",
        "csq",
        "main",
        "V",
        "tokenCount",
        "builder",
        "testRatio",
        "amount",
        "Expression",
        "byteCount",
        "ptgs",
        "actionIndex",
        "heads",
        "fh",
        "symbol",
        "threadSafe",
        "name",
        "ref",
        "objects",
        "lnum",
        "sheetnum",
        "newValue",
        "externSheetNumber",
        "carray",
        "ints",
        "l",
        "oneByte",
        "mb",
        "s",
        "on",
        "size",
        "msg",
        "dryRun",
        "shortName",
        "extensionKey",
        "protect",
        "bool",
        "decision",
        "srcCellRow",
        "boolean",
        "srcRowIndex",
        "threads",
        "ruleNames",
        "numberOfItems",
        ".",
        "groupDocsLimit",
        "char",
        "builtinStyleId",
        "relative",
        "bytes",
        "index",
        "sid",
        "source",
        "extension",
        "scale",
        "binaryExponent",
        "didRefresh",
        "id",
        "numberOfRanges",
        "expression",
        "sortField",
        "scaleX",
        "encodingName",
        "need",
        "bare",
        "delta",
        "flushOnEnd",
        "ts",
        "forceUpdate",
        "password",
        "taxonomySize",
        "col",
        "is",
        "stringToSign",
        "maxBasicQueries",
        "backwardId",
        "matches",
        "font",
        "v",
        "points",
        "numberOfSheets",
        "which",
        "width",
        "field",
        "pictureIndex",
        "sheetIndex",
        "terms",
        "url",
        "retain",
        "newLimit",
        "localName",
        "key",
        "kind",
        "side",
        "(",
        "includeMaxScore",
        "d",
        "raw",
        "groupSort",
        "newName",
        "state",
        "o",
        "directory",
        "other",
        "gen",
        "rawBits",
        "sourceLength",
        "booleanValue",
        "i",
        "record",
        "stringValue",
        "signed",
        "errorCode",
        "term",
        "message",
        "extfield",
        "functionName",
        "type",
        "cs",
        "newPosition",
        "definedNameIndex",
        "tokenSeparator",
        "validating",
        "path",
        "selfChange",
        "abbr",
        "regionId",
        "row",
        "level",
        "location",
        "E",
        "holder",
        "nthParent",
        "newSize",
        "doc",
        "bookIndex",
        "input",
        "rowIndex",
        "prefix",
        "since",
        "docs",
        "start",
        "BytesRef",
        "c",
        "ch",
        "cached",
        "highIx",
        "contextLines",
        "params",
        "text",
        "externSheetIndex",
        "capacity",
        "numDocs",
        "e",
        "precedence",
        "]",
        "readlimit",
        "milliseconds",
        "allow",
        "names",
        "dnum",
        "thumbOffset",
        "drawingGroupId",
        "positionSpans",
        "queryPoint",
        "emu",
        "follow",
        "cellnum",
        "counts",
        "func",
        "fnum",
        "value",
        "count",
        "maxPercentage",
        "column",
        "listOfValues",
        "dedup",
        "m",
        "constant",
        "operands",
        "columnIndex",
        "forwardId",
        "..",
        "a",
        "block",
        "update",
        "namenum",
        "String",
        "increment",
        "array",
        "ofKind",
        "when"
      ],
      "Syntactic Label": "Variables, parameters, and identifiers",
      "Semantic Tags": [
        "Data Structures",
        "Program Control Flow",
        "Method Parameters",
        "Object Attributes",
        "Data Processing"
      ],
      "Description": "The tokens represent a wide variety of elements in C# code.  They include method parameters (e.g., `value`, `formula`, `offset`), object attributes (e.g., `paths`, `userName`, `expireAgeMillis`), variables used for data manipulation (e.g., `buffer`, `idx`, `len`), and identifiers for types (e.g., `BitSet`, `String`, `ByteBuffer`). The context sentences show these tokens being used in various ways, such as method arguments, variable assignments, and conditional statements, all essential parts of C# program structure and logic."
    }
  },
  {
    "c325": {
      "Unique tokens": [
        ",",
        ".",
        "return",
        "mask",
        "w2",
        "0",
        "+",
        "cmp",
        "2",
        "[",
        "if",
        "NB",
        "}",
        "5",
        ";",
        "16",
        "decodeInt32",
        "w4",
        "=",
        "12",
        "compareUInt32",
        "]",
        ")",
        "4",
        "w5",
        "(",
        "1",
        "w3",
        "bs",
        "8",
        "p",
        "other",
        "w1",
        "!=",
        "3"
      ],
      "Syntactic Label": "Comparison and Conditional Control Flow",
      "Semantic Tags": [
        "Data Comparison",
        "Conditional Logic",
        "Integer Comparison",
        "Byte Array Comparison",
        "Object Comparison"
      ],
      "Description": "The tokens represent elements of C# code that perform comparisons between integer values, byte arrays, and custom objects.  The code uses conditional statements ('if') to control the flow of execution based on the results of these comparisons.  The 'return' statement is used to return the result of the comparison.  The overall purpose is to compare different data structures for equality or inequality."
    }
  },
  {
    "c326": {
      "Unique tokens": [
        "Referenced",
        "cannot",
        "edges",
        "sheetName",
        "codec",
        "ones",
        "IndexWriter",
        "document",
        "length",
        "past",
        "freeze",
        "buffer",
        "Changed",
        "functions",
        "-",
        "can't",
        "from",
        "data",
        "unhandled",
        "missing",
        "of",
        "blocks",
        "args",
        "stream",
        "supplied",
        "len",
        "use",
        "[",
        "end",
        "Wrong",
        "dead",
        "Pushback",
        "eval",
        "open",
        "number",
        "cfRules",
        "IntervalSet",
        "for",
        "session",
        "method",
        "commit",
        "format:",
        "support",
        "bytes",
        "queries.length",
        "The",
        "header",
        "pre-",
        "(hardware",
        "specified.",
        "range",
        "has",
        "Metadata",
        "SST",
        "in",
        "requires",
        "without",
        "mergeVectors",
        "type",
        "function",
        "[]",
        "initialization",
        "More",
        "than",
        "Call",
        "mergeFields",
        "close",
        "Error:",
        "Not",
        "WeightedPhraseInfo.",
        "line",
        "seek",
        "commits",
        "explicit",
        "belong",
        "revision",
        "ascii",
        "Stream",
        "change",
        "fields",
        "contains",
        "subquery",
        "bypass",
        "and",
        "calls:",
        "to",
        "one",
        "task!",
        "line:",
        "Specified",
        "called",
        "Wrote",
        "Factory",
        "all",
        "incomplete",
        "bounds.",
        "passed",
        "fetch",
        "Asked",
        "failed",
        "cell",
        "enough",
        "formula",
        "list",
        "supports",
        "3",
        "Bad",
        "not",
        "argument",
        "existing",
        "Toolpack.",
        "policy",
        "character",
        "extends",
        "with",
        "'['",
        "last",
        "this",
        "component",
        "move",
        "stemmer",
        "yet",
        "that",
        "arg",
        "Duplicate",
        "3D",
        "Writing",
        "readonly",
        "serialization",
        "sid",
        "delete",
        "consume",
        "is",
        "parser",
        "invalid",
        "field",
        "=",
        "NewLocale",
        "state",
        "buffer:",
        "/",
        "java",
        "Cannot",
        "Analyzer",
        "path",
        "row",
        "max",
        "the",
        "format",
        "Record",
        "Locale",
        "outside",
        "surrounding",
        "}",
        "Thumbnail",
        "Unknown",
        "text",
        "serializer",
        "call",
        "error",
        "remaining",
        ":",
        "differs",
        "actual",
        "Doc",
        "sub",
        "payloads",
        "value",
        "variant:",
        "'format'",
        "a",
        "object",
        "revision:",
        "Unsupported",
        "position",
        "tags",
        "only",
        "interval",
        "negative",
        "sid:",
        "sfr",
        "point",
        "expr1",
        "checksum",
        "invoking",
        "instance",
        "Operator",
        "refCount",
        "firstSheetIndex:",
        "precision",
        "Encoder",
        "Relative",
        "startOffset",
        "issues",
        "CellValue",
        "cell,",
        "fieldName",
        "EOF",
        "numDocs=",
        ",",
        "Illegal",
        "points,",
        "<no",
        "parameter:",
        "files",
        "2D",
        "full",
        "Start",
        "FALSE",
        "please",
        "read",
        "publish",
        "file",
        "codec=",
        "TokenStream",
        "decRef",
        "can",
        "No",
        "remove",
        "Count",
        "it",
        "lat-lon",
        "useless",
        "exception",
        "valid",
        "but",
        "pred",
        "does",
        "Tag",
        "contexts",
        "replacement.length",
        "to:",
        "expected=",
        "prior",
        "SHOULD",
        "written",
        "Analysis",
        "record",
        "zero",
        "suggester",
        "shingle",
        "!=",
        "\"",
        "Format",
        "input",
        "sheet",
        "'",
        "case",
        "'words'",
        "before",
        "precedence",
        "count",
        "each",
        "array",
        "when",
        "obtaining",
        "IF",
        "oversized",
        "alter",
        "analyzer",
        "salt/verifier/verifierHash",
        "Evals,",
        "First",
        "initial",
        "configs:",
        "be",
        "Expecting",
        "reader",
        ")",
        "endEvaluate",
        "older",
        "(this",
        "classes",
        "Squashed",
        "ATN",
        "least",
        "Excel",
        "result",
        "must",
        "following",
        "mismatch:",
        "Attempt",
        "erroneous",
        "null",
        "characters",
        "Error",
        "workbook",
        "validation",
        "over",
        "Row",
        "name,",
        "==",
        "float",
        "byteCount",
        "name",
        "inefficient:",
        "allowed",
        "size",
        "1",
        "SnapshotDeletionPolicy",
        "char",
        "empty",
        "index",
        "found",
        "+",
        "times",
        "buffer=",
        "found:",
        "Could",
        "happen",
        "startEvaluate",
        "Unexpected",
        "connect",
        "terms",
        "world",
        "This",
        "Min",
        "many",
        "next",
        "(",
        "Analyzer:",
        "specified",
        "didn't",
        "part",
        ";",
        "PRED",
        "State",
        "invoked",
        "writer",
        "Number",
        "problem?)",
        "ECS",
        "external",
        "BOOLERR",
        "Read",
        "rev=",
        "current",
        "names",
        "]",
        "matching",
        "replacement",
        "parameters:",
        "an",
        "Bucket",
        "Invalid",
        "tool"
      ],
      "Syntactic Label": "Lexical Tokens and Operators",
      "Semantic Tags": [
        "Exception Handling",
        "Data Processing",
        "Input/Output Operations",
        "Control Flow",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (e.g., \"public\", \"if\", \"else\", \"while\", \"throw\"), operators (e.g., \"=\", \".\", \"+\", \"-\", \"!\", \"==\", \"!=\"), identifiers (e.g., \"removeRow\", \"consume\", \"build\", \"fillSlice\", variable and method names), and literals (e.g., numbers, strings).  These tokens are fundamental to C# syntax and are used to construct statements, expressions, and declarations. The context sentences show these tokens in action within methods, handling exceptions, controlling program flow, and processing data.  The semantic tags reflect the common operations performed in the code snippets."
    }
  },
  {
    "c327": {
      "Unique tokens": [
        "rawSheetName",
        "f",
        "domainName",
        "position",
        "userName",
        "className",
        "query",
        "readLimit",
        "th",
        "to",
        "version",
        "variantType",
        "b",
        "errCode",
        "formatIndex",
        "suffix",
        "idx",
        "startBitsPerValue",
        "element",
        "docId",
        "token",
        "property",
        "millis",
        "initialSize",
        "val",
        "truncated",
        "bitsPerValue",
        "chars",
        "nameIndex",
        "namespace",
        "<",
        "blockSize",
        "oneChar",
        "hash",
        "date",
        "cut",
        "paramValue",
        "k1",
        "sheetName",
        "byteIndex",
        "lineCount",
        "way",
        "document",
        "chargroup",
        "ruleIndex",
        "formulaText",
        "pattern",
        ")",
        "ord",
        "stripString",
        "stringToMatch",
        "int",
        "originalText",
        "buf",
        "length",
        "str",
        "cell",
        "threadName",
        "upstreamName",
        "authority",
        "margin",
        "formula",
        "startPoint",
        "likeText",
        "buffer",
        "result",
        "minElement",
        "sequence",
        "charCount",
        "typeCode",
        "x",
        "repo",
        "from",
        "fieldName",
        "pos",
        "keyId",
        "fileName",
        "group",
        "sentence",
        "offset",
        "numberOfWords",
        ",",
        "o1",
        "base",
        "sb",
        "firstRowIndex",
        "altsets",
        "obj",
        "rawMode",
        "stream",
        "regularExpression",
        "by",
        "bytesUsed",
        "uri",
        "begin",
        "bitmask",
        "shape",
        "contentLength",
        "pName",
        "ivalue",
        "keyName",
        "matchedToken",
        "fs",
        "bi",
        "locale",
        "itemName",
        "csq",
        "x1",
        "main",
        "indexCode",
        "toExclusive",
        "italic",
        "values",
        "utf8",
        "timeout",
        "bufferSize",
        "roleName",
        "Side",
        "symbol",
        "name",
        "ref",
        "delegate",
        "functionIndex",
        "array",
        "number",
        "component",
        "code",
        "options",
        "another",
        "label",
        "s",
        "ordinal",
        "target",
        "oneByte",
        "cacheSize",
        "t",
        "on",
        "objectId",
        "size",
        "msg",
        "totalTasks",
        "fi",
        "status",
        "opName",
        "firstRow",
        "accountId",
        "extensionKey",
        "fn",
        "queryText",
        "output",
        "commit",
        "closer",
        "decision",
        "srcRowIndex",
        "boolean",
        "tableName",
        "toAdd",
        "dist",
        "tags",
        "provider",
        ".",
        "dir",
        "sid",
        "index",
        "k",
        "id",
        "nameRecord",
        "match",
        "delta",
        "dim",
        "resourceGroupName",
        "phraseHighlight",
        "chseq",
        "is",
        "original",
        "setSize",
        "retryTimes",
        "fromInclusive",
        "pow10",
        "v",
        "mbPerSec",
        "docID",
        "markLimit",
        "simple",
        "width",
        "field",
        "el",
        "totalWork",
        "as",
        "maxCount",
        "url",
        "sheetIndex",
        "maxDoc",
        "repetitions",
        "key",
        "sessionID",
        "marker",
        "filename",
        "side",
        "kind",
        "groupSort",
        "d",
        "o",
        "AnyObjectId",
        "newName",
        "state",
        "directory",
        "other",
        "nthPosition",
        "freq",
        "dx1",
        "mustExist",
        "i",
        "fieldNumber",
        "tokenName",
        "in",
        "fieldInfo",
        "errorCode",
        "categoryPath",
        "term",
        "n",
        "pat",
        "string",
        "recordId",
        "type",
        "cs",
        "valueCount",
        "path",
        "regionId",
        "row",
        "level",
        "location",
        "newEntry",
        "max",
        "min",
        "mask",
        "nativeId",
        "translationAmount",
        "newSize",
        "doc",
        "bookIndex",
        "input",
        "cmpResult",
        "rowIndex",
        "prefix",
        "sheet",
        "format",
        "maxNumberOfBits",
        "docs",
        "r",
        "start",
        "out",
        "c",
        "prependAttClass",
        "pid",
        "per",
        "relativeOffset",
        "params",
        "title",
        "text",
        "reason",
        "blockBits",
        "edit",
        "capacity",
        "e",
        "precedence",
        "line",
        "docIDs",
        "docName",
        "lexState",
        "groupName",
        "follow",
        "String",
        "stashRef",
        "newParents",
        "replacement",
        "filepattern",
        "value",
        "red",
        "column",
        "count",
        "dedup",
        "simpleCompareResult",
        "dimName",
        "branchnames",
        "noteRefName",
        "fields",
        "operands",
        "CharSequence",
        "columnIndex",
        "bytesID",
        "ruleName",
        "onlySheetIndex",
        "skip",
        "..",
        "rownum",
        "a",
        "propertyNumber",
        "block",
        "event",
        "object",
        "maxScan",
        "IntSet"
      ],
      "Syntactic Label": "Variables",
      "Semantic Tags": [
        "Data Representation",
        "Program State",
        "Input Parameters",
        "Method Arguments",
        "Data Storage"
      ],
      "Description": "These tokens represent variables used within C# methods.  They are significant because they store and manage data, acting as placeholders for various data types (numbers, strings, objects) that are used in calculations, comparisons, and function calls throughout the code.  The semantic tags highlight their roles in representing program state, handling input, and storing intermediate or final results."
    }
  },
  {
    "c328": {
      "Unique tokens": [
        "off",
        "position",
        "putDouble",
        "b",
        "idx",
        "codePointOffset",
        "putChar",
        "green",
        "putShort",
        "SizeOf",
        "getLong",
        "toIndex",
        "short",
        "dst",
        ")",
        "getDouble",
        "length",
        "buf",
        "str",
        "0xff",
        "buffer",
        "-",
        "checkIndex",
        "putLong",
        "Float",
        "getChar",
        "offset",
        "limit",
        ",",
        "getShort",
        "endIndex",
        "len",
        "order",
        "[",
        "<=",
        "end",
        "*",
        "read",
        "byteCount",
        "this",
        "byteOffset",
        "newLength",
        "Memory",
        "mark",
        "DOUBLE",
        "pathOffset",
        "ensureCapacity",
        "slice",
        ".",
        "return",
        "char",
        "index",
        "+",
        "startPtr",
        "arr",
        "wrap",
        "toString",
        "=",
        "putInt",
        "(",
        "fill",
        "byteBuffer",
        "in",
        "Long",
        ">>",
        ";",
        "SHORT",
        "insert0",
        "0",
        "CHAR",
        "get",
        "start",
        "byteOrder",
        "src",
        "c",
        "ch",
        "}",
        "{",
        "beginIndex",
        "blue",
        "pathLen",
        "]",
        "subSequence",
        "LONG",
        "remaining",
        "peekShort",
        "backingArray",
        "&",
        "bufferPosition",
        "value",
        "count",
        "TYPE_SHIFT",
        "flags",
        "Double",
        "fd",
        "INT"
      ],
      "Syntactic Label": "C# Buffer Manipulation Methods and Operators",
      "Semantic Tags": [
        "Buffer Manipulation",
        "Data I/O",
        "Byte Manipulation",
        "Primitive Type Handling",
        "Memory Management"
      ],
      "Description": "The tokens represent a collection of methods and operators used for manipulating buffers (byte buffers, character buffers, etc.) in C#.  These methods are commonly used for data input/output operations, handling primitive data types, and managing memory.  The operators such as '+' and '-' are used for index calculations, while methods like 'put' and 'get' handle data insertion and retrieval.  The context shows various buffer types (ByteBuffer, CharBuffer, etc.) and their associated methods for reading, writing, and manipulating data within those buffers.  The SizeOf constants suggest memory management considerations.  The use of methods like ensureCapacity indicates dynamic memory allocation."
    }
  },
  {
    "c329": {
      "Unique tokens": [
        "compareAndSet",
        "getType",
        "toQueryString",
        "getConstructor",
        "getValueString",
        "toArray",
        "LT",
        "asList",
        "getBytes",
        "floatValue",
        "equalsIgnoreCase",
        "getValue",
        "Pattern",
        "toByteArray",
        "clone",
        "longValue",
        ")",
        "instance",
        "ord",
        "getNodeType",
        "length",
        "matcher",
        "toCharArray",
        "getSimpleName",
        "find",
        "isNaN",
        "toHexString",
        "entrySet",
        "serialize",
        "getDirectory",
        "getTagName",
        "EOF",
        "group",
        "compare2",
        "bytesEquals",
        "of",
        ">",
        "getKey",
        "toLowerCase",
        "getNodeName",
        "SimpleDateFormat",
        "substring",
        "[",
        "getName",
        "getIndex",
        "exists",
        "ENGLISH",
        "values",
        "stateNumber",
        "responseMap",
        "parseDouble",
        "name",
        "getErrorCode",
        "charSequence",
        "trim",
        "label",
        "emptyList",
        "size",
        "getClass",
        "class",
        "compare",
        "resolve",
        "getString",
        "parseFloat",
        "listAll",
        "newInstance",
        "getGeneration",
        "charAt",
        "remove",
        ".",
        "removeValue",
        "toUpperCase",
        "bytes",
        "line.separator",
        "TRUE",
        "intValue",
        "getMessageDigest",
        "cast",
        "split",
        "log",
        "Break",
        "setTimeZone",
        "Occur",
        "equals",
        "isInfinite",
        "currentTimeMillis",
        "matches",
        "startsWith",
        "toString",
        "field",
        "sources",
        "isEmpty",
        "getNextToken",
        "Entry",
        "encodeASCII",
        "replace",
        "next",
        "key",
        "putInt",
        "(",
        "getFirstChild",
        "forName",
        "state",
        "directory",
        "valueOf",
        "i",
        "lastIndexOf",
        "parseBoolean",
        "stringValue",
        "toAbsolutePath",
        "isValid",
        "unmodifiableList",
        "getText",
        ";",
        "JGitText",
        "getFileName",
        "getChars",
        "_string",
        "ROOT",
        "getParent",
        "Builder",
        "toBlocking",
        "signum",
        "getMessage",
        "rowIndex",
        "indexOf",
        "format",
        "get",
        "getRow",
        "Locale",
        "parseLong",
        "listIterator",
        "body",
        ":",
        "containsKey",
        "getNextSibling",
        "identityHashCode",
        "iterator",
        "func",
        "hasNext",
        "value",
        "getSheet",
        "contains",
        "getPath",
        "replaceAll",
        "String",
        "compareTo"
      ],
      "Syntactic Label": "Methods and Operators",
      "Semantic Tags": [
        "Object Manipulation",
        "String Manipulation",
        "Data Structures",
        "File System Operations",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# functionalities, including method calls (e.g., compareAndSet, getType, toQueryString), operators (e.g., ., >, <), data structure usage (e.g., Map, List, Set), file system operations (e.g., getDirectory, toAbsolutePath, exists), and exception handling (e.g., throw new IllegalArgumentException).  These tokens and their context sentences showcase common C# programming patterns, such as object-oriented programming, string manipulation, and resource management."
    }
  },
  {
    "c330": {
      "Unique tokens": [
        "hiknoengine",
        "/repos/[RepoNamespace]/[RepoName]/authorizations",
        "XSSF-style",
        "2018-07-12",
        "2020-01-17",
        "2019-06-25",
        "/repos/[RepoNamespace]/[RepoName]/syncTasks/[SyncTaskId]",
        "2017-07-20",
        "2016-06-03",
        "/repos/[RepoNamespace]",
        "/collections/[CollectionId]",
        "Domain-intl",
        "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]",
        "/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/status",
        "2017-12-18",
        "/v2/image/add",
        "/users/sourceAccount/[SourceAccountId]/repos",
        "/repos/[RepoNamespace]/[RepoName]/rules/[BuildRuleId]/build",
        "/v2/image/search",
        "simple-two-way-in-core",
        "/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/scan",
        "/search-delete",
        "2018-02-11",
        "/repos",
        "/repos/[RepoNamespace]/[RepoName]/tags",
        "2019-03-25",
        "/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/layers",
        "/repos/[RepoNamespace]/[RepoName]/webhooks",
        "2017-10-01",
        "2017-07-11",
        "HMAC-SHA1",
        "/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/manifest",
        "2018-01-29",
        "/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/cancel",
        "vipaegis",
        "2017-10-11",
        "visionai-poc",
        "/namespace/[Namespace]",
        "lubancloud",
        "2017-11-10",
        "2018-05-09",
        "2016-06-20",
        "/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/logs",
        "/customerbyphone",
        "2018-07-20",
        "2016-11-11",
        "/repos/[RepoNamespace]/[RepoName]",
        "/repos/[RepoNamespace]/[RepoName]/syncTasks",
        "/repos/[RepoNamespace]/[RepoName]/authorizations/[AuthorizeId]",
        "2020-04-08",
        "/namespace/[Namespace]/authorizations",
        "/users/sourceAccount/[SourceAccountId]/repos/[SourceRepoNamespace]/[SourceRepoName]/refs",
        "/repos/[RepoNamespace]/[RepoName]/rules/[BuildRuleId]",
        "/repos/[RepoNamespace]/[RepoName]/sourceRepo",
        "/repos/[RepoNamespace]/[RepoName]/build",
        "/users/sourceAccount/[SourceAccountId]",
        "/users/subAccount",
        "/namespace/[Namespace]/authorizations/[AuthorizeId]",
        "GetPhotosByMd5s",
        "industry-brain",
        "2019-12-11",
        "/customer"
      ],
      "Syntactic Label": "String Literals",
      "Semantic Tags": [
        "API Endpoint",
        "Versioning",
        "Date",
        "Service Name",
        "Authentication"
      ],
      "Description": "These strings represent API endpoints, version numbers, dates, service names, and an authentication method (HMAC-SHA1).  They are used to construct requests and responses in a RESTful API environment. The dates likely indicate API versioning or timestamps. The service names and endpoints are crucial for routing requests to the correct services."
    }
  },
  {
    "c331": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Function Definition",
        "AWS SDK",
        "API Calls"
      ],
      "Description": "The closing parenthesis ')' in the C# code snippets marks the end of the parameter list in method declarations.  These methods appear to be part of an AWS SDK, handling various API calls. The semantic significance lies in defining the input parameters for each API request function."
    }
  },
  {
    "c332": {
      "Unique tokens": [
        "f",
        "EQUAL",
        "df",
        "version",
        "b",
        "Math",
        "++",
        "vs",
        "?",
        "LT",
        "describe",
        "Collections",
        "<",
        "BloomFilteredFieldsConsumer",
        "long",
        "hash",
        "GE",
        "else",
        "old",
        "clone",
        "break",
        "bsrs",
        ")",
        "ord",
        "int",
        "hunks",
        "buf",
        "str",
        "cell",
        "find",
        "org",
        "entrySet",
        "byNumber",
        "Integer",
        "otherCommit",
        "result",
        "-",
        "oldValue",
        "Float",
        "if",
        "GT",
        "OR",
        "null",
        "LazyAreaEval",
        "try",
        "q",
        "sb",
        "IOUtils",
        "stream",
        "default",
        ">",
        "LE",
        "len",
        "DONE",
        "RevTag",
        "ALL",
        "[",
        "<=",
        "Arrays",
        "exists",
        "parents",
        "read",
        "V",
        "==",
        "builder",
        "added",
        "false",
        "MatchNoDocsQuery",
        "Object",
        "retval",
        "NE",
        "this",
        "symbol",
        "ref",
        "array",
        "getQuery",
        "Result",
        "used",
        "s",
        "true",
        "emptyList",
        "t",
        "W",
        "1",
        "size",
        "termState",
        "synchronized",
        "for",
        "p",
        "boolean",
        "!",
        "LittleEndian",
        "getChild",
        ".",
        "return",
        "char",
        "throw",
        "returnStates",
        "executed",
        "pm",
        "bytes",
        "new",
        "SynchronizedList",
        "equals",
        "v",
        "ret",
        "toString",
        "field",
        "=",
        "final",
        "while",
        "evaluate",
        "Boolean",
        "next",
        "rval",
        "getSpanQuery",
        "isRemoved",
        "assert",
        "TreeMap",
        "(",
        "o",
        "directory",
        "state",
        "diff",
        "catch",
        "isValid",
        "n",
        "message",
        "!=",
        ";",
        "\"",
        "AND",
        "switch",
        "path",
        "E",
        "res",
        "finally",
        "input",
        "RawParseUtils",
        "0",
        "cmpResult",
        "cmp",
        "r",
        "out",
        "c",
        "_mode",
        "System",
        "}",
        "case",
        "'",
        "filter",
        "{",
        "current",
        "e",
        "_firstSheetIndex",
        ":",
        "kid",
        "records",
        "entry",
        "value",
        "count",
        "m",
        "logger",
        "Double",
        "a",
        "super",
        "String",
        "other"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Object Manipulation",
        "Data Structures",
        "Input/Output",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, for, while, switch, try, catch, finally), operators (+, -, *, /, %, =, ==, !=, <, >, <=, >=, &&, ||, !), data types (int, long, float, double, boolean, char, String, byte[], Object), identifiers (method names, variable names, class names), and symbols (parentheses, brackets, braces, dot operator).  These elements are fundamental to building C# programs, enabling control flow, object manipulation, data structure usage, input/output operations, and exception handling. The sentences show these tokens in action within various methods, demonstrating their roles in constructing and executing C# code."
    }
  },
  {
    "c333": {
      "Unique tokens": [
        "final",
        "(",
        ")"
      ],
      "Syntactic Label": "Constructor Parameters",
      "Semantic Tags": [
        "Object Initialization",
        "Constructor Injection",
        "Dependency Injection",
        "Parameter Passing",
        "Class Instantiation"
      ],
      "Description": "The tokens '(' and ')' represent the opening and closing parentheses of constructor parameter lists in C#.  The keyword 'final' is not used in C# constructors; it's a Java keyword. These constructors are used to initialize objects of different classes, often using constructor injection or dependency injection to pass dependencies as parameters."
    }
  },
  {
    "c334": {
      "Unique tokens": [
        "\"",
        "[/REFMODE]",
        ".",
        "sb",
        "res",
        "StringBuilder",
        "[/1904]",
        "b",
        "[/FNGROUPCOUNT]",
        "[/OLD",
        "r",
        "[/DEFAULTCOLWIDTH]",
        "nl",
        "System",
        "}",
        "[/HIDEOBJ]",
        "text",
        "[/VCENTER]",
        "builder",
        "toString",
        "=",
        "final",
        "getProperty",
        ")",
        "append",
        "[/CALCMODE]",
        "buf",
        "[/RECALCID]",
        "s",
        "(",
        "[/ITERATION]",
        "buffer",
        "\\n",
        "HEADER]",
        "w",
        "String",
        "[/CODEPAGE]",
        ";"
      ],
      "Syntactic Label": "StringBuilder Object and its methods, String object, Operators, and other tokens",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object-Oriented Programming",
        "String Formatting",
        "Data Structures"
      ],
      "Description": "The tokens represent core C# language features used for string manipulation.  `StringBuilder` is used for efficient string concatenation, demonstrated by its frequent use with the `.append()` method.  The `toString()` method converts the `StringBuilder` object to a String.  Other tokens like `=` (Assignment Operator), `.` (Dot Operator), `()` (Parentheses), and `\\n` (newline character) are fundamental to C# syntax and are used for variable assignment, method calls, and string formatting. The overall purpose is to create formatted string representations of data, likely for logging, display, or data serialization."
    }
  },
  {
    "c335": {
      "Unique tokens": [
        "executeDeleteTrafficMirrorSession",
        "executeDeleteTagsForDomain",
        "executeUpdateDocumentVersion",
        "executeDescribeInterconnectLoa",
        "executeDeleteNatGateway",
        "executeUpdateClusterConfig",
        "executeSetTypeDefaultVersion",
        "executeUpdateMatchmakingConfiguration",
        "executeUpdateSkillGroup",
        "executeUpdateApiMapping",
        "executeDescribeCacheParameters",
        "executeDeleteRealtimeEndpoint",
        "executeUpdateComponentConfiguration",
        "executeDeleteReceiptRule",
        "executeDescribeNodegroup",
        "executeDeleteNotificationSubscription",
        "executeGetFieldLevelEncryptionProfileConfig",
        "executeDeleteBaiduChannel",
        "executeUpdateUserProfile",
        "executeUpdateRuleMetadata",
        "executeUpdateDetectorVersionStatus",
        "executeDeleteEntityRecognizer",
        "executeDeleteResolverEndpoint",
        "executeUpdateRoomMembership",
        "executeDeleteProjectVersion",
        "executeDescribeApplicationSnapshot",
        "executeDeleteVpcLink",
        "executeCreateBatchInferenceJob",
        "executeUpdateUserHierarchy",
        "executeDeleteTaskSet",
        "executeDeleteConfigurationProfile",
        "executeDeleteCacheSubnetGroup",
        "executeUpdateWorkteam",
        "executeUpdateStackSet",
        "executeUpdateGatewayResponse",
        "executeDeleteJourney",
        "executeUpdateVoiceConnectorGroup",
        "executeCreateHyperParameterTuningJob",
        "executeUpdateStreamingDistribution",
        "executeDeleteMessageBatch",
        "executeCreateCompilationJob",
        "executeUpdateEmailTemplate",
        "executeDeleteApnsSandboxChannel",
        "executeUpdateDashboardPublishedVersion",
        "executeDeleteIPSet",
        "executeDeleteStreamProcessor",
        "executeDeleteFieldLevelEncryptionConfig",
        "executeUpdateBatchPrediction",
        "executeAttachLoadBalancerTlsCertificate",
        "executeDescribeFlowDefinition",
        "executeDeleteLoadBalancerPolicy",
        "executeDeleteFargateProfile",
        "executeDeleteVpcPeeringConnection",
        "executeDescribeFileSystemPolicy",
        "executeDeleteInstanceSnapshot",
        "executeDescribeEventBus",
        "executeDeleteSkillGroup",
        "executeDeleteDBClusterEndpoint",
        "executeDeleteTerminology",
        "executeDescribeImageAttribute",
        "executeDeleteSnapshotCopyGrant",
        "executeDeleteScheduledAction",
        "executeDeletePlacementGroup",
        "executeUpdateClientCertificate",
        "executeDescribeHumanLoop",
        "executeDeleteRecommenderConfiguration",
        "executeDeleteApplicationOutput",
        "executeDeleteGitHubAccountToken",
        "executeDeleteTrafficMirrorFilter",
        "executeDeleteEmailChannel",
        "executeCreateTransformJob",
        "executeDeleteVpcPeeringAuthorization",
        "executeUpdateBusinessReportSchedule",
        "executeDeleteReusableDelegationSet",
        "executeDescribeIdFormat",
        "executeUpdateApnsVoipSandboxChannel",
        "executeUpdateTaskSet",
        "executeDeleteUserProfile",
        "executeDeleteDetectorVersion",
        "executeDeleteDirectoryConfig",
        "executeDeleteLoadBalancerTlsCertificate",
        "executeDeleteClientCertificate",
        "executeUpdateTrial",
        "executeUpdateIntegrationResponse",
        "executeDescribeAuditStreamConfiguration",
        "executeDescribeLifecycleConfiguration",
        "executeDeleteEventTracker",
        "executeDeleteIpGroup",
        "executeUpdateDomainContact",
        "executeDescribeWorkspacesConnectionStatus",
        "executeDeleteLocalGatewayRoute",
        "executeDeleteDirectConnectGatewayAssociation",
        "executeDeleteDBProxy",
        "executeDescribeVpcClassicLink",
        "executeDeleteNetworkProfile",
        "executeDescribeConfigurationRevision",
        "executeDeleteClusterParameterGroup",
        "executeDeleteConferenceProvider",
        "executeDeleteVPCAssociationAuthorization",
        "executeUpdateHITReviewStatus",
        "executeDeleteApplicationVpcConfiguration",
        "executeUpdateUserPhoneConfig",
        "executeUpdateJourney",
        "executeDeleteInsightRules",
        "executeDescribeAlarmsForMetric",
        "executeDeleteWorkteam",
        "executeDescribeOrganizationConfiguration",
        "executeDeleteMLModel",
        "executeDeleteNotificationConfiguration",
        "executeDescribeReceiptRule",
        "executeDeleteAdmChannel",
        "executeDeleteDirectConnectGatewayAssociationProposal",
        "executeDeleteSnapshotSchedule",
        "executeUpdateModelVersion",
        "executeDeleteBasePathMapping",
        "executeUpdateNetworkProfile",
        "executeDeleteTrafficMirrorFilterRule",
        "executeDeleteEventStream",
        "executeDeleteCacheCluster",
        "executeDescribeWorkforce",
        "executeGetExportJob",
        "executeDeleteMonitoringSchedule",
        "executeDeleteMountTarget",
        "executeDeleteStreamingDistribution",
        "executeDeleteTrialComponent",
        "executeExportJournalToS3",
        "executeUpdateVoiceChannel",
        "executeDeleteRouteRequestParameter",
        "executeDescribeStreamSummary",
        "executeDeleteQualificationType",
        "executeUpdateDomainEntry",
        "executeUpdateOrganizationConfiguration",
        "executeDeleteGameServerGroup",
        "executeDeleteGameSessionQueue",
        "executeDeleteTrafficPolicyInstance",
        "executeUpdateCodeRepository",
        "executeDeleteAssessmentTarget",
        "executeUpdateSignalingChannel",
        "executeUpdateUserRoutingProfile",
        "executeDeleteVoiceChannel",
        "executeDeleteVpnConnection",
        "executeDescribeIdentityProviderConfiguration",
        "executeDescribeStackSet",
        "executeDeleteApplicationInputProcessingConfiguration",
        "executeDescribeTrialComponent",
        "executeDeleteModelPackage",
        "executeDeleteCodeRepository",
        "executeDescribePublishingDestination",
        "executeUpdateDomainMetadata",
        "executeDeleteConfigurationSetEventDestination",
        "executeDeleteDeploymentConfig",
        "executeUpdateRuntimeConfiguration",
        "executeDescribeDocumentClassificationJob",
        "executeDescribeAutoMLJob",
        "executeDescribeKeyPhrasesDetectionJob",
        "executeUpdateApnsVoipChannel",
        "executeUpdateProfilingGroup",
        "executeGetUserSettings",
        "executeUpdateMLModel",
        "executeDeleteMethodResponse",
        "executeGetAccountBalance",
        "executeDeleteProfilingGroup",
        "executeDeleteMeeting",
        "executeUpdateFindingsFeedback",
        "executeUpdateRestApi",
        "executeDeleteUsagePlanKey",
        "executeDeleteNetworkAcl",
        "executeUpdateTrafficPolicyInstance",
        "executeUpdateAdmChannel",
        "executeDescribeTemplateAlias",
        "executeDescribeDatasetGroup",
        "executeGetDataEndpoint",
        "executeDescribeElasticGpus",
        "executeDeleteIAMPolicyAssignment",
        "executeUpdateGatewayGroup",
        "executeDeleteAccessPoint",
        "executeDeleteEmailTemplate",
        "executeDeleteEventSubscription",
        "executeDescribeHumanTaskUi",
        "executeDeleteSkillAuthorization",
        "executeDescribeUserProfile",
        "executeDescribeTaskDefinition",
        "executeUpdateProxySession",
        "executeDeleteIndexField",
        "executeDeleteAttendee",
        "executeDescribeBatchInferenceJob",
        "executeGetImportJob",
        "executeUpdateRouteResponse",
        "executeDeleteUsagePlan",
        "executeUpdateEmailChannel",
        "executeDeleteRestApi",
        "executeDeleteIntegrationResponse",
        "executeListJobsByStatus",
        "executeDeleteUsageReportSubscription",
        "executeDeletePartnerEventSource",
        "executeDeleteTrafficMirrorTarget",
        "executeDeleteCustomMetadata",
        "executeCreateReusableDelegationSet",
        "executeDescribeGameServer",
        "executeDeleteProxySession",
        "executeDeleteContactMethod",
        "executeDescribeTrial",
        "executeDeleteDeploymentGroup",
        "executeCreateLabelingJob",
        "executeDescribeLoggingStatus",
        "executeDeleteAnomalyDetector",
        "executeDescribeSolutionVersion",
        "executeUpdateLoadBalancerAttribute",
        "executeDeleteDiskSnapshot",
        "executeDescribeIdentityIdFormat",
        "executeDescribeHyperParameterTuningJob",
        "executeUpdateGameServer",
        "executeDeleteFlowDefinition",
        "executeUpdateNodegroupVersion",
        "executeDescribeNetworkInterfaceAttribute",
        "executeDeleteVoiceConnectorTermination",
        "executeDescribeTextTranslationJob",
        "executeDeleteDBSecurityGroup",
        "executeDeleteGatewayGroup",
        "executeDeleteInternetGateway",
        "executeUpdateIPSet",
        "executeUpdateMethodResponse",
        "executeUpdateDocumentationPart",
        "executeUpdateJourneyState",
        "executeDeleteAccountSetting",
        "executeUpdateUsagePlan",
        "executeDescribeFargateProfile",
        "executeListRuleNamesByTarget",
        "executeDeleteDocumentClassifier",
        "executeUpdateLifecyclePolicy",
        "executeUpdateApnsSandboxChannel",
        "executeUpdateDirectoryConfig",
        "executeDeleteRuleVersion",
        "executeDeleteApiMapping",
        "executeDescribeConnectionsOnInterconnect",
        "executeDeleteBusinessReportSchedule",
        "executeDeleteEventsConfiguration",
        "executeUpdateWorkGroup",
        "executeDeleteCorsConfiguration",
        "executeDeleteAssessmentTemplate",
        "executeDeleteHsmClientCertificate",
        "executeDeleteNodegroup",
        "executeDescribeProcessingJob",
        "executeDescribeLabelingJob",
        "executeDeleteInstallationMedia",
        "executeDeleteInvitations",
        "executeChangeMessageVisibilityBatch",
        "executeUpdateTrafficPolicyComment",
        "executeDescribeObservation",
        "executeUpdateTemplateActiveVersion",
        "executeUpdateConferenceProvider",
        "executeGetManagedScalingPolicy",
        "executeDeleteRequestValidator",
        "executeDeleteFieldLevelEncryptionProfile",
        "executeDescribeUserHierarchyGroup",
        "executeUpdateDirectConnectGatewayAssociation",
        "executeCreateTrainingJob",
        "executeListTargetsByRule",
        "executeDeleteSuppressedDestination",
        "executeDescribeDocumentClassifier",
        "executeDeleteVpnGateway",
        "executeUpdateMailboxQuota",
        "executeDeleteEventBus",
        "executeDeleteMatchmakingConfiguration",
        "executeDescribeDhcpOptions",
        "executeDeleteReceiptRuleSet",
        "executeDescribeInstanceAttribute",
        "executeUpdateThreatIntelSet",
        "executeUpdateTemplateAlias",
        "executeUpdateDeploymentStrategy",
        "executeUpdateVoiceTemplate",
        "executeDescribeSentimentDetectionJob",
        "executeDescribeJournalS3Export",
        "executeUpdateVpcLink",
        "executeDescribeIdentityUsage",
        "executeDeletePublishingDestination",
        "executePutIntegrationResponse",
        "executeListTagsForDomain",
        "executeDeleteIdentityPolicy",
        "executeDescribeInstallationMedia",
        "executeUpdateGameSessionQueue",
        "executeListCandidatesForAutoMLJob",
        "executeDescribeAggregateIdFormat",
        "executeDeleteAssessmentRun",
        "executeDeleteVaultAccessPolicy",
        "executeGetBlockPublicAccessConfiguration",
        "executeUpdateTypedLinkFacet",
        "changeMessageVisibilityBatch",
        "executeUpdateLogPattern",
        "executeUpdateEndpointsBatch",
        "executeDescribeEndpointConfig",
        "executeDeleteHumanLoop",
        "executeDeleteTransitGatewayRoute",
        "executeDescribeIngestion",
        "executeDeleteRepositoryPolicy",
        "executeDeleteVoiceConnectorTerminationCredentials",
        "executeUpdateShardCount",
        "executeDescribeComponentConfiguration",
        "executeUpdateAuditStreamConfiguration",
        "executeDescribeSpotDatafeedSubscription",
        "executeDeleteSmsTemplate",
        "executeDescribeEntitiesDetectionJob",
        "executeDeleteApnsVoipSandboxChannel",
        "executeDeleteWorkerBlock",
        "executeDeleteDBSubnetGroup",
        "executeDescribeSecurityConfiguration",
        "executeDeleteVoiceConnectorGroup",
        "executeDeleteLaunchTemplate",
        "executeUpdateFieldLevelEncryptionConfig",
        "executeDeleteCustomerGateway",
        "executeGetAccountLimit",
        "executeDescribePartnerEventSource",
        "executeDeleteVoiceTemplate",
        "executeDeleteDedicatedIpPool",
        "executeDeleteSpotDatafeedSubscription",
        "executeCreateAutoMLJob",
        "executeDeleteFileSystemPolicy",
        "executeUpdateApnsChannel",
        "executeDeleteGroupMembership",
        "executeDeleteAutoScalingGroup",
        "executeDescribeTransformJob",
        "executeUpdateDocumentationVersion",
        "executeDescribeStackInstance",
        "executeDescribeDevicePolicyConfiguration",
        "executeGetInstanceSnapshot",
        "executeDeleteImageBuilder",
        "executeDeleteNotebookInstanceLifecycleConfig",
        "executeUpdateTerminationProtection",
        "executeDeleteNetworkInterfacePermission",
        "executeDeleteGcmChannel",
        "executeDeleteRoomMembership",
        "executeDeleteWorkGroup",
        "executeDeleteSecurityConfiguration",
        "executeDeleteEmailIdentity",
        "executeDescribeStackResource",
        "executeDeleteVoiceConnectorProxy",
        "executeDescribeSubscribedWorkteam",
        "executeDeleteScalingPolicy",
        "executeDeleteCacheSecurityGroup",
        "executeDescribeSnapshotAttribute",
        "executeDescribeWorkteam",
        "executeDeleteClientVpnRoute",
        "executeDeleteQueryLoggingConfig",
        "executeDeleteTransitGatewayPeeringAttachment",
        "executeDeleteRouteSettings",
        "executeCreateThreatIntelSet",
        "executeGetFieldLevelEncryption",
        "executeDescribeVolumeAttribute",
        "executeDescribeConnectionLoa",
        "executeDeleteRelationalDatabaseSnapshot",
        "executeDescribeWebsiteCertificateAuthority",
        "executeDeleteTemplateAlias",
        "executeUpdateSmsChannel",
        "executeDeleteFpgaImage",
        "executeDeleteDBParameterGroup",
        "executeUpdateExpirationForHIT",
        "executeGetSpeechSynthesisTask",
        "executeDescribeWorkflowType",
        "executeDeleteCustomVerificationEmailTemplate",
        "executeDeleteAutoSnapshot",
        "executeDescribeEntityRecognizer",
        "executeUpdateContainerAgent",
        "executeDeleteDatasetGroup",
        "executeGetObjectAttributes",
        "executeDescribeRuntimeConfiguration",
        "executeGetFieldLevelEncryptionProfile",
        "executeDeleteTypedLinkFacet",
        "executeDeleteLaunchConfiguration",
        "executeDescribeFeatureTransformation",
        "executeDescribeDatasetImportJob",
        "executeUpdateTrialComponent",
        "executeDeleteTrial",
        "executeUpdateSmsTemplate",
        "executeDeleteClusterSnapshot",
        "executeDescribeEventTracker",
        "executeUpdateDeploymentGroup",
        "executeDescribeVpcAttribute",
        "executeUpdateTagsForDomain",
        "executeDeleteRoomSkillParameter",
        "executeUpdatePushTemplate",
        "executeDeleteBatchPrediction",
        "executeDescribeInstanceStatus",
        "executeDeleteClusterSecurityGroup",
        "executeDeleteGatewayResponse",
        "executeCreateInstanceExportTask",
        "executeDeleteApnsChannel",
        "executeDeleteThreatIntelSet",
        "executeDeleteMatchmakingRuleSet",
        "executeUpdatePublishingDestination",
        "executeDescribeLoa",
        "executeListJobsByPipeline",
        "executeUpdatePipelineStatus",
        "executeDeleteVoiceConnectorStreamingConfiguration",
        "executeDescribeIdentityPoolUsage",
        "executeUpdateDevicePolicyConfiguration",
        "executeUpdateMonitoringSchedule",
        "executeDescribeTableRestoreStatus",
        "executeDeleteReceiptFilter",
        "executeDeleteDeploymentStrategy",
        "executeDeleteEndpointConfig",
        "executeUpdateClusterVersion",
        "executeUpdateUserIdentityInfo",
        "executeDescribeStreamConsumer",
        "executeGetInstanceAccess",
        "executeGetAccountSendingEnabled",
        "executeUpdateGcmChannel",
        "executeGetDataRetrievalPolicy",
        "executeDeleteBGPPeer",
        "executeUpdateRequestValidator",
        "executeDescribeMonitoringSchedule",
        "executeDescribeActivityType"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "AWS SDK",
        "Cloud Management",
        "Resource Management",
        "API Interaction",
        "AWS Service Integration"
      ],
      "Description": "These tokens represent methods within an AWS SDK for interacting with various AWS services.  They are semantically significant as they directly map to actions performed on AWS resources, enabling programmatic management of cloud infrastructure and services. The methods follow a consistent naming pattern (execute... ) indicating their role in executing commands against the AWS API."
    }
  },
  {
    "c336": {
      "Unique tokens": [
        "SpanQuery",
        "ReadOnlyFloatArrayBuffer",
        "CharsRefBuilder",
        "EvaluationException",
        "NumericPayloadTokenFilter",
        "ReadOnlyLongArrayBuffer",
        "TermQuery",
        "CJKBigramFilter",
        "ObjectStream",
        "HSSFConditionalFormattingRule",
        "NGramTokenFilter",
        "BoundedMap",
        "ColumnVector",
        "CommitCommand",
        "ReflogCommand",
        "CanonicalTreeParser",
        "FollowFilter",
        "BooleanQuery",
        "clone",
        "PagedBytesDataInput",
        "sendAccessibilityEvent",
        "SubmoduleStatusCommand",
        "DelimitedPayloadTokenFilter",
        "asDoubleBuffer",
        "getQueryConfigHandler",
        "ListTagCommand",
        "IndexChangedListener",
        "HunspellStemFilter",
        "unmappableCharacterAction",
        "QueryParserConfig",
        "StempelFilter",
        "ToParentBlockJoinQuery",
        "ReverseLinkIterator",
        "FrenchLightStemFilter",
        "getOrCreateLinkTable",
        "HSSFFormulaEvaluator",
        "KStemFilter",
        "SerialCounter",
        "BootstrapActionConfig",
        "_evaluator",
        "ExpandedDouble",
        "AbstractCellRangeDataSource",
        "NamePtg",
        "PushCommand",
        "NorwegianLightStemFilter",
        "LimitTokenCountFilter",
        "IndicNormalizationFilter",
        "<StandardQueryParser",
        "DefaultProfile",
        "PersianNormalizationFilter",
        "IndexInput",
        "getNameXPtg",
        "UnescapedCharSequence",
        "asIntBuffer",
        "FlushInfo",
        "HSSFSheet",
        "NorwegianMinimalStemFilter",
        "LexerConfigHashSet",
        "PullCommand",
        "CalculatorEditable",
        "ScandinavianNormalizationFilter",
        "ICUFoldingFilter",
        "DVALRecord",
        "JGitText",
        "RemoveNoteCommand",
        "asCharBuffer",
        "SubmoduleUpdateCommand",
        "BrazilianStemFilter",
        "INDEX_DIFF_FILTER",
        "SheetRefEvaluator",
        "UTF8TaxonomyWriterCache",
        "KeywordRepeatFilter",
        "BytesRef",
        "JapaneseKatakanaStemFilter",
        "getTrackingRefUpdates",
        "ASCIIFoldingFilter",
        "SpanTermQuery",
        "MappingCharFilter",
        "HSSFClientAnchor",
        "ICUNormalizer2Filter",
        "newMerger",
        "StemmerOverrideFilter",
        "fromNumericCellRange",
        "HSSFDataFormat",
        "FSTCompiler",
        "findAllTokenNodes",
        "FinnishLightStemFilter",
        "OneSide",
        "LazyRefEval",
        "TokenOffsetPayloadTokenFilter",
        "BlendedTermQuery",
        "ReadOnlyIntArrayBuffer",
        "RoaringDocIdSet",
        "BEARERTOKEN",
        "LexerDFASerializer",
        "WriteThroughEntry",
        "ListNotesCommand",
        "createCachedEmptyValue",
        "RowVector",
        "newInserter",
        "NotRevFilter",
        "EscherGraphics",
        "GermanLightStemFilter",
        "LinearRegressionFunction",
        "DeleteTagCommand",
        "asFloatBuffer",
        "StashDropCommand",
        "createStubWorkbook",
        "BulgarianStemFilter",
        "useTransparentBoundsImpl",
        "NoWorkTreeException",
        "MergeCommand",
        "CowIterator",
        "FieldAndTerm",
        "implCanEncode",
        "HSSFRichTextString",
        "DataOutput",
        "SynonymQuery",
        "SheetVector",
        "StashListCommand",
        "ListBranchCommand",
        "getSpecificBuiltinRecord",
        "RefsChangedListener",
        "IrishLowerCaseFilter",
        "ResetCommand",
        "ExpressionRescorer",
        ".",
        "PagedBytesDataOutput",
        "XmlPullParser",
        "getSentenceInstance",
        "HyphenationCompoundWordTokenFilter",
        "ReadOnlyShortArrayBuffer",
        "TypeAsPayloadTokenFilter",
        "EdgeNGramTokenFilter",
        "NIOFSIndexInput",
        "DistanceValueSource",
        "withScriptBootstrapAction",
        "RmCommand",
        "asShortBuffer",
        "CommonGramsFilter",
        "SrndBooleanQuery",
        "InternalSheet",
        "HSSFDataValidation",
        "descendingSet",
        "Analyzer",
        "createFieldFragList",
        "BatchRefUpdate",
        "getUDFFinder",
        "RawParseUtils",
        "PatternCaptureGroupTokenFilter",
        "r",
        "NullProgressMonitor",
        "BeiderMorseFilter",
        "HSSFHyperlink",
        "serializer",
        "LittleEndianByteArrayOutputStream",
        "ReadOnlyHeapByteBuffer",
        "ReadWriteHeapByteBuffer",
        "PorterStemFilter",
        "AlibabaCloudCredentials",
        "AttrPtg",
        "DeleteBranchCommand",
        "getEvalForCell",
        "CharSequenceAdapter",
        "<prefixWildcard",
        "IndexFileNames",
        "JsonPolicyWriter",
        "SubmoduleAddCommand",
        "<",
        "ReadOnlyCharArrayBuffer",
        "JapaneseIterationMarkCharFilter",
        "SpanNearQuery",
        "RawCharSequence",
        "PortugueseMinimalStemFilter",
        "HungarianLightStemFilter",
        "MatchResultImpl",
        "GalicianStemFilter",
        "TypeTokenFilter",
        "LowerCaseFilter",
        "IntToByteBufferAdapter",
        "FormulaShifter",
        "PhoneticFilter",
        "EscherChildAnchorRecord",
        "CellValue",
        "DictionaryCompoundWordTokenFilter",
        "RamUsageEstimator",
        "GreekStemFilter",
        "DoubleToByteBufferAdapter",
        "SupBookRecord",
        "CloseGuard",
        "LimitTokenPositionFilter",
        "MLTConfig",
        "InitCommand",
        ">",
        "asLongBuffer",
        "JapaneseBaseFormFilter",
        "CodepointCountFilter",
        "MERGE_BASE",
        "ICUNormalizer2CharFilter",
        "malformedInputAction",
        "HSSFEvaluationSheet",
        "ScandinavianFoldingFilter",
        "TokenStream",
        "CharToByteBufferAdapter",
        "ErrorEval",
        "PatternReplaceCharFilter",
        "FrenchMinimalStemFilter",
        "EnglishMinimalStemFilter",
        "SwedishLightStemFilter",
        "CherryPickCommand",
        "CloneCommand",
        "SubmoduleInitCommand",
        "GermanNormalizationFilter",
        "RevertCommand",
        "AtomicCounter",
        "SmallStream",
        "SinkTokenStream",
        "FileKey",
        "WindowCursor",
        "CharArrayIterator",
        "SoraniNormalizationFilter",
        "createNumericConstraint",
        "NotTreeFilter",
        "ReadWriteFloatArrayBuffer",
        "RenameBranchCommand",
        "SimilarityConfig",
        "DocumentsWriterFlushControl",
        "ReadWriteDoubleArrayBuffer",
        "LongToByteBufferAdapter",
        "MutableFPNumber",
        "FloatToByteBufferAdapter",
        "FormulaSpecialCachedValue",
        "HindiStemFilter",
        "ConfigChangedListener",
        "buildMap",
        "RevCommit",
        "StatusCommand",
        "GreekLowerCaseFilter",
        "MimeStreamParser",
        "ObjectReaderSource",
        "CompositeReaderContext",
        "PatternSearch",
        "ReadOnlyDoubleArrayBuffer",
        "HashEntry",
        "getDataInput",
        "LittleEndianOutput",
        "DataSetObserver",
        "ExternSheetNameResolver",
        "nextEntry",
        "CheckoutCommand",
        "useAnchoringBoundsImpl",
        "ArabicStemFilter",
        "ObjectDirectoryInserter",
        "WindowsIndexInput",
        "PhraseWildcardQuery",
        "FormulaRenderer",
        "RoaSignatureComposer",
        "getBorderFormatting",
        "CellRangeAddress",
        "ContinuableRecordOutput",
        "BlameCommand",
        "ClassicFilter",
        "getWordInstance",
        ")",
        "DiffCommand",
        "CommonToken",
        "PrecedenceQueryNodeProcessorPipeline",
        "IndonesianStemFilter",
        "toFormulaString",
        "SkipRevFilter",
        "PatternReplaceFilter",
        "VocabularyImpl",
        "NumberEval",
        "asFormulaString",
        "JapaneseReadingFormFilter",
        "HSSFCell",
        "SheetRangeEvaluator",
        "ClosedInputStream",
        "CharsRef",
        "LengthFilter",
        "createArray",
        "DrillDownQuery",
        "findAllRuleNodes",
        "DVConstraint",
        "ApostropheFilter",
        "SubmoduleSyncCommand",
        "EmptyTreeIterator",
        "SpanishLightStemFilter",
        "NumberToTextConverter",
        "ItalianLightStemFilter",
        "GermanStemFilter",
        "LsRemoteCommand",
        "RebaseCommand",
        "FilteringIterator",
        "<matchAllDocs",
        "TagCommand",
        "CzechStemFilter",
        "AddCommand",
        "ReadWriteIntArrayBuffer",
        "AddNoteCommand",
        "ShowNoteCommand",
        "RpcSignatureComposer",
        "ICUTransformFilter",
        "SingletonPredictionContext",
        "IndexCommit",
        "(",
        "ReadWriteCharArrayBuffer",
        "TurkishLowerCaseFilter",
        "ArabicNormalizationFilter",
        "CJKWidthFilter",
        "ReadWriteLongArrayBuffer",
        "MaxCountRevFilter",
        "HindiNormalizationFilter",
        "getSheetEvaluator",
        "CredentialsBackupCompatibilityAdaptor",
        "Inflater",
        "HSSFEvaluationCell",
        "SharedValueManager",
        "MyIterator",
        "AbstractContentHandler",
        "HSSFPalette",
        "NormalisedDecimal",
        "CellRangeAddress8Bit",
        "ValueFiller",
        "UpperCaseFilter",
        "PrefixCodedTerms",
        "ResolveMerger",
        "immutableEntry",
        "CustomAnalyzerConfig",
        "RKUtil",
        "CapitalizationFilter",
        "TruncateTokenFilter",
        "setContentHandler",
        "CreateBranchCommand",
        "ShortToByteBufferAdapter",
        "DFASerializer"
      ],
      "Syntactic Label": "Object Creation and Method Invocation",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Filter Creation",
        "Command Creation",
        "Token Stream Manipulation"
      ],
      "Description": "The tokens represent various C# objects, primarily related to Lucene query parsing, Git commands, and token stream manipulation.  Many tokens are class names used to create objects (e.g., PullCommand, HSSFFormulaEvaluator, TokenOffsetPayloadTokenFilter). The '.' operator is implicitly used for method invocations on these objects (e.g., create(), clone(), pull()). The overall code snippets demonstrate object instantiation and the use of methods to perform actions related to these objects."
    }
  },
  {
    "c337": {
      "Unique tokens": [
        "\"",
        "40",
        "offset",
        "limit",
        "null",
        ",",
        "3",
        "try",
        ".",
        "throw",
        "charCount",
        "--",
        "w2",
        "bytes",
        "now",
        "new",
        "readFormatOptions",
        "field_3_last_row_add1",
        "6",
        "0",
        "+",
        "_unused",
        "rowIndex",
        "++",
        "2",
        "?",
        "out",
        "if",
        "}",
        "setFormula1",
        "'",
        "System",
        "{",
        "0x02",
        "long",
        "==",
        "compressed",
        "firstCol",
        "w4",
        "byte",
        "setFormula2",
        "bufferSize",
        "]",
        "=",
        ":",
        "final",
        "charType",
        "32",
        ")",
        "lastCol",
        "0x01",
        "161",
        "4",
        "&",
        "w5",
        "int",
        "true",
        "(",
        "upto",
        "1",
        "field_4_zero",
        "w3",
        "reports",
        "in",
        "columnIndex",
        "for",
        "-",
        "8",
        "lastRow",
        "pos",
        "/",
        "w1",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Data Structures",
        "Exception Handling",
        "File I/O",
        "Object Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords for control flow (if, for, while, try, throw), operators for arithmetic and comparison, data structure elements (arrays, lists, etc.), exception handling mechanisms, file I/O operations, and object manipulation (method calls using the dot operator). The semantic tags reflect the diverse functionalities present in the code snippets."
    }
  },
  {
    "c338": {
      "Unique tokens": [
        "field_4_shapeid",
        "getObjectID",
        "iObjectContext",
        "implememts",
        "to",
        "byteToHex",
        ".link2",
        "b",
        "~",
        "getTopColGutter",
        ".iObjectKind",
        "[/LbsDropData]",
        "field_7_comment_text",
        "?",
        ".type",
        "[accept]:",
        "/>",
        ".firstcol",
        "byteOrder:",
        ".textMark=",
        "matchelements=",
        "Stemmer",
        "getLastColumn",
        "[/NAMECMT]",
        ".width",
        "append",
        ")",
        "length",
        "Ptg",
        "[/COLINFO]",
        "flag",
        "_cLines",
        "toHexString",
        "color=",
        "buffer",
        "getAnchorId",
        ".build",
        "getVerifier",
        "nextFinalOutput",
        "color:",
        "volatile",
        "reserved",
        "from",
        "getDeltaDepth",
        "serializer:",
        "</any>",
        "crColInput",
        "if",
        "[/ENDOBJECT]",
        "formatReferenceAsString",
        "null",
        ",",
        "minMergeSize=",
        "getDeltaBaseId",
        "sb",
        "unused",
        "args",
        "getOptions",
        "encryptionInfo",
        "Unable",
        "field_3_type",
        "[",
        "References",
        "getRequiredVersion",
        "\\t",
        "getName",
        "*",
        "getNumUniqueStrings",
        ".rowfrom",
        "Upgrading",
        "field_5_sheetname",
        "retval",
        "ptgs",
        "getProperty",
        "Term",
        ".ifmt",
        "options",
        "delim",
        "\\\"",
        "DELETE",
        "={",
        "Section",
        "getOutlineLevel",
        "for",
        ".url",
        "shortToHex",
        "noCFSRatio=",
        "format:",
        ".height",
        "count=",
        ".",
        "return",
        "getBackgroundDeltaPriority",
        ".verWriter",
        "line.separator",
        ".iObjectKind=",
        "$",
        "value=",
        "+",
        "checkCalculationErrors",
        "[/",
        "[/INDEX]",
        ".flags",
        "<any",
        "equals",
        "toString",
        "[/ENDBLOCK]",
        ".reserved",
        "=",
        "[/AREA]",
        "getNumerator",
        "minTermFreq",
        "getRunInBackground",
        "next",
        "repetitions",
        "rate",
        "getFillForegroundColor",
        "(",
        "[/SUPBOOK",
        "lastSheetName",
        "getMaxCFSSegmentSizeMB",
        "calibrateSizeByDeletes",
        ".formula",
        ".verOriginator=",
        "i",
        "abbreviate",
        "got",
        "getFirstColumn",
        "no",
        "w",
        "log.step.",
        "iObjectKind",
        "!=",
        ";",
        "type",
        "\"",
        "field_5_unicode_flag",
        ".unused",
        "isAlwaysCalc",
        "[/SST]",
        "separator",
        "min",
        "getRVAType",
        "rewrite",
        "[/WSBOOL]",
        "prefix",
        "Self",
        "r",
        "toHex",
        "getFitToPage",
        "c",
        "xfindex",
        "'",
        "}",
        "segments",
        "External",
        "System",
        "Unknown",
        "{",
        "\\\\",
        "field_6_author",
        "iObjectInstance2",
        "_isAddInFunctions",
        "]",
        "field_7_parsed_expr",
        ":",
        "log.step",
        "Incorrect",
        "_linkPtg",
        "_dropData",
        "[MERGEDCELLS]",
        ".lastcol",
        "nCols",
        ".fillpattern=",
        ",affix=",
        "\\n",
        "subs",
        ".grbit",
        "->",
        "label=0x",
        "'format'",
        "NOT_SET",
        "wantWrite",
        "isAutoPosition",
        "String",
        "HexDump"
      ],
      "Syntactic Label": "Variables, Methods, Objects, Operators, Keywords",
      "Semantic Tags": [
        "Data Structures",
        "Object Serialization",
        "String Manipulation",
        "File IO",
        "Data Representation"
      ],
      "Description": "The tokens represent a mix of data structures (e.g., StringBuilder, byte arrays), methods for object serialization (toString methods), string manipulation (append, toHex, etc.), file I/O (IOException), and data representation (HexDump).  The code snippets show the construction and manipulation of various data structures to represent and serialize data, likely for storage or transmission.  The use of StringBuilder is common in C# for efficient string concatenation. The frequent use of HexDump suggests that binary data is being handled and converted to hexadecimal representation for debugging or storage."
    }
  },
  {
    "c339": {
      "Unique tokens": [
        "LRU_HASHED",
        "C_64",
        "FLUSH",
        "ALIGN_NOT_MASK",
        "NO_BOUND",
        "MAX_VALUE",
        "UTF_8",
        "VALUE_INVALID",
        "REPLACE",
        "EMPTY_SET",
        "MERGE",
        "MAX_RECORD_LENGTH",
        "POSITIVE_INFINITY",
        "ELEMENT_NODE",
        "EXT_PATTERN",
        "TYPE_MISMATCH",
        "SHORT_SIZE",
        "ADDINDEXES_INPUT_DIR",
        "0xFFFF80",
        "GONE",
        "else",
        "ZZ_BUFFERSIZE",
        "MUST_NOT",
        "LESS_THAN",
        "MIN_VALUE",
        "DGG_CONTAINER",
        ")",
        "0x01",
        "SYMLINK",
        "MAX_WIDTH",
        "STATE_PULL_DECAY",
        "SUNDAY",
        "INDIRECT",
        "0x000F",
        "WORD_NUMBER",
        "CONFIG",
        "MAX_ROW_INDEX",
        "INCLUSIVE",
        "NO_FONT",
        "PAGE",
        "DELETED",
        ",",
        "OBJ_TREE",
        "INT_BLOCK_MASK",
        "EMPTY_BYTE_ARRAY",
        "BLOCK_SIZE",
        "OR_OPERATOR_NAME",
        "0x00FF",
        "MAX_POINTS",
        "R_TAGS",
        "POIFSConstants",
        "FALSE",
        "*",
        "FRAC_HALF",
        "VERSION_START",
        "false",
        "0x00FFFF",
        "LESSTHAN",
        "NE",
        "SATURDAY",
        "EXECUTABLE_FILE",
        "EXTERNAL_FUNC",
        "DATA_EXTENSION",
        "DEFAULT_MODE",
        "INVISIBLE",
        "HEADER_SIZE",
        "StandardQueryConfigHandler.ConfigurationKeys.DEFAULT_OPERATOR",
        "UNUSED_BLOCK",
        "DEBUG",
        "BYTE_BLOCK_SIZE",
        "NUM_ERROR",
        "INITIAL_CAPACITY",
        "DELETE",
        "NORMAL",
        "DEFAULT_PATH_TYPE",
        "EMPTY_VOCABULARY",
        "CODEC_MAGIC",
        "EMPTY_DOUBLE_ARRAY",
        "ILLEGAL_STATE_READER",
        "YYINITIAL",
        "MAX_REP_WHOLE_PART",
        "IO_FAILURE",
        "AUTOMATON_TYPE",
        ".",
        "return",
        "NOT_BETWEEN",
        "UNSET_MARK",
        "NUM_BYTES_OBJECT_REF",
        "UNDERFLOW",
        "+",
        "INT_BLOCK_SHIFT",
        "NO_MORE_DOCS",
        "FLOOR",
        "OCTAL_BASE",
        "PROTECTION]",
        "INVALID_TYPE",
        "BOOST",
        "REFTABLE",
        "TITLE",
        "is",
        "DEFAULT_BUFFER_SIZE",
        "0x02",
        "INT_BLOCK_SIZE",
        "CIRCULAR_REF_ERROR",
        "RECORD_ID",
        "APPEND",
        "PLAIN_TOKEN_SIZE",
        "FORMULA",
        "SOLVER_CONTAINER",
        "LATEST",
        "=",
        "HASH_FUNCTION",
        "LUCENE_QUERY_CONVERSION_ERROR",
        "CONCAT",
        "MAX_NUMBER_OF_PLACES",
        "FIELD_BOOST_MAP",
        "LONG_HASH_FUNCTION",
        "EXCLUSIVE",
        "!=",
        ";",
        "\"",
        "EMPTY_RETURN_STATE",
        "AND",
        "STANDARD_PALETTE_SIZE",
        "ESCAPED_QUOTE",
        "MOD_NONE",
        "OBJECT_ID_STRING_LENGTH",
        "GREATERTHAN",
        "CHAR",
        "DEGREES_TO_RADIANS",
        "newFlag",
        "ID_FIELD",
        "INSERT",
        "BOOLEAN",
        "ZERO",
        "USER_DATA",
        "}",
        "FIRST_COLOR_INDEX",
        "EMPTY_INT_ARRAY",
        "OBJECT_TYPE_LINE",
        "MUST",
        "LEVEL_SIZE_ARRAY",
        "capacity",
        "REF",
        "]",
        "SHA1",
        ":",
        "FORMAT_ID",
        "LIST",
        "LOG_10_TO_BASE_e",
        "NO_CHANGE",
        "FIRST_FEW_BYTES",
        "&&",
        "IGNORED",
        "NOOP",
        "READY",
        "BYTE_BLOCK_MASK",
        "GREATER_THAN",
        "EXCEL97",
        "EMPTY",
        "FieldInfo",
        "DEFAULT_OPERATOR",
        "CONDITION_TYPE_CELL_VALUE_IS",
        "REPEAT_EXHAUST",
        "DEFAULT_CHANNEL",
        "RECEDE_TIME",
        "OBJECT_TYPE_OVAL",
        "LENGTH_UNKNOWN",
        "OLD_SEGMENTS_GEN"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c340": {
      "Unique tokens": [
        "beforeClientExecution"
      ],
      "Syntactic Label": "Method",
      "Semantic Tags": [
        "Pre-processing",
        "Request Modification",
        "Interceptor",
        "Client-side Logic",
        "AWS SDK"
      ],
      "Description": "The token 'beforeClientExecution' represents a method likely used as an interceptor in an AWS SDK.  It modifies the request object before it's sent to the AWS service. This is a common pattern for pre-processing requests, adding headers, or performing other client-side operations."
    }
  },
  {
    "c341": {
      "Unique tokens": [
        "]",
        ".",
        "poi",
        ")",
        "apache",
        "init",
        "listAll",
        "(",
        "toArray"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Method Invocation",
        "Object Instantiation",
        "String Manipulation",
        "Data Access"
      ],
      "Description": "The tokens represent a mix of C# language constructs.  `[]` denotes array access or declaration.  `.` is the member access operator. `()` are used for method calls and object instantiation. `toArray` converts a collection to an array. `listAll` suggests a method to list items. `poi` and `apache` likely refer to external libraries (Apache POI). `init` might be an initialization method. These tokens and their usage are significant in C# for data manipulation, object interaction, and potentially file I/O operations (given the presence of `apache` and `poi`, which are commonly used for working with files)."
    }
  },
  {
    "c342": {
      "Unique tokens": [
        "getMax",
        "off",
        "f",
        "newId",
        "b",
        "vectorsStream",
        "idx",
        "upstream",
        "similarity",
        "ptr",
        "long",
        "ve",
        "oldId",
        "sheetName",
        "key2",
        "Interval",
        "octal",
        "ruleIndex",
        "length",
        "flag",
        "srcOff",
        "minBytesDirect",
        "preTag",
        "boost",
        "currentRow",
        "typeCode",
        "-",
        "x",
        "forwardIndex",
        "aux",
        "from",
        "pos",
        "emptyVal",
        "limit",
        "data",
        "home",
        "100",
        "args",
        "keys",
        "len",
        "[",
        "tokenType",
        "end",
        "main",
        "false",
        "w4",
        "byte",
        "number",
        "ttype",
        "success",
        "subFrom",
        "s1",
        "oneByte",
        "34",
        "fn",
        "srcCellRow",
        "columnIx",
        "mods",
        "--",
        "0x02",
        "v",
        "wasted",
        "width",
        "myPosition",
        "haystack",
        "SZ",
        "initialBspos",
        "d",
        "groupField",
        "book",
        "at",
        "hi",
        "type",
        "forwardCount",
        "shortCellNum",
        "location",
        "20",
        "mask",
        "rowIndex",
        "includeLower",
        "_str",
        "markpos",
        "1024",
        "12",
        "blockShift",
        "pFmt",
        "revision",
        "dimName",
        "red",
        "normalizedPath",
        "nextID",
        "columnIndex",
        "8",
        "numfonts",
        "charLimit",
        "srcCnt",
        "one",
        "to",
        "u",
        "j",
        "h",
        "Math",
        "++",
        "2",
        "initialSize",
        "u31",
        "oldPath",
        "pv",
        "0xffff",
        "inputStr",
        "mid",
        "getFontpos",
        "_green",
        "oldLen",
        "getId",
        "sheetRefIndex",
        "b3",
        "3",
        "offset",
        "maxformatid",
        "arg2",
        "rawMode",
        "_unused",
        "dataSize",
        "_blue",
        "ivalue",
        "padd",
        "formatString",
        "minAlt",
        "timeout",
        "ptgs",
        "this",
        "lo",
        "getColumnIndex",
        "code",
        "srcRowIndex",
        ".",
        "sid",
        "mergeBufferSize",
        "offsetInBlock",
        "getNameText",
        "field",
        "endOffset",
        "propertiesCount",
        "docBase",
        "rowIx",
        "arg0",
        "key",
        "10",
        "EOM",
        "d0",
        "state",
        "nthPosition",
        "currentVersion",
        "/",
        "b2",
        "toBeAdded",
        "path",
        "row",
        "max",
        "min",
        "crA",
        "context",
        "r",
        "lastReturned",
        "ch",
        "endColumn",
        "text",
        "msgB",
        "sizeOfElements",
        "y",
        "fmt",
        "outPtr",
        "nChars",
        "indexInterval",
        "remaining",
        "boolResult",
        "progress",
        "_lastColumnIndex",
        "&&",
        "invert",
        "ec",
        "value",
        "m",
        "otherPosition",
        "NONE",
        "lastPosition",
        "rnum",
        "endInclusive",
        "a",
        "starts",
        "object",
        "ryr",
        "_errorCode",
        "position",
        "nper",
        "128",
        "longitude",
        "val",
        "bitsPerValue",
        "termBytesStart",
        "green",
        "<",
        "nFrames",
        "oldIdx",
        "root",
        "getColumn",
        "experimentName",
        "startRow",
        "modCount",
        "startOffset",
        "ent",
        "RamUsageEstimator",
        "alignedPos",
        "extensionFieldDelimiter",
        ",",
        "dy2",
        "recSize",
        ">",
        "getOptions",
        "BLOCK_SIZE",
        "reB",
        "keyName",
        "FALSE",
        "Lucene",
        "_limit",
        "4",
        "needle",
        "true",
        "ordinal",
        "msg",
        "msgE",
        "p",
        "mtp",
        "dist",
        "remove",
        "facetPrefix",
        "k",
        "intValue",
        "nl",
        "externalWorkbookNumber",
        "retryTimes",
        "sep",
        "externNameIndex",
        "blockOffset",
        "diagonalDist",
        "sheetIndex",
        "backID",
        "gen",
        "1.5",
        "n",
        "!=",
        "\"",
        "getRowNum",
        "doc",
        "prefix",
        "sheet",
        "getRow",
        "'",
        "case",
        "blue",
        "dy1",
        "externSheetIndex",
        "numIndexTerms",
        "encoding",
        "forwardID",
        "24",
        "sheetNumber",
        "getFirstRow",
        "count",
        "column",
        "512",
        "skip",
        "element",
        "threshold",
        "nextBlock",
        "getRuleIndex",
        "5",
        "dx2",
        "newPath",
        "streamId",
        "mMax",
        "short",
        "rest",
        "reader",
        "reA",
        ")",
        "0x01",
        "aeRange",
        "int",
        "startInclusive",
        "expectedModCount",
        "cp",
        "jw",
        "bufferUpto",
        "str",
        "comgen",
        "result",
        "w3",
        "blockIdx",
        "getRowIndex",
        "null",
        "s2",
        "mp",
        "mKeys",
        "b0",
        "begin",
        "ix",
        "expectedMark",
        "charIdx",
        "*",
        "crB",
        "getBeginIndex",
        "srcCellCol",
        "name",
        "functionIndex",
        "s",
        "upto",
        "1",
        "size",
        "class",
        "blockMask",
        "nextPos",
        "queryID",
        "endRow",
        "startPointer",
        "intIdx",
        "w2",
        "index",
        "streamName",
        "+",
        "srcIdx",
        "_key",
        "col",
        "parts",
        "16",
        "includeUpper",
        "ext",
        "height",
        "equalSoFar",
        "next",
        "reference",
        "sessionID",
        "(",
        "freq",
        "i",
        "w",
        "inCoreLimit",
        "pos0",
        ";",
        "arg1",
        "indexOf",
        "subTo",
        "start",
        "c",
        "per",
        "workspaceName",
        "b1",
        "facetField",
        "{",
        "oldUrl",
        "styleIndex",
        "srcColumnIndex",
        "wholePart",
        "numDocs",
        "]",
        "T",
        "numberVE",
        "w1",
        "colon",
        "left"
      ],
      "Syntactic Label": "Variables, Methods, Literals, Operators, Data Types",
      "Semantic Tags": [
        "Data Processing",
        "Object Manipulation",
        "File I/O",
        "Algorithm Implementation",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Variables store data, methods perform operations, literals provide constant values, operators enable calculations and comparisons, and data types define the nature of data.  These elements are fundamental to C# programming and are used extensively in the provided code snippets to implement various algorithms and data structures, often involving file I/O and object manipulation."
    }
  },
  {
    "c343": {
      "Unique tokens": [
        "\"",
        "Node",
        ".",
        "return",
        "try",
        "throw",
        "new",
        "navigableKeySet",
        "200",
        "format",
        "loader",
        "files",
        "Collections",
        "'",
        "Arrays",
        "listIterator",
        "backingMap",
        "{",
        "long",
        "V",
        "toString",
        "values",
        "this",
        "mapEntry",
        "_c",
        "ref",
        "delegate",
        "assert",
        "(",
        "enumType",
        "m",
        "status",
        "result",
        "synchronized",
        "list",
        "ctx",
        "super",
        "!",
        "String",
        "Region",
        "if"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Method Calls",
        "Object Creation",
        "Control Flow",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"return\", \"try\", \"throw\", \"if\" control program flow and exception handling.  \"new\" is used for object creation.  Tokens such as \".\", \",\", \"(\", \")\", \"{\", \"}\" are operators or punctuation that define syntax. Identifiers like \"navigableKeySet\", \"listIterator\", \"backingMap\" refer to objects and methods, often related to collections.  The presence of \"Collections\", \"Arrays\", \"List\" indicates usage of data structures.  The overall code snippet shows numerous method definitions and calls, likely part of a larger class or library."
    }
  },
  {
    "c344": {
      "Unique tokens": [
        "\"",
        "[Pattern",
        ".row",
        "MBD",
        ".",
        ".unknownShort1",
        ".numregions",
        "sb",
        "numcolors",
        ".elements",
        ".bof",
        "getWidth",
        "k",
        ".xf_index_raw",
        ".xPosition",
        "+",
        ".numerator",
        ".pane",
        "getAutobreaks",
        ".borderType",
        ".type",
        ".numstrings",
        ".firstrow",
        "'",
        "_flags",
        ".version",
        "field_4_string_len",
        "_str",
        "HexDump",
        "getLastCol",
        ".id",
        "getVerticalPos",
        "checkInconsistentFormulas",
        "isHorizontalBorder",
        ".sxaxis",
        "colfirst",
        ".options",
        "getFormatString",
        ".isxvdData",
        "intToHex",
        "=",
        ".indexcode",
        ".wsbool1",
        ".format_runs",
        "append",
        ")",
        "[/SELECTION]",
        "delim",
        "._wStyle:",
        "(",
        ".leftgutter",
        "[/FEATURE",
        "Relative",
        ".anchorId",
        "\\n",
        "Integer",
        ".range",
        "getXFIndex",
        ".record",
        ".formatFlags",
        "object",
        ".rt",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in Stringbuilder",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Hexadecimal Conversion",
        "Debug Information"
      ],
      "Description": "The tokens represent a diverse set of C# language elements used within the context of StringBuilder objects.  These elements are primarily used to construct string representations of data structures, often for debugging or logging purposes.  The '.' operator is used for method calls on objects, ',' acts as a separator, and the various identifiers represent fields or properties of objects.  The use of HexDump suggests a need to represent data in hexadecimal format.  The overall purpose is to create human-readable string representations of complex data structures."
    }
  },
  {
    "c345": {
      "Unique tokens": [
        "data",
        ",",
        ".",
        "queries",
        "blocks",
        "args",
        "b",
        ">",
        "nameBuf",
        "files",
        "[",
        "src",
        "chars",
        "<",
        "values",
        "larray",
        "]",
        "ptgs",
        "dst",
        "stats",
        "HttpURLConnection",
        "key",
        "cbuf",
        "buffer",
        "bs",
        "in",
        "..",
        "shortArray"
      ],
      "Syntactic Label": "Array, Variable, Operator, Method, Dot Operator, Data Type",
      "Semantic Tags": [
        "Data Processing",
        "Array Manipulation",
        "Data Structures",
        "Byte Manipulation",
        "Algorithm"
      ],
      "Description": "The tokens represent a mix of data types (byte[], int[], char[], etc.), variables, operators (>, <, =, etc.), method calls (e.g., System.arraycopy, decode), and the dot operator used for method invocation.  These are fundamental elements in C# programming, particularly when dealing with arrays and data manipulation. The code snippets show various algorithms and data processing tasks, including data encoding/decoding, array copying, and buffer management."
    }
  },
  {
    "c346": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Client-side Request",
        "Input Parameter"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK, likely interacting with an API Gateway. Each method takes a request object as input, processes it (potentially using a 'beforeClientExecution' pre-processing step), and then executes a corresponding API call. The semantic tags highlight the role of 'request' in this context."
    }
  },
  {
    "c347": {
      "Unique tokens": [
        "Iterator",
        "between",
        "offset",
        "slice",
        "NLS",
        "Hashtable",
        "BigDecimal",
        "include",
        ".",
        "return",
        ",",
        "getInstance",
        "StringBuilder",
        "new",
        "addListener",
        "objItr",
        "put",
        "order",
        "get",
        "TokenizerME",
        "Collections",
        "}",
        "dictionary",
        "listIterator",
        "<",
        "wrap",
        "encode",
        "ArrayList",
        "toString",
        "grow",
        "clone",
        "copy",
        "this",
        "append",
        ")",
        "containsKey",
        "Impl",
        "Term",
        "After",
        "Between",
        "build",
        "iterator",
        "(",
        "File",
        "Before",
        "create",
        "size",
        "outCandidate",
        "Binary",
        "byteBuffer",
        "Item",
        "in",
        "duplicate",
        "getString",
        "ByteOrder",
        "super",
        "String",
        "sort"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Factory Pattern",
        "Data Filtering",
        "Stream Processing"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (return, new, this, etc.), operators (., ), etc.), identifiers (create, clone, copy, etc.), and types (StringBuilder, Hashtable, BigDecimal, etc.).  The context sentences show these tokens being used in the creation of objects (using the 'new' keyword), method invocations (using the '.' operator), and the implementation of a factory pattern (multiple 'create' methods returning different TokenStream or TokenFilter instances).  The overall code appears to be focused on processing streams of tokens, likely for natural language processing or text analysis, with various filters and transformations applied (e.g., stemming, normalization, limiting token count)."
    }
  },
  {
    "c348": {
      "Unique tokens": [
        "\"",
        "xspace",
        "autocompleteResponse",
        "Status",
        "cr",
        ".",
        "Domain",
        "super",
        "("
      ],
      "Syntactic Label": "Constructor Parameter, Identifier, String Literal, Dot Operator, Opening Parenthesis",
      "Semantic Tags": [
        "API Request Initialization",
        "Constructor Chaining",
        "Request Parameter Setting",
        "Object Instantiation",
        "API Client"
      ],
      "Description": "These tokens are part of C# constructors that initialize API request objects.  The identifiers represent request types, strings provide API-specific data (e.g., API version, operation name), the dot operator is used for method calls to set request parameters, and the opening parenthesis indicates the start of the constructor's parameter list.  The 'super' keyword shows constructor chaining, inheriting from a base class. This pattern is common in building clients for RESTful APIs."
    }
  },
  {
    "c349": {
      "Unique tokens": [
        "writeInt",
        "putShort",
        "writeDouble",
        "putInt",
        "writeShort",
        "(",
        "writeByte"
      ],
      "Syntactic Label": "MethodInvocation",
      "Semantic Tags": [
        "DataSerialization",
        "BinaryData",
        "LittleEndian",
        "ByteStream",
        "DataOutput"
      ],
      "Description": "These tokens represent method calls to write primitive data types (int, short, double, byte) into a LittleEndianOutput stream.  This is a common pattern in C# for serializing data into a binary format, often used for file I/O or network communication. The LittleEndianOutput suggests that the data is written in little-endian byte order. The methods are used to write data to a byte array or stream in a specific format."
    }
  },
  {
    "c350": {
      "Unique tokens": [
        "",
        "valuesPerBlock",
        "DataFormatException",
        "Math",
        "docId",
        "++",
        "val",
        "indexCommitGen",
        "<",
        "long",
        "else",
        "grow",
        "short",
        ")",
        "ord",
        "int",
        "set",
        "length",
        "buf",
        "decoder",
        "enough",
        "result",
        "-",
        "bytesRemaining",
        "readBytes",
        "mismatch:",
        "if",
        "offset",
        "limit",
        "null",
        "readVInt",
        ",",
        "endIndex",
        "IOUtils",
        ">>>",
        "Charset",
        ">",
        "[",
        "<=",
        "Arrays",
        "paddedLength",
        "*",
        "end",
        "decompressor",
        "==",
        "ArrayList",
        "taxoCommitGen",
        "free",
        "byte",
        ">=",
        "elselimit",
        "fieldIndex",
        "4",
        "blockValue",
        "1",
        "for",
        "needsDict=",
        "!",
        "getGeneration",
        ".",
        "return",
        "char",
        "bytes",
        "new",
        "+",
        "leftInBuffer",
        "keyStart",
        "space",
        "-=",
        "originalLength",
        "=",
        "synonyms",
        "final",
        "state:",
        "assert",
        "(",
        "raw",
        "hdr",
        "FooterLine",
        "fill",
        "i",
        "catch",
        "in",
        "fromIndex",
        "/",
        "!=",
        ";",
        "hi",
        "\"",
        "CorruptIndexException",
        "finally",
        "min",
        "0",
        "}",
        "<<",
        "endOfFooterLineKey",
        "taxoGen",
        "{",
        "Inflater",
        "%",
        "e",
        "]",
        "+=",
        ":",
        "&",
        "&&",
        "numBits",
        "\\n",
        "valEnd",
        "keyEnd",
        "8",
        "super",
        "left"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Data Structures",
        "File I/O",
        "Data Compression",
        "Exception Handling",
        "Algorithm"
      ],
      "Description": "The tokens represent a wide range of C# language constructs, including variables, data types (int, long, byte, char), operators (+, -, *, /, %, <<, >>, >>>, +, +=, -=, ++), control flow statements (if, else, for, while), array manipulation (Arrays), exception handling (try-catch-finally), input/output operations (IO), data structures (ArrayList, BitSet, BytesRef, CharsRef, ByteBuffer), and data compression (Inflater).  The code snippets demonstrate various algorithms and data processing techniques, such as serialization, data structure manipulation, and file reading/writing. The semantic tags reflect the diverse functionalities present in the code."
    }
  },
  {
    "c351": {
      "Unique tokens": [
        "",
        "getType",
        "commitNames",
        "to",
        "b",
        "300",
        "toArray",
        "2",
        "?",
        "LT",
        "<",
        "equalsIgnoreCase",
        "object",
        "point",
        "clone",
        ")",
        "force",
        "set",
        "length",
        "ensureId",
        "Float",
        "from",
        "pos",
        "if",
        "data",
        "null",
        ",",
        "obj",
        "ConcurrentHashMap",
        "<=",
        "getName",
        "Arrays",
        "exists",
        "destination",
        "==",
        "isLowerCase",
        "false",
        "isWhitespace",
        "byte",
        "this",
        "name",
        "true",
        "enabled",
        "on",
        "addLastImpl",
        "Date",
        "size",
        "1",
        "class",
        "getClass",
        "compare",
        "getRef",
        "listener",
        "slice",
        ".",
        "return",
        "throw",
        "setId",
        "idBuffer",
        "index",
        "bytes",
        "new",
        "+",
        "delta",
        "brToString",
        "equals",
        "currentTimeMillis",
        "messageWriter",
        "toString",
        "-=",
        "elements",
        "getHost",
        "=",
        "Slice",
        "isEmpty",
        "getLocalizedMessage",
        "key",
        "assert",
        "(",
        "comparator",
        "o",
        "fill",
        "valueOf",
        "i",
        "catch",
        "stringValue",
        "instanceof",
        "in",
        "NoLock",
        "L",
        "message",
        "!=",
        ";",
        "type",
        "\"",
        "0",
        "format",
        "get",
        "Locale",
        "start",
        "Name",
        "c",
        "src",
        "System",
        "}",
        "{",
        "backingMap",
        "isEqual",
        "B",
        "]",
        "returnedNumber",
        "+=",
        ":",
        "Impl",
        "&",
        "setBaseline",
        "_input",
        "&&",
        "value",
        "count",
        "flags",
        "Double",
        "countMap",
        "super",
        "fd",
        "String",
        "other",
        "LL",
        "compareTo",
        "getDefault"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Method Definitions",
        "Object Manipulation",
        "String Operations",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, return, throw, etc.), operators (+, -, ==, !=, etc.), method names (toString, equals, isEmpty, etc.), object instantiations (new), data structure usage (ConcurrentHashMap, Arrays), and exception handling (throws, catch).  These tokens and their context sentences demonstrate fundamental C# programming concepts such as method definition, object manipulation, string operations, exception handling, and the use of data structures. The methods often involve string manipulation, object comparisons, and state checks.  The presence of exception handling suggests robust error management in the code. The use of data structures like ConcurrentHashMap indicates potential for concurrent operations."
    }
  },
  {
    "c352": {
      "Unique tokens": [
        "public",
        "synchronized",
        "final",
        "static"
      ],
      "Syntactic Label": "Access Modifiers and Static Keyword",
      "Semantic Tags": [
        "Access Control",
        "Class Members",
        "Static Methods",
        "Utility Functions",
        "Code Reusability"
      ],
      "Description": "These tokens in C# define the access level and characteristics of methods.  'public' signifies that the methods are accessible from any other class. 'static' indicates that the methods belong to the class itself, not to any specific instance of the class. 'final' (if present) would mean the method cannot be overridden in subclasses.  The combination creates utility functions that are easily reusable throughout the application."
    }
  },
  {
    "c353": {
      "Unique tokens": [
        "formula",
        "(",
        ",",
        "throws",
        ")",
        "{",
        "args",
        ">"
      ],
      "Syntactic Label": "Method parameters, Function name, Opening Parenthesis, Comma, Throws keyword, Closing Parenthesis, Opening Brace, Identifier, Greater Than Operator",
      "Semantic Tags": [
        "Exception Handling",
        "Method Definition",
        "Formula Processing",
        "Object Instantiation",
        "Data Structures"
      ],
      "Description": "The tokens represent elements of C# method signatures and bodies.  'formula' suggests a method related to formula processing or calculation.  'throws' indicates exception handling.  '(' and ')' are parentheses for method parameters. ',' separates parameters. '{' starts the method body. 'args' might be a parameter name, and '>' could be part of a generic type declaration or a comparison operator within the method."
    }
  },
  {
    "c354": {
      "Unique tokens": [
        "SpanQuery",
        "AlibabaCloudCredentialsProvider",
        "StepConfig",
        "DirCacheEntry",
        "Query",
        "long",
        "CompositeReader",
        "short",
        "SpanQueryBuilder",
        "HSSFListener",
        "int",
        "QueryParser",
        "FieldQuery",
        "Integer",
        "EscherChildAnchorRecord",
        "Config",
        "RefList",
        "IntBlockPool",
        "K",
        "GeoRestriction",
        "Charset",
        "Row",
        "EvaluationName",
        "EscherBlipRecord",
        "BigInteger",
        "RefEval",
        "V",
        "CharStream",
        "Method",
        "byte",
        "Paths",
        "float",
        "Terms",
        "Outputs",
        "Credential",
        "Term",
        "ErrorEval",
        "InputStream",
        "JobFlowExecutionState",
        "double",
        "RecordInputStream",
        "boolean",
        "ReuseStrategy",
        "applicationName",
        "TokenizerModel",
        "char",
        "QueryConfigHandler",
        "Class",
        "Comparator",
        "AttributeValue",
        "Tag",
        "PacketLineOut",
        "Set",
        "StepExecutionState",
        "HSSFSheet",
        "ValueSource",
        "DeleteRequest",
        "OutputStream",
        "QueryBuilder",
        "Boolean",
        "Sort",
        "File",
        "AnyObjectId",
        "Writer",
        "Long",
        "CollectionModel",
        "java",
        "FUNCTION",
        "Analyzer",
        "Format",
        "Reader",
        "Trie",
        "GatewayType",
        "Revision",
        "BytesRef",
        "BytesRefIterator",
        "List",
        "InfoStream",
        "ValueEval",
        "RawMessage",
        "Throwable",
        "GeoRestrictionType",
        "AlibabaCloudCredentials",
        "PutRequest",
        "EnvironmentInfoType",
        "Repository",
        "ByteBlockPool",
        "T",
        "Content",
        "OrdinalsReader",
        "DistributionConfig",
        "String"
      ],
      "Syntactic Label": "Constructor Parameters",
      "Semantic Tags": [
        "Object Creation",
        "Request Handling",
        "Data Transfer",
        "Resource Management",
        "Configuration"
      ],
      "Description": "The tokens represent parameters passed to constructors of various classes.  These parameters are crucial for initializing objects, handling requests, transferring data, managing resources, and configuring system settings within the application. The context shows that many of these classes are involved in managing cloud resources or requests, indicating a cloud-based application."
    }
  },
  {
    "c355": {
      "Unique tokens": [
        "sqi",
        "SpanQuery",
        "ExperimentsInner",
        "queries",
        "?",
        "CellRangeAddress",
        "<",
        "Note",
        "TimeSpec",
        "grow",
        "FreeRefFunction",
        "Short",
        ")",
        "TermStats",
        "Ptg",
        "org",
        "getAsync",
        "dictionaries",
        "Integer",
        "Float",
        "K",
        ",",
        "Ref",
        "Cell",
        ">",
        "SrndQuery",
        "Row",
        "[",
        "TerminalNode",
        "TreeFilter",
        "TokenSource",
        "V",
        "CharStream",
        "ReadTask",
        "extends",
        "LazyField",
        "DFAState",
        "Object",
        "fieldNames",
        "ref",
        "HSSFPictureData",
        "MatchingDocs",
        "InputStream",
        "field='",
        "WeakReference",
        "CredentialItem",
        "CharsRef",
        "Experiment",
        "Token",
        "temp",
        "IndexReader",
        "RecordBase",
        "it",
        ".",
        "Automaton",
        "ATNConfig",
        "<span",
        "<any",
        "PackFile",
        "toMergeItr",
        "SnowballStemmer",
        "=",
        "ET",
        "Entry",
        "IndexCommit",
        "(",
        "File",
        "FooterLine",
        "SubmoduleStatus",
        "ParseTreeMatch",
        "Long",
        "PrecedencePredicate",
        "stemClass",
        "Resolution",
        "EscherRecord",
        "E",
        "DateTools",
        "ContinueRecord",
        "Character",
        "ParseTree",
        "WeightedPhraseInfo",
        "]",
        "copyOfRange",
        "Property",
        ":",
        "QueryNode",
        "TransportProtocol",
        "allToffs",
        "m",
        "CharSequence",
        "T",
        "operands",
        "scriptAndResourcePaths",
        "<font",
        "PositionSpan",
        "super",
        "String",
        "OptionalFields"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Instantiation",
        "Method Invocation",
        "Exception Handling",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including identifiers (e.g., sqi, SpanQuery, ExperimentsInner), keywords (e.g., public, void, throws, new), operators (e.g., ., =, <, >, (, )), and special symbols.  These tokens are used in various contexts, such as object instantiation (e.g., new Pair<TokenSource, CharStream>), method invocation (e.g., repo.getConfig()), exception handling (e.g., throws GitAPIException), and working with data structures (e.g., ArrayList, HashMap).  The code snippets demonstrate common C# programming practices, including file I/O operations, data manipulation, and exception handling."
    }
  },
  {
    "c356": {
      "Unique tokens": [
        "",
        "position",
        "to",
        "stringToMatch",
        "b",
        "idx",
        "element",
        "++",
        "2",
        "?",
        "termUpto",
        "ptr",
        "<",
        "blockSize",
        "positions",
        "grow",
        "hooks",
        ")",
        "int",
        "collapseRow",
        "length",
        "str",
        "maxInt",
        "StopWalkException",
        "-",
        "from",
        "pos",
        "if",
        "offset",
        "limit",
        ",",
        "endIndex",
        ">",
        "[",
        "<=",
        "end",
        "==",
        "iterations",
        ">=",
        "this",
        "4",
        "true",
        "1",
        "size",
        "double",
        "for",
        "!",
        "_tabids",
        ".",
        "return",
        "char",
        "throw",
        "--",
        "index",
        "+",
        "equals",
        "entries",
        "=",
        "final",
        "while",
        "rval",
        "(",
        "ixDiff",
        "other",
        "diff",
        "i",
        "n",
        "!=",
        ";",
        "0",
        "rowIndex",
        "cmp",
        "start",
        "c",
        "{",
        "]",
        "+=",
        ":",
        "&&",
        "value",
        "count",
        "T",
        "a",
        "String",
        "array"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Looping and Iteration",
        "Exception Handling",
        "Data Structures",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords for control flow (if, for, while), operators for arithmetic and comparison, array access and manipulation, exception handling (throw), and data structure usage (arrays, lists, maps). The sentences show common programming patterns such as iterating over arrays, conditional checks, and exception handling.  These are fundamental aspects of C# programming."
    }
  },
  {
    "c357": {
      "Unique tokens": [
        "",
        "and",
        "field_6_underline",
        "startIndex",
        "readUnicodeLEString",
        "Packed64SingleBlock5",
        "r_other_suffix",
        "deltaDistance",
        "taxoSDP",
        "_significand",
        "<",
        "removePossessivePronoun",
        "field_5_super_sub_script",
        "else",
        "be",
        "break",
        ")",
        "cp",
        "int",
        "length",
        "field_6_value",
        "least",
        "SIN_COS_DELTA_LO",
        "must",
        "FormulaRecordAggregate",
        "REGEXPTERM",
        "if",
        "field_5_indention_options",
        ",",
        "TwoDEval",
        "EscherContainerRecord",
        "getShort",
        "readShort",
        "sb",
        "getFromUnicodeLE",
        "\u00f4",
        "nextCTF",
        ">",
        "field_3_cell_options",
        "abs",
        "[",
        "<=",
        "isAutomaticLink",
        "ebrTarget",
        "==",
        "float",
        "iNumber",
        "keepTogetherSize",
        "this",
        "getPublicAccessBlockRequest",
        "subRecStream",
        "1",
        "extRefIndex",
        "maxShingleSize",
        "maxThreadCount",
        "field_4_formatstring",
        "_iBook",
        "IllegalArgumentException",
        "!",
        "Automata",
        "arraycopy",
        "getSheetNames",
        ".",
        "return",
        "throw",
        "index",
        "maxMergeCount",
        "source",
        "nCells",
        "new",
        "+",
        "AUTO_DETECT_MERGES_AND_THREADS",
        "RECORD_ID",
        "readInt",
        "readByte",
        "field_8_vresolution",
        "=",
        "isEmpty",
        "final",
        "reverseEndCommits",
        "(",
        "&=",
        "should",
        "okPrefix",
        "field_9_zero",
        "in",
        "instanceof",
        "field_8_height",
        "!=",
        ";",
        "at",
        "\"",
        "Iterator",
        "valueCount",
        "getRowNum",
        "0",
        "field_8_charset",
        "_options",
        "out",
        "}",
        "{",
        "field_6_author",
        "both",
        "e",
        "+=",
        "_linkPtg",
        "&",
        "seeThruPreds",
        "BYTE_BLOCK_MASK",
        "\\n",
        "field_4_name",
        "flags",
        "Double",
        "(="
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "File Input/Output",
        "Object Serialization",
        "Record Management",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, return, throw), operators (=, +, -, <, >, ==, !=, &=, +=), data types (int, float, double, byte), objects (StringBuilder, ByteBuffer, DoubleBuffer), methods (readShort, readInt, writeShort, writeInt, etc.), and symbols (, ., ;, (, ), [, ], {, }).  These tokens and sentences are significant in the context of C# programming because they demonstrate fundamental aspects of data manipulation, file processing, object interaction, and error handling. The code snippets show how to read and write data from streams, serialize objects, manage records, and handle exceptions."
    }
  },
  {
    "c358": {
      "Unique tokens": [
        "K",
        "Counter",
        ".",
        "E",
        "char",
        "SeekStatus",
        "Class",
        "Type",
        "List",
        "BigInteger",
        "long",
        "V",
        "ModifierQueryNode",
        "byte",
        "void",
        "float",
        "Object",
        "short",
        "Drawable",
        "final",
        "int",
        "InputStream",
        "File",
        "double",
        "Integer",
        "synchronized",
        "T",
        "ByteOrder",
        "boolean",
        "String",
        "FileMode"
      ],
      "Syntactic Label": "C# Tokens and Data Types",
      "Semantic Tags": [
        "Data Structures",
        "Primitive Types",
        "Object-Oriented Programming",
        "File I/O",
        "Data Processing"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (e.g., public, boolean, void), data types (e.g., int, float, double, String, BigInteger, List, byte[], File), operators (e.g., .), and identifiers (e.g., Counter, SeekStatus, ModifierQueryNode).  These tokens are used to define classes, methods, and variables, and to perform various operations, including file access (File, FileMode, InputStream), data manipulation (BigInteger, byte[], String), and object interaction (.). The semantic tags reflect the common functionalities and purposes of the code snippets provided."
    }
  },
  {
    "c359": {
      "Unique tokens": [
        "public",
        "synchronized",
        "final",
        "@Override"
      ],
      "Syntactic Label": "Access Modifiers and Annotation",
      "Semantic Tags": [
        "Access Control",
        "Method Overriding",
        "Concurrency",
        "Immutability",
        "Code Annotation"
      ],
      "Description": "These tokens represent access modifiers and annotations commonly used in C#.  'public' controls access visibility, 'synchronized' ensures thread safety (though its usage in C# is different from Java), 'final' indicates immutability, and '@Override' marks method overriding.  These are crucial for code structure, maintainability, and correctness."
    }
  },
  {
    "c360": {
      "Unique tokens": [
        "",
        "K",
        "secondaryHash",
        "null",
        ",",
        ".",
        "prev",
        "return",
        "20",
        "7",
        "eKey",
        ">>>",
        ">",
        "++",
        "threshold",
        "<=",
        "if",
        "}",
        "equals",
        "<",
        "{",
        "hash",
        "hashedOk",
        "==",
        "V",
        "e",
        "rehash",
        "=",
        "12",
        "]",
        ")",
        "next",
        "^",
        "key",
        "4",
        "&",
        "&&",
        "(",
        "true",
        "hashCode",
        "tab",
        "^=",
        "value",
        "-",
        "oldValue",
        "!",
        "object",
        ";"
      ],
      "Syntactic Label": "C# Hash Table Implementation Tokens",
      "Semantic Tags": [
        "Hash Table",
        "Data Structure",
        "Collision Handling",
        "Key-Value Pairs",
        "Hashing Algorithm"
      ],
      "Description": "The tokens represent elements of a C# hash table implementation.  They show operations like key-value insertion, retrieval, removal, and collision resolution using techniques such as separate chaining.  The code uses various operators for bitwise operations, comparisons, and arithmetic calculations to manage hash codes and table indices efficiently.  The presence of `hashCode`, `equals`, and other related methods indicates the importance of proper key handling and comparison for correct hash table functionality."
    }
  },
  {
    "c361": {
      "Unique tokens": [
        "",
        "0xFF",
        "0x80",
        "3",
        "7",
        "6",
        ">>>",
        "15",
        "blocks",
        "++",
        "2",
        "[",
        "c",
        "<=",
        "}",
        "<<",
        "long",
        "values",
        "byte1",
        "false",
        "byte",
        "=",
        "]",
        "byte2",
        "final",
        ":",
        ")",
        "0x7f",
        "4",
        "&",
        "int",
        "24",
        "valuesOffset",
        "byte0",
        "&&",
        "0xff",
        "(",
        "true",
        "value",
        "63",
        "-",
        "8",
        "block",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in Data Decoding and Manipulation",
      "Semantic Tags": [
        "Data Decoding",
        "Bitwise Operations",
        "Array Manipulation",
        "Data Structures",
        "Byte Manipulation"
      ],
      "Description": "The tokens represent a combination of C# keywords, operators, and data types used in functions that decode byte arrays into different data structures (int[], long[]).  Hexadecimal constants (e.g., 0xFF, 0x80) are used for bit masking. Bitwise operators (>>, <<, &, |) manipulate individual bits within bytes.  The code processes data in blocks, using array indexing and offset variables (blocksOffset, valuesOffset) to manage memory efficiently.  The overall semantic significance is the efficient decoding and transformation of binary data into more usable integer arrays."
    }
  },
  {
    "c362": {
      "Unique tokens": [
        "Usage:",
        ".keep",
        "",
        "TEXT",
        "tags",
        "allowed:",
        "Ref[",
        "~",
        "?",
        "securityDescriptor",
        "articles",
        "<",
        "b[",
        "all",
        "arn:",
        "append",
        ")",
        "pattern",
        "]]",
        "buffer",
        "typeMatch",
        "-",
        "@",
        "offset",
        ",",
        "cmd.exe",
        "FacetLabel:",
        "sb",
        "<EOF>",
        ">",
        "first",
        "[",
        "<=",
        "\\t",
        "Arrays",
        "*",
        "FALSE",
        "==",
        "]=",
        "false",
        "payload",
        "\\r",
        ")/",
        "s",
        "\\\"",
        "t",
        "missingValue=",
        "out:",
        "idObj=",
        "p",
        "No",
        "!",
        "_firstCell",
        "/c",
        "\\'",
        ".",
        "return",
        "Decision",
        "char",
        "TRUE",
        "$",
        "DeltaIndex[",
        "+",
        "[/",
        "match",
        "mask(",
        "does",
        "equals",
        "dictionary",
        "[TP[",
        "subInfos=(",
        "org.tartarus.snowball.ext.",
        "=",
        "url",
        "stemDerivational",
        "dest",
        "replace",
        "(",
        "field_1_last_column_index",
        "n",
        "ignoreCase",
        "/",
        ")]",
        ";",
        "\"",
        "status:",
        "format",
        "r",
        "c",
        "'",
        "}",
        "case",
        "leq",
        "title",
        "{",
        "limit=",
        "\\\\",
        "Document<",
        "}{",
        "e",
        "body",
        "]",
        ":",
        "agg",
        "escapeLeft",
        "&",
        "^",
        "colName",
        "<null>",
        "&&",
        "replacement",
        "--replace",
        "sheetIx=",
        "\\n",
        "_",
        "words",
        "a",
        "identity",
        "was",
        "language"
      ],
      "Syntactic Label": "Lexical Tokens and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "File I/O",
        "Process Management",
        "Regular Expressions",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Many are used for string manipulation (e.g., StringBuilder, append, +, replace), file I/O (e.g., FSDirectory, IOException), process management (e.g., ProcessBuilder, cmd.exe), regular expressions (e.g., Pattern), and exception handling (e.g., throws, catch, exception).  The operators (e.g., ., ==, +, -, <, >, etc.) are fundamental to C# syntax and are used extensively in the code snippets to perform various operations."
    }
  },
  {
    "c363": {
      "Unique tokens": [
        "executeCreateEntityRecognizer",
        "executeCreateBatchPrediction",
        "executeCreateReceiptRuleSet",
        "executeGetDeploymentInstance",
        "executeGetFaceDetection",
        "executeGetSolutionMetrics",
        "executeGetTrafficPolicyInstanceCount",
        "executeCreateIPSet",
        "executeGetMLModel",
        "executeGetEmailChannel",
        "executeCreateDirectConnectGatewayAssociationProposal",
        "executeCreateTransitGatewayRoute",
        "executeCreateVoiceConnectorGroup",
        "executeCreateClusterSnapshot",
        "executeUpdatePrimaryEmailAddress",
        "executeCreateAccessPoint",
        "executeGetPersonalizedRanking",
        "executeCreateUsagePlan",
        "executeCreateTrafficMirrorFilter",
        "executeSetIdentityPoolRoles",
        "executeCreateEmailIdentity",
        "executeCreateDiskFromSnapshot",
        "executeCreateReplicationGroup",
        "executeCreateContactMethod",
        "executeCreateStreamProcessor",
        "executeGetNamedQuery",
        "executeGetDefaultCreditSpecification",
        "executeGetCampaignActivities",
        "executeGetIdentityPolicies",
        "executeGetStaticIps",
        "executeGetApiMappings",
        "executeGetTrafficPolicyInstance",
        "executeCreateVpcEndpointServiceConfiguration",
        "executeGetLinkAttributes",
        "executeCreateBGPPeer",
        "executeCreateConfigurationSetEventDestination",
        "executeGetDeploymentStrategy",
        "executeCreateDocumentationVersion",
        "executeGetHostedZoneCount",
        "executeCreateUsagePlanKey",
        "executeGetRelationalDatabaseBundles",
        "executeCreateBusinessReportSchedule",
        "executeCreatePrivateVirtualInterface",
        "executeGetFederationToken",
        "executeCreateFargateProfile",
        "executeUpdateApplicationSettings",
        "executeCreateCapacityProvider",
        "executeCreateLogPattern",
        "executeCreateModelPackage",
        "executeCreateDhcpOptions",
        "executeGetApnsSandboxChannel",
        "executeCreateGroupMembership",
        "executeCreateDeploymentConfig",
        "executeAddApplicationOutput",
        "executeUpdateAvailabilityOptions",
        "executeCreateTypedLinkFacet",
        "executeCreateTransitGatewayVpcAttachment",
        "executeCreateNotificationSubscription",
        "executeGetRawMessageContent",
        "executeCreateResolverEndpoint",
        "executeGetIdentityPoolRoles",
        "executeGetExportJobs",
        "executeGetApplicationDateRangeKpi",
        "executeGetResolverEndpoint",
        "executeGetResolverRuleAssociation",
        "executeGetVoiceConnectorStreamingConfiguration",
        "executeGetConferenceProvider",
        "executeGetJourney",
        "executeCreatePresignedNotebookInstanceUrl",
        "executeGetRepositoryPolicy",
        "executeCreateTransitGateway",
        "executeGetIPSet",
        "executeGetUsagePlanKeys",
        "executeGetRelationalDatabaseSnapshots",
        "executeCreateNetworkAclEntry",
        "executeDeleteConfigurationSetTrackingOptions",
        "executeGetSegmentVersion",
        "executeGetVoiceConnectorTerminationHealth",
        "executeGetSchemaAsJson",
        "executeCreateFlowLogs",
        "executeGetRelationalDatabaseSnapshot",
        "executeUpdateDataRetention",
        "executeCreateLBCookieStickinessPolicy",
        "executeGetReusableDelegationSet",
        "executeCreateHsmClientCertificate",
        "executeGetBatchPrediction",
        "executeGetAuthorizationToken",
        "executeCreateVpnConnectionRoute",
        "executeCreateVPCAssociationAuthorization",
        "executeGetDomainStatisticsReport",
        "executeGetCognitoEvents",
        "executeGetEmailIdentity",
        "executeCreateTrialComponent",
        "executeGetSnapshotBlock",
        "executeGetBasePathMappings",
        "executeGetApplicationSettings",
        "executeGetStaticIp",
        "executeCreateFlowDefinition",
        "executeGetSdkType",
        "executeGetRequestValidator",
        "executeGetStreamingDistribution",
        "executeGetExclusionsPreview",
        "executeGetGeoLocation",
        "executeCreateTemplateAlias",
        "executeGetResolverRulePolicy",
        "executeGetQualificationScore",
        "executeGetCapacityReservationUsage",
        "executeGetCampaigns",
        "executeGetHostReservationPurchasePreview",
        "executeGetLoadBalancerMetricData",
        "executeCreateRelationalDatabaseSnapshot",
        "executeGetEmailTemplate",
        "executeGetAppliedSchemaVersion",
        "executeGetRelationalDatabaseLogEvents",
        "executeDeleteVerifiedEmailAddress",
        "executeGetActiveNames",
        "executeCreateReceiptFilter",
        "executeGetSdkTypes",
        "executeDeleteDeviceUsageData",
        "executeCreateWorkerBlock",
        "executeCreateTransitVirtualInterface",
        "executeCreateReceiptRule",
        "executeCreateGameServerGroup",
        "executeGetVpcLinks",
        "executeCreateVpcPeeringAuthorization",
        "executeGetSegmentVersions",
        "executeCreateFieldLevelEncryptionProfile",
        "executeGetPasswordData",
        "executeCreatePublicVirtualInterface",
        "executeGetEventStream",
        "executeCreateSolutionVersion",
        "executeCreateAppCookieStickinessPolicy",
        "executeGetConsoleScreenshot",
        "executeCreateWorkGroup",
        "executeGetReservedInstancesExchangeQuote",
        "executeGetImportJobs",
        "executeGetAlarms",
        "executeGetQueueUrl",
        "executeCreateHsmConfiguration",
        "executeCreateConferenceProvider",
        "executeGetMetricWidgetImage",
        "executeCreateLoadBalancerListeners",
        "executeGetOperationsForResource",
        "executeGetProxySession",
        "executeGetGcmChannel",
        "executeCreateNotebookInstanceLifecycleConfig",
        "executeGetMetricStatistics",
        "executeGetQueryExecution",
        "executeGetRecommendations",
        "executeCreateDBClusterEndpoint",
        "executeCreateLaunchTemplateVersion",
        "executeGetIntegrationResponse",
        "executeCreateDataSourceFromRDS",
        "executeGetSoftwareUpdates",
        "executeGetAuthorizers",
        "executeGetTerminology",
        "executeGetCurrentMetricData",
        "executeCreateDeliverabilityTestReport",
        "executeGetRouteResponses",
        "executeCreateLocalGatewayRoute",
        "executeCreateAdditionalAssignmentsForHIT",
        "executeGetApnsVoipSandboxChannel",
        "executeCreateUsageReportSubscription",
        "executeCreateDBProxy",
        "executeGetSuppressedDestination",
        "executeGetFaceSearch",
        "executeCreateEventSubscription",
        "executeCreateDiskSnapshot",
        "executeGetOpenIdToken",
        "executeCreateDefaultSubnet",
        "executeCreateVoiceTemplate",
        "executeCreateInstanceSnapshot",
        "executeGetDeliverabilityDashboardOptions",
        "executeCreateCustomerGateway",
        "executeCreateRoomMembership",
        "executeGetRelationalDatabases",
        "executeCreateTaskSet",
        "executeGetBasePathMapping",
        "executeGetClientCertificate",
        "executeCreateClientVpnRoute",
        "executeCreateNatGateway",
        "executeCreatePlacementGroup",
        "executeCreatePhoneNumberOrder",
        "executeCreateDeploymentStrategy",
        "executeCreateHITWithHITType",
        "executeCreateRecommenderConfiguration",
        "executeGetShippingLabel",
        "executeGetTypedLinkFacetInformation",
        "executeCreateDBSnapshot",
        "executeGetLabelDetection",
        "executeGetCampaignVersion",
        "executeCreateAssessmentTarget",
        "executeCreateNetworkAcl",
        "executeGetLifecyclePolicies",
        "executeGetMailboxDetails",
        "executeGetExportSnapshotRecords",
        "executeCreateGameSessionQueue",
        "executeGetConfigurationSetEventDestinations",
        "executeGetIdentityVerificationAttributes",
        "executeGetVoiceTemplate",
        "executeGetConferencePreference",
        "executeGetSegmentImportJobs",
        "executeGetAttendee",
        "executeCreateSignalingChannel",
        "executeCreateDataRepositoryTask",
        "executeGetStreamingDistributionConfig",
        "executeGetUsagePlan",
        "executeGetEbsDefaultKmsKeyId",
        "executeGetIdentityDkimAttributes",
        "executeGetFileUploadURL",
        "executeGetRoomSkillParameter",
        "executeCreateVpnGateway",
        "executeUpdateClusterSettings",
        "executeGetRecommenderConfiguration",
        "executeGetAssociatedIpv6PoolCidrs",
        "executeCreateMountTarget",
        "executeCreateDatasetGroup",
        "executeGetIntegrations",
        "executeCreateIAMPolicyAssignment",
        "executeCreateEventTracker",
        "executeGetSendStatistics",
        "executeGetVoiceConnectorTermination",
        "executeCreateCapacityReservation",
        "executeCreateIpGroup",
        "executeCreateBasePathMapping",
        "executeGetAdmChannel",
        "executeGetQualificationType",
        "executeCreateTrial",
        "executeCreateEndpointConfig",
        "executeGetVoiceConnectorLoggingConfiguration",
        "executeCreateWorkteam",
        "executeGetStackPolicy",
        "executeGetDedicatedIps",
        "executeFlushStageAuthorizersCache",
        "executeCreateFieldLevelEncryptionConfig",
        "executeGetRouteResponse",
        "executeGetBulkPublishDetails",
        "executeDescribeOrderableClusterOptions",
        "executeUpdateGlobalSettings",
        "executeCreateCloudFormationStack",
        "executeCreateRestApi",
        "executeGetApplicationRevision",
        "executeGetJourneyDateRangeKpi",
        "executeGetAssessmentReport",
        "executeGetVoiceConnectorOrigination",
        "executeGetVpcLink",
        "executeGetDistributionConfig",
        "executeGetDetectors",
        "executeCreateLoadBalancerPolicy",
        "executeCreateProfilingGroup",
        "executeGetFindingsStatistics",
        "executeCreateStreamingURL",
        "executeGetQueryResults",
        "executeGetDeploymentConfig",
        "executeGetJobManifest",
        "executeCreateCodeRepository",
        "executeRejectVpcPeeringConnection",
        "executeGetInsightRuleReport",
        "executeGetRelationalDatabaseMetricData",
        "executeCreateStackInstances",
        "executeCreateDeploymentGroup",
        "executeGetGatewayResponse",
        "executeGetDocumentationPart",
        "executeCreateInternetGateway",
        "executeCreateDatasetImportJob",
        "executeGetIdentityNotificationAttributes",
        "executeGetCampaignVersions",
        "executeGetRelationalDatabaseParameters",
        "executeCreateStackSet",
        "executeCreateIngestion",
        "executeCreatePartnerEventSource",
        "executeCreateClientVpnEndpoint",
        "executeGetCustomVerificationEmailTemplate",
        "executeGetDetectorVersion",
        "executeUpdateHostedZoneComment",
        "executeGetDocumentationVersions",
        "executeCreateConfigurationProfile",
        "executeGetOperationDetail",
        "executeCreateEgressOnlyInternetGateway",
        "executeCreateRequestValidator",
        "executeGetSkillGroup",
        "executeGetApiKeys",
        "executeGetCredentialsForIdentity",
        "executeGetSmsTemplate",
        "executeGetDocumentationParts",
        "executeGetQueryLoggingConfig",
        "executeGetAccountSettings",
        "executeCreateApplicationSnapshot",
        "executeGetGameSessionLogUrl",
        "executeCreateDataSourceFromS3",
        "executeGetDocumentTextDetection",
        "executeGetDomainDeliverabilityCampaign",
        "executeGetDocumentationVersion",
        "executeCreateRouteResponse",
        "executeCreateMonitoringSchedule",
        "executeCreateSpotDatafeedSubscription",
        "executeGetBlacklistReports",
        "executeCreateFpgaImage",
        "executeGetDomainDetail",
        "executeCreatePublishingDestination",
        "executeGetSnowballUsage",
        "executeCreateIntegrationResponse",
        "executeGetVoiceConnectorGroup",
        "executeCreateVpcPeeringConnection",
        "executeGetRelationalDatabaseEvents",
        "executeCreateCustomVerificationEmailTemplate",
        "executeGetReservedNodeExchangeOfferings",
        "executeUpdateConfigurationSetTrackingOptions",
        "executeCreateSampleFindings",
        "executeGetVaultAccessPolicy",
        "executeCreateConfigurationSetTrackingOptions",
        "executeGetCheckerIpRanges",
        "executeCreateSkillGroup",
        "executeCreateRealtimeEndpoint",
        "executeGetAutoSnapshots",
        "executeGetUsagePlans",
        "executeGetEventsConfiguration",
        "executeGetInvitationsCount",
        "executeCreateNetworkProfile",
        "executeGetOnPremisesInstance",
        "executeGetSendQuota",
        "executeGetSearchSuggestions",
        "executeCreateLoadBalancerTlsCertificate",
        "executeGetModelTemplate",
        "executeGetModelVersion",
        "executeGetDashboardEmbedUrl",
        "executeCreateDocumentClassifier",
        "executeGetLifecyclePolicy",
        "executeCreateMLModel",
        "executeCreateHITType",
        "executeCreateTrafficMirrorTarget",
        "executeCreateQueryLoggingConfig",
        "executeGetSignalingChannelEndpoint",
        "executeGetMediaForFragmentList",
        "executeCreateVpcLink",
        "executeCreateAttendee",
        "executeAddResourcePermissions",
        "executeGetContentModeration",
        "executeGetRestApi",
        "executeGetCloudFormationStackRecords",
        "executeDeleteApplicationCloudWatchLoggingOption",
        "executeCreateLifecyclePolicy",
        "executeGetSmsChannel",
        "executeGetLoadBalancerTlsCertificates",
        "executeCreatePlayerSession",
        "executeCreateNetworkInterfacePermission",
        "executeCreateQualificationType",
        "executeGetDiskSnapshot",
        "executeGetDeploymentGroup",
        "executeCreateAutoScalingGroup",
        "executeCreateTransitGatewayPeeringAttachment",
        "executeCreateModelVersion",
        "executeCreateScheduledAction",
        "executeGetPublicKeyConfig",
        "executeGetMethodResponse",
        "executeGetUsagePlanKey",
        "executeCreateImageBuilderStreamingURL",
        "executeGetHLSStreamingSessionURL",
        "executeCreateEventBus",
        "executeGetNetworkProfile",
        "executeCreateExclusionsPreview",
        "executeGetGlobalSettings",
        "executeCreateStreamingDistributionWithTags",
        "executeGetHealthCheckLastFailureReason",
        "executeCreateLaunchTemplate",
        "executeGetWorkflowExecutionHistory",
        "executeCreateImageBuilder",
        "executeGetCampaignDateRangeKpi",
        "executeCreatePushTemplate",
        "executeCreateApiMapping",
        "executeDeleteDhcpOptions",
        "executeGetIdentityMailFromDomainAttributes",
        "executeGetApnsChannel",
        "executeGetRestApis",
        "executeCreateEmailTemplate",
        "executeGetExternalModels",
        "executeCreateUserProfile",
        "executeGetMasterAccount",
        "executeGetDiskSnapshots",
        "executeGetApnsVoipChannel",
        "executeGetQueueAttributes",
        "executeCreateVpcEndpointConnectionNotification",
        "executeGetDownloadUrlForLayer",
        "executeGetTextDetection",
        "executeCreateDefaultVpc",
        "executeGetOutcomes",
        "executeGetTelemetryMetadata",
        "executeGetClusterCredentials",
        "executeGetMeeting",
        "executeGetJourneyExecutionMetrics",
        "executeGetPhoneNumberOrder",
        "executeCreateMeeting",
        "executeGetConsoleOutput",
        "executeCreateImportJob",
        "executeGetDocumentPath",
        "executeCreateTrafficMirrorFilterRule",
        "executeGetVaultLock",
        "executeCreateMatchmakingConfiguration",
        "executeCreateLaunchConfiguration",
        "executeGetCurrentUser",
        "executeCreateHumanTaskUi",
        "executeCreateDetectorVersion",
        "executeGetDomainNames",
        "executeGetDASHStreamingSessionURL",
        "executeCreateDBClusterSnapshot",
        "executeGetVoiceChannel",
        "executeGetEbsEncryptionByDefault",
        "executeCreateDirectConnectGatewayAssociation",
        "executeGetConfigurationProfile",
        "executeGetInvitationConfiguration",
        "executeGetDeliverabilityTestReport",
        "executeGetClientCertificates",
        "executeGetIdentityPoolConfiguration",
        "executeGetTemplateSummary",
        "executeGetHealthCheckStatus",
        "executeGetInstanceMetricData",
        "executeCreateRouteTable"
      ],
      "Syntactic Label": "Method Name",
      "Semantic Tags": [
        "AWS Service Integration",
        "API Interaction",
        "Request Processing",
        "Asynchronous Operations",
        "Resource Management"
      ],
      "Description": "These tokens represent the names of methods that likely interact with various AWS services.  The methods appear to handle requests, execute operations, and manage resources within the AWS ecosystem. The pattern suggests an asynchronous design where each method likely performs an operation and returns a result. The `execute...` prefix indicates that these methods are likely wrappers or internal functions that perform the actual service calls."
    }
  },
  {
    "c364": {
      "Unique tokens": [
        "",
        "supported",
        "to",
        "StringBuilder",
        "idx",
        "++",
        "appendCellReference",
        "formatAsString",
        "<",
        "else",
        "sheetName",
        "array.",
        "break",
        "short",
        "append",
        ")",
        "int",
        "nr",
        "apache",
        "rcIx",
        "shIx2",
        "result",
        "-",
        "shIx1",
        "if",
        "Bad",
        "null",
        ",",
        "sb",
        "tokenIndex",
        "of",
        ">",
        "cce",
        "[",
        "<=",
        "getSheetName",
        "*",
        "==",
        "formatString",
        ">=",
        "this",
        "continue",
        "true",
        "formula.",
        "size",
        "1",
        "beyond",
        "for",
        "temp",
        "firstSheetName",
        "!",
        "remove",
        ".",
        "return",
        "throw",
        "relative",
        "new",
        "+",
        "but",
        "is",
        "matches",
        "add",
        "=",
        "final",
        "key",
        "length,",
        "(",
        "i",
        "in",
        "instanceof",
        "extBookIndex",
        "_externSheetRecord",
        "!=",
        ";",
        "\"",
        "::",
        "getRowNum",
        "max",
        "the",
        "crA",
        "0",
        "sheet",
        "List",
        "}",
        "{",
        "CountryRecord",
        "]",
        "+=",
        ":",
        "field_1_number_of_sheets",
        "&&",
        "value",
        "changed",
        "_lastCell",
        "an",
        "rv",
        "firstSheetIndex",
        "contains",
        "a",
        "was",
        "String"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Spreadsheet Data Manipulation",
        "Formula Evaluation",
        "External Workbook References",
        "Record Management",
        "Error Handling"
      ],
      "Description": "The tokens represent a wide range of C# language constructs used in manipulating spreadsheet data.  They include keywords (if, else, for, while), operators (+, -, *, /, ==, !=, <, >, <=, >=), identifiers (method names, variable names, class names), and special characters (parentheses, brackets, commas, etc.). The code snippets demonstrate functionalities such as row and cell manipulation, formula evaluation, handling external workbook references, and managing various record types within a spreadsheet structure.  The semantic tags highlight the core functionalities of the code, which are centered around spreadsheet data processing and management."
    }
  },
  {
    "c365": {
      "Unique tokens": [
        "jj_rescan_token",
        ",",
        ".",
        "return",
        "j",
        "new",
        "token",
        "0",
        "jj_expentries",
        "+",
        "++",
        "jj_expentry",
        "get",
        "[",
        "}",
        "<<",
        "<",
        "{",
        ";",
        "jj_kind",
        "ParseException",
        "==",
        "add",
        "=",
        "]",
        "jj_endpos",
        "32",
        ")",
        "&",
        "int",
        "jj_add_error_token",
        "24",
        "jj_la1_1",
        "33",
        "(",
        "la1tokens",
        "true",
        "jj_la1_0",
        "size",
        "1",
        "34",
        "i",
        "for",
        "exptokseq",
        "-",
        "jj_gen",
        "!=",
        "if"
      ],
      "Syntactic Label": "C# Tokens in ParseException Generation",
      "Semantic Tags": [
        "Error Handling",
        "Parser Generation",
        "Lexical Analysis",
        "Token Management",
        "Error Reporting"
      ],
      "Description": "The tokens are part of a C# method that generates a ParseException.  They manage tokens, error reporting, and the creation of an error message.  The code iterates through lookahead tokens (la1tokens) to determine which tokens caused the parse error.  The method uses several arrays and boolean flags to track token information.  The jj_expentries list stores the erroneous tokens, and the exptokseq array is created from it to be included in the ParseException.  The method is crucial for providing detailed error messages during parsing."
    }
  },
  {
    "c366": {
      "Unique tokens": [
        "field_8_adtl_palette_options",
        "field_4_shapeid",
        "INFO",
        "field_2_row_active_cell",
        "field_3_color_palette_index",
        "field_6_underline",
        "field_11_tickColor",
        "0x00",
        "readUnicodeLEString",
        "field_4_background",
        "StringUtil",
        "writeShort",
        "++",
        "field_3_not_used",
        "2",
        "field_7_comment_text",
        "?",
        "field_7_options",
        "field_5_super_sub_script",
        "field_3_unicode_len",
        "field_2_verticalAlignment",
        "else",
        "field_6_refs",
        "field_5_labelColorRgb",
        "field_5_x",
        "readUnicodeLE",
        ")",
        "field_3_page_start",
        "field_5_type",
        "field_9_options1",
        "int",
        "field_2_attributes",
        "field_7_family",
        "length",
        "available",
        "field_6_value",
        "field_6_border_options",
        "Formula",
        "field_9_zero4",
        "field_6_res",
        "_name",
        "field_11_font_name",
        "field_7_width",
        "if",
        "field_7_hresolution",
        "field_10_font_name_len",
        "field_5_indention_options",
        ",",
        "readShort",
        "field_12_zero5",
        "field_10_options",
        ">",
        "field_4_active_cell_ref_index",
        "field_3_xf_index",
        "field_3_cell_options",
        "_ddeValues",
        "field_2_top_row",
        "field_3_reserved",
        "read",
        "==",
        "field_3_left_col",
        "field_7_reserved",
        ">=",
        "field_3_displayMode",
        "readUByte",
        "field_6_zero1",
        "field_7_zero2",
        "Byte",
        "field_4_header_color",
        "4",
        "true",
        "field_2_minorTickType",
        "1",
        "size",
        "field_6_normal_zoom",
        "field_2_format_index",
        "remains:",
        "for",
        "field_3_flags",
        "field_9_headermargin",
        "nbestCost",
        "boolean",
        "readCompressedUnicode",
        "parse",
        "ris",
        ".",
        "return",
        "field_4_rgbColor",
        "field_5_fit_height",
        "source",
        "new",
        "POILogger",
        "nRows",
        "nColumns",
        "+",
        "log",
        "field_12_textRotation",
        "field_5_num_refs",
        "readByte",
        "field_3_col_active_cell",
        "field_6_spacing",
        "=",
        "field_4_alignment_options",
        "final",
        "field_11_copies",
        "unicodeFlags",
        "field_7_rowInputRow",
        "field_10_footermargin",
        "field_7_padding",
        "(",
        "field_9_zero",
        "writeByte",
        "field_3_xSize",
        "valueOf",
        "i",
        "in",
        "field_2_col",
        "ConstantValueParser",
        "putUnicodeLE",
        "field_8_height",
        "field_6_rversion",
        "/",
        "field_2_column",
        "field_5_unicode_flag",
        ";",
        "\"",
        "field_2_scale",
        "field_4_name_length",
        "field_10_colInputCol",
        "totalCount",
        "field_4_fit_width",
        "field_4_bold_weight",
        "0",
        "field_7_palette_options",
        "field_9_fill_palette_options",
        "field_5_hasMultibyte",
        "field_6_name_text",
        "LabelRecord",
        "field_8_colInputRow",
        "toHex",
        "out",
        "}",
        "rgchDefPivotStyle",
        "{",
        "field_4_string_len",
        "field_3_hasMultibyte",
        "field_6_author",
        "field_10_indexOfColorValue",
        "formulaLen",
        "]",
        "readUShort",
        "field_6_y",
        "field_2_ixals",
        "remaining",
        "field_11_options2",
        "field_6_options",
        "CellRangeAddress8Bit",
        ":",
        "field_9_rowInputCol",
        "field_3_labelPosition",
        "_nColumns",
        "&&",
        "field_5_name_definition",
        "field_5_comment_length",
        "logger",
        "field_2_yAxisUpperLeft",
        "field_4_name",
        "field_4_ySize",
        "_nRows",
        "HexDump"
      ],
      "Syntactic Label": "Data Fields",
      "Semantic Tags": [
        "Data Representation",
        "Record Structures",
        "File I/O",
        "Data Deserialization",
        "Binary Data"
      ],
      "Description": "These tokens represent data fields within various C# record structures.  The code demonstrates reading data from a RecordInputStream, which suggests deserialization of binary data from a file or stream.  Each field likely corresponds to a specific attribute or property of the record, and the usage of readShort, readByte, readInt, etc., indicates the process of extracting data from a binary format."
    }
  },
  {
    "c367": {
      "Unique tokens": [
        "",
        "channel(%d)",
        "SnapshotDeletionPolicy.SnapshotCommitPoint(",
        "f",
        "policyName",
        "FacetField(dim=",
        "getDirCache",
        "HSSFConditionalFormattingRule",
        "arearef",
        "(maxLevels:",
        "events",
        "?",
        "Jelinek-Mercer(%f)",
        "ShardRef(shardIndex=",
        "SortedSetDocValuesFacetField(dim=",
        "<",
        "IndexFileDeleter.CommitPoint(",
        "mode(%d)",
        ")",
        "FormatType",
        "Ptg",
        "getQueryConfigHandler",
        "executionStatusDetail",
        "term=",
        "list",
        "-",
        "repo",
        "sNSTopic",
        "ValueRecordsAggregate,",
        "null",
        ",",
        "sb",
        "sets",
        "TermStats:",
        "[",
        "FormatAndBits(format=",
        "fs",
        "*",
        "==",
        "PerFieldAnalyzerWrapper(",
        "type(%d)",
        "this",
        "model",
        "name",
        "complexSize",
        "scriptBootstrapAction",
        "size",
        "1",
        "lineMap",
        "output",
        "StandardCharsets",
        "MultiDocsAndPositionsEnum(",
        ",creationTime=",
        ".",
        "ArrayUtil",
        "hadoopJarStep",
        "debug",
        "new",
        "+",
        "s3:",
        "LexerATNSimulator",
        "serverCertificateMetadata",
        "INSTANCE",
        "=",
        "hssf",
        "(",
        "db",
        "in",
        "externIdx",
        "aliyun-java-sdk-",
        "!=",
        ";",
        "\"",
        "jarowinkler(",
        "postingsReader",
        "MultiTermsEnum(",
        "Dirichlet(%f)",
        "0",
        "sheet",
        "r",
        "pushMode(%d)",
        "SkipWorkTree(",
        "NativeFSLock(path=",
        ":",
        "fst",
        "JSON",
        "&&",
        "dictFile",
        "create",
        "field_5_name_definition",
        "Ptg,",
        "ShardIter(shard=",
        "stepConfig",
        "Cell(readerIndex=",
        ",impl=",
        "getDefault"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Processing",
        "Filtering",
        "Stream Processing"
      ],
      "Description": "The tokens represent a wide variety of C# language elements, including keywords (public, return, new), operators (+, -, =, ==, !=, &&), identifiers (method names, variable names, class names), and special symbols (, ., ;, (, )).  These tokens are used in the context sentences to create objects, invoke methods, process data, filter streams, and perform other operations. The semantic tags reflect the common functionalities observed in the provided code snippets."
    }
  },
  {
    "c368": {
      "Unique tokens": [
        "isEnabled",
        "getFormat",
        "isSame",
        "get",
        "addAll",
        "equals",
        "isOffsetOverlap",
        "matches",
        "getValue",
        "sameProperties",
        "previous",
        "void",
        "isEmpty",
        "stem",
        "equalsContents",
        "removeAll",
        "isSigned",
        "compareSameType",
        "doLogic",
        "next",
        "int",
        "set",
        "containsAll",
        "hasNext",
        "check",
        "compare",
        "isValid",
        "contains",
        "run",
        "boolean",
        "String",
        "isMatch",
        "compareTo"
      ],
      "Syntactic Label": "Methods and Boolean Variables",
      "Semantic Tags": [
        "Equality Checks",
        "Object Comparison",
        "Data Processing",
        "Algorithm Implementation",
        "Boolean Logic"
      ],
      "Description": "The tokens represent a collection of methods and boolean variables commonly used in C# programming.  Methods like `equals`, `contains`, `compareTo`, `addAll`, `removeAll` are frequently used for object comparison, data manipulation, and set operations. Boolean variables and methods such as `isEnabled`, `isEmpty`, `isValid`, `isMatch`, `isOffsetOverlap`, `isSigned` are used extensively in conditional logic and control flow. The `int` and `String` types indicate data types used in these methods.  The presence of methods like `stem` suggests text processing or stemming algorithms are being implemented.  The overall context suggests the code snippets are part of a larger system performing data processing, comparison, and potentially natural language processing tasks."
    }
  },
  {
    "c369": {
      "Unique tokens": [
        "\"",
        "charAt",
        "null",
        ".",
        "return",
        "q",
        "position",
        "throw",
        "version",
        "new",
        "0",
        "?",
        "r",
        "}",
        "sval",
        "false",
        "e",
        "fieldNames",
        "=",
        ":",
        "this",
        ")",
        "Boolean",
        "subtract",
        "open",
        "buf",
        "assert",
        "(",
        "true",
        "create",
        "size",
        "Integer",
        "valueOf",
        "result",
        "i",
        "vals",
        "Double",
        "-",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Object Creation",
        "Data Structures",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"return\", \"throw\", \"new\", and operators like \".\", \"=\", \"==\", and \";\" are fundamental to C# syntax.  Data structures such as arrays and collections (\"ArrayList\", \"List\", etc.) are used.  The code demonstrates control flow (\"if\", \"else\", \"for\", \"switch\"), exception handling (\"throws\", \"catch\"), object creation (\"new\"), and string manipulation (\"StringBuilder\", \"toString\").  The semantic tags reflect the diverse functionalities present in the code snippets."
    }
  },
  {
    "c370": {
      "Unique tokens": [
        "",
        "getRecordClass",
        "/network/interfaces/macs/",
        "EQUAL",
        "LOG",
        "nodes",
        "newbuf",
        "children",
        "token",
        "toArray",
        "?",
        "srv",
        "Collections",
        "CUSTOM",
        "<",
        "date",
        "else",
        "streamId",
        "cal",
        "clone",
        "copy",
        "break",
        "dst",
        "reader",
        ")",
        "force",
        "fetch",
        "int",
        "UNSET",
        "w5",
        "buf",
        "parent2",
        "tfr",
        "formula",
        "buffer",
        "node",
        "result",
        "w3",
        "list",
        "-",
        "content",
        "group",
        "if",
        "offset",
        "data",
        "null",
        ",",
        "try",
        "sb",
        "eof",
        "series",
        "obj",
        "props",
        "default",
        ">",
        "first",
        "DirCacheIterator",
        "DirCacheBuildIterator",
        "substring",
        "shape",
        "[",
        "DONE",
        "lineSeparator",
        "Arrays",
        "end",
        "UNSPECIFIED",
        "==",
        "ArrayList",
        "false",
        "w4",
        ">=",
        "last",
        "payload",
        "this",
        "ref",
        "name",
        "delegate",
        "monitor",
        "Result",
        "s",
        "true",
        "t",
        "Date",
        "1",
        "synchronized",
        "for",
        "intervals",
        "!",
        "getChild",
        "removed",
        "provider",
        "arraycopy",
        "composer",
        ".",
        "return",
        "char",
        "throw",
        "--",
        "w2",
        "pm",
        "new",
        "sst",
        "id",
        "+",
        "log",
        "cv",
        "bufferOffset",
        "equals",
        "v",
        "cells",
        "INSTANCE",
        "newText",
        "toString",
        "entries",
        "field",
        "add",
        "=",
        "while",
        "prior",
        "next",
        "rval",
        "key",
        "assert",
        "lock",
        "filename",
        "(",
        "side",
        "File",
        "calendar",
        "o",
        "newName",
        "directory",
        "state",
        "diff",
        "i",
        "catch",
        "n",
        "message",
        "parent1",
        "string",
        "!=",
        ";",
        "\"",
        "err",
        "wb",
        "res",
        "writer",
        "finally",
        "StringBuffer",
        "input",
        "context",
        "0",
        "get",
        "r",
        "c",
        "src",
        "System",
        "}",
        "case",
        "'",
        "listIterator",
        "title",
        "{",
        "filter",
        "autoFlush",
        "current",
        "serializer",
        "parent",
        "thisId",
        "]",
        ":",
        "fst",
        "iterator",
        "&&",
        "NOOP",
        "func",
        "value",
        "count",
        "rc",
        "m",
        "EMPTY",
        "post",
        "a",
        "unlock",
        "replaceAll",
        "String",
        "super",
        "other"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c371": {
      "Unique tokens": [
        "stop",
        "f",
        "query",
        "roleArn",
        "tags",
        "qf",
        "patchFormatException",
        "b",
        "?",
        "millis",
        "loader",
        "refs",
        "green",
        "getRuleIndex",
        "<",
        "date",
        "clientProfile",
        "DEFAULT_MAX_DETERMINIZED_STATES",
        "automaton",
        "stripString",
        ")",
        "append",
        "why",
        "length",
        "getOutputStream",
        "WARN",
        "StringReader",
        "Integer",
        "result",
        "ctx",
        "-",
        "fieldName",
        "config",
        "null",
        ",",
        "obj",
        "unmergedPath",
        "regularExpression",
        ">",
        "OBJECTS",
        "use",
        "categoriesName",
        "1.0F",
        "[",
        "getName",
        "Operations",
        "fs",
        "*",
        "locale",
        "getQueryID",
        "typeString",
        "==",
        "float",
        "this",
        "name",
        "ref",
        "4",
        "getEscherContainer",
        "1",
        "size",
        "getClass",
        "double",
        "getLeaf",
        "queryText",
        "Map",
        "complexData",
        "tableName",
        "getChild",
        "charAt",
        "missingObject",
        ".",
        "char",
        "preserve_original",
        "dir",
        "returnStates",
        "index",
        "new",
        "dce",
        "id",
        "+",
        "longLivedCredentials",
        "escapeSyntaxParser",
        "refUpdateReturnCodeWas",
        "singletonMap",
        "v",
        "getInputStream",
        "toString",
        "field",
        "KEY",
        "currentThread",
        "stats",
        "key",
        "baos",
        "(",
        "File",
        "d",
        "recognizer",
        "i",
        "in",
        "categoryPath",
        "_ctx",
        "n",
        "term",
        "message",
        "/",
        "!=",
        ";",
        "type",
        "\"",
        "JGitText",
        "path",
        "ps",
        "row",
        "ROOT",
        "input",
        "0",
        "isDirNoGitLinks",
        "format",
        "get",
        "section",
        "r",
        "Locale",
        "start",
        "c",
        "'",
        "HEAD",
        "{",
        "blue",
        "errors",
        "e",
        "WorkingTreeOptions",
        "]",
        ":",
        "YEAR",
        "_array",
        "ec",
        "createNewFileFailed",
        "Constants",
        "rc",
        "\\n",
        "branchnames",
        "defaultField",
        "StaticCredentialsProvider",
        "NONE",
        "fields",
        "columnIndex",
        "T",
        "a",
        "numfonts",
        "object",
        "other"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object Manipulation",
        "Method Invocation",
        "Control Flow",
        "Exception Handling",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (public, boolean, if, else, return, throws, etc.), operators (+, -, ==, !=, ., etc.), identifiers (shape, stats, out, etc.), literals (1.0F, 0, null, etc.), and special symbols (, ), {, }, [, ], <, >, etc.).  These tokens are used in various contexts within the provided code snippets, which demonstrate object manipulation (method calls, object creation), control flow (if-else statements, loops), exception handling (try-catch blocks), and file I/O operations. The semantic tags capture the essence of these functionalities."
    }
  },
  {
    "c372": {
      "Unique tokens": [
        "setCachedResultTypeString",
        "getTrackingRefUpdate",
        "addConsumingCell",
        ")",
        "getLastSheetIndexFromExternSheetIndex",
        "getSheetFirstNameByExternSheet",
        "findUserDefinedFunction",
        "setCachedResultErrorCode",
        "getSheetLastNameByExternSheet",
        "("
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "Data Retrieval",
        "Data Manipulation",
        "Spreadsheet Processing",
        "Function Management",
        "Result Setting"
      ],
      "Description": "These tokens represent method names in C#, likely part of a class designed for spreadsheet or data manipulation tasks.  They suggest actions related to retrieving data (get...), manipulating data (add..., set...), and managing functions (findUserDefinedFunction). The methods seem to interact with cached results (setCachedResult...) and potentially handle errors (setCachedResultErrorCode).  The presence of 'getSheetFirstNameByExternSheet' and 'getSheetLastNameByExternSheet' strongly indicates spreadsheet-related operations."
    }
  },
  {
    "c373": {
      "Unique tokens": [
        "="
      ],
      "Syntactic Label": "Assignment Operator",
      "Semantic Tags": [
        "Parameter Assignment",
        "Method Invocation",
        "Request Handling",
        "Client-side Execution",
        "AWS SDK"
      ],
      "Description": "The '=' operator assigns values, primarily to method parameters.  In this context, it's part of a pattern where a request object is pre-processed before being passed to an execution method. This is a common pattern in AWS SDKs for handling requests and is crucial for tasks like adding authentication or modifying requests before sending them to the AWS service."
    }
  },
  {
    "c374": {
      "Unique tokens": [
        "paths",
        "f",
        "createDefaultTree",
        "constraint",
        "recog",
        "CellRangeAddressList",
        "query",
        "HadoopJarStepConfig",
        "qf",
        "rec",
        "sheetname",
        "b",
        "arearef",
        "element",
        "vs",
        "initialSet",
        "IndexReaderContext",
        "analyzer",
        "dcb",
        "tableArray",
        "StepExecutionStatusDetail",
        "algorithm",
        "HSSFWorkbook",
        "toolPack",
        "<",
        "scorer",
        "fieldPhraseList",
        "old",
        "invalidationBatch",
        "person",
        "reader",
        "allocator",
        ")",
        "ServerCertificateMetadata",
        "queryScorer",
        "set",
        "why",
        "pathFilter",
        "str",
        "cell",
        "executionStatusDetail",
        "taxonomyReader",
        "BasicQueryFactory",
        "oi",
        "AnyObjectId",
        "tree",
        "ent",
        "textComparator",
        "walker",
        "ctx",
        "formatter",
        "cf",
        "repo",
        "ProgressMonitor",
        "fld",
        "toRemove",
        "IntBlockPool",
        "basePath",
        "data",
        "instances",
        ",",
        "q",
        "FileRepository",
        "encryptionMaterials",
        "obj",
        "stream",
        "workbook",
        ">",
        "entryPath",
        "shape",
        "[",
        "WorkingTreeIterator",
        "iterateOn",
        "distribution",
        "fs",
        "childRecord",
        "destination",
        "bi",
        "cfAggregate",
        "lower",
        "builder",
        "prop",
        "utf8",
        "file",
        "subject",
        "model",
        "name",
        "TokenStream",
        "cfRule",
        "cellLoc",
        "grid",
        "facets",
        "monitor",
        "ref",
        "termInfo",
        "formulaShifter",
        "s",
        "task",
        "target",
        "bindings",
        "DataOutput",
        "t",
        "anchor",
        "QueryScorer",
        "fi",
        "RecordInputStream",
        "SemanticContext",
        "evalSheet",
        "session",
        "listener",
        "commit",
        "walk",
        "p",
        "distributionConfig",
        "RawTextComparator",
        "IndexReader",
        "maskedQuery",
        "frac",
        "factory",
        "localctx",
        "toAppendTo",
        ".",
        "re",
        "hadoopJarStep",
        "dir",
        "bytes",
        "allGroupHeads",
        "pm",
        "toBeRemoved",
        "runData",
        "source",
        "searcher",
        "id",
        "nameRecord",
        "pred",
        "match",
        "newTree",
        "defaultConfig",
        "header",
        "control",
        "is",
        "escapeSyntaxParser",
        "Bindings",
        "parser",
        "TokenNameFinderModel",
        "serverCertificateMetadata",
        "cra",
        "POIFSFileSystem",
        "field",
        "terms",
        "JobFlowInstancesConfig",
        "outputStream",
        "stats",
        "newLeaf",
        "key",
        "credentialsProvider",
        "cache",
        "(",
        "comparator",
        "o",
        "IndexSearcher",
        "workingTreeIterator",
        "directory",
        "book",
        "state",
        "SpreadsheetVersion",
        "recognizer",
        "db",
        "diff",
        "record",
        "NameRecord",
        "in",
        "fieldInfo",
        "os",
        "sortWithinGroup",
        "product",
        "term",
        "n",
        "DirectoryTaxonomyReader",
        "newParent",
        "grammarType",
        "message",
        "queryConfigHandler",
        "sort",
        "mode",
        "diffAlgorithm",
        "type",
        "ssVersion",
        "Analyzer",
        "err",
        "path",
        "tokenStream",
        "input",
        "DataInput",
        "context",
        "namePtg",
        "sheet",
        "bytesRef",
        "format",
        "oldTree",
        "r",
        "out",
        "BytesRef",
        "src",
        "c",
        "collator",
        "workingTreeIt",
        "assignedClass",
        "lexer",
        "cfg",
        "filter",
        "termsEnum",
        "analyer",
        "atn",
        "externSheetIndex",
        "]",
        "cmd",
        "Allocator",
        "newFilter",
        "escaper",
        "toopack",
        "PerfRunData",
        "fragment",
        "revision",
        "IntsRef",
        "br",
        "dictFile",
        "func",
        "value",
        "m",
        "PredictionContextCache",
        "rv",
        "constant",
        "blob",
        "ExternSheetRecord",
        "cvRec",
        "newFragment",
        "..",
        "a",
        "stepConfig",
        "sheetIdentifier",
        "rs",
        "udf",
        "other",
        "FuzzySet"
      ],
      "Syntactic Label": "Method parameters, Method return types, Method names, Local variables, Objects, Dot Operator",
      "Semantic Tags": [
        "Tokenization",
        "Filtering",
        "Stemming",
        "Normalization",
        "Text Processing"
      ],
      "Description": "The tokens represent various parts of methods in a text processing library.  Many methods take a TokenStream as input and return a modified TokenStream.  This suggests a pipeline architecture where tokens are processed sequentially through various filters, stemmers, and normalizers.  The presence of objects like ProgressMonitor,  Repository, and others indicates that the code might be part of a larger system with monitoring and data management capabilities. The dot operator is used extensively for method invocation on objects."
    }
  },
  {
    "c375": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "Input",
        "AWS SDK",
        "Client-side Request"
      ],
      "Description": "The token 'request' represents a parameter passed to numerous methods.  These methods appear to be part of an AWS SDK, likely interacting with an API Gateway. Each method takes a request object as input, processes it (potentially using 'beforeClientExecution'), and then executes a corresponding operation. The semantic tags reflect this role in handling client-side requests within an AWS environment."
    }
  },
  {
    "c376": {
      "Unique tokens": [
        "\"",
        "d=%s:",
        "getFontIndex",
        ".",
        "return",
        "getRowSumsRight",
        "sb",
        "byteToHex",
        "ambigAlts=%s,",
        "getActiveCellRow",
        "unused",
        "UnicodeString",
        ".numrefs",
        "+",
        ".sheetname",
        "++",
        "multi-cell",
        ".alternateex=",
        "ord=",
        "'",
        "}",
        "getFirstCol",
        "_iSel",
        "{",
        ".dialog",
        "toString",
        "intToHex",
        "getOffset",
        "=",
        "retval",
        ":",
        "getLastColumn",
        "field_1_number_of_sheets",
        "append",
        ")",
        "isxvi",
        "%s%02d%02d",
        "is16bit",
        "getFillBackgroundColor",
        "hssf",
        "_linkOpts",
        "getWSBool2",
        "Ptg",
        "field_4_text",
        "'internal",
        "(",
        "toHexString",
        "field_5_name_definition",
        "ERRORS]",
        "\\n",
        "Integer",
        "buffer",
        "HLINK_PLACE",
        "i",
        "checkInconsistentRanges",
        "_",
        "getDialog",
        ".wsbool2",
        "line.separtor",
        "/repos/[RepoNamespace]/[RepoName]/tags/[Tag]",
        "getXFIndex",
        "shortToHex",
        ".reserved",
        "iObjectKind",
        "HexDump",
        "isStacked",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in String Manipulation and Object Representation",
      "Semantic Tags": [
        "String Manipulation",
        "Object Representation",
        "Data Serialization",
        "Hexadecimal Conversion",
        "Record Management"
      ],
      "Description": "The tokens represent a variety of C# language elements used extensively in string manipulation and object representation.  The code snippets demonstrate the construction of strings from various data types using StringBuilder, frequent use of the dot operator for method calls, and conversion of data to hexadecimal representation.  The overall purpose appears to be the serialization of data into a string format, likely for logging, debugging, or data exchange.  The semantic tags reflect these core functionalities."
    }
  },
  {
    "c377": {
      "Unique tokens": [
        "httpVerb",
        "setProtocol",
        "setHttpMethod",
        "setParams",
        ".",
        "setMethod",
        "setUriPattern",
        "uriResourcePath"
      ],
      "Syntactic Label": "Method Call",
      "Semantic Tags": [
        "HTTP Request Configuration",
        "API Interaction",
        "Request Parameter Setting",
        "URI Pattern Definition",
        "Protocol Specification"
      ],
      "Description": "The tokens represent methods used to configure HTTP requests.  `setProtocol`, `setHttpMethod`, `setParams`, `setMethod`, `setUriPattern` are methods that set various aspects of an HTTP request, such as the protocol (HTTPS), HTTP method (GET, POST, PUT, DELETE), parameters, and URI pattern. The `.` operator is the member access operator in C#, used to call these methods. `httpVerb` and `uriResourcePath` appear to be related to HTTP verbs and resource paths, respectively, likely used in constructing the request URI.  These tokens are significant in the context of C# because they demonstrate how to build and configure HTTP requests, a common task in client-server interactions and API integrations."
    }
  },
  {
    "c378": {
      "Unique tokens": [
        "forwardSize",
        "unused1",
        "stop",
        "separatorIndex",
        "off",
        "position",
        "yylength",
        "to",
        "iSize",
        "newbuf",
        "version",
        "b",
        "h",
        "idx",
        "Math",
        "++",
        "2",
        "?",
        "val",
        "asList",
        "ptr",
        "chars",
        "nameIndex",
        "offsets",
        "blockSize",
        "<",
        "hash",
        "long",
        "_red",
        "lines",
        "short",
        "_data",
        "dst",
        "CRC32",
        ")",
        "getColumn",
        "includeOrig",
        "int",
        "w5",
        "length",
        "buf",
        "str",
        "0xff",
        "currentOff",
        "buffer",
        "startOffset",
        "Integer",
        "result",
        "w3",
        "bs",
        "_green",
        "-",
        "x",
        "commands",
        "from",
        "aux",
        "getId",
        "pos",
        "EOF",
        "Float",
        "3",
        "bold",
        "offset",
        "limit",
        "data",
        ",",
        "null",
        "base",
        "sb",
        "39",
        "countWords",
        "getHeight",
        "stream",
        "blocks",
        "keys",
        "len",
        "substring",
        "[",
        "_blue",
        "end",
        "*",
        "==",
        "false",
        "_limit",
        "isWhitespace",
        "byte",
        "bufferSize",
        "byteCount",
        "w4",
        "this",
        "48",
        "32",
        "ref",
        "_count",
        "63L",
        "4",
        "carray",
        "newValue",
        "newLength",
        "ttype",
        "snapshot",
        "idOffset",
        "s",
        "true",
        "ourMin",
        "LA",
        "1",
        "size",
        "totalTasks",
        "cur",
        "propertyValue",
        "output",
        "p",
        "color",
        "complexData",
        "slice",
        "table",
        ".",
        "char",
        "bytes",
        "index",
        "idBuffer",
        "w2",
        "eol",
        "new",
        "actualSize",
        "+",
        "_offset",
        "log",
        "mem",
        "password",
        "is",
        "setSize",
        "16",
        "v",
        "entries",
        "width",
        "elements",
        "endOffset",
        "height",
        "tmp",
        "key",
        "(",
        "other",
        "MathUtil",
        "shift",
        "gen",
        "valueOf",
        "i",
        "lastIndex",
        "unused2",
        "n",
        "w",
        "fromIndex",
        "string",
        ">>",
        ";",
        "path",
        "sc",
        "location",
        "max",
        "min",
        "0",
        "rowIndex",
        "fullPath",
        "thedata",
        "getRow",
        "start",
        "src",
        "}",
        "<<",
        "_buf",
        "mSize",
        "Character",
        "_writeIndex",
        "blue",
        "y",
        "precedence",
        "]",
        "+=",
        ":",
        "bos",
        "dstOffset",
        "&",
        "_array",
        "24",
        "sub",
        "value",
        "red",
        "count",
        "Constants",
        "columnIndex",
        "64",
        "Double",
        "forwardId",
        "TYPE_TREE",
        "8",
        "BYTES",
        "array"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "Input/Output Operations",
        "String Manipulation",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including variables, keywords, operators, and method calls.  They are used in various contexts, such as array manipulation (e.g., `System.arraycopy`, `array.length`), string processing (e.g., `substring`, `append`), file I/O (e.g., `read`, `write`), and control flow (e.g., `for`, `if`, `while`). The semantic tags reflect the diverse functionalities performed by the code snippets containing these tokens."
    }
  },
  {
    "c379": {
      "Unique tokens": [
        "DeleteFlowDefinitionResult",
        "CreateBasePathMappingResult",
        "DescribeVpnGatewaysResult",
        "DeleteStreamProcessorResult",
        "DescribeExportTasksResult",
        "UpdateStackSetResult",
        "StartMonitoringScheduleResult",
        "DescribeKeyPairsResult",
        "RebuildWorkspacesResult",
        "DescribeInstanceAttributeResult",
        "DeleteTemplateAliasResult",
        "DeleteDocumentClassifierResult",
        "StartHumanLoopResult",
        "RegisterAVSDeviceResult",
        "DeleteTagsResult",
        "DisassociateVPCFromHostedZoneResult",
        "DeleteUserEndpointsResult",
        "DeleteNotificationConfigurationResult",
        "DeleteIndexFieldResult",
        "ListContactFlowsResult",
        "DescribeReservedInstancesModificationsResult",
        "DescribeReservedNodeOfferingsResult",
        "DescribeWorkteamResult",
        "ListCompilationJobsResult",
        "DisassociateQualificationFromWorkerResult",
        "DescribePendingMaintenanceActionsResult",
        "SetVaultNotificationsResult",
        "DescribeReservedCacheNodesOfferingsResult",
        "DeleteMatchmakingRuleSetResult",
        "CancelExportTaskResult",
        "DescribeAlarmsResult",
        "StartExportTaskResult",
        "AssignPrivateIpAddressesResult",
        "DescribeCoipPoolsResult",
        "RemoveTagsFromResourceResult",
        "DeleteTerminologyResult",
        "DeleteKnownHostKeysResult",
        "CreateMonitoringScheduleResult",
        "DeleteJourneyResult",
        "ListTypesResult",
        "ListModelPackagesResult",
        "DescribeStaleSecurityGroupsResult",
        "DeleteSnapshotScheduleResult",
        "UpdateHostedZoneCommentResult",
        "AttachClassicLinkVpcResult",
        "DescribeAccountAttributesResult",
        "ConfirmProductInstanceResult",
        "CreateAutoMLJobResult",
        "CreateDatasetImportJobResult",
        "DescribeAssessmentTargetsResult",
        "StartStreamEncryptionResult",
        "DescribeCapacityProvidersResult",
        "PutLifecycleHookResult",
        "ModifyInstanceGroupsResult",
        "EnableVolumeIOResult",
        "CreateIpGroupResult",
        "DescribeBatchInferenceJobResult",
        "CreateLoadBalancerPolicyResult",
        "AddAttributesToFindingsResult",
        "InitiateDocumentVersionUploadResult",
        "PutSchemaFromJsonResult",
        "UploadDocumentsResult",
        "ListRulesPackagesResult",
        "AuthorizeSecurityGroupEgressResult",
        "DisassociateContactFromAddressBookResult",
        "UpdateTrafficPolicyInstanceResult",
        "DescribeContributorInsightsResult",
        "DescribeConnectionLoaResult",
        "PutNotificationConfigurationResult",
        "SendUsersMessagesResult",
        "ListStackSetsResult",
        "AssociateIamInstanceProfileResult",
        "DescribeDBLogFilesResult",
        "DescribeInstanceStatusResult",
        "StopAutoMLJobResult",
        "UploadLayerPartResult",
        "StartImageBuilderResult",
        "DeleteCodeRepositoryResult",
        "CreateCapacityProviderResult",
        "DeleteAttributesResult",
        "RequestUploadCredentialsResult",
        "ListDomainsResult",
        "ValidDBInstanceModificationsMessage",
        "DescribeSecurityGroupReferencesResult",
        "ModifyTrafficMirrorSessionResult",
        "ListLogPatternsResult",
        "DescribeClientPropertiesResult",
        "UpdatePipelineStatusResult",
        "DeleteDBProxyResult",
        "DeletePlacementGroupResult",
        "DescribeTaskDefinitionResult",
        "DeleteUserProfileResult",
        "DescribeVpcEndpointsResult",
        "StartTextTranslationJobResult",
        "CreateBusinessReportScheduleResult",
        "DeleteRoomMembershipResult",
        "DescribeCacheSecurityGroupsResult",
        "ModifyImageAttributeResult",
        "UpdateDeploymentGroupResult",
        "ListClustersResult",
        "UpdateDocumentationVersionResult",
        "EnableInsightRulesResult",
        "DeleteVoiceConnectorProxyResult",
        "RevokeSecurityGroupIngressResult",
        "DeleteMountTargetResult",
        "CreateConfigurationProfileResult",
        "DescribeDefaultParametersResult",
        "DescribeDatasetImportJobResult",
        "CreateTemplateAliasResult",
        "UpdateDomainNameserversResult",
        "UpdateRequestValidatorResult",
        "UpdateScalingParametersResult",
        "StartFaceDetectionResult",
        "RegisterToWorkMailResult",
        "AssociateSubnetCidrBlockResult",
        "ListQueuesResult",
        "CreateCloudFormationStackResult",
        "SubmitAttachmentStateChangesResult",
        "BatchCreateRoomMembershipResult",
        "ModifyInstanceAttributeResult",
        "UpdateClusterVersionResult",
        "DeregisterFromWorkMailResult",
        "DescribeContainerInstancesResult",
        "ModifyCurrentDBClusterCapacityResult",
        "CreateBatchPredictionResult",
        "DescribeVpcEndpointConnectionsResult",
        "UpdateRelationalDatabaseParametersResult",
        "UpdateVoiceTemplateResult",
        "DescribePublicIpv4PoolsResult",
        "SearchGameSessionsResult",
        "ListShardsResult",
        "SetDataRetrievalPolicyResult",
        "ResetCacheParameterGroupResult",
        "DetectDominantLanguageResult",
        "DisassociateMemberAccountResult",
        "DeleteEmailIdentityResult",
        "ListServicesResult",
        "DeleteAlarmsResult",
        "UpdateQualificationTypeResult",
        "CreateDeploymentGroupResult",
        "CloseInstancePublicPortsResult",
        "DeleteFlowLogsResult",
        "DeleteTaskSetResult",
        "CreateFileSystemFromBackupResult",
        "DescribeCacheParameterGroupsResult",
        "DescribeFleetCapacityResult",
        "CreateTrainingJobResult",
        "UpdateDirectConnectGatewayAssociationResult",
        "DescribeFeatureTransformationResult",
        "StopStreamEncryptionResult",
        "DeleteConferenceProviderResult",
        "DescribeImportSnapshotTasksResult",
        "DescribeCacheParametersResult",
        "DescribeMountTargetsResult",
        "PutResolverRulePolicyResult",
        "DisableMetricsCollectionResult",
        "StartProjectVersionResult",
        "ModifyVpcTenancyResult",
        "DisassociateFromMasterAccountResult",
        "DescribeVpnConnectionsResult",
        "CreateHyperParameterTuningJobResult",
        "UpdateContainerAgentResult",
        "DescribeNetworkInterfacePermissionsResult",
        "DeleteVoiceConnectorGroupResult",
        "ListAssociatedFleetsResult",
        "DeleteClientCertificateResult",
        "DescribeAutoScalingInstancesResult",
        "UpdateProfilingGroupResult",
        "ListStreamsResult",
        "SearchDashboardsResult",
        "ListMailboxPermissionsResult",
        "EstimateTemplateCostResult",
        "ListHumanLoopsResult",
        "DeleteApplicationCloudWatchLoggingOptionResult",
        "PutVoiceConnectorLoggingConfigurationResult",
        "ListObjectChildrenResult",
        "CreateFieldLevelEncryptionProfileResult",
        "DeleteVpnGatewayResult",
        "UpdateGatewayGroupResult",
        "RemoveAttributesFromFindingsResult",
        "DescribeInstallationMediaResult",
        "DescribeIngestionResult",
        "DescribeVolumeAttributeResult",
        "UpdateBatchPredictionResult",
        "DescribeSentimentDetectionJobResult",
        "ListEmailIdentitiesResult",
        "CreateDeploymentConfigResult",
        "UpdateProxySessionResult",
        "CreateCodeRepositoryResult",
        "DescribeComponentConfigurationResult",
        "DescribeCustomerGatewaysResult",
        "CheckDomainAvailabilityResult",
        "AcceptVpcPeeringConnectionResult",
        "EnableMetricsCollectionResult",
        "DescribeOrganizationConfigurationResult",
        "SetIdentityNotificationTopicResult",
        "UpdateRouteResponseResult",
        "ModifyVpcAttributeResult",
        "GenerateClientCertificateResult",
        "AssociateHostedConnectionResult",
        "UpdateTaskSetResult",
        "ModifyDBProxyTargetGroupResult",
        "UpdateVirtualInterfaceAttributesResult",
        "GetSendStatisticsResult",
        "DeleteEmailTemplateResult",
        "ModifyClientPropertiesResult",
        "EnableEnhancedMonitoringResult",
        "UpdateClientCertificateResult",
        "DetachLoadBalancerTargetGroupsResult",
        "UpdateDocumentVersionResult",
        "DescribeEntitiesDetectionJobResult",
        "BatchDetectSentimentResult",
        "ListIdentityPoolsResult",
        "DeleteRepositoryPolicyResult",
        "UpdateIPSetResult",
        "GetUserSettingsResult",
        "PutRoomSkillParameterResult",
        "DeleteAutoSnapshotResult",
        "DeleteNatGatewayResult",
        "UpdateSmsTemplateResult",
        "UpdateMLModelResult",
        "DetectCustomLabelsResult",
        "DescribeMatchmakingConfigurationsResult",
        "DeleteRuleVersionResult",
        "AddJobFlowStepsResult",
        "ResetClusterParameterGroupResult",
        "UntagMeetingResult",
        "CreatePartnerEventSourceResult",
        "UntagAttendeeResult",
        "ListModelsResult",
        "DescribeSecurityGroupsResult",
        "DeleteLoadBalancerListenersResult",
        "DeleteNetworkInterfaceResult",
        "UpdateEmailChannelResult",
        "ListFiltersResult",
        "GetBlockPublicAccessConfigurationResult",
        "ModifyNetworkInterfaceAttributeResult",
        "CreateFlowDefinitionResult",
        "DescribeDataSourcePermissionsResult",
        "ListUpdatesResult",
        "StartDominantLanguageDetectionJobResult",
        "DescribeScalingParametersResult",
        "PutSkillAuthorizationResult",
        "UpdateJourneyResult",
        "ListTagsForVaultResult",
        "DescribeRegionsResult",
        "RegisterDBProxyTargetsResult",
        "DescribeDirectConnectGatewayAssociationsResult",
        "DescribeUsageReportSubscriptionsResult",
        "AddInstanceGroupsResult",
        "ModifyCacheParameterGroupResult",
        "UpdateMatchmakingConfigurationResult",
        "CreateRelationalDatabaseSnapshotResult",
        "DescribeSnapshotsResult",
        "PutInvitationConfigurationResult",
        "DeleteResolverEndpointResult",
        "RecordLifecycleActionHeartbeatResult",
        "DisassociateSubnetCidrBlockResult",
        "CreateRealtimeEndpointResult",
        "DescribeBundleTasksResult",
        "DeleteReceiptFilterResult",
        "ListDeviceEventsResult",
        "AssociateConnectionWithLagResult",
        "IncreaseReplicationFactorResult",
        "UpdateFleetAttributesResult",
        "UpdateTypedLinkFacetResult",
        "DescribeNetworkInterfaceAttributeResult",
        "DeleteStackInstancesResult",
        "DeregisterGameServerResult",
        "ListIdentityPoliciesResult",
        "RegenerateSecurityTokenResult",
        "DescribeLoadBalancerTargetGroupsResult",
        "ListAttributesResult",
        "CreateIntegrationResponseResult",
        "DeleteReceiptRuleResult",
        "BatchGetDeploymentGroupsResult",
        "ListTransformJobsResult",
        "StartImageScanResult",
        "ListTerminologiesResult",
        "GetInstanceSnapshotsResult",
        "CreateTypedLinkFacetResult",
        "DeleteVoiceChannelResult",
        "UpdateUserHierarchyResult",
        "PutConferencePreferenceResult",
        "DescribeApplicationSnapshotResult",
        "DeleteApnsChannelResult",
        "ResetImageAttributeResult",
        "StopImageBuilderResult",
        "DeleteIdentityPolicyResult",
        "ReplaceNetworkAclAssociationResult",
        "PutAccountSendingAttributesResult",
        "PutMetricAlarmResult",
        "ListSolutionVersionsResult",
        "DescribeAutoScalingGroupsResult",
        "DeleteProfilingGroupResult",
        "CreateCompilationJobResult",
        "PutVoiceConnectorTerminationResult",
        "DescribeSubnetGroupsResult",
        "ListAssessmentRunsResult",
        "ReorderReceiptRuleSetResult",
        "ModifySpotFleetRequestResult",
        "DescribeDataSetPermissionsResult",
        "DeleteEventSubscriptionResult",
        "UpdateVoiceChannelResult",
        "ListFindingsResult",
        "DescribeReservedCacheNodesResult",
        "ListProposalVotesResult",
        "SearchSkillGroupsResult",
        "ListStacksResult",
        "ListDeploymentsResult",
        "CreateThreatIntelSetResult",
        "DescribePlacementGroupsResult",
        "CopyImageResult",
        "PutEventStreamResult",
        "ListResolverEndpointsResult",
        "ListIdentitiesResult",
        "UpdateRestApiResult",
        "SearchRoomsResult",
        "DescribeScheduledActionsResult",
        "AssociateContactWithAddressBookResult",
        "AttachLoadBalancerTargetGroupsResult",
        "DescribeInsightRulesResult",
        "CreatePlacementGroupResult",
        "DeleteModelPackageResult",
        "DescribeFleetHistoryResult",
        "DescribeNodegroupResult",
        "DeleteContactMethodResult",
        "RemoveManagedScalingPolicyResult",
        "DeleteMonitoringScheduleResult",
        "DeleteLedgerResult",
        "CreateTransitGatewayResult",
        "DeleteCacheSecurityGroupResult",
        "DecreaseStreamRetentionPeriodResult",
        "CreateReusableDelegationSetResult",
        "DescribeTemplatePermissionsResult",
        "ListHostedZonesResult",
        "StartDeviceSyncResult",
        "DescribeTaskSetsResult",
        "ModifyVpnTunnelOptionsResult",
        "StartChatContactResult",
        "UpdateDocumentationPartResult",
        "DescribeLoadBalancerAttributesResult",
        "DescribeInterconnectLoaResult",
        "ListMetricsResult",
        "DisassociateWebsiteAuthorizationProviderResult",
        "DeleteQualificationTypeResult",
        "CreateTrialComponentResult",
        "DescribeClientVpnRoutesResult",
        "SendRawEmailResult",
        "CreatePhoneNumberOrderResult",
        "UpdateEndpointsBatchResult",
        "SetCognitoEventsResult",
        "RemoveAutoScalingPolicyResult",
        "AddApplicationVpcConfigurationResult",
        "ModifyVolumeAttributeResult",
        "UpdateConferenceProviderResult",
        "DescribeVirtualInterfacesResult",
        "DescribeTrafficMirrorSessionsResult",
        "BuildSuggestersResult",
        "PutDedicatedIpInPoolResult",
        "BatchModifyClusterSnapshotsResult",
        "LookupDeveloperIdentityResult",
        "ListResolverRuleAssociationsResult",
        "RegisterTaskDefinitionResult",
        "DeleteCustomerGatewayResult",
        "DeleteDiskSnapshotResult",
        "DescribeImageAttributeResult",
        "CreateTrafficMirrorTargetResult",
        "DetachFromIndexResult",
        "CreateScheduledActionResult",
        "DeleteMLModelResult",
        "DescribePrefixListsResult",
        "CreateCustomerGatewayResult",
        "DeleteProjectVersionResult",
        "DeleteBusinessReportScheduleResult",
        "UploadMultipartPartResult",
        "DownloadDefaultKeyPairResult",
        "DeleteDetectorVersionResult",
        "ModifyInstanceEventStartTimeResult",
        "RegisterApplicationRevisionResult",
        "DisassociateIpGroupsResult",
        "CreateProfilingGroupResult",
        "ResetDBParameterGroupResult",
        "AllocateConnectionOnInterconnectResult",
        "StartDeliveryStreamEncryptionResult",
        "CreateMLModelResult",
        "ListMemberAccountsResult",
        "CancelResizeResult",
        "DescribeIdentityIdFormatResult",
        "DeleteIPSetResult",
        "ListLedgersResult",
        "DescribeScalingActivitiesResult",
        "ListWorkteamsResult",
        "DescribeAssessmentTemplatesResult",
        "PutEventsConfigurationResult",
        "ListNamedQueriesResult",
        "AttachInstancesToLoadBalancerResult",
        "StartSentimentDetectionJobResult",
        "DescribeAnalysisSchemesResult",
        "PutConfigurationSetSendingOptionsResult",
        "DescribeHostedConnectionsResult",
        "ListPresetsResult",
        "StopTextTranslationJobResult",
        "DescribeRulesPackagesResult",
        "CreateApiMappingResult",
        "CreateMatchmakingConfigurationResult",
        "ListObjectAttributesResult",
        "StopActivityStreamResult",
        "CreateUsageReportSubscriptionResult",
        "DetectModerationLabelsResult",
        "ModifyVpcEndpointResult",
        "DescribeVpcAttributeResult",
        "DescribeProcessingJobResult",
        "BatchGetDeploymentInstancesResult",
        "DeleteMessageBatchResult",
        "VerifyDomainDkimResult",
        "DescribeFlowDefinitionResult",
        "DescribeModelVersionsResult",
        "DeleteApplicationOutputResult",
        "CreateRouteTableResult",
        "DeleteRequestValidatorResult",
        "DeleteCampaignResult",
        "CreateVoiceConnectorGroupResult",
        "DescribeCacheSubnetGroupsResult",
        "DisableDomainAutoRenewResult",
        "DeleteCacheSubnetGroupResult",
        "DescribeRootFoldersResult",
        "PutGatewayResponseResult",
        "DeleteFileSystemPolicyResult",
        "PutDeliverabilityDashboardOptionResult",
        "CreateQualificationTypeResult",
        "DescribeDBParameterGroupsResult",
        "CreateApplicationSnapshotResult",
        "ListTagsForDomainResult",
        "ListHealthChecksResult",
        "UpdateTerminationProtectionResult",
        "DeleteInstallationMediaResult",
        "UpdateDashboardPublishedVersionResult",
        "VerifyDomainIdentityResult",
        "DeleteEventsConfigurationResult",
        "CreateUserProfileResult",
        "DescribeScalingPoliciesResult",
        "SendCustomVerificationEmailResult",
        "ListContainerInstancesResult",
        "UpdateVpcLinkResult",
        "CreateDBClusterEndpointResult",
        "UpdateComponentConfigurationResult",
        "ListChangedBlocksResult",
        "CancelConversionTaskResult",
        "RemoveFacetFromObjectResult",
        "ListApplicationsResult",
        "PutPartnerEventsResult",
        "BatchDeleteClusterSnapshotsResult",
        "DeleteLoadBalancerPolicyResult",
        "DescribeFleetUtilizationResult",
        "AssociateRouteTableResult",
        "UpdatePrimaryEmailAddressResult",
        "AddApplicationCloudWatchLoggingOptionResult",
        "StartLabelDetectionResult",
        "PutScalingPolicyResult",
        "DescribeSpotPriceHistoryResult",
        "ListNotebookInstancesResult",
        "DeleteNetworkProfileResult",
        "DeleteLaunchConfigurationResult",
        "DescribePlayerSessionsResult",
        "ModifyVpnTunnelCertificateResult",
        "UpdateUserSettingsResult",
        "ModifyWorkspaceStateResult",
        "ModifyInstanceFleetResult",
        "DescribeAssessmentRunsResult",
        "SearchDevicesResult",
        "DescribeIndexFieldsResult",
        "DetachInternetGatewayResult",
        "CreateCustomVerificationEmailTemplateResult",
        "DescribeDBClusterSnapshotsResult",
        "DeleteVpnConnectionResult",
        "DescribeEventBusResult",
        "RevokeSecurityGroupEgressResult",
        "CreateHumanTaskUiResult",
        "CreateVpcPeeringAuthorizationResult",
        "ModifyScheduledActionResult",
        "AddInstanceFleetResult",
        "DeleteAutoScalingGroupResult",
        "CreateNetworkAclResult",
        "AddResourcePermissionsResult",
        "ModifyDBClusterEndpointResult",
        "StopTrainingDocumentClassifierResult",
        "DescribeTemplateAliasResult",
        "DeleteAssessmentTemplateResult",
        "GetSendQuotaResult",
        "CreateDataSourceFromRDSResult",
        "DescribeConfigurationRevisionResult",
        "RevokeDomainAccessResult",
        "CreateClientVpnRouteResult",
        "UnarchiveFindingsResult",
        "DescribeNatGatewaysResult",
        "CreateRecommenderConfigurationResult",
        "RejectVpcPeeringConnectionResult",
        "PutMethodResponseResult",
        "DescribeTrialComponentResult",
        "DescribeEvaluationsResult",
        "SearchProfilesResult",
        "DetachClassicLinkVpcResult",
        "UpdateAccountSettingsResult",
        "DeleteRoomSkillParameterResult",
        "EnableDomainTransferLockResult",
        "DescribeTableReplicaAutoScalingResult",
        "DescribeEventCategoriesResult",
        "UpdateRuleMetadataResult",
        "DeleteScheduledActionResult",
        "UpdateContactAttributesResult",
        "DeleteTypedLinkFacetResult",
        "UpdateFileSystemResult",
        "CreateDiskFromSnapshotResult",
        "DescribeSolutionVersionResult",
        "DeleteRestApiResult",
        "CreateStreamingURLResult",
        "DeleteTrialComponentResult",
        "ListTrialsResult",
        "DescribeSnapshotAttributeResult",
        "ApplySecurityGroupsToLoadBalancerResult",
        "DescribeJobFlowsResult",
        "DeleteVaultNotificationsResult",
        "ModifySnapshotScheduleResult",
        "CreateWorkerBlockResult",
        "CreateSampleFindingsResult",
        "DescribeTransformJobResult",
        "DescribeLoggingStatusResult",
        "UpdateFleetCapacityResult",
        "DisassociateIamInstanceProfileResult",
        "CreateDocumentClassifierResult",
        "DescribeCacheEngineVersionsResult",
        "AddApplicationInputProcessingConfigurationResult",
        "UpdateMonitoringScheduleResult",
        "DeleteWorkerBlockResult",
        "DescribeDirectoryConfigsResult",
        "AddRoleToDBClusterResult",
        "DeleteSmsTemplateResult",
        "DeleteClusterSecurityGroupResult",
        "DescribeLoadBalancersResult",
        "DescribeUpdateActionsResult",
        "DeleteEmailChannelResult",
        "StopTransformJobResult",
        "DescribeWorkspaceBundlesResult",
        "AssociateTrialComponentResult",
        "DescribeEventSubscriptionsResult",
        "ListStreamConsumersResult",
        "DescribeImageScanFindingsResult",
        "AttachVpnGatewayResult",
        "ChangeResourceRecordSetsResult",
        "TestDNSAnswerResult",
        "ListQueryExecutionsResult",
        "DescribeResourcePermissionsResult",
        "BatchDetectDominantLanguageResult",
        "DescribeDatasetGroupResult",
        "RejectQualificationRequestResult",
        "StopMonitoringScheduleResult",
        "StartAssessmentRunResult",
        "DescribeGameServerResult",
        "DeleteApplicationInputProcessingConfigurationResult",
        "ListOrganizationsResult",
        "BatchStopUpdateActionResult",
        "DescribeAddressesResult",
        "ListAssessmentTargetsResult",
        "DeleteVoiceTemplateResult",
        "StartQueryExecutionResult",
        "ListAlgorithmsResult",
        "PutCompositeAlarmResult",
        "DescribeClusterSnapshotsResult",
        "PutLifecyclePolicyResult",
        "BatchDetectEntitiesResult",
        "DescribeDominantLanguageDetectionJobResult",
        "DescribeClusterVersionsResult",
        "DeleteReceiptRuleSetResult",
        "DeleteIpGroupResult",
        "UpdateTableResult",
        "DeleteInstanceSnapshotResult",
        "UpdateDataRetentionResult",
        "CreateRoomMembershipResult",
        "StartKeyPhrasesDetectionJobResult",
        "AbortVaultLockResult",
        "PutLifecycleConfigurationResult",
        "ListRulesResult",
        "ModifyWorkspacePropertiesResult",
        "DeleteAccessPointResult",
        "DescribeIdFormatResult",
        "DescribeIdentityUsageResult",
        "SetStackPolicyResult",
        "ListInvitationsResult",
        "CreateTransformJobResult",
        "CreateEgressOnlyInternetGatewayResult",
        "GetUserEndpointsResult",
        "CreateVpcPeeringConnectionResult",
        "StopQueryExecutionResult",
        "CreateLoadBalancerListenersResult",
        "BatchUpdatePhoneNumberResult",
        "DeleteApplicationVpcConfigurationResult",
        "CreateDefaultVpcResult",
        "CreateUsagePlanResult",
        "AuthorizeClientVpnIngressResult",
        "DeleteWorkteamResult",
        "CreateUsagePlanKeyResult",
        "DescribeHumanTaskUiResult",
        "DescribeImagesResult",
        "DescribeSecurityConfigurationResult",
        "ListGatewaysResult",
        "CreateAutoScalingGroupResult",
        "UpdateLoadBalancerAttributeResult",
        "DescribeBrokerEngineTypesResult",
        "CreateLoadBalancerTlsCertificateResult",
        "AddRoleToDBInstanceResult",
        "DescribeFleetInstancesResult",
        "ModifyInstancePlacementResult",
        "CreateSolutionVersionResult",
        "DescribeVpcPeeringAuthorizationsResult",
        "StartStreamProcessorResult",
        "DescribeClusterSubnetGroupsResult",
        "DeleteAssessmentTargetResult",
        "CreateNetworkProfileResult",
        "UpdateStackInstancesResult",
        "DetachLoadBalancerFromSubnetsResult",
        "CreateDirectConnectGatewayAssociationProposalResult",
        "SearchNetworkProfilesResult",
        "ModifyClusterParameterGroupResult",
        "UpdateTagsForDomainResult",
        "DisassociateDeviceFromRoomResult",
        "AddTagsToStreamResult",
        "DeleteAnomalyDetectorResult",
        "DisassociateVpcCidrBlockResult",
        "DisableAlarmActionsResult",
        "CreateSkillGroupResult",
        "DeleteEventStreamResult",
        "DefineSuggesterResult",
        "DeleteEventBusResult",
        "ListReceiptFiltersResult",
        "ListDomainNamesResult",
        "DeleteGroupMembershipResult",
        "DescribeClusterParameterGroupsResult",
        "ResetInstanceAttributeResult",
        "CreateDatasetGroupResult",
        "DeleteProxySessionResult",
        "ChangeMessageVisibilityResult",
        "UpdateMailboxQuotaResult",
        "CreateDocumentationVersionResult",
        "StartEntitiesDetectionJobResult",
        "DescribeVpcsResult",
        "DescribeSpotFleetInstancesResult",
        "AcceptQualificationRequestResult",
        "PurgeQueueResult",
        "AbortDocumentVersionUploadResult",
        "UpdateFindingsFeedbackResult",
        "DeleteClientVpnRouteResult",
        "ListNodesResult",
        "CreateDefaultSubnetResult",
        "DescribeStreamSummaryResult",
        "DescribeAccountLimitsResult",
        "AssociateDeviceWithNetworkProfileResult",
        "DescribeAccessPointsResult",
        "TestInvokeMethodResult",
        "DeleteEventTrackerResult",
        "UpdateDeploymentStrategyResult",
        "PutAccessControlRuleResult",
        "PurchaseProvisionedCapacityResult",
        "DeleteUsagePlanResult",
        "DeleteLabelsResult",
        "ImportWorkspaceImageResult",
        "DescribeFleetEventsResult",
        "DescribeExclusionsResult",
        "UpdateSkillGroupResult",
        "DeleteClusterParameterGroupResult",
        "ListProxySessionsResult",
        "CreateAttendeeResult",
        "DeregisterTaskDefinitionResult",
        "AssociateVpcCidrBlockResult",
        "DescribeMLModelsResult",
        "VerifyEmailIdentityResult",
        "DeleteTrafficPolicyInstanceResult",
        "PutIdentityPolicyResult",
        "DescribeReservedNodesResult",
        "UpdateDomainContactResult",
        "RegisterGameServerResult",
        "DetectStackResourceDriftResult",
        "SearchFacesByImageResult",
        "OpenInstancePublicPortsResult",
        "DeleteDeploymentGroupResult",
        "DescribeSourceRegionsResult",
        "DeleteNotebookInstanceResult",
        "ModifyAvailabilityZoneGroupResult",
        "StartDocumentAnalysisResult",
        "ContinueUpdateRollbackResult",
        "RestoreDomainAccessResult",
        "PurchaseReservedInstancesOfferingResult",
        "UpdateUserProfileResult",
        "CreateImageBuilderResult",
        "DescribeAlarmHistoryResult",
        "ListGraphsResult",
        "DescribeAdjustmentTypesResult",
        "DescribeClusterDbRevisionsResult",
        "DeleteVpcEndpointsResult",
        "CreateQueueResult",
        "RunScheduledInstancesResult",
        "CreateInstancesFromSnapshotResult",
        "UpdateServiceResult",
        "PutVoiceConnectorOriginationResult",
        "UpdatePushTemplateResult",
        "DescribeConnectionsOnInterconnectResult",
        "ListProblemsResult",
        "DescribeLaunchTemplatesResult",
        "DetachStaticIpResult",
        "DescribeReplicationGroupsResult",
        "CopyWorkspaceImageResult",
        "DeleteDatasetGroupResult",
        "DeleteAccountSettingResult",
        "StartMonitoringMemberResult",
        "CreateDiskSnapshotResult",
        "UpdateAutoScalingGroupResult",
        "UpdateLifecyclePolicyResult",
        "CreateEmailIdentityResult",
        "UpdatePipelineNotificationsResult",
        "CreateBatchInferenceJobResult",
        "DeleteBGPPeerResult",
        "DescribeRouteTablesResult",
        "ListTagsForDeliveryStreamResult",
        "StopEntitiesDetectionJobResult",
        "CreateInternetGatewayResult",
        "DescribeFleetAttributesResult",
        "PutMailboxPermissionsResult",
        "PutIntegrationResponseResult",
        "DetectStackSetDriftResult",
        "DescribeDBInstanceAutomatedBackupsResult",
        "DetectKeyPhrasesResult",
        "DescribeVolumesResult",
        "UpdateDestinationResult",
        "DeleteServiceResult",
        "UpdateDomainEntryResult",
        "BatchApplyUpdateActionResult",
        "PurchaseScheduledInstancesResult",
        "ListFacetAttributesResult",
        "DescribeRuntimeConfigurationResult",
        "CreateNotificationSubscriptionResult",
        "BatchGetApplicationRevisionsResult",
        "DeleteDedicatedIpPoolResult",
        "BatchPutAttributesResult",
        "AssociateIpGroupsResult",
        "UpdateLogPatternResult",
        "SendAnnouncementResult",
        "ListProposalsResult",
        "DescribeAvailabilityZonesResult",
        "CreateModelPackageResult",
        "DescribeProjectVersionsResult",
        "StartSpeechSynthesisTaskResult",
        "AssignIpv6AddressesResult",
        "DescribeHsmClientCertificatesResult",
        "TestInvokeAuthorizerResult",
        "CreateCapacityReservationResult",
        "DeleteVoiceConnectorTerminationResult",
        "CreateInstanceSnapshotResult",
        "CreateFlowLogsResult",
        "AssociateDhcpOptionsResult",
        "ListImportsResult",
        "CreateContactMethodResult",
        "RemoveTagsFromVaultResult",
        "StartTextDetectionResult",
        "DescribeDBClusterParameterGroupsResult",
        "CreateStackInstancesResult",
        "CreateDeploymentStrategyResult",
        "PutFileSystemPolicyResult",
        "ListOperationsResult",
        "AssociateResolverEndpointIpAddressResult",
        "SendMessageBatchResult",
        "DescribeWorkspaceDirectoriesResult",
        "CreateInstanceExportTaskResult",
        "CancelImportTaskResult",
        "DeleteRelationalDatabaseSnapshotResult",
        "DescribeAutoMLJobResult",
        "ListResolverRulesResult",
        "DisableDomainTransferLockResult",
        "ModifyVpnConnectionResult",
        "ListDetectorsResult",
        "DetachInstancesFromLoadBalancerResult",
        "DescribeVolumeStatusResult",
        "DeleteDBParameterGroupResult",
        "CreateAccessPointResult",
        "DescribeMonitoringScheduleResult",
        "GetDataRetrievalPolicyResult",
        "ListDatasetsResult",
        "DisassociateDelegateFromResourceResult",
        "DescribeClustersResult",
        "DescribeNotificationSubscriptionsResult",
        "DeleteThreatIntelSetResult",
        "UpdateEnvironmentResult",
        "DescribeFileSystemsResult",
        "DeleteNotificationSubscriptionResult",
        "DescribeVolumesModificationsResult",
        "DescribeDirectConnectGatewayAttachmentsResult",
        "IsVpcPeeredResult",
        "GetInstancePortStatesResult",
        "DBClusterSnapshotAttributesResult",
        "ListVaultsResult",
        "UpdateAvailabilityOptionsResult",
        "ListVoiceConnectorGroupsResult",
        "DeleteVpcLinkResult",
        "ListProcessingJobsResult",
        "DescribeTableResult",
        "DescribeDataSourcesResult",
        "GetAccountSettingsResult",
        "DescribeDBClusterParametersResult",
        "AssociateClientVpnTargetNetworkResult",
        "CreatePlayerSessionResult",
        "CreateLifecyclePolicyResult",
        "BatchCreateVariableResult",
        "DescribeScheduledInstancesResult",
        "CreateModelVersionResult",
        "AssociateSkillWithUsersResult",
        "GetFieldLevelEncryptionProfileResult",
        "EnableDomainAutoRenewResult",
        "ModifyMountTargetSecurityGroupsResult",
        "DescribeIdentityPoolUsageResult",
        "ModifySubnetAttributeResult",
        "ListTablesResult",
        "UpdateAccountSendingEnabledResult",
        "DescribeWorkspaceSnapshotsResult",
        "DescribeIpGroupsResult",
        "DeleteSkillAuthorizationResult",
        "DescribeCacheClustersResult",
        "DeleteVerifiedEmailAddressResult",
        "DescribeSubnetsResult",
        "DeleteSecurityConfigurationResult",
        "DescribeInterconnectsResult",
        "UpdateUsagePlanResult",
        "AssociateSkillWithSkillGroupResult",
        "CreateMeetingResult",
        "DescribeTransitGatewaysResult",
        "DeleteMatchmakingConfigurationResult",
        "ListHITsResult",
        "DescribeReservedInstancesOfferingsResult",
        "DeleteImageBuilderResult",
        "CancelBundleTaskResult",
        "UpdateApiMappingResult",
        "DetectDocumentTextResult",
        "DescribeReservedDBInstancesOfferingsResult",
        "DescribeVirtualGatewaysResult",
        "DeleteDirectConnectGatewayAssociationResult",
        "UpdateEmailTemplateResult",
        "SendTemplatedEmailResult",
        "UpdateThreatIntelSetResult",
        "GetHostedZoneCountResult",
        "UpdateStreamingDistributionResult",
        "ListMembersResult",
        "ExportJournalToS3Result",
        "AssociateQualificationWithWorkerResult",
        "DescribeStacksResult",
        "DescribePartnerEventSourceResult",
        "ChangeMessageVisibilityBatchResult",
        "DescribeReservedDBInstancesResult",
        "DescribeIdentityProviderConfigurationResult",
        "DeleteBatchPredictionResult",
        "ListDocumentClassifiersResult",
        "DescribeDBSubnetGroupsResult",
        "UpdateHITReviewStatusResult",
        "DescribeLocalGatewaysResult",
        "DeleteAttendeeResult",
        "ListWorkGroupsResult",
        "UpdateModelVersionResult",
        "SendDiagnosticInterruptResult",
        "DescribeActiveReceiptRuleSetResult",
        "UpdateTemplateAliasResult",
        "DeleteGatewayGroupResult",
        "DescribeInternetGatewaysResult",
        "DisassociateClientVpnTargetNetworkResult",
        "CreateMountTargetResult",
        "ListAccountsResult",
        "DeleteNodegroupResult",
        "ModifySnapshotAttributeResult",
        "CreateDataSourceFromS3Result",
        "DescribeDBSnapshotsResult",
        "ClaimGameServerResult",
        "AssociatePhoneNumberWithUserResult",
        "ListContributorInsightsResult",
        "UpdateDataSetPermissionsResult",
        "DescribeImageBuildersResult",
        "StartTopicsDetectionJobResult",
        "DeleteDBClusterEndpointResult",
        "AssociateDeviceWithRoomResult",
        "DeleteApiMappingResult",
        "ModifyDBClusterParameterGroupResult",
        "DescribeLaunchConfigurationsResult",
        "StopFleetActionsResult",
        "DeleteBasePathMappingResult",
        "DescribeOptionGroupsResult",
        "UpdateOrganizationConfigurationResult",
        "ListTagsForStreamResult",
        "RemoveRoleFromDBClusterResult",
        "AttachLoadBalancerToSubnetsResult",
        "DescribeAccountModificationsResult",
        "DescribeParameterGroupsResult",
        "DeleteDeploymentStrategyResult",
        "DeleteInvitationsResult",
        "DeleteSkillGroupResult",
        "DescribeHyperParameterTuningJobResult",
        "BatchDetectKeyPhrasesResult",
        "DeleteLaunchTemplateResult",
        "PutAutoScalingPolicyResult",
        "AuthorizeIpRulesResult",
        "PutAccountSettingResult",
        "CreateReceiptFilterResult",
        "DescribeGlobalClustersResult",
        "RequestSpotFleetResult",
        "ListBuildsResult",
        "DeregisterContainerInstanceResult",
        "ListDevicesResult",
        "DeleteCustomMetadataResult",
        "DescribeIpv6PoolsResult",
        "StopTrainingEntityRecognizerResult",
        "ListGeoLocationsResult",
        "DeleteMessageResult",
        "DescribeGameSessionQueuesResult",
        "DeleteMeetingResult",
        "DisassociateMemberFromGroupResult",
        "BatchAssociateUserStackResult",
        "DeleteGitHubAccountTokenResult",
        "SetActiveReceiptRuleSetResult",
        "DescribeVpcPeeringConnectionsResult",
        "DescribeCampaignResult",
        "ListAliasesResult",
        "ModifyClientVpnEndpointResult",
        "UpdateRoomMembershipResult",
        "DescribeClientVpnTargetNetworksResult",
        "DeleteScalingPolicyResult",
        "ProvisionByoipCidrResult",
        "RevokeIpRulesResult",
        "UpdateShardCountResult",
        "UnlinkIdentityResult",
        "DescribeGameSessionsResult",
        "DeleteNetworkAclResult",
        "DescribeNotificationConfigurationsResult",
        "CreateDetectorVersionResult",
        "DeleteTagsForDomainResult",
        "CreateGroupMembershipResult",
        "DeleteDBClusterParameterGroupResult",
        "ModifyReservedInstancesResult",
        "DescribeDBProxyTargetGroupsResult",
        "UpdateRuntimeConfigurationResult",
        "ListUsersResult",
        "StopMonitoringMembersResult",
        "DescribeImagePermissionsResult",
        "CreateDirectConnectGatewayAssociationResult",
        "DisassociateTrialComponentResult",
        "BatchGetDeploymentTargetsResult",
        "ListBusinessReportSchedulesResult",
        "DeleteDBSecurityGroupResult",
        "DescribeHsmConfigurationsResult",
        "DescribeLifecycleConfigurationResult",
        "CreateVpcLinkResult",
        "GetAccountSendingEnabledResult",
        "SendVoiceMessageResult",
        "DeregisterDBProxyTargetsResult",
        "ResetSnapshotAttributeResult",
        "ImportApiKeysResult",
        "DeleteGatewayResponseResult",
        "UpdateFleetMetadataResult",
        "StopProjectVersionResult",
        "CreateClientVpnEndpointResult",
        "ListDeploymentTargetsResult",
        "DeleteStreamingDistributionResult",
        "UpdateDomainMetadataResult",
        "CreateHITTypeResult",
        "DeleteInternetGatewayResult",
        "ResetDBClusterParameterGroupResult",
        "StopGameSessionPlacementResult",
        "DescribeLoadBalancerPoliciesResult",
        "UpdateVoiceConnectorGroupResult",
        "DeleteEntityRecognizerResult",
        "ListPartsResult",
        "UpdateDashboardPermissionsResult",
        "DescribeUserProfileResult",
        "CreateLaunchConfigurationResult",
        "DescribeResourceGroupsResult",
        "DescribeConversionTasksResult",
        "DisassociateSkillFromSkillGroupResult",
        "DisassociateSkillFromUsersResult",
        "DeleteDBSubnetGroupResult",
        "DescribeFleetMetadataResult",
        "DescribeDocumentClassifierResult",
        "PutSuppressedDestinationResult",
        "DescribeKeyPhrasesDetectionJobResult",
        "UpdateWorkteamResult",
        "CreateEmailTemplateResult",
        "DescribeFileSystemPolicyResult",
        "CreateImportJobResult",
        "ListWorkerBlocksResult",
        "DescribeTagsResult",
        "DefineIndexFieldResult",
        "UnlinkDeveloperIdentityResult",
        "UpdateBusinessReportScheduleResult",
        "DescribeDBSecurityGroupsResult",
        "DescribeGameSessionPlacementResult",
        "ListConfigurationsResult",
        "UpdateSmsChannelResult",
        "UpdateNetworkProfileResult"
      ],
      "Syntactic Label": "Method Return Types",
      "Semantic Tags": [
        "AWS SDK",
        "Result Objects",
        "API Calls",
        "Asynchronous Operations",
        "Resource Management"
      ],
      "Description": "These tokens represent the return types of various methods within an AWS SDK for C#.  Each return type is a specific result object that encapsulates the outcome of an API call, often related to managing AWS resources. The methods likely perform asynchronous operations, and the result objects provide information about the success or failure of the operation and any relevant data."
    }
  },
  {
    "c380": {
      "Unique tokens": [
        "",
        "paths",
        "_frAggs",
        "linkTable",
        "query",
        "maxTokenPosition",
        "field_1_num_strings",
        "++",
        "_is16bitUnicode",
        "ptr",
        "bit_pattern",
        "automaton",
        "buckets",
        "skipBuffer",
        "length",
        "_isSingleCell",
        "preTag",
        "x",
        "-",
        "subfilters",
        "pos",
        "offset",
        "null",
        "patternText",
        "eof",
        "Charset",
        "args",
        "dataSize",
        "<=",
        "refProto",
        "accessKeySecret",
        "childRecord",
        "==",
        "basicModel",
        ">=",
        "field_1_number_crn_records",
        "sourceSet",
        "map",
        "ref",
        "nameB",
        "s",
        "perThread",
        "t",
        "size",
        "termState",
        "num",
        "!",
        "transform",
        "existingTerm",
        "include",
        ".",
        "biasedExp",
        "index",
        "source",
        "+",
        "isOpen",
        "preserveOriginal",
        "arr",
        "MINIMUM_CAPACITY",
        "publicKeyId",
        "esDelegate",
        "(",
        "dx1",
        "i",
        "fieldNumber",
        "in",
        "instanceof",
        "n",
        "missingValue",
        "ignoreSubmoduleMode",
        "location",
        "accessKeyId",
        "input",
        "get",
        "start",
        "out",
        "c",
        "c1",
        "'",
        "dy1",
        "%",
        "capacity",
        "precedence",
        "DESERIALISE",
        "els",
        "csn",
        "getReverse",
        "&&",
        "value",
        "keyEnd",
        "rs",
        "lastRow",
        "object",
        "_isQuoted",
        "array"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Method Invocation",
        "Object Manipulation",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including variables, keywords, operators, and method calls.  They are used to construct various program structures, manipulate data, and control program flow.  The semantic tags highlight the diverse functionalities these tokens enable within a C# program."
    }
  },
  {
    "c381": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Request Object",
        "AWS SDK",
        "API Calls"
      ],
      "Description": "The opening parenthesis '(' in C# is used to denote the start of a parameter list in method declarations. In this context, it's part of the method signatures of various AWS SDK methods, each taking a request object as a parameter.  These methods likely represent API calls to an AWS service."
    }
  },
  {
    "c382": {
      "Unique tokens": [
        "?",
        "(",
        ",",
        "throws",
        ")",
        "{",
        ">"
      ],
      "Syntactic Label": "C# language constructs and symbols",
      "Semantic Tags": [
        "Method Declaration",
        "Conditional Statements",
        "Object Instantiation",
        "Return Statements",
        "Exception Handling"
      ],
      "Description": "The tokens represent fundamental C# syntactic elements.  '?' is the ternary operator for conditional expressions. '(' and ')' are parentheses for method calls and grouping. ',' is a separator in method parameters and arrays. 'throws' is used in method signatures (though not directly shown in the examples, it's implied by the context of exception handling). '{' and '}' are braces for code blocks. '>' is used in generics and lambda expressions. These tokens are essential for defining methods, handling conditions, creating objects, returning values, and managing exceptions in C#."
    }
  },
  {
    "c383": {
      "Unique tokens": [
        "deleteDBInstanceAutomatedBackup",
        "isValidCode",
        "setRef",
        "authorizeDBSecurityGroupIngress",
        "asinh",
        "setHierarchical",
        "createAnchorFromEscher",
        "writeHeader",
        "put",
        "getByteBlock",
        "copyOptionGroup",
        "equal",
        "getRuleName",
        "Query",
        "deprecateWorkflowType",
        "getNonBlankTextOrFail",
        "pathType",
        "findIndexCommit",
        "formatWithConflicts",
        "matchesExtension",
        "clone",
        "toBookSheetColumn",
        "undeprecateActivityType",
        "DisjQuery",
        "copyClusterSnapshot",
        "replaceOccupiedParameters",
        "set",
        "getNameCommentRecord",
        "MergeStrategy",
        "createBATBlock",
        "setInstance",
        "findFunction",
        "createShape",
        "serializePtgs",
        "allocate",
        "failoverGlobalReplicationGroup",
        "createHsmConfiguration",
        "mod",
        "rebalanceSlotsInGlobalReplicationGroup",
        "getBasicFunction",
        "setCaching",
        "createCFAggregate",
        "requestCancelWorkflowExecution",
        "sumsq",
        "modifyClusterSnapshot",
        "DrawingRecordForBiffViewer",
        "getShort",
        "restoreDBInstanceFromDBSnapshot",
        "getLastCommitGeneration",
        "getEscherProperty",
        "of",
        "getDataFormatString",
        "SrndQuery",
        "parse2",
        "toCodePoints",
        "tagger",
        "getTotalATNLookaheadOps",
        "[",
        "getPrecedenceStartState",
        "setSensitiveInputCells",
        "typeString",
        "getBinaryValues",
        "indexExists",
        "compareArrayByPrefix",
        "setNeedNewObjectIds",
        "parseSegmentName",
        "atanh",
        "correctOffset",
        "jumpDrawablesToCurrentState",
        "readUByte",
        "open",
        "malformedForLength",
        "modifyClusterIamRoles",
        "calculateChecksum",
        "setMax",
        "deleteEventSubscription",
        "getMidIx",
        "snapshot",
        "setMBPerSec",
        "getPOSTranslation",
        "createDocumentInputStream",
        "isMissingNewlineAtEnd",
        "copyDBClusterSnapshot",
        "setUpstreamName",
        "createIf",
        "listAll",
        "getElement",
        "FtCfSubRecord",
        "isInRange",
        "toUTF32",
        "serializeComplexPart",
        "registerActivityType",
        "openPush",
        "addSourceIdentifierToSubscription",
        "newMessageDigest",
        "setHost",
        "isRelevant",
        "log",
        "newSerializer",
        "getTokenType",
        "decompose",
        "getRule",
        "getNameXPtg",
        "isCellInternalDateFormatted",
        "isContainer",
        "copyDBParameterGroup",
        "toChars",
        "getRevWalk",
        "readFully",
        "sumTokenSizes",
        "flush",
        "peekNextSid",
        "restoreDBInstanceFromS3",
        "createPicture",
        "toString",
        "hasObject",
        "distanceSubQueryNotAllowed",
        "getError",
        "getOperator",
        "parseEncoding",
        "getLocalizedMessage",
        "setPolygonDrawArea",
        "ipmt",
        "has",
        "hasSourceData",
        "getRFC2616Date",
        "setRepetitions",
        "getSpanQuery",
        "getDataOutput",
        "reset",
        "getStubHSSFWorkbook",
        "strcmp",
        "openInput",
        "clear",
        "getNodeText",
        "createTermGroupFacetCollector",
        "overheadRatio",
        "product",
        "createFromStrings",
        "getErrorDisplay",
        "getText",
        "modifyOptionGroup",
        "readRecordSID",
        "createGlobalReplicationGroup",
        "stripSegmentName",
        "createIndexableFields",
        "getChars",
        "getLevelForDistance",
        "lenient",
        "compact",
        "irr",
        "lookupCharacterClass",
        "createPolygon",
        "createExtSSTRecord",
        "register",
        "setUser",
        "copyDBClusterParameterGroup",
        "addConditionalFormatting",
        "getTotalSLLATNLookaheadOps",
        "revokeClusterSecurityGroupIngress",
        "copySnapshot",
        "validateSimple",
        "runInShell",
        "deleteCustomAvailabilityZone",
        "lookupTag",
        "createSetBasedOnMaxMemory",
        "stdev",
        "makeRecipDistanceValueSource",
        "getExcelDate",
        "fv",
        "getAllKnownRecordSIDs",
        "getCachedBytes",
        "addCellRangeAddress",
        "updateValue",
        "getExternalName",
        "newMerger",
        "setCachingInMB",
        "validateSheetName",
        "getEncodedSizeWithoutArrayData",
        "waitForGeneration",
        "AbbreviatedObjectId",
        "TopSrndQuery",
        "isIndexTerm",
        "setBufferSize",
        "chooseSingleElementFromArea",
        "makeLuceneQueryNoBoost",
        "toInfoString",
        "contains",
        "createConditionalFormattingRule",
        "getAlts",
        "createEnclosingCellRange",
        "enterRecursionRule",
        "createSetBasedOnQuality",
        "setMinShingleSize",
        "normaliseBaseTwo",
        "getInt",
        "forString",
        "revokeCacheSecurityGroupIngress",
        "precedenceTransition",
        "createDBSnapshot",
        "newCharacterBuffer",
        "createSubtreeIterator",
        "createPtg",
        "createDVRecord",
        "singleton",
        "getArea3DEval",
        "pv",
        "getTermMap",
        "BlendedTermQuery",
        "setRequireDimCount",
        "getLong",
        "RoaringDocIdSet",
        "grow",
        "notifyUpdatedBlankCell",
        "searchPhrase",
        "mergeRoot",
        "getCellsPnt",
        "createVector",
        "WQuery",
        "getColsNamesForValsByRound",
        "peek",
        "pmt",
        "registerDomain",
        "createDBSecurityGroup",
        "loadXML",
        "getTopLevelContext",
        "modifyReplicationGroup",
        "strlen",
        "shortenRefName",
        "serialize",
        "setStashRef",
        "getTransportProtocols",
        "getSignificantDecimalDigitsLastDigitRounded",
        "list",
        "readAsciiLine",
        "addListenerForAllRecords",
        "getFieldTermMap",
        "getId",
        "addParents",
        "round",
        "registerWorkflowType",
        "createRow",
        "untagResource",
        "pathToString",
        "removeFromGlobalCluster",
        "makeLuceneQueryFieldNoBoost",
        "getTokenErrorDisplay",
        "insert",
        "captureState",
        "getExpectedTokens",
        "setFollowFileRenames",
        "increaseNodeGroupsInGlobalReplicationGroup",
        "createStubWorkbook",
        "addFilepattern",
        "getName",
        "getSetForField",
        "coerceValueToBoolean",
        "recurseClearCachedFormulaResults",
        "checkForUpdate",
        "getFirstInternalSheetIndexForExtIndex",
        "getDecisionLookahead",
        "getRelativeValue",
        "addPushURI",
        "getFontRecordAt",
        "setBranchNames",
        "compileParseTreePattern",
        "getDeltaBase",
        "murmurhash3_x86_32",
        "authoritySafePath",
        "removeField",
        "doubleField",
        "escapeWhitespace",
        "toBooleanOrNull",
        "acosh",
        "restoreDBInstanceToPointInTime",
        "deprecateDomain",
        "acceptReservedNodeExchange",
        "getSpecificBuiltinRecord",
        "setCategoryLabelsCellRange",
        "createSimpleShape",
        "setNewHeads",
        "setFlagByBit",
        "lemmatize",
        "obtainFile",
        "updateNameCommentRecordCache",
        "slice",
        "get3DReferencePtg",
        "withSTSClient",
        ".",
        "ceiling",
        "getResultSize",
        "purchaseReservedNodeOffering",
        "isInternalDateFormat",
        "prefixCompare",
        "lookupCommit",
        "setObjectIdFromRaw",
        "getCredential",
        "byteArray",
        "delete",
        "createEmptyTreeIterator",
        "getSumSingle",
        "disassociateGlobalReplicationGroup",
        "wrap",
        "cosh",
        "createFormula",
        "coerceValueToDouble",
        "setStartPoint",
        "newEmptyMap",
        "offsetByCodePoints",
        "add",
        "ppmt",
        "formatNumberDateCell",
        "createTempFile",
        "peel",
        "findStartOfRowOutlineGroup",
        "reflectAsString",
        "fieldsProducer",
        "setObjectInserter",
        "valueOf",
        "proxyFor",
        "decreaseReplicaCount",
        "abbreviate",
        "mkdirs",
        "sinh",
        "createNewFile",
        "hashFunctionForVersion",
        "modifyClusterMaintenance",
        "countMatchingCellsInRef",
        "modifyCacheCluster",
        "createDgRecord",
        "OrQuery",
        "deleteSnapshot",
        "Analyzer",
        "getToken",
        "getTotalLLATNLookaheadOps",
        "asReadOnlyBuffer",
        "min",
        "setHyperbolicTfFactors",
        "putCompressedUnicode",
        "createFieldFragList",
        "PrefixOperatorQuery",
        "addFetchRefSpec",
        "format",
        "lookupTree",
        "or",
        "getCmd",
        "sum",
        "normaliseAndTranslate",
        "FieldsQuery",
        "getSigner",
        "integerValue",
        "tanh",
        "clearAttributes",
        "modifyGlobalCluster",
        "removeBreak",
        "readUShort",
        "subSequence",
        "modifyDBSubnetGroup",
        "QueryNode",
        "forInt",
        "restoreDBClusterFromS3",
        "getInvokingContext",
        "pop",
        "convertBlankRecords",
        "findSimilarColor",
        "getEvalForCell",
        "create",
        "createComment",
        "createReplicationGroup",
        "readUnicodeString",
        "findColor",
        "getHexString",
        "getVariantLength",
        "getCell",
        "createDimensions",
        "authorizeCacheSecurityGroupIngress",
        "createCustomAvailabilityZone",
        "pop_intersect",
        "fromRaw",
        "getSingleValue",
        "setIndexFieldName",
        "nper",
        "modifyClusterSubnetGroup",
        "reThrow",
        "cos",
        "hasNonConflictingAltSet",
        "compareArray",
        "toArray",
        "getPerfObject",
        "createDecryptingStream",
        "setScheme",
        "getFieldQuery",
        "<",
        "equalsIgnoreCase",
        "toByteArray",
        "checkValue",
        "createGroup",
        "copy",
        "append",
        "npv",
        "getRefEval",
        "countMatchingCellsInArea",
        "fixOffsetBeforeMatch",
        "setReaderValue",
        "build",
        "getContentHandler",
        "getStopWords",
        "convertRKRecords",
        "htmlEncode",
        "parseCommit",
        "copyDBSnapshot",
        "createAnalyzer",
        "createDelayedOutput",
        "isBelowMaxRep",
        "setRefLogMessage",
        "createCacheSecurityGroup",
        "writeUnicodeString",
        "getEncodedSize",
        "fileLength",
        "setValue",
        "pop_union",
        "unmappableForLength",
        "setPrecedenceStartState",
        "addIfAbsent",
        "setSshSessionFactory",
        "removeFields",
        "median",
        "findPattern",
        "newToken",
        "toLowerCase",
        "idFor",
        "getTaggerIdent",
        "decreaseNodeGroupsInGlobalReplicationGroup",
        "kthLargest",
        "getFullMessage",
        "setSecondaryProgress",
        "toStringTree",
        "hasSLLConflictTerminatingPrediction",
        "isCancelled",
        "toEditList",
        "read",
        "incrementToken",
        "getEstimatedNumberUniqueValuesAllowingForCollisions",
        "addNameXPtg",
        "promoteReadReplica",
        "getAbsoluteValue",
        "revisionVersion",
        "createNormalisedDecimal",
        "modifyDBSnapshot",
        "getFirstChildOrFail",
        "removeAllCellsValuesForRow",
        "removeShape",
        "createCacheCluster",
        "hasConflictingAltSet",
        "seekCeil",
        "setMaxMergesAndThreads",
        "createSkip",
        "hasChildOfType",
        "recycleByteBlocks",
        "getSegmentsFile",
        "boolean",
        "computeNorm",
        "disableSnapshotCopy",
        "getLastCommitSegmentsFileName",
        "gcd",
        "getCommitterIdent",
        "deleteCacheCluster",
        "parse",
        "safe",
        "remove",
        "openFetch",
        "clearModels",
        "getRowCountForBlock",
        "setPort",
        "idfExplain",
        "pushNewRecursionContext",
        "startMigration",
        "signalWorkflowExecution",
        "equals",
        "getAllReferencedCells",
        "setAbbreviationLength",
        "step",
        "NQuery",
        "isBinary",
        "createNumericConstraint",
        "getEntryPathHashCode",
        "createCellXF",
        "getPrintArea",
        "evaluate",
        "createEmpty",
        "setTokenSource",
        "addNewSheetRecord",
        "undeprecateWorkflowType",
        "createCustomFormulaConstraint",
        "init",
        "setFlushPending",
        "getPreferredEncoding",
        "endsWith",
        "stripExtension",
        "write",
        "computeIterations",
        "removeLastOccurrence",
        "ModClause",
        "getLastInternalSheetIndexForExtIndex",
        "getPIDString",
        "createTextbox",
        "isSubTotal",
        "sort",
        "toMatchResult",
        "authorizeClusterSecurityGroupIngress",
        "getInstance",
        "getCCByGB2312Id",
        "allSubsetsEqual",
        "newStringRange",
        "deleteClusterSnapshot",
        "createName",
        "buildExtensionField",
        "checkHeaderNoMagic",
        "getBytesReader",
        "registerFunction",
        "verifyBelongsToWorkbook",
        "getRef3DEval",
        "deleteN",
        "getRow",
        "get",
        "translateUnicodeValues",
        "createSnapshot",
        "allocateDirect",
        "getObjectId",
        "execute",
        "getIndexDeletionPolicy",
        "getExternalSheet",
        "validateSecondArg",
        "entrySize",
        "makeQuery",
        "trimLeadingWhitespace",
        "rebootCacheCluster",
        "createSpace",
        "revokeDBSecurityGroupIngress",
        "setBuiltinStyle",
        "before",
        "createTextLengthConstraint",
        "oversize",
        "getDecisionState",
        "modifyReplicationGroupShardConfiguration",
        "smudgeRacilyClean",
        "stringToPath",
        "getDataInput",
        "addChild",
        "fileNameFromGeneration",
        "listFiles",
        "getJavaDate",
        "getFirstChildElement",
        "createCell",
        "authorizeSnapshotAccess",
        "explain",
        "tryIncRef",
        "ramBytesUsed",
        "createTimeConstraint",
        "hasMultibyte",
        "withRoleSessionDurationSeconds",
        "setMaxShingleSize",
        "getSSTString",
        "setDoubleValue",
        "nChooseK",
        "toHadoopJarStepConfig",
        "relativize",
        "isRowBlockRecord",
        "createBuiltInName",
        "createWriterConfig",
        "setTags",
        "average",
        "addPushRefSpec",
        "subSet",
        "compareWithCase",
        "getSchemePrefix",
        "yyreset",
        "getRuleIndex",
        "getBaseSize",
        "createJoinQuery",
        "modifyGlobalReplicationGroup",
        "respondDecisionTaskCompleted",
        "removeBuiltinRecord",
        "getConditionalFormattingAt",
        "setAsActiveCell",
        "newContext",
        "getAuthorIdent",
        "int",
        "toBytesRef",
        "readLiveDocs",
        "makeLuceneQueryField",
        "setRoleName",
        "createOutput",
        "buildFractionExactDenominator",
        "isGitRepository",
        "createNewFont",
        "getSingleViableAlt",
        "cherryPick",
        "createDecimalConstraint",
        "verifyLabel",
        "parseTag",
        "defineDecisionState",
        "isModeDifferent",
        "getChar",
        "dereferenceResult",
        "getColumnStyle",
        "modifyEventSubscription",
        "unmodifiableSet",
        "toFormulaString",
        "containsValue",
        "revokeSnapshotAccess",
        "setValueAt",
        "getTotalSLLLookaheadOps",
        "getTaxonomyReader",
        "stripTags",
        "promptYesNo",
        "AndQuery",
        "getClipboardFormat",
        "toASCIIString",
        "segmentFileName",
        "checkPosition",
        "shouldBeRecursive",
        "getField",
        "getFieldEnum",
        "getTotalTimeInPrediction",
        "pop_andnot",
        "doesFormulaReferToDeletedCell",
        "newTermQuery",
        "getEscherContainer",
        "onWindowFocusChanged",
        "getBinaryValue",
        "getExtension",
        "ConjQuery",
        "isRowGroupCollapsed",
        "getExFormatAt",
        "writeTokenValueBytes",
        "toAutomaton",
        "checkFooter",
        "setReader",
        "pop_xor",
        "createSafeSheetName",
        "setDetectRenames",
        "checkStartAndEnd",
        "onPreReceive",
        "createMatcherForSuffix",
        "isId",
        "promptPassphrase",
        "getTriplet",
        "newSpanTermQuery",
        "getCachedContext",
        "validate",
        "setPass",
        "visitContainedRecords",
        "getDecisionInfo",
        "respondActivityTaskCanceled",
        "advise",
        "categoriesLineFile",
        "pop_array",
        "decodeNumber",
        "quoteEscape",
        "hasExactSharedBorder",
        "codePointCount",
        "getIndexSearcher",
        "matches",
        "modifyClusterDbRevision",
        "deprecateActivityType",
        "startsWith",
        "respondActivityTaskFailed",
        "fromString",
        "pullNext",
        "getNextToken",
        "maxRecall",
        "isNewFragment",
        "toIntegerList",
        "getDTDHandler",
        "setMultiFields",
        "next",
        "replace",
        "resize",
        "restoreDBClusterFromSnapshot",
        "getEntityResolver",
        "pollForActivityTask",
        "getWorkflowExecutionHistory",
        "countArg",
        "(",
        "isEndOfRowBlock",
        "getEntryIterator",
        "setIndeterminate",
        "fill",
        "getRomanization",
        "createDateConstraint",
        "getItem",
        "getQueryMaker",
        "willSoonExpire",
        "lastIndexOf",
        "getFormulaTokens",
        "deleteGlobalReplicationGroup",
        "putUnicodeLE",
        "getBuiltinFormat",
        "nextTokens",
        "createGlobalCluster",
        "factorial",
        "setUpstream",
        "isBuiltInFunctionName",
        "getProfile",
        "setFontHeight",
        "formatBase10",
        "createDBInstanceReadReplica",
        "ceilingKey",
        "getComposer",
        "getWeightedSpanTerm",
        "getWeekNo",
        "pollForDecisionTask",
        "BM25Similarity",
        "createAnchor",
        "getOrCreateFormulaCellEntry",
        "fieldsConsumer",
        "getAreaEval",
        "indexOf",
        "onPostReceive",
        "toHex",
        "getRefEvaluatorForCurrentSheet",
        "endOfFooterLineKey",
        "resolveNameXIx",
        "encode",
        "toLexerString",
        "getThumbnailAsWMF",
        "]",
        "getIndexOfName",
        "copyOfRange",
        "createClusterSnapshot",
        "linkSharedFormulaRecord",
        "isAboveMinRep",
        "checkHeader",
        "coerceValueToString",
        "getFieldConfig",
        "createHsmClientCertificate",
        "compareIgnoreCase",
        "getSupportedFunctionNames",
        "getReaderIteratorNoHeader",
        "finish",
        "setDeltaSearchWindowSize",
        "readData",
        "warnIfOpen",
        "subIndex",
        "getTotalLLLookaheadOps",
        "isUnicodeString",
        "notifyDeleteCell",
        "nextHighestPowerOfTwo",
        "setRefSpecs",
        "getATNWithBypassAlts",
        "completeMigration",
        "update",
        "compareTo"
      ],
      "Syntactic Label": "Method Names, Variables, and Operators",
      "Semantic Tags": [
        "Database Management",
        "Code Validation",
        "Authorization",
        "Data Transformation",
        "File Processing"
      ],
      "Description": "The tokens represent a collection of C# method names, variables, and operators.  These are significant in the context of C# programming because they suggest operations related to database management (e.g., creating, deleting, copying database instances and snapshots), code validation (isValidCode), authorization (authorizeDBSecurityGroupIngress), data transformation (e.g., asinh, atanh, toCodePoints), and file processing (e.g., writeHeader, readFully, open, etc.). The methods appear to be part of a larger system or library for managing and interacting with databases, potentially involving security, data integrity checks, and various file operations."
    }
  },
  {
    "c384": {
      "Unique tokens": [
        "sqi",
        "it",
        ".",
        "--",
        "index",
        "j",
        "alt",
        "k",
        "b",
        "0",
        "++",
        "serializerClasses",
        "c",
        "<",
        "li",
        "{",
        "y",
        "blockIndex",
        "=",
        ">=",
        ")",
        "(",
        "value",
        "CTFormat",
        "subs",
        "i",
        "clazz",
        "x",
        "compIDX",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Loop Control",
        "Array Manipulation",
        "Data Processing",
        "Bitwise Operations",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a mix of C# keywords, operators, and identifiers commonly used in loops, array processing, bit manipulation, and conditional statements.  The context shows these tokens are part of various methods performing data processing tasks, including bitwise decoding and array manipulation.  The semantic tags reflect the core functionalities observed in the code snippets."
    }
  },
  {
    "c385": {
      "Unique tokens": [
        "StringBuilder",
        "errCode",
        "put",
        "++",
        "toArray",
        "?",
        "dcb",
        "Collections",
        "singleton",
        "<",
        "attributes",
        "short",
        "append",
        ")",
        "int",
        "buf",
        "getSimpleName",
        "Integer",
        "id=",
        "repo",
        "shapeField",
        "appendCodePoint",
        "Log",
        "if",
        "null",
        "Hashtable",
        "try",
        "MergeInfo",
        "substring",
        "[",
        "newArrayList",
        "getName",
        "exists",
        "mac",
        "ArrayList",
        "errorMessage",
        "utf8",
        "false",
        "Object",
        "this",
        "symbol",
        "name",
        "grid",
        "delegate",
        "emptySet",
        "snapshot",
        "s",
        "hashCode",
        "target",
        "weight",
        "size",
        "1",
        "getClass",
        "synchronized",
        "getString",
        "Map",
        "noteOn",
        "operator",
        "provider",
        "canonicalName",
        "slice",
        ".",
        "return",
        "throw",
        "runData",
        "new",
        "id",
        "IB",
        "+",
        "log",
        "equals",
        "setErrorType",
        "Set",
        "toString",
        "width",
        "field",
        "=",
        "final",
        "getLocalizedMessage",
        "convertToInputStream",
        "key",
        "lock",
        "(",
        "endsWith",
        "o",
        "state",
        "tokenName",
        "in",
        "instanceof",
        "product",
        "errorCode",
        "Long",
        "message",
        "getText",
        "functionName",
        ";",
        "\"",
        "JGitText",
        "State",
        "switch",
        "ROOT",
        "input",
        "context",
        "0",
        "indexOf",
        "toObject",
        "format",
        "get",
        "Locale",
        "r",
        "System",
        "inv",
        "case",
        "mutex",
        "{",
        "analyer",
        "quoted",
        "positionSensitive",
        "]",
        ":",
        "String",
        "&&",
        "detailMessage",
        "create",
        "dedup",
        "value",
        "ruleName",
        "super",
        "SET",
        "checkCallable",
        "w1"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Object-Oriented Programming",
        "Data Structures",
        "String Manipulation",
        "Exception Handling",
        "Collection Framework"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords (if, else, try, catch, etc.), operators (+, -, ++, =, ., etc.), data types (int, String, short, etc.), class names (StringBuilder, ArrayList, Hashtable, etc.), method calls (toString(), append(), getSimpleName(), etc.), and collection framework elements (Collections, Set, Map, etc.). The code snippets demonstrate object creation, string manipulation, exception handling, and the use of various data structures and collections.  The semantic tags reflect the core programming concepts and libraries used."
    }
  },
  {
    "c386": {
      "Unique tokens": [
        "buffer",
        "=",
        "result",
        ")",
        "sb",
        "ArrayList",
        "StringBuffer",
        "StringBuilder",
        "<",
        "text",
        "buf",
        "new",
        "b",
        "builder",
        "s",
        "(",
        ";"
      ],
      "Syntactic Label": "StringBuilder Object and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "Object Creation",
        "Data Representation",
        "String Concatenation",
        "Output Formatting"
      ],
      "Description": "The tokens represent the creation and manipulation of StringBuilder objects in C#.  The `StringBuilder` class is used extensively to efficiently build strings through repeated appends.  The tokens such as '=', '(', ')', ';', and '.' are operators used in object instantiation, method calls, and assignment. The overall purpose of the code snippets is to generate string representations of various data structures and objects, often for logging, debugging, or display purposes."
    }
  },
  {
    "c387": {
      "Unique tokens": [
        "",
        "ERROR",
        "VALUE_INVALID",
        "2",
        "?",
        "arg4",
        "<OTHER>",
        "break",
        "pict",
        "png",
        ")",
        "0x01",
        "w5",
        "getCellType",
        "DEFAULT_ARG4",
        "w3",
        "GiB",
        "3",
        "if",
        ",",
        "BETWEEN",
        "default",
        "args",
        "len",
        "[",
        "jpeg",
        "==",
        "arg3",
        "w4",
        "NE",
        "4",
        "OLD",
        "UnsupportedPackIndexVersionException",
        "s",
        "NEW",
        "LittleEndian",
        "EQ",
        ".",
        "return",
        "throw",
        "--",
        "sid",
        "new",
        "+",
        "delete",
        "=",
        "EOFRecord",
        "KiB",
        "_pattern",
        "(",
        "i",
        "DEFAULT_ARG3",
        "w",
        ";",
        "\"",
        "MiB",
        "fixed",
        "PackIndexV2",
        "CmpOp",
        "NUMERIC",
        "HANGUL",
        "ZERO",
        "case",
        "}",
        "BOOLEAN",
        "'",
        "Character",
        "Unknown",
        "{",
        "before",
        "]",
        ":",
        "STRING",
        "Type:",
        "HEH",
        "TREE",
        "NONE",
        "update",
        "String",
        "FileMode",
        "script"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Data Processing",
        "File IO",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, switch, case, break, return, throw), operators (==, !=, +, -, <<, >>>, &, |), data types (int, String, byte[], boolean), identifiers (e.g.,  _cellType,  _numberValue,  RawParseUtils,  LittleEndian), and exception types (e.g., UnsupportedPackIndexVersionException, EvaluationException).  These tokens are used to implement various functionalities such as conditional statements, loops, exception handling, data manipulation, file input/output operations, and data structure management. The context sentences show these tokens in action within methods and functions, demonstrating their roles in building complex C# applications."
    }
  },
  {
    "c388": {
      "Unique tokens": [
        "",
        "getInt",
        "bounds",
        "to",
        "j",
        "++",
        "2",
        "?",
        "ptr",
        "<",
        "_data",
        "root",
        ")",
        "int",
        "scriptAndResourcePath",
        "xmax",
        "levelW",
        "flag",
        "startOffset",
        "Integer",
        "modFor",
        "list",
        "-",
        "x",
        "pos",
        "nextDoc",
        "3",
        "if",
        "null",
        ",",
        "TAG_ADD_IN_FUNCTIONS",
        "q",
        "valStart",
        "removeGaps",
        "tokenIndex",
        "desc",
        ">>>",
        ">",
        "backType",
        "newBackType",
        "Row",
        "insert",
        "[",
        "<=",
        "dashEven",
        "getIndex",
        "specs",
        "filterForChannel",
        "*",
        "TokenSource",
        "getFormatIndex",
        "==",
        "ArrayList",
        "CharStream",
        "taxoCommitGen",
        "false",
        "byte",
        ">=",
        "previousTokenOnChannel",
        "slices",
        "4",
        "rows",
        "s",
        "true",
        "nextOnChannel",
        "size",
        "1",
        "Remap",
        "orig",
        "!",
        "newDoc",
        "prevOnChannel",
        "ris",
        ".",
        "return",
        "ArrayUtil",
        "elementCount",
        "bytes",
        "new",
        "+",
        "orows",
        "header",
        "FieldName",
        "codePointCount",
        "sval",
        "posStart",
        "=",
        "while",
        "next",
        "(",
        "raw",
        "FooterLine",
        "i",
        "in",
        "Long",
        "part",
        "/",
        "!=",
        ";",
        "\"",
        "path",
        "nextTokenOnChannel",
        "min",
        "now",
        "Trie",
        "0",
        "RawParseUtils",
        "jumpTable",
        "start",
        "'",
        "}",
        "remap",
        "{",
        "msgB",
        "decodeInt32",
        "indexCommit",
        "oldToken",
        "]",
        "cmd",
        "+=",
        ":",
        "indexGen",
        "cmds",
        "&&",
        "m",
        "\\n",
        "taxoCommit",
        "keyEnd",
        "merged"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Object Manipulation",
        "File I/O",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"if\", \"while\", \"for\", and operators such as \"+\", \"-\", \"*\", \">\", \"<\", \"==\", and \"!=\" control program flow and perform operations.  Identifiers like \"getInt\", \"bounds\", \"removeGaps\", etc., represent variables, methods, and classes.  The presence of objects like \"ArrayList\", \"StringBuilder\", \"BytesRef\", and data structures like arrays and lists indicates data manipulation and storage.  The use of exceptions (\"RuntimeException\", \"IllegalArgumentException\") shows error handling mechanisms.  Finally, the presence of file paths and I/O operations suggests file processing is involved."
    }
  },
  {
    "c389": {
      "Unique tokens": [
        "",
        "to",
        "query",
        "segmentInfo",
        "b",
        "toQueryString",
        "alt",
        "h",
        "docFreq",
        "property",
        "?",
        "asList",
        "analyzer",
        "refs",
        "blockFilePointer",
        "<",
        "moreLikeFields",
        "incRef",
        "clone",
        "copy",
        "copyFrom",
        "reader",
        ")",
        "length",
        "apache",
        "getCacheTree",
        "matcher",
        "toCharArray",
        "getSimpleName",
        "org",
        "termBlockOrd",
        "likeText",
        "boost",
        "-",
        "x",
        "fieldName",
        "subfilters",
        "if",
        "rhs",
        "fieldInfos",
        "null",
        ",",
        "getSubRecords",
        "q",
        "BlockTermState",
        "s2",
        "obj",
        "args",
        ">",
        "substring",
        "otherState",
        "addAll",
        "getName",
        "getRange",
        "Arrays",
        "end",
        "UNTOKENIZED_TYPES",
        "==",
        "values",
        "subMap",
        "ready",
        "stateNumber",
        ">=",
        "this",
        "name",
        "ref",
        "getVersion",
        "emptySet",
        "s",
        "true",
        "s1",
        "target",
        "pList",
        "t",
        "size",
        "1",
        "getClass",
        "queryText",
        "Token",
        "p",
        "!",
        "getGeneration",
        "groupComp",
        "remove",
        "EQ",
        ".",
        "return",
        "char",
        "dir",
        "queueControl",
        "new",
        "k",
        "$",
        "id",
        "+",
        "lexerActionExecutor",
        "delete",
        "INVALID_TYPE",
        "parts",
        "is",
        "equals",
        "v",
        "toString",
        "getNameText",
        "field",
        "add",
        "=",
        "isEmpty",
        "copyBytes",
        "Boolean",
        "tmp",
        "next",
        "replace",
        "key",
        "(",
        "groupSort",
        "comparator",
        "o",
        "state",
        "clear",
        "parseBoolean",
        "instanceof",
        "term",
        "n",
        "w",
        "sort",
        "!=",
        ";",
        "::",
        "\"",
        "getChars",
        "E",
        "context",
        "get",
        "}",
        "case",
        "'",
        "{",
        "text",
        "totalTermFreq",
        "_other",
        "y",
        "getChildById",
        "]",
        "oversize",
        ":",
        "remaining",
        "containsKey",
        "&&",
        "newParents",
        "childCount",
        "value",
        "defVal",
        "fields",
        "NONE",
        "poi",
        "->",
        "a",
        "other"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Object-Oriented Programming",
        "Control Flow",
        "Data Structures",
        "Operators",
        "Method Calls"
      ],
      "Description": "The cluster encompasses a wide range of C# language elements, including keywords (if, public, return, boolean, etc.), operators (., ==, +, -, !=, etc.), identifiers (shape, other, remove, etc.), symbols (, ), {, }, [, ], etc.), and literals (true, false, null, etc.). These tokens and symbols collectively represent fundamental building blocks of C# programs, enabling object creation, method invocation, conditional logic, data manipulation, and other essential programming constructs.  The context sentences demonstrate their usage in various scenarios, such as object manipulation, method calls, conditional statements, and data comparisons.  The semantic tags highlight the core functionalities and programming paradigms involved."
    }
  },
  {
    "c390": {
      "Unique tokens": [
        "\"",
        "offset",
        ".",
        "throw",
        "bytes",
        "j",
        ">",
        "+",
        "suffix",
        "indexOf",
        "++",
        "toArray",
        "get",
        "bufferStartIndex",
        "{",
        "read",
        "toString",
        "getTokenIndex",
        "readUShort",
        "subSequence",
        "+=",
        ":",
        "this",
        "remaining",
        ")",
        "length",
        "buf",
        "(",
        "size",
        "getLine",
        "getClass",
        "-",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "String Manipulation",
        "Exception Handling",
        "Data Structures",
        "File I/O",
        "Object-Oriented Programming"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords like \"throw\", operators like \".\", \"+=\", \"++\", and symbols like \"(\", \")\", \"{\", and \";\".  These are used in various contexts, including object manipulation, exception handling, string building, array operations, and file I/O. The semantic tags reflect the common operations performed in the provided code snippets."
    }
  },
  {
    "c391": {
      "Unique tokens": [
        "cchData",
        ",",
        "rwFirstHead",
        ".",
        "dataField",
        "colLast",
        "cDimRw",
        "StringUtil",
        "ipos4Data",
        "cchName",
        "cDimPg",
        "}",
        "rwLast",
        "=",
        "readUShort",
        ")",
        "name",
        "grbit",
        "int",
        "cCol",
        "(",
        "colFirstData",
        "cDimCol",
        "cDimData",
        "rwFirstData",
        "colFirst",
        "readUnicodeString",
        "in",
        "cDim",
        "sxaxis4Data",
        "iCache",
        "cRw",
        "itblAutoFmt",
        ";"
      ],
      "Syntactic Label": "Variable Declaration and Initialization",
      "Semantic Tags": [
        "Data Deserialization",
        "Record Structure",
        "Data Representation",
        "File Input",
        "Object Initialization"
      ],
      "Description": "The tokens represent variables of various data types (short, string) being declared and initialized within the constructor of a class.  The variables store data read from a RecordInputStream, indicating a deserialization process.  The code suggests a structured data format where each variable represents a field within a record.  The use of readUShort and readUnicodeString methods points to reading data from a binary or custom file format.  The StringUtil class is used for string handling during deserialization."
    }
  },
  {
    "c392": {
      "Unique tokens": [
        "endOfParagraph",
        "E",
        "fromObjectId",
        "author",
        "wasEscaped",
        "parseTimeZoneOffset",
        "isComponentRecord",
        "getFields",
        "[",
        "toByteArray",
        "getResults",
        "grow",
        "tagMessage",
        "Object",
        "]",
        "copyFrom",
        "encoding",
        "getNearestSetSize",
        "final",
        "evaluate",
        ")",
        "next",
        "trimFromLast",
        "(",
        "getSupportedFunctionNames",
        "Path",
        "serialize",
        "clear",
        "T",
        "process",
        "poi",
        "getColor",
        "fromRaw"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Method Parameters",
        "Method Calls",
        "Data Structures",
        "File Processing",
        "Data Serialization"
      ],
      "Description": "The tokens represent a variety of C# language elements including method parameters (e.g., fromObjectId, author, encoding), method calls (e.g., getFields, toByteArray, serialize), data structures (e.g., byte[], StringBuffer, List), file processing (e.g., Path), and data serialization (e.g., serialize, toByteArray).  The context sentences show these tokens used in various methods, suggesting a codebase dealing with data manipulation, file operations, and potentially data storage or retrieval."
    }
  },
  {
    "c393": {
      "Unique tokens": [
        "f",
        "to",
        "startIndex",
        "valuesPerBlock",
        "u",
        "b",
        "alt",
        "h",
        "Math",
        "idx",
        "++",
        "?",
        "bitsPerValue",
        "eq",
        "utf8ToString",
        "<",
        "old",
        "toIndex",
        "break",
        "root",
        "multiplier",
        "append",
        ")",
        "sizeIsValid",
        "int",
        "set",
        "length",
        "buf",
        "nr",
        "buffer",
        "result",
        "-",
        "x",
        "aux",
        "pos",
        "if",
        "3",
        "null",
        ",",
        "sb",
        "passage",
        ">",
        "len",
        "[",
        "\u00ea",
        "insideQuote",
        "<=",
        "\u00e1",
        "startIdx",
        "end",
        "==",
        "character",
        "values",
        "false",
        "last",
        ">=",
        "this",
        "continue",
        "ref",
        "lo",
        "success",
        "s",
        "true",
        "t",
        "upto",
        "arg",
        "size",
        "1",
        "eThat",
        "cur",
        "ESCAPE_CHAR",
        "temp",
        "p",
        "lastEscape",
        "it",
        ".",
        "return",
        "--",
        "index",
        "nCells",
        "k",
        "+",
        "log",
        "rules",
        "parts",
        "equals",
        "v",
        "points",
        "ret",
        "toString",
        "previous",
        "el",
        "add",
        "=",
        "oldb",
        "terms",
        "next",
        "key",
        "positionIndex",
        "assert",
        "(",
        "eThis",
        "raw",
        "d",
        "o",
        "fill",
        "I",
        "i",
        "cnt",
        "in",
        "n",
        "w",
        "hasPrevious",
        "ri",
        "!=",
        ";",
        "hi",
        "\"",
        "at",
        "filler",
        "sc",
        "res",
        "max",
        "min",
        "crA",
        "now",
        "doc",
        "0",
        "master",
        "start",
        "r",
        "sum",
        "c",
        "d1",
        "ch",
        "'",
        "}",
        "{",
        "li",
        "Not",
        "current",
        "nextChar",
        "e",
        "]",
        "line",
        "cmd",
        "subSequence",
        ":",
        "cmds",
        "quoteCount",
        "&&",
        "\u00fa",
        "uniformCnt",
        "value",
        "m",
        "rv",
        "\\n",
        "skip",
        "T",
        "columnIndex",
        "a",
        "rs",
        "object",
        "other",
        "DELIM_CHAR",
        "left"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "Control Flow",
        "Assertion",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language constructs.  Keywords like \"if\", \"for\", \"while\", \"return\", and \"assert\" control program flow.  Operators such as \"+\", \"-\", \"*\", \">\", \"<\", \"==\", \"!=\", \"++\", and \"--\" perform arithmetic and comparison operations.  The tokens also show the use of arrays, objects, and string manipulation using methods like \"append\", \"toString\", and \"subSequence\".  The code snippets demonstrate common programming patterns in C#, such as iterating through arrays, manipulating strings, and handling exceptions."
    }
  },
  {
    "c394": {
      "Unique tokens": [
        "return"
      ],
      "Syntactic Label": "Return Statement",
      "Semantic Tags": [
        "Method Return",
        "API Response",
        "Function Result",
        "Value Return",
        "Result Handling"
      ],
      "Description": "The `return` keyword in C# is used to return a value from a method or function.  In this context, it's returning the result of an execution of another method, which is likely part of a larger API or service where each method represents a specific operation. The returned value is the result of that operation, which is then used by the caller."
    }
  },
  {
    "c395": {
      "Unique tokens": [
        "\"",
        "PathFilter",
        "null",
        ",",
        ".",
        "return",
        "_frAggs",
        "sb",
        "finally",
        "--",
        "new",
        "vectorsStream",
        ">",
        "+",
        "++",
        "?",
        "r",
        "tailBlock",
        "elset",
        "if",
        "}",
        "System",
        "{",
        "IndexOptions",
        "==",
        "else",
        "toString",
        "false",
        "=",
        "]",
        ":",
        "this",
        "final",
        ")",
        "agg",
        "int",
        "&",
        "buf",
        "scratch",
        "success",
        "Security",
        "true",
        "(",
        "getWeight",
        "state",
        "Constants",
        "CodecUtil",
        "1",
        "IllegalStateException",
        "buffer",
        "catch",
        "getTree",
        "for",
        "-",
        "sorter",
        "x",
        "rs",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Object Instantiation",
        "Exception Handling",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `for`, `catch`, `finally` control program flow.  `new` is used for object instantiation.  `System`, `Security`, `IllegalStateException`, and `ConcurrentModificationException` relate to exception handling and namespaces.  Data structures are represented by `Map`, `List`, `ArrayList`, `StringBuilder`, `byte[]`, `int[]`, etc.  File I/O is suggested by the presence of `File`, `InputStream`, `IOException`, etc."
    }
  },
  {
    "c396": {
      "Unique tokens": [
        "",
        "switch",
        ".",
        "try",
        "return",
        "throw",
        "bytes",
        "new",
        "Record",
        "if",
        "exactOnly",
        "{",
        "else",
        "false",
        "))",
        "getCachedBytes",
        ")",
        "int",
        "&&",
        "true",
        "(",
        "startOffset",
        "1",
        "fields",
        "EMPTY",
        "chan",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Object Creation",
        "Conditional Logic",
        "Method Definition"
      ],
      "Description": "The tokens represent a variety of C# language constructs.  'switch', 'try', 'return', 'throw', and 'if' are keywords that control program flow and handle exceptions. '.' is the dot operator for member access. 'new' is used for object instantiation.  'Record' suggests the use of C# records.  The parentheses '(', ')', and curly braces '{', '}' define code blocks and method parameters.  ';' is the statement terminator.  Other tokens like 'bytes', 'int', '&&', 'true', 'false', 'getCachedBytes', 'startOffset', '1', 'fields', 'EMPTY', 'chan', 'exactOnly' are identifiers or literals within the context of methods and conditional statements."
    }
  },
  {
    "c397": {
      "Unique tokens": [
        "getType",
        "isBuiltin",
        "df",
        "byteToHex",
        ".label",
        "b",
        "field_7_comment_text",
        ".topgutter",
        ".type",
        ".cSub",
        "else",
        "getFillPattern",
        "sectionCount:",
        "append",
        ")",
        "int",
        ".rowto",
        "CellReference",
        "Ptg",
        "cell",
        "NEW_LINE",
        "s=",
        "toHexString",
        "buffer",
        "getColumnCount",
        "Integer",
        "l=null",
        "</font>",
        "boost",
        "if",
        ".displayAsPercentage",
        "null",
        ",",
        "maxMergeSize=",
        "wOffset",
        "sb",
        "isShowSeriesKey",
        "dtfmt",
        "getHeight",
        "unused",
        ".is16bit=",
        ">",
        "_unused",
        "encryptionInfo",
        "tagger",
        "[",
        "updateIndex",
        "*",
        "field_3_reserved",
        "parents",
        "padd",
        "[/EXTERNALNAME]",
        "dist=",
        ".guid",
        "last",
        "this",
        "[/SXVD]",
        "s",
        "task",
        "cur",
        "shortToHex",
        "!",
        ".",
        "return",
        "getDVRecNo",
        "recordName",
        ".flags",
        ".col",
        "sheet=",
        "includeUpper",
        "toString",
        "field_1_option_flag",
        "0x",
        "=",
        "field_5_zero",
        "add",
        "getClassID",
        "localName",
        "upperTerm",
        "(",
        ".uniquestrings",
        "write",
        "getExternalWorkbookNumber",
        "i",
        "getFirstColumn",
        "getRefName",
        ".verticalBorder",
        "!=",
        ";",
        "_wStyle",
        "\"",
        "Formatting]",
        "field_2_visibility",
        "field5_grbit",
        "maxQueryTerms",
        "ObjectId",
        "mergeFactor",
        "toHex",
        ".element_",
        "System",
        "'",
        "}",
        "nCases=",
        "doNotDelta",
        "clause",
        "getEntryPathString",
        "intToHex",
        "]",
        ":",
        "_linkPtg",
        "&",
        "&&",
        "value",
        "Constants",
        "getFirstRow",
        "\\n",
        ".grbitFrt",
        "object",
        "HexDump"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Record Formatting",
        "Hexadecimal Conversion"
      ],
      "Description": "The tokens represent a variety of C# language elements including keywords (if, else, return), operators (+, =, ., ==, !=, etc.), identifiers (toString, StringBuilder, HexDump, etc.), and special characters ([, ], {, }, (, ), \", ', etc.).  These are used extensively in the provided code snippets to build strings representing various data structures and objects, often converting numerical data into hexadecimal format for display. The overall semantic significance lies in the serialization and representation of data, particularly in the context of what appears to be a custom file format or data structure.  The frequent use of StringBuilder objects indicates an emphasis on efficient string concatenation."
    }
  },
  {
    "c398": {
      "Unique tokens": [
        "getType",
        "toQueryString",
        "getMessage",
        "format",
        "log",
        "toStringEscaped",
        "getName",
        "getValue",
        "readLine",
        "getShortMessage",
        "formatDate",
        "toString",
        "toHexString",
        "toJson",
        "getString",
        "getPath",
        "getMessages",
        "String",
        "getText"
      ],
      "Syntactic Label": "Methods",
      "Semantic Tags": [
        "String Representation",
        "Object Serialization",
        "Data Formatting",
        "Logging",
        "Utility Functions"
      ],
      "Description": "These tokens represent methods commonly used in C# for generating string representations of objects, converting data to various formats (e.g., hexadecimal, JSON), logging information, and performing other utility functions.  The context shows that these methods are frequently used to create string representations of objects for debugging, display, or data exchange purposes.  The use of StringBuilder in many examples indicates an emphasis on efficient string manipulation."
    }
  },
  {
    "c399": {
      "Unique tokens": [
        "(",
        "call",
        "throws",
        ")",
        "{",
        "getTokens",
        ">"
      ],
      "Syntactic Label": "C# language constructs",
      "Semantic Tags": [
        "Exception Handling",
        "Constructor",
        "Method Call",
        "Parameter Passing",
        "Control Flow"
      ],
      "Description": "The tokens (, call, throws, ), {, getTokens, > represent core C# language features.  '(' and ')' are parentheses used for method parameters and function calls. 'call' suggests a method invocation. 'throws' indicates exception handling, specifying that a method might throw a GitAPIException. '{' and '}' are curly braces that define code blocks. 'getTokens' is likely a method name, and '>' is a comparison operator."
    }
  },
  {
    "c400": {
      "Unique tokens": [
        "EvaluationException",
        "MONTH",
        "getYear",
        "getTime",
        "date",
        "cal",
        ")",
        "getTimeZone",
        "returnType",
        "instance",
        "int",
        "set",
        "dateTimeInstance",
        "sign",
        "DateUtil",
        "milliSecond",
        "SystemReader",
        "hours",
        "-",
        "second",
        "year",
        "if",
        "%d",
        "null",
        ",",
        "DAY_OF_YEAR",
        "calStart",
        "default",
        "getLocaleCalendar",
        "60",
        "use1904windowing",
        "end",
        "getWhen",
        "MILLISECOND",
        "==",
        "minute",
        "this",
        "startDate",
        "getDayOfYear",
        "1",
        "DAY_OF_MONTH",
        "ident",
        "months",
        "tz",
        ".",
        "return",
        "serialNum",
        "getMinute",
        "new",
        "getSecond",
        "+",
        "1000",
        "MINUTE",
        "setTimeZone",
        "add",
        "SECOND",
        "=",
        "internalGetExcelDate",
        "Calendar",
        "(",
        "setTime",
        "HOUR_OF_DAY",
        "dayOfYear",
        "clear",
        "catch",
        "/",
        ";",
        "\"",
        "getInstance",
        "getWeekNo",
        "minutes",
        "0",
        "HOUR",
        "format",
        "get",
        "start",
        "}",
        "case",
        "{",
        "hour",
        "getNano",
        "%",
        "e",
        "dateTimeInstance2",
        "getExcelDate",
        ":",
        "getHour",
        "YEAR",
        "serialNumCalendar"
      ],
      "Syntactic Label": "C# Language Constructs and API Calls",
      "Semantic Tags": [
        "Date and Time Manipulation",
        "Spreadsheet Date Conversion",
        "Error Handling",
        "Calendar Operations",
        "Date Formatting"
      ],
      "Description": "The tokens represent a mix of C# keywords (if, catch, return, etc.), operators (+, -, ==, etc.), built-in types (int, double, boolean), and calls to classes from the System and potentially custom libraries (Calendar, DateUtil, EvaluationException, etc.).  The code snippets demonstrate date and time manipulation, specifically converting dates to and from a spreadsheet-compatible format (Excel dates).  Error handling is implemented using try-catch blocks, and various calendar operations are performed using the Calendar class.  Date formatting is also present, suggesting the code is part of a system that interacts with dates in different formats."
    }
  },
  {
    "c401": {
      "Unique tokens": [
        "getInt",
        "",
        "reverse",
        "_hasFreqs",
        "getWidth",
        "VALUE_INVALID",
        "readUnicodeLEString",
        "writeShort",
        "idx",
        "field2val",
        "++",
        "?",
        "property",
        "0xFE",
        "2",
        "Query",
        "gc",
        "ReflogCommand",
        "<",
        "getDefaultTempDir",
        "ctf",
        "else",
        "inStream",
        "sfr",
        "break",
        "compareUInt32",
        "field_5_bytes",
        "gridH",
        "append",
        ")",
        "fetch",
        "int",
        "length",
        "extra",
        "shIx2",
        "field_6_border_options",
        "result",
        "longs",
        "-",
        "_name",
        "must",
        "reserved",
        "oldlen",
        "thisLong",
        "pos",
        "if",
        "makeAnyString",
        "offset",
        "triggerEnterRuleEvent",
        "data",
        "null",
        ",",
        "TwoDEval",
        "{return",
        "GroupQueryNode",
        "sb",
        "too",
        "endIndex",
        "impl",
        "args",
        "Field",
        ">",
        "futureOutputs",
        "setCellValue",
        "len",
        "[",
        "insideQuote",
        "separatorChar",
        "Arrays",
        "jj_consume_token",
        "getCalField",
        "RefEval",
        "read",
        "ymax",
        "==",
        "getAnalyzerFactories",
        "ArrayList",
        "values",
        "false",
        "stateNumber",
        "byte",
        "DFAState",
        "this",
        "readStringCommon",
        "tokens",
        "resolveRangeLookupArg",
        "getGreen",
        "ErrorEval",
        "s",
        "filters",
        "Mode",
        "size",
        "copy+sync",
        "getRef",
        "CharsRef",
        "for",
        "IllegalArgumentException",
        "field_4_drawingsSaved",
        "boolean",
        "!",
        "lastEscape",
        "LittleEndian",
        "0xe0",
        "_record",
        "IntegerField",
        "field_8_zero3",
        "arraycopy",
        ".",
        "return",
        "throw",
        "source",
        "new",
        "k",
        "iwc",
        "+",
        "valueFor",
        "TITLE",
        "endRowNumber",
        "filterPrecedencePredicates",
        "v",
        "readInt",
        "-=",
        "field",
        "longBitsToDouble",
        "subrecords",
        "add",
        "=",
        "ymin",
        "final",
        "getCol",
        "writeInt",
        "setPolygonDrawArea",
        "sortedTerms",
        "endDateVal",
        "(",
        "&=",
        "prevLF",
        "HEXADECIMAL_BASE",
        "fill",
        "fieldsStream",
        "i",
        "in",
        "instanceof",
        "contents",
        "n",
        "eofToken",
        "thisInt",
        "PendingOutputs",
        "!=",
        ";",
        "\"",
        "EscherRecord",
        "utf8State",
        "BlankCellRectangleGroup",
        "0",
        "lowerTerm",
        "lastSynSetID",
        "get",
        "field_6_name_text",
        "mPullDistance",
        "DATE_RESOLUTION",
        "r",
        "b7",
        "out",
        "}",
        "case",
        "remap",
        "'words'",
        "logStepAtt",
        "'",
        "{",
        "text",
        "parent",
        "taxoWriter",
        "]",
        "cmd",
        "+=",
        ":",
        "unsignedInt",
        "reuseFirst",
        "LabelAndValue",
        "0x0041",
        "rc",
        "_lastCell",
        "\\n",
        "firstSheetIndex",
        "CharBuffer",
        "score",
        "DEFAULT_MIN_SUBWORD_SIZE",
        "PositionSpan",
        "contains",
        "phoneticText",
        "CFHeaderBase",
        "super",
        "String",
        "si",
        "valuesOffset"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c402": {
      "Unique tokens": [
        "{",
        "return"
      ],
      "Syntactic Label": "Return Statement",
      "Semantic Tags": [
        "Method Return",
        "Value Return",
        "Function Return",
        "Control Flow",
        "Method Implementation"
      ],
      "Description": "The tokens {, and return are part of C# method implementations.  The opening brace '{' indicates the start of the method body, and the keyword 'return' signifies the return of a value from a method. This is fundamental to C# programming for defining the behavior and output of methods."
    }
  },
  {
    "c403": {
      "Unique tokens": [
        ".",
        "sid",
        "unused",
        "writeShort",
        "+",
        "[",
        "getBytes",
        "getValue",
        "putShort",
        "writeDouble",
        "_value",
        "readByte",
        "=",
        "short",
        ")",
        "writeInt",
        "putInt",
        "(",
        "writeByte",
        "write",
        "putLong",
        "reserved",
        "LittleEndian"
      ],
      "Syntactic Label": "Data Serialization methods and operators",
      "Semantic Tags": [
        "Data Serialization",
        "Binary Data",
        "Little Endian Encoding",
        "File Output",
        "Byte Stream"
      ],
      "Description": "The tokens represent methods and operators used for serializing data into a binary format using Little Endian byte ordering.  The `write` and `serialize` methods, along with various `write*` methods (e.g., `writeShort`, `writeInt`, `writeByte`), are used to write data to a `LittleEndianOutput` stream.  The `.` operator is used for method calls, `+` for addition, `[]` for array access, and `=` for assignment.  The `sid`, `unused`, `reserved`, and other identifiers are likely data fields or variables. The overall purpose is to write structured data to a byte stream in a specific binary format."
    }
  },
  {
    "c404": {
      "Unique tokens": [
        "and",
        "position",
        "version",
        "idx",
        "vs",
        "only",
        "cannot",
        "append",
        ")",
        "length",
        "cell",
        "toHexString",
        "buffer",
        "Integer",
        "recordType",
        "-",
        "from",
        "between",
        "K",
        "getHCenter",
        "null",
        ",",
        "not",
        "too",
        "of",
        "[",
        "already",
        "==",
        "records,",
        "VERSION_START",
        "p:",
        "name",
        "numDocsWritten",
        "[FUTURE",
        "needle",
        "\\\"",
        "(TERM",
        "getUnits",
        "firstRow",
        "for",
        "_lastSheetIndex",
        ".",
        "return",
        "getFullPrecision",
        "isxvd=",
        "_text",
        "lastRow",
        "+",
        "does",
        "is",
        "[len=",
        "fields=",
        "getGridset",
        "-->",
        "add",
        "as",
        "=",
        "range",
        "This",
        "has",
        "[CRN",
        "(",
        "specified",
        "XF",
        "in",
        "getRecalc",
        "start=",
        "[FEATURE",
        "at",
        ";",
        "\"",
        "errMsg",
        "AND",
        "E",
        "the",
        "Reader",
        "r",
        "outside",
        "out",
        "workingTreeIt",
        "firstSheet=",
        "pending",
        "}",
        "BytesRef",
        "{",
        "getPrintHeaders",
        "_firstSheetIndex",
        "]",
        "vec",
        "agg",
        "&",
        "String",
        "been",
        "finish",
        "Outside",
        "Double",
        "fit",
        "[XCT",
        "RV",
        "HexDump"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Exception Handling",
        "Object Creation",
        "Data Structures",
        "String Manipulation",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Keywords like \"if\", \"for\", \"return\" control program flow. Operators like \"+\", \"=\", \"==\" perform arithmetic, assignment, and comparison operations.  Identifiers such as \"buffer\", \"length\", \"args\" refer to variables and objects.  The presence of many exceptions (\"IllegalArgumentException\", \"IOException\", etc.) indicates robust error handling.  The use of data structures like \"Map\", \"Hashtable\", \"ArrayList\" is evident.  String manipulation is done using methods like \"append\", \"toString\", and string concatenation.  The code snippets show various aspects of C# programming, including object-oriented programming, exception handling, and data manipulation."
    }
  },
  {
    "c405": {
      "Unique tokens": [
        "forwardType",
        "unused1",
        "field_2_link1",
        "setUserName",
        "field_2_row_active_cell",
        "field_3_row_level_max",
        "_idObj",
        "setDBInstanceClass",
        "_reserved2",
        "_startIndex",
        "untokenizedTypes",
        "indexIsCurrent",
        "setExpiredDate",
        "bytesUsedPerBlock",
        "++",
        "setBytesRef",
        "field_3_zero",
        "blockFilePointer",
        "setSessionToken",
        "long",
        "field_6_refs",
        "xfr",
        "dst",
        ")",
        "_lastCol",
        "int",
        "beginB",
        "buf",
        "totalSize",
        "field_3_formatFlags",
        "termBlockOrd",
        "setDataBuffer",
        "_firstRowIndex",
        "setFileName",
        "termAtt",
        "boost",
        "assume",
        "recordTimeSec",
        "-",
        "freqs",
        "field_2_categorySpace",
        "setUploadId",
        "pos",
        "setCreateDate",
        "if",
        "offset",
        "null",
        "setCertificateId",
        ",",
        "sb",
        "field_1_wsbool",
        "setCertificateBody",
        "_rowIndex",
        "_firstColumnIndex",
        "setMasterUserPassword",
        "bytesUsed",
        "DeltaIndexScanner",
        "field_4_active_cell_ref_index",
        "_reserved1",
        "numBlocks",
        "setUserId",
        "xfs",
        "values",
        "_height",
        "_limit",
        "setArchiveSize",
        "false",
        "_numberOfRegions",
        "seekPending",
        "field_2_encoded_url",
        "this",
        "repository",
        "pAt",
        "maxMergeSizeBytes",
        "setChecksum",
        "subFrom",
        "s",
        "setName",
        "upto",
        "mark",
        "1",
        "setExpiration",
        "termState",
        "blockMask",
        "writeLock",
        "for",
        "_evaluator",
        "lastPositions",
        "setSecretAccessKey",
        "setCommand",
        "_crnBlocks",
        "_evaluationFrames",
        "_engineId",
        "slice",
        "_tabids",
        "table",
        "include",
        ".",
        "return",
        "field_3_link2",
        "setGroupId",
        "index",
        "new",
        "_areaEval",
        "maxCachedBytes",
        "elsecurLexState",
        "searcher",
        "grbitFrt",
        "setEngine",
        "setArn",
        "freeByteBlocks",
        "_reserved0",
        "0x02",
        "endPtr",
        "entries",
        "emptyComplexPart",
        "setMasterUsername",
        "elements",
        "field_3_col_active_cell",
        "lastOffsets",
        "setGroupName",
        "=",
        "associatedRange",
        "final",
        "tagTargets",
        "truncatedToPrefixAndPattern",
        "copyEntries",
        "assert",
        "init",
        "(",
        "reset",
        "fill",
        "_width",
        "i",
        "modBy",
        "in",
        "currentMin",
        "term",
        "n",
        "unused2",
        "field_2_bucket_sst_offset",
        "maxSize",
        "mode",
        ";",
        "\"",
        "errMsg",
        "collection",
        "E",
        "mask",
        "setVaultName",
        "doc",
        "0",
        "setComplexData",
        "_xfs",
        "subTo",
        "field_2_delMenuCount",
        "field_2_wsbool",
        "src",
        "System",
        "}",
        "'",
        "{",
        "expectedTokenSequences",
        "current",
        "pool",
        "]",
        "+=",
        ":",
        "fillPages",
        "currentMask",
        "addCellRangeAddress",
        "_bigBigBlockSize",
        "field_2_first_col",
        "setItemName",
        "_firstCol",
        "checkComponents",
        "tableMask",
        "T",
        "perReaderTermState",
        "_isxvd",
        "field_4_col_level_max",
        "_length",
        "endA",
        "a",
        "lock",
        "array",
        "endB",
        "_note"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Operators, Keywords, Literals",
      "Semantic Tags": [
        "Data Structures",
        "File IO",
        "Object Serialization",
        "Data Processing",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a mix of data structures (arrays, lists, maps), file I/O operations (reading and writing bytes), object serialization (creating and manipulating objects), data processing (calculations, sorting, filtering), and algorithm implementation (loops, conditional statements).  The code snippets show various methods performing different tasks, using various C# language features."
    }
  },
  {
    "c406": {
      "Unique tokens": [
        "HeaderFooterRecord",
        "escherBSERecords",
        "addChildRecord",
        "one",
        "rec",
        "PageSettingsBlock",
        "idx",
        "++",
        "2",
        "BSTORE_CONTAINER",
        "getRecords",
        "nameIndex",
        "sid:",
        "record.",
        "setParsedExpression",
        "ErrPtg",
        "drawingGroup",
        "break",
        "copy",
        "getPassword",
        ")",
        "extNameRecord",
        "Ext",
        "RowRecord",
        "int",
        "MulBlankRecord",
        "nr",
        "length",
        "Ptg",
        "apache",
        "findFirstRecordLocBySid",
        "getRecordId",
        "org",
        "extendExternalBookBlocks",
        "ExternalBookBlock",
        "-",
        "getSid",
        "EOF",
        "if",
        "isAddInFunctions",
        "Bad",
        "EscherSpRecord",
        "SupBookRecord",
        "CRNBlock",
        ",",
        "addLateHeaderFooter",
        "setRecordId",
        "childRecords",
        "EscherContainerRecord",
        "eof",
        ">",
        "extSST",
        "ix",
        "CellValueRecordInterface",
        "[",
        "getName",
        "extBlock",
        "==",
        "getProtect",
        "createDrawingGroup",
        "numberOfNames",
        "chart",
        "name",
        "createWorkbook",
        "getEscherContainer",
        "construct",
        "anchor",
        "1",
        "size",
        "getClass",
        "class",
        "for",
        "temp",
        "getNext",
        "!",
        "getChild",
        "_externalBookBlocks",
        "supLinkIndex",
        ".",
        "return",
        "getRefIxForSheet",
        "getChildRecords",
        "sid",
        "getExternalBookRecord",
        "new",
        "sst",
        "isComponentRecord",
        "REF_INVALID",
        "+",
        "fakeSheetIdx",
        "addExternalName",
        "setText",
        "peekNextSid",
        "numberOfSheets",
        "sub-stream,",
        "extBlockIndex",
        "addRef",
        "_workbookRecordList",
        "Unexpected",
        "add",
        "=",
        "HSSFChildAnchor",
        "more",
        "forTypeID",
        "hssf",
        "_psBlock",
        "(",
        "record",
        "instanceof",
        "0xF",
        "ExternalNameRecord",
        "_externSheetRecord",
        ";",
        "type",
        "\"",
        "Book",
        "EscherRecord",
        "row",
        "DrawingGroupRecord",
        "0",
        "dggContainer",
        "than",
        "Record",
        "List",
        "ContinueRecord",
        "}",
        "Escher",
        "{",
        "getEscherRecord",
        "CountryRecord",
        "e",
        "Found",
        "BOFRecord",
        "]",
        ":",
        "&&",
        "bstoreContainer",
        "ExternSheetRecord",
        "poi",
        "addMultipleBlanks",
        "bse",
        "rs",
        "setOptions",
        "setChildRecords"
      ],
      "Syntactic Label": "C# language constructs, objects, methods, and operators",
      "Semantic Tags": [
        "Record Management",
        "Spreadsheet Data",
        "Object Serialization",
        "Data Structures",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# programming elements used in manipulating and processing spreadsheet data.  They involve creating, accessing, and modifying various record types, managing data structures like lists and arrays, and handling file input/output operations.  The code appears to be part of a library for working with spreadsheet files, likely in the context of a larger application or framework."
    }
  },
  {
    "c407": {
      "Unique tokens": [
        "",
        "f",
        "and",
        "b",
        "Math",
        "47",
        "++",
        "2",
        "?",
        "5",
        "<",
        "1.0",
        "hash",
        "long",
        "BI_FRAC_MASK",
        "NaN",
        "MIN_VALUE",
        "break",
        "ONE_DIV_F3",
        "tf_hyper_base",
        ")",
        "int",
        "1023",
        "-",
        "x",
        "49",
        "if",
        "tf_hyper_min",
        "basis2",
        ",",
        "x0",
        "base",
        ">>>=",
        ">>>",
        "default",
        ">",
        "abs",
        "[",
        "<=",
        "expAdj",
        "*",
        "x1",
        "==",
        "values",
        "retval",
        "createNormalisedDecimal",
        "48",
        "32",
        "*=",
        "guess",
        "t",
        "normalise64bit",
        "1",
        "double",
        "a1",
        "a3",
        "p",
        "fDerivative",
        "shiftLeft",
        "frac",
        "indexCos",
        ".",
        "return",
        "throw",
        "biasedExp",
        "--",
        "index",
        "k",
        "+",
        "50",
        "log",
        "delta",
        "fValue",
        "parts",
        "indexSin",
        "get64BitNormalisedExponent",
        "1.0d",
        "pow10",
        "ONE_DIV_F2",
        "-=",
        "=",
        "final",
        "tmp",
        "r1",
        "(",
        "rawBits",
        "basis3",
        "n",
        "Long",
        "elapsed",
        ">>",
        "/",
        ";",
        "\"",
        "switch",
        "20",
        "min",
        "SIN_COS_DELTA_HI",
        "r",
        "basis4",
        "}",
        "<<",
        "case",
        "a2",
        "{",
        "29",
        "blue",
        "y",
        "denominator",
        "]",
        "factor",
        "+=",
        ":",
        "46",
        "^",
        "enumerator",
        "value",
        "m",
        "ONE_DIV_F4",
        "red",
        "ABSOLUTE_ACCURACY",
        "Double",
        "a",
        "94",
        "0.5",
        "cc",
        "ryr"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Mathematical Operations",
        "Control Flow",
        "Data Structures",
        "Type Conversion",
        "Error Handling"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include operators for arithmetic, bitwise manipulation, comparison, and assignment; keywords for control flow (if, switch, break, for); data types (int, long, double, BigInteger); and methods for mathematical functions (Math.pow, Math.abs, Math.log, Math.cos, etc.).  The code snippets demonstrate various programming constructs, including error handling (try-catch blocks, exception throwing), data type conversions, and algorithm implementation (e.g., calculating greatest common divisor, hyperbolic functions, financial calculations). The tokens' semantic significance lies in their combined use to build complex algorithms and data processing routines."
    }
  },
  {
    "c408": {
      "Unique tokens": [
        "Iterator",
        "remove",
        "Collection",
        "get",
        "List",
        "equals",
        "ListIterator",
        "Set",
        "V",
        "public",
        "void",
        "Object",
        "add",
        "final",
        "int",
        "set",
        "synchronized",
        "boolean",
        "String",
        "@Override",
        "java"
      ],
      "Syntactic Label": "Collection Framework Methods and Interfaces",
      "Semantic Tags": [
        "Collection Manipulation",
        "Iteration",
        "Data Access",
        "Overriding Methods",
        "Concurrency Control"
      ],
      "Description": "The tokens represent core components of the C# Collection Framework.  `List`, `Set`, `Collection`, `Iterator`, `ListIterator` are interfaces and classes for working with collections. Methods like `add`, `remove`, `get`, `set`, `contains`, `size`, `iterator`, `equals` are common methods for manipulating and accessing data within collections.  The presence of `@Override` indicates that these methods are overriding base class or interface methods.  `synchronized` suggests thread-safe operations on collections."
    }
  },
  {
    "c409": {
      "Unique tokens": [
        "\"",
        "rt",
        ".",
        "sb",
        "getFormatFlags",
        "getSalt",
        "getOptions",
        "+",
        "iiftab",
        "encryptionInfo",
        "getRow",
        "getVersionMinor",
        "field_1_xf_index",
        "'",
        "getEncryptedVerifierHash",
        "getIndexCode",
        "getPositionOfBof",
        ".activecellcol",
        "=",
        "getNumerator",
        "getPane",
        "append",
        ")",
        "encryptionType",
        "getVersion",
        "_dropData",
        "CellReference",
        "(",
        "getBorderType",
        "_cbFContinued",
        "Constants",
        "buffer",
        "\\n",
        "getAnchorId",
        "shortToHex",
        "field_1_record_type",
        "getId",
        "HexDump",
        "!=",
        ";",
        "_sxaxis"
      ],
      "Syntactic Label": "StringBuilder Object and its methods, Variables, Operators, and Literals",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Hexadecimal Conversion",
        "Debug Information"
      ],
      "Description": "The tokens represent a combination of objects (StringBuilder), methods (append, toString), variables (rt, grbitFrt, etc.), operators (=, +, !=, .), and literals ('[', ']', '\n', etc.).  These are used to construct string representations of data structures, often converting numerical values to hexadecimal format using HexDump. This is common in debugging and data serialization to provide human-readable output of complex data structures. The significance in C# is the same as in Java, as both languages use similar object-oriented programming concepts and string manipulation techniques."
    }
  },
  {
    "c410": {
      "Unique tokens": [
        "putRequest",
        "f",
        "nodeName",
        "domainName",
        "userName",
        "position",
        "b",
        "errorEval",
        "vs",
        "analyzer",
        "vpcId",
        "nameIndex",
        "blockSize",
        "dBParameterGroupName",
        "date",
        "certificateId",
        "resource",
        "queueNamePrefix",
        "maxDeltaDepth",
        "sheetName",
        "bucket",
        "CloudFrontOriginAccessIdentityConfig",
        "volumeId",
        ")",
        "selectExpression",
        "deleteRequest",
        "customerGatewayId",
        "infoStream",
        "originalText",
        "length",
        "readCapacityUnits",
        "pi",
        "maxDocCharsToAnalyze",
        "address",
        "codepage",
        "reuseDeltas",
        "queueName",
        "queueUrl",
        "fieldName",
        "spotPrice",
        "resourceId",
        "wordId",
        "extensionFieldDelimiter",
        "config",
        "data",
        "blip",
        "limit",
        "reservedDBInstancesOfferingId",
        "shouldCreateEmptyCells",
        "rowNumber",
        "indexedField",
        "cidrBlock",
        "EscherClientAnchorRecord",
        "stream",
        "dhcpOptionsId",
        "geoRestriction",
        "[",
        "imageId",
        "keyName",
        "collectionModel",
        "exists",
        "cacheParameterGroupName",
        "tokenType",
        "formularData",
        "parameterName",
        "snapshotId",
        "topicArn",
        "revstr",
        "EMPTY_BYTES",
        "name",
        "newValue",
        "deref",
        "wrapped",
        "s",
        "stemmer",
        "publicIp",
        "size",
        "dBParameterGroupFamily",
        "rawMessage",
        "fdLimit",
        "accountId",
        "outputUnigramsIfNoShingles",
        "decision",
        "distributionConfig",
        "p",
        "color",
        "logGroupName",
        "tableName",
        "callerReference",
        "description",
        "applicationName",
        "changeSkip",
        "provider",
        "tag",
        "factory",
        "certificateBody",
        ".",
        "cloudFrontOriginAccessIdentityConfig",
        "hs",
        "charset",
        "index",
        "credentials",
        "source",
        "jobFlowId",
        "id",
        "subnetId",
        "bucketName",
        "password",
        "jar",
        "cacheParameterGroupFamily",
        "memoryLimit",
        "serverCertificateName",
        "parser",
        "mbPerSec",
        "field",
        "hostedZoneId",
        "infoType",
        "newMessage",
        "cacheClusterId",
        "isCaseSensitive",
        "newLimit",
        "newLeaf",
        "key",
        "(",
        "recognizer",
        "childListener",
        "escherClientAnchorRecord",
        "alg",
        "w",
        "distributionId",
        "availabilityZone",
        "message",
        "calcmode",
        "queryConfigHandler",
        "functionName",
        "mode",
        "type",
        "valueCount",
        "function",
        "definedNameIndex",
        "channel",
        "fragmentSize",
        "maxLen",
        "doc",
        "prefix",
        "keepScores",
        "cmp",
        "format",
        "r",
        "cNAMEPrefix",
        "c",
        "groupValue",
        "vpnGatewayId",
        "title",
        "text",
        "nextToken",
        "storageId",
        "externSheetIndex",
        "e",
        "precedence",
        "pool",
        "]",
        "initialValue",
        "codePage",
        "cacheSecurityGroupName",
        "vaultName",
        "reuseStrategy",
        "escherChildAnchorRecord",
        "maxChange",
        "groupName",
        "dBInstanceIdentifier",
        "reuseObjects",
        "revision",
        "bigFileThreshold",
        "legacyCrendential",
        "loadBalancerName",
        "imageLocation",
        "func",
        "value",
        "dedup",
        "pw",
        "vpnConnectionId",
        "restrictionType",
        "bundleId",
        "dBSecurityGroupName",
        "instanceId",
        "traverseEmptyCells",
        "object",
        "array",
        "subscriptionArn",
        "callback",
        "fieldQuery"
      ],
      "Syntactic Label": "Constructor Parameters",
      "Semantic Tags": [
        "Object Creation",
        "Request Initialization",
        "Parameter Setting",
        "AWS SDK",
        "Cloud Services"
      ],
      "Description": "These tokens represent parameters passed to constructors of various C# classes.  They are primarily used to initialize objects that represent requests or data structures for interacting with cloud services (likely AWS, given the naming conventions like `CreateHostedZoneRequest`, `DeleteVolumeRequest`, etc.). The semantic tags reflect the core functionality: creating objects, setting up requests, and managing parameters within the context of an AWS SDK for cloud service interactions."
    }
  },
  {
    "c411": {
      "Unique tokens": [
        "stop",
        "reverse",
        "label_1",
        "indexWriter",
        "startIndex",
        "maxSubwordSize",
        "j",
        "b",
        "isOptimizedIf",
        "++",
        "Toffs",
        "Collections",
        "NB",
        "field_3_formula1_len",
        "bypassAltsAtnCache",
        "<",
        "subDocs",
        "_spgrRecord",
        "toByteArray",
        "field_6_parsed_expr",
        "else",
        "k1",
        "label_7",
        "break",
        "short",
        "_data",
        "field_5_bytes",
        ",.fontidx=",
        "append",
        ")",
        "expand",
        "int",
        "levelW",
        "buf",
        "length",
        "QueryParser",
        "available",
        "minSubwordSize",
        "Path",
        "dateTimeInstance",
        "ATN",
        "buffer",
        "dictionaries",
        "result",
        "numericFields",
        "Formula",
        "list",
        "[/TABID]",
        "_chooseFuncOffset",
        "functions",
        "finished",
        "pos",
        "levelH",
        "if",
        "posToF",
        "SupBookRecord",
        ",",
        "not",
        "try",
        "q",
        "sb",
        "IOUtils",
        "desc",
        "lastChar",
        "_grbitSub",
        "default",
        "args",
        "CommonObjectDataSubRecord",
        "futureOutputs",
        "backType",
        "_recordCount",
        "Row",
        "MergedIterator",
        "tagger",
        "[",
        "getObjectId",
        "infoOffset",
        "ListIterator",
        "Arrays",
        "maxGoodPoints",
        "jj_consume_token",
        "specialCachedValue",
        "discardPunctuation",
        "charPositionInLine",
        "ldr",
        "false",
        "byte",
        "retval",
        "float",
        "byteCount",
        "f2",
        "this",
        "continue",
        "field_2_type",
        "map",
        "userDictionaryEncoding",
        "array",
        "rows",
        "hypFile",
        "field_4_formula2_len",
        "success",
        "s",
        "synsetSize",
        "InputStream",
        "SubRecord",
        "getTagger",
        "minWordSize",
        "isDoNotDelta",
        "for",
        "getNumberOfConditionalFormats",
        "aa",
        "output",
        "temp",
        "_cSub",
        "ser",
        "affixFile",
        "!",
        "LittleEndian",
        "info",
        "proto",
        "currentBlock",
        "_externalBookBlocks",
        ".",
        "return",
        "IOException",
        "synset",
        "throw",
        "bufferedDocs",
        "index",
        "source",
        "AbstractPredicateTransition",
        "analyzerName",
        "new",
        "k",
        "+",
        "lastDocCodes",
        "grbitFrt",
        "copied",
        "@SuppressWarnings",
        "trace",
        "preserveOriginal",
        "f1",
        "checkCoderResult",
        "header",
        "field_3_sheet_names",
        "normalizeKana",
        "[/CHARTTITLEFORMAT]",
        "convert",
        "toString",
        "_workbookRecordList",
        "subrecords",
        "add",
        "=",
        "synonyms",
        "final",
        "while",
        "tailored",
        "onlyLongestMatch",
        "repetitions",
        "key",
        "myanmarAsWords",
        "(",
        "d",
        "write",
        "logStep",
        "i",
        "catch",
        "FormulaError",
        "in",
        "vals",
        "rollBufferSize",
        "w",
        "op",
        "field_1_options",
        "_externSheetRecord",
        ";",
        "!=",
        "\"",
        "gridW",
        "field_3_username_value",
        "switch",
        "IO",
        "shared",
        "channel",
        "writer",
        "StringBuffer",
        "field_2_password",
        "maxGramSize",
        "Normalizer2",
        "doc",
        "0",
        "lastDocId",
        "getMessage",
        "lastSynSetID",
        "futureInputs",
        "format",
        "get",
        "r",
        "start",
        ".name",
        "List",
        "BytesRef",
        "System",
        "}",
        "case",
        "remap",
        "c",
        "maxTokenLength",
        "{",
        "text",
        "ParseException",
        "top",
        "newSpatialArgs",
        "_isAddInFunctions",
        "body",
        "precedenceState",
        "]",
        "line",
        "field_2_frt_cell_ref_flag",
        "tokenizerFactory",
        "+=",
        "spec",
        "_definedNames",
        "encoding",
        "br",
        "&&",
        "synSetID",
        "replacement",
        "value",
        "subs",
        "skip",
        "valEnd",
        "commitNoteMap",
        "fields",
        "userDictionaryPath",
        "flags",
        "merged",
        "keep",
        "lemmatizerModelFile",
        "String",
        "other",
        "md"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Control Flow",
        "Iteration",
        "Data Structures",
        "Array Manipulation",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a mix of C# keywords (if, else, for, while, switch, case, break, continue, return), operators (+, ++, =, +=, ==, !=, <, >, &&, ||, !), data structure elements (arrays, lists, collections), and identifiers.  These tokens are fundamental to C# programming, enabling control flow, iteration over data structures, array manipulation, and conditional execution of code blocks. The sentences show how these tokens are used in the context of algorithms and data processing."
    }
  },
  {
    "c412": {
      "Unique tokens": [
        "State",
        "calculate",
        "char",
        "Cell",
        "BitSet",
        "Class",
        "Collection",
        "Charset",
        "ObjectId",
        "Row",
        "ByteBuffer",
        "List",
        "Query",
        "<",
        "BigInteger",
        "response",
        "long",
        "public",
        "byte",
        "void",
        "float",
        "short",
        "final",
        "Boolean",
        "Calendar",
        "int",
        "Document",
        "File",
        "Path",
        "org",
        "MessageDigest",
        "double",
        "T",
        "Formula",
        "Token",
        "intersect",
        "resolve",
        "Map",
        "update",
        "boolean",
        "String",
        "Function",
        "Element",
        "URI"
      ],
      "Syntactic Label": "C# Programming Elements",
      "Semantic Tags": [
        "Data Types",
        "Mathematical Functions",
        "Utility Functions",
        "File System Operations",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# programming elements, including data types (int, float, double, byte, boolean, char, String, BigInteger, BitSet, etc.), keywords (public, static, final, void), operators (<), and identifiers that suggest mathematical functions (calculate, acosh, kthLargest, sumsq, log, irr, etc.), utility functions (prevLF, nextLF, fill, grow, copyOfRange, etc.), file system operations (File, Path), and data structures (List, Map, Collection, BitSet, ByteBuffer).  These elements are fundamental to C# programming and are used in various contexts, from basic data manipulation to complex algorithms and file handling."
    }
  },
  {
    "c413": {
      "Unique tokens": [
        "[/FILEPASS]",
        ".rowInput",
        "arcIdx",
        "byteToHex",
        "7",
        "sheetname",
        "b",
        "[/TABLE]",
        ".moniker",
        ".shadow",
        "++",
        "[/BOF",
        ".showSeriesKey",
        "line:",
        "?",
        ".ver",
        "<",
        "Internal",
        "getAlternateFormula",
        "[/SCL]",
        "_cItm",
        "ctf",
        "else",
        "field_6_refs",
        "append",
        ")",
        "int",
        "_linkOpts",
        "buf",
        "length",
        "flag",
        "toHexString",
        "buffer",
        "getVerifier",
        "[/HYPERLINK",
        "verOriginator",
        "[/STARTOBJECT]",
        "x",
        "getTokens",
        "_name",
        "[/OBJECTLINK]",
        "crColInput",
        "getLink2",
        "if",
        ".namedef",
        ".style",
        "field_3_outline_style_level",
        ",",
        "[/ftLbsData]",
        "sb",
        "of",
        "_unused",
        "classID:",
        "encryptionInfo",
        "isBaxcel",
        "[",
        "0x00FF",
        "\\t",
        "getEncryptionMode",
        "user-defined",
        "getProperty",
        "getColLevelMax",
        ".verifier",
        "[/CHARTFORMAT]",
        "getDeltaBase",
        "perMin",
        "s",
        "getBuild",
        ".history",
        "getHistoryBitMask",
        ".selEntryIx",
        "output=",
        ".border",
        "_guid",
        "shortToHex",
        ".displayguts=",
        ".builtin_style=",
        "(missing:",
        "tag",
        "include",
        ".",
        "return",
        ".info",
        "noCFSRatio",
        "line.separator",
        "new",
        "+",
        "crRowInput",
        ".comment",
        "assign",
        "_idEdit",
        "getVersionMajor",
        "getTextMark",
        "toString",
        "0x",
        "=",
        "rgCFRTID",
        "getLink1",
        "[/DAT]",
        "(",
        "isShadow",
        "[/LABEL]",
        "maxMergeDocs",
        ".colfrom",
        "field_2_col",
        "separators)!",
        "[/STARTBLOCK]",
        ">>",
        "/",
        "getOffset",
        ".isxvi",
        "!=",
        ";",
        "_rawData",
        "\"",
        "field_2_builtin_style",
        "getRVAType",
        "ifmt",
        "sec",
        "0",
        ".autoSize",
        "prefix",
        "_options",
        "getDebugInfo",
        "toHex",
        "sum",
        "r",
        "System",
        "'",
        "}",
        "ptg",
        "getEncryptedVerifier",
        "{",
        "._unused:",
        "HLINK_TARGET_FRAME",
        ".reqver",
        "]",
        "_moniker",
        ":",
        "field_1_number_of_sheets",
        "choose",
        "&",
        "HLINK_URL",
        ".collevelmax",
        "getLabel",
        "\\n",
        "skip",
        "numArcs",
        ".colInput",
        "HexDump",
        ".rowsumsbelw=",
        "[/GUTS]"
      ],
      "Syntactic Label": "C# Tokens and Operators in String Manipulation and Data Representation",
      "Semantic Tags": [
        "Data Serialization",
        "String Manipulation",
        "Hexadecimal Conversion",
        "Data Structure Representation",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a wide array of C# language elements used in string manipulation, data structure representation, and data serialization.  The code snippets heavily utilize the StringBuilder class to construct strings, often representing data in hexadecimal format.  The tokens include keywords like 'if', 'else', 'return', operators like '+', '=', 'append', and various methods for string and data manipulation.  The overall purpose is to serialize data into a string representation, often for debugging or logging purposes.  The frequent use of HexDump suggests a focus on representing binary data in a human-readable format."
    }
  },
  {
    "c414": {
      "Unique tokens": [
        "Map",
        "<"
      ],
      "Syntactic Label": "Generic Type Parameter",
      "Semantic Tags": [
        "Configuration",
        "Factory Pattern",
        "Parameterization",
        "Type Safety",
        "Map Data Structure"
      ],
      "Description": "The tokens 'Map' and '<' represent a generic type parameter in C#.  'Map<String,String>' indicates that the code uses a Map collection where both keys and values are strings. This is a common pattern in factory classes to configure components with various parameters. The use of generics ensures type safety and improves code readability."
    }
  },
  {
    "c415": {
      "Unique tokens": [
        "",
        "commitNames",
        "setIndex",
        "head",
        "b",
        "put",
        "ptr",
        "algorithm",
        "Storage",
        "long",
        "lines",
        "crc",
        "codec",
        "clone",
        "person",
        "set",
        "length",
        "expiration",
        "flag",
        "matcher",
        "inQueue",
        "buffer",
        "Integer",
        "walker",
        "allocate",
        "_closed",
        "-",
        "pos",
        "data",
        "limit",
        "getNode",
        "indexedField",
        "Charset",
        "blocks",
        "print",
        "keys",
        "tagger",
        "[",
        "destination",
        "_mask",
        "after",
        "false",
        "byte",
        "disconnect",
        "snapshot",
        "dryRun",
        "for",
        "session",
        "output",
        "commit",
        "return",
        "phase",
        "scores",
        "bytes",
        "split",
        "link",
        "rules",
        "header",
        "setErrorType",
        "maxBasicQueries",
        "readFully",
        "punctCharacters",
        "0xdeadbeef",
        "flush",
        "points",
        "toString",
        "elements",
        "merges",
        "builders",
        "retain",
        "&=",
        "reset",
        "comparator",
        "book",
        "dc",
        "clear",
        "in",
        "os",
        "signed",
        "Trees",
        "message",
        "getText",
        "string",
        "mode",
        "type",
        "outRegion",
        "abbr",
        "listeners",
        "20",
        "border",
        "mask",
        "holder",
        "docs",
        "getFeature",
        "cached",
        "mutex",
        "LOCK_SUFFIX",
        "backingMap",
        "states",
        "changeType",
        "errors",
        "parent",
        "BufferSize",
        "containsKey",
        "&",
        "func",
        "fields",
        "columnIndex",
        "rowKey",
        "contains",
        "getPath",
        "arriving",
        "createDefaultTree",
        "heap",
        "~",
        "Math",
        "?",
        "2",
        "failingPaths",
        "setLength",
        "blockSize",
        "getValue",
        "date",
        "all",
        "fetch",
        "UNKNOWN",
        "expire",
        "list",
        "pathRaw",
        "isSet",
        "offset",
        "prev",
        "ageSec",
        "_type",
        "uris",
        "_unused",
        "<=",
        "getName",
        "exists",
        "free",
        "processors",
        "last",
        "this",
        "Term",
        "expectedCharacter",
        "groupMap",
        "|=",
        "shortName",
        "listener",
        "unsafe",
        "push",
        "!",
        "setAnalyzer",
        "slice",
        ".",
        "idBuffer",
        "returnStates",
        "sid",
        "prefixCompare",
        "delete",
        "wrap",
        "Utils",
        "sorting",
        "cells",
        "_value",
        "field",
        "subrecords",
        "add",
        "=",
        "isEmpty",
        "more",
        "key",
        "updates",
        "directory",
        "state",
        "concatenate",
        "_in",
        "valueOf",
        "inStart",
        "getOffset",
        "path",
        "max",
        "min",
        "0",
        "format",
        "endpoint",
        "isModified",
        "src",
        "System",
        "lexer",
        "Character",
        "filter",
        "getNumberOfSheets",
        "getCredentials",
        "text",
        "setType",
        "returned",
        "REF",
        ":",
        "trie",
        "fragment",
        "&&",
        "records",
        "value",
        "lookupClass",
        "Double",
        "getCell",
        "a",
        "getParentCount",
        "object",
        "join",
        "increment",
        "fromRaw",
        "_formats",
        "getState",
        "position",
        "tags",
        "token",
        "Type",
        "toArray",
        "interval",
        "val",
        "bits",
        "<",
        "offsets",
        "point",
        "old",
        "bucket",
        "copy",
        "append",
        "buf",
        "entrySet",
        "ent",
        "Formula",
        "formatter",
        "getTokens",
        "oldValue",
        "setValue",
        ">",
        "by",
        "apiVersion",
        "files",
        "startTimeMillis",
        "Arrays",
        "cfAggregate",
        "parents",
        "zeroId",
        "file",
        "map",
        "newValue",
        "true",
        "t",
        "mark",
        "msg",
        "status",
        "getClass",
        "synchronized",
        "getString",
        "intervals",
        "computeNorm",
        "description",
        "isHidden",
        "remove",
        "id",
        "accept",
        "bare",
        "equals",
        "dictionary",
        "clauses",
        "_token",
        "getLength",
        "sourcePath",
        "properties",
        "cache",
        "booleanValue",
        "tokenName",
        "currentBlockIndex",
        "action",
        "setData",
        "!=",
        "NameFinderME",
        "getFiles",
        "escape",
        "now",
        "doc",
        "input",
        "ObjectId",
        "prefix",
        "get",
        "out",
        "execute",
        "collector",
        "9",
        "before",
        "fieldsToAdd",
        "encoding",
        "emu",
        "fst",
        "iterator",
        "severity",
        "KNOWN",
        "FileNameMatcher",
        "count",
        "logger",
        "constant",
        "invalidate",
        "flags",
        "ruleName",
        "command",
        "sims",
        "analyzer",
        "myStatus",
        "attributes",
        "mMax",
        "short",
        "mapEntry",
        ")",
        "extensions",
        "result",
        "USER",
        "workers",
        "intSet",
        "println",
        "if",
        "seed",
        "null",
        "workbook",
        "optimize",
        "*",
        "V",
        "==",
        "values",
        "candidates",
        "getLastModified",
        ">=",
        "heads",
        "name",
        "tokens",
        "objects",
        "delegate",
        "tail",
        "monitor",
        "label",
        "upto",
        "size",
        "dv",
        "1",
        "threads",
        "getHeader",
        "charAt",
        "tag",
        "index",
        "TRUE",
        "new",
        "fromJson",
        "+",
        "match",
        "pushMode",
        "sources",
        "fromString",
        "next",
        "resize",
        "(",
        "transitions",
        "i",
        "lastIndexOf",
        "charWidths",
        ";",
        "queriesMade",
        "indexOf",
        "start",
        "c",
        "{",
        "current",
        "]",
        "entry",
        "block",
        "lock",
        "other"
      ],
      "Syntactic Label": "Method calls, variable declarations, object instantiations, operators, and keywords",
      "Semantic Tags": [
        "Object manipulation",
        "Data structures",
        "Control flow",
        "Input/Output",
        "Utility functions"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Many are method calls (e.g., `clear()`, `add()`, `get()`, `set()`), indicating interactions with objects and their properties.  Variable declarations (`head`, `tail`, `monitor`, etc.) store data. Object instantiations (`new StringBuffer()`, `new NameFinderME()`) create objects. Operators (`=`, `==`, `!=`, `&`, `|`, `+`, etc.) perform operations. Keywords (`if`, `return`, `public`, `static`, etc.) control program flow and define method access."
    }
  },
  {
    "c416": {
      "Unique tokens": [
        "f",
        "BitSet",
        "StringBuilder",
        "Collection",
        "Toffs",
        "ByteBuffer",
        "Collections",
        "Query",
        "<",
        "ws",
        "int",
        "scriptAndResourcePath",
        "Path",
        "item",
        "Integer",
        "boost",
        "scriptCode",
        "fieldName",
        ",",
        "Ref",
        "q",
        "sb",
        "Cell",
        "desc",
        ">",
        "SimpleDateFormat",
        "Row",
        "[",
        "Arrays",
        "ArrayList",
        "formatString",
        "file",
        "byte",
        "Object",
        "enc",
        "Term",
        "snapshot",
        "s",
        "rulefilesArg",
        "CharsRef",
        "StringTokenizer",
        "aa",
        "Token",
        "thrown",
        "Map",
        "Circle",
        "Matcher",
        "boolean",
        "rawValue",
        "dictionaryResource",
        "parseMap",
        "it",
        ".",
        "NumberFormatException",
        "char",
        "Class",
        "URL",
        "trans",
        "Comparator",
        "id",
        "affix",
        "Set",
        "sval",
        "toString",
        "=",
        "Files",
        "final",
        "url",
        "Entry",
        "(",
        "eThis",
        "File",
        "o",
        "fill",
        "Writer",
        "direction",
        "Long",
        "Arn",
        "string",
        "mode",
        "Iterator",
        "\"",
        "Directory",
        "now",
        "Builder",
        "format",
        "tempPath",
        "r",
        "List",
        "ch",
        "logStepAtt",
        "Character",
        "filter",
        "taskLogStepAtt",
        "]",
        "line",
        ":",
        "colName",
        "CharSequence",
        "T",
        "CharBuffer",
        "Double",
        "sheetNames",
        "String",
        "newData",
        "FileMode"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "File I/O",
        "Exception Handling",
        "String Manipulation",
        "Object Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including data types (int, byte, boolean, String, etc.), data structures (List, Set, Map, ArrayList, etc.), keywords (public, void, static, final, etc.), operators (=, <, >, ., etc.), and identifiers (representing variables, methods, classes, etc.).  The context sentences demonstrate their usage in various programming tasks, such as file manipulation (Files, File, Directory), string processing (StringBuilder, StringTokenizer, etc.), data structure management, exception handling (try-catch blocks, throwing exceptions), and object interaction (method calls using the dot operator).  The semantic tags highlight the key functionalities demonstrated in the code snippets."
    }
  },
  {
    "c417": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Client-side Request",
        "Input Parameter"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK or similar library, handling requests to an API Gateway. Each method takes a request object as input, processes it (potentially using a 'beforeClientExecution' pre-processing step), and then executes a corresponding API call ('execute...'). The semantic tags highlight the role of 'request' in this context."
    }
  },
  {
    "c418": {
      "Unique tokens": [
        "",
        "stop",
        "off",
        "oldPos",
        "maxFacetDepth",
        "startIndex",
        "j",
        "b",
        "isFirstLine",
        "idx",
        "secondaryProgress",
        "docId",
        "docFreq",
        "termUpto",
        "nextBlock",
        "ptr",
        "minTargetSize",
        "<",
        "_numberOfFormulas",
        "basis",
        "currentSentence",
        "payloadIndex",
        "nFrames",
        "bucket",
        "toIndex",
        ")",
        "ord",
        "refCount",
        "expectedModCount",
        "foundUnicode",
        "length",
        "bufferUpto",
        "modCount",
        "rowOffsetIx",
        "buffer",
        "expectedChecksum",
        "result",
        "arraySize",
        "thisWbIndex",
        "x",
        "-",
        "bytesRemaining",
        "thisLong",
        "sz",
        "pos",
        "altNumber",
        "round",
        "offset",
        "startpos",
        "nIncomingArgs",
        "sb",
        "lstartIndex",
        "endIndex",
        "tokenIndex",
        ">",
        "OBJ_ANY",
        "len",
        "thisDouble",
        "opaque",
        "ix",
        "<=",
        "getIndex",
        "k2",
        "jj_kind",
        "minVersion",
        "==",
        "arg3",
        "bufferSize",
        "byteCount",
        ">=",
        "fetchedEOF",
        "ref",
        "enc",
        "startDateVal",
        "skipEofCheck",
        "is16bit",
        "number",
        "success",
        "nRegions",
        "s",
        "compareRemaining",
        "upto",
        "LA",
        "size",
        "1",
        "freenode",
        "compare",
        "prefixLength",
        "nArgs",
        "MAXP",
        "MAX_ARRAY_LENGTH",
        "p",
        "nInnerArgs",
        "needParens",
        "srcLen",
        "firstTabIndex",
        "currentBlock",
        "index",
        "maxMergeCount",
        "k",
        "binaryExponent",
        "id",
        "+",
        "firstInPath",
        "_currentRowIndex",
        "delta",
        "dn",
        "isNewline",
        "externalWorkbookNumber",
        "numBytes",
        "thisByte",
        "inputFinished",
        "sep",
        "ret",
        "minShingleSize",
        "numSyllables",
        "el",
        "totalHits",
        "nTerms",
        "is16bitEncoded",
        "docBase",
        "mStartTime",
        "thisFloat",
        "key",
        "(",
        "written",
        "shift",
        "waitForPos",
        "gen",
        "i",
        "targetGen",
        "putty",
        "edx",
        "0x60",
        "maxMS",
        "n",
        "w",
        "elapsed",
        "thisInt",
        "curChar",
        "mergeMaxNumSegments",
        "numBufferedDocs",
        "!=",
        "hi",
        "recordId",
        "valueCount",
        "nPlaces",
        "definedNameIndex",
        "checkCancelAt",
        "numberOfRichTextRuns",
        "externalBookIndex",
        "sc",
        "location",
        "localSheetIndex",
        "rstartIndex",
        "max",
        "now",
        "0",
        "removalIdx",
        "rowIndex",
        "didSkipBytes",
        "cmp",
        "remain",
        "start",
        "r",
        "sum",
        "c",
        "mGarbage",
        "ch",
        "maxEdits",
        "shortIndex",
        "mSize",
        "li",
        "ccid",
        "msgB",
        "maxN",
        "y",
        "%",
        "autoFlush",
        "denominator",
        "]",
        "cmd",
        "remaining",
        "mState",
        "0x40",
        "&",
        "pos1",
        "nextPtr",
        "_lastColumnIndex",
        "estimatedMergeBytes",
        "value",
        "count",
        "rc",
        "firstSheetIndex",
        "skip",
        "valEnd",
        "pathLength",
        "lastPosition",
        "number2",
        "score",
        "getTextLength",
        "a",
        "si",
        "maxCodeLength"
      ],
      "Syntactic Label": "Variables, Literals, Operators, Method Calls, and other C# language constructs",
      "Semantic Tags": [
        "Data Structures",
        "Data Processing",
        "Algorithm Implementation",
        "Input/Output Operations",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Variables store data (e.g., `stop`, `oldPos`, `maxFacetDepth`). Literals provide constant values (e.g., `0`, `1`, `MAX_ARRAY_LENGTH`). Operators perform calculations and comparisons (e.g., `<`, `>`, `==`, `+`, `-`, `%`). Method calls invoke functions to perform specific tasks (e.g., `append`, `fill`, `compareTo`, `decode`). The code snippets demonstrate various programming concepts such as data structure manipulation, algorithm implementation, input/output operations, and control flow using conditional statements and loops."
    }
  },
  {
    "c419": {
      "Unique tokens": [
        "SpanQuery",
        "AlibabaCloudCredentialsProvider",
        "Ref3DPtg",
        "ATNState",
        "ObjectReader",
        "ScoreTerm",
        "query",
        "SheetIdentifier",
        "Collator",
        "Collection",
        "FormulaCellCacheEntry",
        "FileEntry",
        "FieldQueryNode",
        "UDFFinder",
        "LRUType",
        "MutableValue",
        "DirCacheEntry",
        "CharacterIterator",
        "ThreadState",
        "CellRangeAddress",
        "Area3DPtg",
        "Toffs",
        "IndexReaderContext",
        "Query",
        "HSSFWorkbook",
        "<",
        "RecordVisitor",
        "EncryptionMaterials",
        "FieldConfig",
        "EvaluationCache",
        "SpatialPrefixTree",
        "IndexWriter",
        "TermsEnum",
        "WeightedTerm",
        "TextFragment",
        "PipedReader",
        "FacetLabel",
        "HSSFListener",
        "RowRecord",
        "CellReference",
        "ColumnInfoRecord",
        "QueryParser",
        "RevFlag",
        "flag",
        "Ptg",
        "cell",
        "HSSFAnchor",
        "FormulaRecord",
        "ATN",
        "BasicQueryFactory",
        "StempelStemmer",
        "FormulaShifter",
        "BasicStats",
        "tree",
        "DirCacheBuilder",
        "QualityQuery",
        "RuleStartState",
        "ObjectInserter",
        "cf",
        "CellCacheEntry",
        "FormulaRecordAggregate",
        "ProgressMonitor",
        "Edit",
        "RecordStream",
        "Element",
        "FileDescriptor",
        "PredictionContext",
        "AbstractTreeIterator",
        "ConfigLine",
        "SpatialOperation",
        "Transition",
        "TwoDEval",
        "Ref",
        "FST",
        "EscherContainerRecord",
        "PropertySet",
        "TermInfo",
        "URIish",
        "Cell",
        "SshSessionFactory",
        "Shape",
        "ParserRuleContext",
        "RowColKey",
        "SrndQuery",
        "Row",
        "FormatRun",
        "DrawingRecord",
        "AWSCredentials",
        "DirCacheIterator",
        "HyperlinkType",
        "shape",
        "CellValueRecordInterface",
        "TermState",
        "LexerAction",
        "TreeFilter",
        "RepositoryEvent",
        "TokenSource",
        "RefEval",
        "LookupResult",
        "CharStream",
        "RuleContext",
        "FieldInvertState",
        "ReceiveCommand",
        "FieldInfos",
        "EvaluationSheet",
        "PipedInputStream",
        "RevWalk",
        "SmallDocSet",
        "CompiledAutomaton",
        "TokenStream",
        "eval",
        "Term",
        "HSSFConditionalFormatting",
        "DecisionState",
        "HSSFRichTextString",
        "NativeUnixIndexInput",
        "InstanceRoleType",
        "DataOutput",
        "t",
        "FilenameFilter",
        "PointVectorStrategy",
        "RevSort",
        "RecordInputStream",
        "CredentialItem",
        "CharsRef",
        "Token",
        "RefSpec",
        "ATNType",
        "PipedOutputStream",
        "IndexReader",
        "SegmentWriteState",
        "MergeCellsRecord",
        "AreaReference",
        "LexerNoViableAltException",
        "QueryNodeProcessor",
        "ResourceLoader",
        "HSSFShape",
        "NameCommentRecord",
        "CFRecordsAggregate",
        "NamePtg",
        "BasicModel",
        ".",
        "IndexDeletionPolicy",
        "QueryConfigHandler",
        "HeaderBlock",
        "Automaton",
        "ATNConfig",
        "POIFSBigBlockSize",
        "CredentialsProvider",
        "IClientProfile",
        "ObjectIdRef",
        "IndexInput",
        "BookSheetKey",
        "NameXPtg",
        "ClientAnchor",
        "IEvaluationListener",
        "IntMapper",
        "Bindings",
        "parser",
        "NoteMerger",
        "HSSFSheet",
        "SnowballStemmer",
        "RevObject",
        "ValueSource",
        "Sorter",
        "FieldPhraseList",
        "Explanation",
        "ParseTreeListener",
        "HSSFChildAnchor",
        "Calendar",
        "IndexCommit",
        "DocumentsWriterFlushControl",
        "RefUpdate",
        "AttributeFactory",
        "IndexSearcher",
        "AnyObjectId",
        "ProxySelector",
        "NameRecord",
        "PerfTask",
        "AreaEval",
        "ConditionalFormatting",
        "Analyzer",
        "Parser",
        "FontRecord",
        "Directory",
        "RevCommit",
        "WorkbookEvaluator",
        "Normalizer2",
        "CollectionStatistics",
        "CmpOp",
        "Reader",
        "UnicodeString",
        "DataInput",
        "EvaluationCell",
        "SheetRefEvaluator",
        "GatewayType",
        "CharArraySet",
        "FileMode",
        "Revision",
        "BytesRef",
        "Vocabulary",
        "ValueEval",
        "RevFilter",
        "Inflater",
        "DiffEntry",
        "ATNDeserializationOptions",
        "ParseTree",
        "ReaderSlice",
        "DVRecord",
        "parent",
        "TreeWalk",
        "NormalisedDecimal",
        "DocIdSetIterator",
        "CellStyle",
        "WeightedPhraseInfo",
        "SpatialContext",
        "Area3DPxg",
        "FormulaRenderingWorkbook",
        "QueryNode",
        "SegmentReadState",
        "AlibabaCloudCredentials",
        "HSSFClientAnchor",
        "TransportProtocol",
        "PerfRunData",
        "EscapeQuerySyntax",
        "Repository",
        "ReceivePack",
        "DirCache",
        "LittleEndianOutput",
        "AbbreviatedObjectId",
        "ByteSliceReader",
        "ParseTreePatternMatcher",
        "PipedWriter",
        "IntList",
        "FieldInfo",
        "DistributionConfig",
        "LexerATNConfig",
        "CellRangeAddressBase",
        "String",
        "IntSet",
        "FacetsConfig",
        "FuzzySet"
      ],
      "Syntactic Label": "Object, Class Names, Method Names, Dot Operator, Array, Parenthesis",
      "Semantic Tags": [
        "Query Processing",
        "Data Structures",
        "API Interaction",
        "File I/O",
        "Object Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# programming concepts.  Many are class names (e.g., `AlibabaCloudCredentialsProvider`, `HSSFWorkbook`), method names (e.g., `removeShape`, `explain`), and objects (e.g., `shape`, `tenum`). The dot operator (`.`) is used extensively for method calls and member access. Arrays (`Ptg[]`) are used to handle sequences of data. Parentheses are used for method calls and grouping expressions.  These tokens and their usage are significant in C# because they form the building blocks of object-oriented programming, data manipulation, and algorithm implementation."
    }
  },
  {
    "c420": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Function Definition",
        "AWS SDK",
        "API Calls"
      ],
      "Description": "The closing parenthesis ')' in C# signifies the end of a parameter list in method declarations.  In this context, it's crucial for defining the input parameters of numerous AWS SDK methods. The methods appear to be part of an AWS client library, handling various API calls for different AWS services."
    }
  },
  {
    "c421": {
      "Unique tokens": [
        "(",
        ")"
      ],
      "Syntactic Label": "Parentheses",
      "Semantic Tags": [
        "Constructor Invocation",
        "Method Parameter",
        "Object Instantiation",
        "Method Chaining",
        "Request Parameter"
      ],
      "Description": "The parentheses '(' and ')' are used in C# to denote method parameters, constructor invocations, and object instantiation.  In the given examples, they are primarily used in constructor calls to pass parameters and in method calls. The semantic tags reflect the various ways these parentheses are used in the context of creating and using request objects."
    }
  },
  {
    "c422": {
      "Unique tokens": [
        "]",
        "throws",
        ")",
        "{",
        "-",
        "readByte"
      ],
      "Syntactic Label": "C# tokens with multiple syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "Constructor Initialization",
        "Data Input/Output",
        "Object Instantiation",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a mix of syntactic elements in C#.  ']' is a closing bracket, often used in array or collection literals or method parameters. 'throws' is a keyword used in method signatures to declare that the method might throw exceptions. ')' is a closing parenthesis, used to delimit method parameters or expressions. '{' and '}' are opening and closing curly braces, respectively, used to define code blocks. '-' is an arithmetic operator or a minus sign. 'readByte' appears to be a method call, likely for reading byte data from an input stream. These tokens are significant in C# because they are fundamental to the structure and functionality of the language, enabling exception handling, object creation, data processing, and control flow."
    }
  },
  {
    "c423": {
      "Unique tokens": [
        "\"",
        "config",
        ",",
        "ris",
        "setParams",
        ".",
        "EscherContainerRecord",
        "switch",
        "dictionaryFiles",
        "min",
        "input",
        "args",
        "suffix",
        "field_5_flags",
        "minGramSize",
        "maxLevels",
        "Rectangle",
        "formatMessage",
        "dictionaryFile",
        "c",
        "header",
        "if",
        "params",
        "specs",
        "normalizeKanji",
        "stopWordFiles",
        "field",
        "delimiter",
        "=",
        "final",
        "this",
        "getReuseStrategy",
        "objRecord",
        "pattern",
        ")",
        "tailored",
        "delegate",
        "queryConfig",
        "int",
        "ignoreCase",
        "label",
        "(",
        "dictFile",
        "setConfig",
        "setup",
        "spgrContainer",
        "size",
        "maxShingleSize",
        "prefixLength",
        "in",
        "ctx",
        "minimumLength",
        "term",
        "super",
        "boolean",
        "String",
        "primary",
        "mode",
        ";",
        "posToF"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Factory Methods",
        "Constructor Invocations",
        "Parameter Handling",
        "Configuration Management",
        "Text Processing"
      ],
      "Description": "The tokens represent a variety of syntactic elements in C#, primarily within the context of factory methods and constructors.  They include identifiers (e.g., config, args, normalizeKanji), keywords (e.g., if, switch, boolean, int, String), operators (e.g., ., =, ,), and special characters (e.g., (, ), {, }).  These tokens are used to create and configure objects, handle parameters, manage configurations, and perform text processing operations. The code snippets demonstrate common patterns in C# for creating objects from configuration parameters, handling various input types, and performing text processing tasks."
    }
  },
  {
    "c424": {
      "Unique tokens": [
        "K",
        "Ref",
        "E",
        "char",
        "readShort",
        "getFormat",
        "Class",
        "Reader",
        "getReason",
        "Type",
        "ObjectId",
        "apiVersion",
        "get",
        "contentLength",
        "[",
        "getRemote",
        "getName",
        "exists",
        "<",
        "long",
        "V",
        "getBegin",
        "isReadOnly",
        "void",
        "getSize",
        "Object",
        "isEmpty",
        "short",
        "float",
        "byte",
        "final",
        "keySet",
        "TokenStream",
        "int",
        "getCount",
        "reset",
        "hasNext",
        "freeze",
        "size",
        "getLine",
        "double",
        "subscriptionId",
        "synchronized",
        "T",
        "IntervalSet",
        "isExpired",
        "clear",
        "CharSequence",
        "getDepth",
        "Long",
        "run",
        "boolean",
        "String",
        "FileMode",
        "getOffset",
        "displayName"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Data Serialization",
        "Data Structures",
        "Input/Output Operations",
        "Method Implementation",
        "Data Processing"
      ],
      "Description": "The tokens represent a wide range of C# language elements including data types (int, long, float, double, byte, char, boolean, String, etc.), keywords (public, void, final, synchronized, etc.), operators (., +, <<, >>>, &, |, etc.), method names (write, read, get, set, fill, decode, serialize, etc.), and symbols ([, ], (, ), {, }, etc.).  These tokens are used in the context of method implementations, often related to data serialization (writing and reading data to/from streams or files), data structure manipulation (arrays, lists, etc.), and data processing (encoding, decoding, etc.). The semantic tags reflect the common operations performed by the methods in which these tokens are used."
    }
  },
  {
    "c425": {
      "Unique tokens": [
        ".",
        "out"
      ],
      "Syntactic Label": "Dot Operator, Output Parameter",
      "Semantic Tags": [
        "Data Serialization",
        "Binary Data Output",
        "File Output",
        "Data Persistence",
        "LittleEndian"
      ],
      "Description": "The '.' operator is used to access methods of the LittleEndianOutput object. The 'out' parameter is an output parameter representing a stream for writing binary data in little-endian format.  The code snippets demonstrate serialization of various data structures to this output stream, likely for saving data to a file or transmitting it over a network. The semantic tags reflect the core functionality of writing data in a specific binary format."
    }
  },
  {
    "c426": {
      "Unique tokens": [
        "DBSecurityGroup",
        "SnapshotCopyGrant",
        "DBClusterSnapshot",
        "HsmClientCertificate",
        "search",
        "ReplicationGroup",
        "Certificate",
        "ActivityTypeDetail",
        "ActivityTaskStatus",
        "CacheSecurityGroup",
        "ReservedCacheNode",
        "ClusterSecurityGroup",
        "SupportsCreating",
        "CacheCluster",
        "DecisionTask",
        "DBCluster",
        "DBParameterGroup",
        "ReservedNode",
        "GlobalCluster",
        "CacheParameterGroup",
        "ClusterParameterGroup",
        "TableRestoreStatus",
        "CreateNamedQueryResult",
        "WorkflowTypeInfos",
        "DomainInfos",
        "Cluster",
        "History",
        "WorkflowTypeDetail",
        "GlobalReplicationGroup",
        "WorkflowExecutionDetail",
        "ResourcePendingMaintenanceActions",
        "SearchResult",
        "DBInstanceAutomatedBackup",
        "CustomAvailabilityZone",
        "pauseCluster",
        "Snapshot",
        "Boolean",
        "DBSubnetGroup",
        "ActivityTask",
        "PagedList",
        "PendingTaskCount",
        "WorkflowExecutionInfos",
        "EventSubscription",
        "ClusterSubnetGroup",
        "GetNamedQueryResult",
        "Run",
        "EngineDefaults",
        "BatchGetNamedQueryResult",
        "rotateEncryptionKey",
        "IntervalSet",
        "DomainDetail",
        "DefaultClusterParameters",
        "ReservedDBInstance",
        "DBSnapshot",
        "HsmConfiguration",
        "DedicatedCapacityInner",
        "Double",
        "Long",
        "WorkflowExecutionCount",
        "Float",
        "ActivityTypeInfos",
        "DBInstance",
        "OptionGroup",
        "DBClusterParameterGroup"
      ],
      "Syntactic Label": "Class Names and Method Names",
      "Semantic Tags": [
        "Database Management",
        "Cloud Computing",
        "Workflow Management",
        "Data Backup and Restore",
        "Security"
      ],
      "Description": "The tokens represent class names related to database clusters, snapshots, security groups, and other cloud resources.  The context sentences show these classes are used in methods for managing and manipulating these resources, including creating, deleting, modifying, and copying them.  The methods also handle tasks related to workflow execution, security configurations, and data backups and restores.  The presence of data types like Boolean, Float, Double, and Long indicates that these methods likely return status information or numerical values related to the operations performed."
    }
  },
  {
    "c427": {
      "Unique tokens": [
        "f",
        "StringBuilder",
        "b",
        "val",
        "long",
        "object",
        ")",
        "int",
        "buf",
        "str",
        "pi",
        "walker",
        "Formula",
        "fieldName",
        "PointTransitions",
        "SharedFormulaRecord",
        "PersonIdent",
        "Ref",
        "o1",
        ",",
        "Cell",
        "obj",
        "ParserRuleContext",
        ">",
        "accessKeySecret",
        "locale",
        "RuleContext",
        "byte",
        "Object",
        "float",
        "RevWalk",
        "name",
        "enc",
        "component",
        "ints",
        "s",
        "on",
        "double",
        "listener",
        "RefsChangedListener",
        "boolean",
        "re",
        "char",
        "index",
        "source",
        "_localctx",
        "delta",
        "clock",
        "o2",
        "SegmentInfoAndLevel",
        "final",
        "key",
        "(",
        "d",
        "o",
        "AnyObjectId",
        "recognizer",
        "freq",
        "Long",
        "ConfigChangedListener",
        "E",
        "RevCommit",
        "context",
        "section",
        "get",
        "Locale",
        "List",
        "c",
        "src",
        "lexer",
        "{",
        "Completion",
        "parent",
        "e",
        "TreeWalk",
        "]",
        "queryPoint",
        "deltaBaseAsOffset",
        "escaper",
        "EscapeQuerySyntax",
        "value",
        "count",
        "getListenerType",
        "Double",
        "String",
        "coffset",
        "other"
      ],
      "Syntactic Label": "Method parameters, method return types, method names, local variables, object fields, class names, generic types, keywords, operators",
      "Semantic Tags": [
        "Object-Oriented Programming",
        "Data Structures",
        "Input/Output Operations",
        "Exception Handling",
        "Method Overriding"
      ],
      "Description": "The tokens represent various elements of C# code, including method signatures (parameters, return types), method calls, object instantiation, variable declarations, and control flow.  The semantic tags reflect the core concepts demonstrated in the provided code snippets, which are fundamental to object-oriented programming in C#."
    }
  },
  {
    "c428": {
      "Unique tokens": [
        "writeInt",
        ".",
        "writeString"
      ],
      "Syntactic Label": "Method Calls",
      "Semantic Tags": [
        "Data Serialization",
        "Binary Data",
        "Little Endian",
        "Byte Stream Output",
        "File IO"
      ],
      "Description": "The tokens are method calls used in the context of serializing data into a byte stream using Little Endian byte order.  `writeInt` and `writeString` are methods that write integer and string data respectively to the output stream. The `.` operator is used to invoke these methods on a `LittleEndianOutput` object, which is likely a custom class designed for writing data in Little Endian format. This pattern is common in scenarios where binary data needs to be written to a file or network stream."
    }
  },
  {
    "c429": {
      "Unique tokens": [
        "\"",
        "config",
        "Size",
        "stop",
        ",",
        "toAppendTo",
        ".",
        "return",
        "sb",
        "outputList",
        "qp",
        "res",
        "depth=",
        "pm",
        "b",
        "args",
        ".text",
        "calibrateSizeByDeletes=",
        "+",
        "uri",
        "colwidth",
        "tagger",
        "newObjectId",
        "r",
        "shape",
        "'",
        "name=",
        "*",
        "sheet=",
        ".salt",
        "toString",
        "intToHex",
        "retval",
        "=",
        "]",
        "getOSVersion",
        "minTermFreq",
        "append",
        ")",
        ".nEntryCount",
        "getBuildYear",
        "originalText",
        "buf",
        "s",
        "(",
        "request",
        "write",
        "toHexString",
        "isAutoSize",
        "buffer",
        "\\n",
        "Integer",
        "vlst",
        "result",
        "cur",
        "rate:",
        "oldObjectId",
        "contents",
        "n",
        "p",
        "w",
        "!",
        "HexDump",
        "md",
        ";"
      ],
      "Syntactic Label": "StringBuilder, Variables, Methods, Operators, Literals",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Output Formatting",
        "Utility Functions"
      ],
      "Description": "The tokens represent a combination of string manipulation techniques using StringBuilder objects in C#.  The code snippets demonstrate the construction of strings by appending various data types and formatting elements.  The semantic tags highlight the core functionalities: creating strings, representing data in string format, serializing objects into strings, formatting output, and providing utility functions for string operations."
    }
  },
  {
    "c430": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Request Handling",
        "AWS SDK",
        "Client-side Logic",
        "API Interaction"
      ],
      "Description": "The opening parenthesis '(' in C# is used to enclose parameters in method definitions and calls. In this context, it's part of the method signatures of numerous AWS SDK methods, indicating that each method accepts a request object as input.  This is crucial for client-side logic interacting with AWS services via their APIs. The request object likely contains parameters needed for the specific AWS operation."
    }
  },
  {
    "c431": {
      "Unique tokens": [
        "\"",
        "missingValue",
        "limit",
        "getFractionalDigits",
        "Password",
        "RawParseUtils",
        "getMessage",
        "toHex",
        "'",
        "end",
        "toString",
        "utf8",
        "lastColIx=",
        "0x",
        "]",
        "=",
        "add",
        "this",
        "merges",
        "append",
        ")",
        "field_3_row_index",
        "getDecimalExponent",
        "(",
        "[/FORMAT]",
        "\\n",
        "chainlength",
        "subfilters",
        "HexDump",
        ";"
      ],
      "Syntactic Label": "StringBuilder Methods and String Manipulation",
      "Semantic Tags": [
        "String Manipulation",
        "Object Stringification",
        "Data Representation",
        "Output Formatting",
        "Logging"
      ],
      "Description": "The tokens represent methods and components of the StringBuilder class in C#, used extensively for string concatenation and formatting.  The context shows that these are used to create string representations of various objects and data structures for output, logging, or display purposes.  The frequent use of append() and toString() methods highlights the focus on building and converting strings.  The presence of other tokens like hex conversion (toHex) and special characters suggests the generation of formatted output, possibly for debugging or data serialization."
    }
  },
  {
    "c432": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Function Definition",
        "AWS SDK",
        "API Calls",
        "Request Handling"
      ],
      "Description": "The closing parenthesis ')' in the C# code snippets marks the end of method parameters in function definitions.  These methods appear to be part of an AWS SDK, handling various API calls by taking a request object as input and returning a result object. The consistent structure suggests a pattern for interacting with AWS services."
    }
  },
  {
    "c433": {
      "Unique tokens": [
        "getInt",
        "readDouble",
        ".",
        "readShort",
        "unused",
        "0",
        "128",
        "[",
        "readLong",
        "readFully",
        "read",
        "readInt",
        "readByte",
        "readUShort",
        "]",
        "remaining",
        "readUByte",
        ")",
        "0x01",
        "(",
        "0x16",
        "getUShort",
        "buffer",
        "1",
        "in",
        "-",
        "LittleEndian",
        ";"
      ],
      "Syntactic Label": "Method Calls and Data Reading",
      "Semantic Tags": [
        "Data Deserialization",
        "Binary Data Processing",
        "File Input/Output",
        "Data Structures",
        "Little Endian Encoding"
      ],
      "Description": "The tokens represent method calls to read data from binary streams (RecordInputStream and LittleEndianInput) using Little Endian encoding.  These methods read various data types (short, int, long, byte, etc.) from the input stream and populate fields within C# classes.  The semantic tags reflect the core operations: deserialization of data from a binary format, processing of binary data, file input/output operations, use of data structures to store the read data, and the specific encoding used (Little Endian). The '.' operator is used for method calls on the input stream objects."
    }
  },
  {
    "c434": {
      "Unique tokens": [
        "dirIdx",
        "lastElement",
        "blocksOffset",
        "INT_SIZE",
        "inEnd",
        "_startIndex",
        "j",
        "++",
        "2",
        "ptr",
        "5",
        "blockSize",
        "currentSentence",
        "startB",
        "reader",
        "ruleIndex",
        ")",
        "mid",
        "length",
        "srcOff",
        "totalSize",
        "blockIdx",
        "-",
        "subfilters",
        "pos",
        "group",
        "3",
        "offset",
        "len",
        "*",
        "this",
        "_count",
        "functionIndex",
        "4",
        "newValue",
        "s",
        "ordinal",
        "upto",
        "1",
        "size",
        "termID",
        "p",
        "LittleEndian",
        "lastPos",
        "forwardPos",
        ".",
        "elementCount",
        "--",
        "index",
        "+",
        "col",
        "v",
        "toString",
        "elements",
        "=",
        "next",
        "rval",
        "freeBlocks",
        "(",
        "o",
        "state",
        "i",
        "nextWrite",
        "n",
        "destPos",
        "/",
        ";",
        "inPtr",
        "row",
        "location",
        "nItems",
        "0",
        "rowIndex",
        "r",
        "start",
        "pOff",
        "c",
        "}",
        "relativeOffset",
        "STRATEGIES",
        "e",
        "precedence",
        "]",
        "totalLength",
        "_nColumns",
        "count",
        "getRawDataSize",
        "block",
        "_nRows",
        "startA",
        "valuesOffset"
      ],
      "Syntactic Label": "Variables, Array Indexing, Increment/Decrement Operators, Arithmetic Operators, Assignment Operator, Method Calls, Dot Operator, Parentheses, Semicolons, Object",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Processing",
        "Byte Manipulation",
        "Bitwise Operations",
        "Data Structures"
      ],
      "Description": "The tokens represent a mix of variables (e.g., dirIdx, lastElement), array indexing (e.g., b[ptr]), increment/decrement operators (++ , --), arithmetic operators (+, -, *, /), assignment operator (=), method calls (e.g., getRawDataSize(), toString()), dot operator (.), parentheses, semicolons (;), and object references (e.g., this).  These are fundamental C# language constructs commonly used in data processing, byte manipulation, and bitwise operations within various data structures (arrays, buffers). The code snippets show operations on arrays and buffers, often involving bitwise operations and data transformations."
    }
  },
  {
    "c435": {
      "Unique tokens": [
        "TERM",
        "oprt",
        "f",
        "label_1",
        "queries",
        "7",
        "6",
        "Vector",
        "BOOST_ERROR_MESSAGE",
        "label_3",
        "?",
        "2",
        "asList",
        "<",
        "label_7",
        "else",
        "N",
        "break",
        "MOD_REQ",
        "statement",
        "DisjQuery",
        ")",
        "setWeight",
        "addElement",
        "floatExc",
        "Exception",
        "OrQueryNode",
        "-",
        "fieldName",
        "jj_gen",
        "if",
        "OR",
        "null",
        ",",
        "q",
        "Error",
        "wt",
        "default",
        ">",
        "first",
        "getModifier",
        "SrndQuery",
        "[",
        "jj_ntk",
        "Arrays",
        "AndQuery",
        "jj_consume_token",
        "==",
        "getOrQuery",
        "false",
        "float",
        "0.0",
        "true",
        "weight",
        "W",
        "1",
        "label_6",
        "NotQuery",
        "PLUS",
        "LPAREN",
        "AndQueryNode",
        "COMMA",
        "label_2",
        "MOD_NOT",
        ".",
        "return",
        "BooleanQueryNode",
        "throw",
        "new",
        "+",
        "clauses",
        "ModifierQueryNode",
        "ret",
        "field",
        "RPAREN",
        "add",
        "=",
        "while",
        "NOT",
        "(",
        "catch",
        "in",
        "instanceof",
        "!=",
        ";",
        "\"",
        "function",
        "AND",
        "switch",
        "0",
        "MINUS",
        "Modifier",
        "c",
        "}",
        "case",
        "FieldsQuery",
        "jj_la1",
        "{",
        "ParseException",
        "dt",
        "]",
        ":",
        "getAndQuery",
        "QueryNode",
        "image",
        "label_5",
        "Missing",
        "COLON",
        "m",
        "label_8"
      ],
      "Syntactic Label": "Parser Components",
      "Semantic Tags": [
        "Query Parsing",
        "Query Tree Construction",
        "Boolean Logic",
        "Syntax Analysis",
        "Recursive Descent Parsing"
      ],
      "Description": "The tokens represent components of a recursive descent parser for a query language.  They include keywords (AND, OR, NOT), operators (+, -,.), identifiers (SrndQuery, QueryNode, etc.), and control flow structures (if, while, switch, case). The parser breaks down the query into a tree structure (QueryNode, AndQueryNode, OrQueryNode) representing the boolean logic and relationships between query terms.  The semantic tags reflect the overall functionality of building a parse tree from a query string."
    }
  },
  {
    "c436": {
      "Unique tokens": [
        "{",
        "(",
        ")",
        "Object"
      ],
      "Syntactic Label": "C# language constructs",
      "Semantic Tags": [
        "Method Declaration",
        "Method Call",
        "Object Instantiation",
        "Return Statement",
        "Control Flow"
      ],
      "Description": "These tokens represent fundamental C# language elements.  '{' and '}' denote code blocks, '(' and ')' are used for method calls and object instantiation, and 'Object' is a type.  The context shows these tokens are used in method declarations, method calls, object instantiation, return statements, and control flow structures within the methods.  This is significant because these are core components of C# program structure and functionality."
    }
  },
  {
    "c437": {
      "Unique tokens": [
        "CRNBlock",
        ".",
        "ByteArrayOutputStream",
        "char",
        "BitSet",
        "StringBuilder",
        "min",
        "newSize",
        "new",
        "Builder",
        ">",
        "Type",
        "Random",
        "Row",
        "SrndQuery",
        "Pair",
        "CharArraySet",
        "BytesRef",
        "[",
        "header",
        "addAll",
        "parts",
        "ValueEval",
        "FieldName",
        "HashMap",
        "<",
        "{",
        "StringType",
        "POIFSConstants",
        "NumberRecord",
        "ArrayList",
        "byte",
        "Object",
        "]",
        "short",
        "field_1_number_of_sheets",
        ")",
        "Term",
        "int",
        "HashSet",
        "CellReference",
        "24",
        "NumberEval",
        "33",
        "(",
        "File",
        "emptyList",
        "fill",
        "8192",
        "upto",
        "value",
        "size",
        "TermsEnumWithSlice",
        "LinkedList",
        "34",
        "IntervalSet",
        "CharSequence",
        "SemanticContext",
        "toMerge",
        "StringTokenizer",
        "BlankRecord",
        "ExternalBookBlock",
        "LittleEndianByteArrayInputStream",
        "Long",
        "TreeSet",
        "8",
        "boolean",
        "String"
      ],
      "Syntactic Label": "C# Tokens and Data Structures",
      "Semantic Tags": [
        "Data Structures",
        "Object Creation",
        "Input/Output",
        "Data Processing",
        "Algorithm Implementation"
      ],
      "Description": "The tokens represent a wide variety of C# data structures (ArrayList, HashMap, HashSet, LinkedList, etc.) and keywords involved in object creation (new), method calls (.), operators (+, -, <, >, etc.), and data processing.  The sentences show code snippets that perform various operations, including file I/O, data parsing, and algorithm implementation.  The semantic tags reflect the overall functionality of the code, which appears to be focused on data manipulation and processing within a larger application."
    }
  },
  {
    "c438": {
      "Unique tokens": [
        "buildClient",
        "domainName",
        "userName",
        "policyName",
        "token",
        "ifMatch",
        "dBParameterGroupName",
        "serverCertificateId",
        "certificateId",
        "clientProfile",
        "attributeValue",
        "attributes",
        "getSessionToken",
        "notesRef",
        "checksum",
        "volumeId",
        "bgpAsn",
        ")",
        "withPath",
        "expiration",
        "getSimpleName",
        "executionStatusDetail",
        "archiveSize",
        "protocol",
        "withName",
        "queueUrl",
        "setUploadId",
        "secret",
        "keyId",
        "enableDate",
        "loadBalancerPort",
        "userId",
        "instances",
        ",",
        "DefaultEndpointResolver",
        "serialNumber",
        "logStreamName",
        "policyDocument",
        "imageId",
        "cacheParameterGroupName",
        "destination",
        "itemName",
        "device",
        "httpClient",
        "secretAccessKey",
        "setJobId",
        "subject",
        "topicArn",
        "this",
        "name",
        "Credential",
        "visibilityTimeout",
        "setCredentialsProvider",
        "publicIp",
        "Date",
        "slaveInstanceType",
        "status",
        "getClass",
        "dBParameterGroupFamily",
        "accountId",
        "distributionConfig",
        "submittedAt",
        "logGroupName",
        "description",
        "instanceCount",
        "certificateBody",
        ".",
        "groupId",
        "requestId",
        "jobFlowId",
        "credentials",
        "new",
        "createDate",
        "+",
        "DefaultProfile",
        "id",
        "sessionToken",
        "jobId",
        "setArn",
        "vaultNotificationConfig",
        "cacheParameterGroupFamily",
        "privateKey",
        "expected",
        "serverCertificateName",
        "sSLCertificateId",
        "HTTPClient",
        "filterName",
        "toString",
        "expiredHours",
        "=",
        "range",
        "minCount",
        "attributeName",
        "getItems",
        "credentialsProvider",
        "instancePort",
        "(",
        "uploadId",
        "arn",
        "archiveId",
        "setArchiveId",
        "message",
        "instanceRole",
        "metricTransformations",
        "logEvents",
        ";",
        "type",
        "\"",
        "path",
        "setServerCertificateId",
        "regionId",
        "accessKeyId",
        "receiptHandle",
        "endpoint",
        "setInstances",
        "signString",
        "}",
        "getCredentials",
        "icredential",
        "instanceType",
        "vaultName",
        "masterInstanceType",
        "groupName",
        "profile",
        "EC2MetadataUtils",
        "loadBalancerName",
        "cookieName",
        "withArgs",
        "setCredentialUrl",
        "instanceId",
        "filterPattern",
        "authenticateOnUnsubscribe",
        "subscriptionArn"
      ],
      "Syntactic Label": "Constructor Parameters, Method Parameters, Object Attributes, Method Calls, Assignment Operator, Dot Operator",
      "Semantic Tags": [
        "Object Initialization",
        "Data Structures",
        "Method Invocation",
        "State Management",
        "AWS SDK"
      ],
      "Description": "The tokens represent various syntactic elements in C# classes.  Constructor parameters and method parameters define the input data for object creation and method execution. Object attributes store the object's state. Method calls invoke actions on objects. The assignment operator '=' sets attribute values. The dot operator '.' accesses object attributes and methods. The overall code snippet appears to be part of an AWS SDK, managing resources and credentials through various classes and methods."
    }
  },
  {
    "c439": {
      "Unique tokens": [
        "synchronized",
        "throws",
        "return",
        "this",
        ")",
        "throw",
        "{",
        "rows",
        "super",
        "(",
        "if"
      ],
      "Syntactic Label": "C# Keywords and Operators",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Method Return",
        "Object Reference",
        "Synchronization"
      ],
      "Description": "The tokens represent fundamental C# language constructs.  'synchronized', 'throws', and 'if' are keywords controlling program flow and exception handling. 'return' is used for returning values from methods. 'this' refers to the current object instance. '(' and ')' are parentheses used for grouping and method calls.  These tokens are crucial for structuring C# code and managing program behavior."
    }
  },
  {
    "c440": {
      "Unique tokens": [
        "\"",
        "buffer",
        "=",
        "final",
        "if",
        "append",
        ")",
        "sb",
        "{",
        "(",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "StringBuilder Usage",
        "Conditional Logic",
        "Object String Representation",
        "Data Formatting"
      ],
      "Description": "The tokens represent a common pattern in C# code where StringBuilder objects are used to efficiently construct strings.  The tokens ', ', 'buffer', '=', 'final', 'if', 'append', ')', 'sb', '{', '(', ';' are involved in the process of creating and manipulating string objects using StringBuilder. The 'if' statements introduce conditional logic, and the overall purpose is to generate string representations of various data structures or objects.  The significance in the context of C# programming is that StringBuilder is a more efficient way to build strings compared to string concatenation, especially when dealing with many concatenations within a loop."
    }
  },
  {
    "c441": {
      "Unique tokens": [
        "",
        "additionalParent",
        "off",
        "7",
        "ellipsis",
        "qf",
        "b",
        "ge",
        "element",
        "2",
        "?",
        "A",
        "<",
        "equalsIgnoreCase",
        "getValue",
        "firstCol",
        "else",
        "getChildren",
        ")",
        "length",
        "str",
        "e1",
        "buffer",
        "-",
        "Float",
        "EOF",
        "null",
        ",",
        "privateKeySecret",
        "s2",
        "containsValue",
        "commentRecord",
        "ruleStatus",
        "getKey",
        ">",
        "len",
        "cce",
        "[",
        "255",
        "<=",
        "end",
        "FALSE",
        "==",
        "crB",
        "false",
        "z",
        ">=",
        "this",
        "lastCol",
        "_character",
        "s",
        "true",
        "on",
        "1",
        "appendStatus",
        "size",
        "getClass",
        "class",
        "afterEffect",
        "commit",
        "!",
        "it",
        ".",
        "e2",
        "return",
        "+",
        "equals",
        "matches",
        "v",
        "ext",
        "field",
        "array1",
        "nTerms",
        "isEmpty",
        "=",
        "key",
        "(",
        "o",
        "getTotalScore",
        "i",
        "legal",
        "stringValue",
        "instanceof",
        "no",
        "term",
        "n",
        "yes",
        "/",
        "!=",
        ";",
        "\"",
        "Z",
        "E",
        "crA",
        "input",
        "0",
        "CREATE",
        "getRow",
        "start",
        "9",
        "ch",
        "'",
        "}",
        "mGarbage",
        "{",
        "array2",
        "text",
        "postTag",
        "tokenImageVal",
        "]",
        "indeterminate",
        ":",
        "agg",
        "escaper",
        "&",
        "&&",
        "value",
        "Constants",
        "otherBuffer",
        "NONE",
        "normalization",
        "Double",
        "endA",
        "a",
        "other",
        "endB"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Control Flow",
        "Conditional Logic",
        "Object Manipulation",
        "Data Structures",
        "Exception Handling"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Keywords like \"if\", \"else\", \"return\", and operators such as \"==\", \"!=\", \">\", \"<\", \"+\", \"-\", \".\", \"&&\", and \"||\" are used extensively for control flow and conditional logic.  The presence of numerous identifiers suggests object manipulation and interaction with data structures (arrays, lists, maps).  The use of \"try-catch\" blocks (implied by the presence of exception types) indicates exception handling mechanisms.  The tokens and sentences are significant in C# programming because they form the building blocks of any C# program, enabling the creation of complex logic, data processing, and error handling."
    }
  },
  {
    "c442": {
      "Unique tokens": [
        "enableAvailabilityZonesForLoadBalancer",
        "searchGameSessions",
        "startMonitoringMembers",
        "updateMethodResponse",
        "deleteFolderContents",
        "listInstanceGroups",
        "detachClassicLinkVpc",
        "describeBatchInferenceJob",
        "setAlarmState",
        "searchAvailablePhoneNumbers",
        "listResolverRules",
        "deleteTransitGatewayRouteTable",
        "updateDomainContact",
        "describeWorkteam",
        "describeSpotPriceHistory",
        "deleteAdmChannel",
        "testInvokeAuthorizer",
        "listDeadLetterSourceQueues",
        "updateGatewayGroup",
        "describeNetworkInterfacePermissions",
        "acceptDomainTransferFromAnotherAwsAccount",
        "putEmailIdentityDkimAttributes",
        "deleteVpcPeeringConnection",
        "describeLocalGatewayRouteTables",
        "listHostedZonesByName",
        "describePartnerEventSource",
        "disableFastSnapshotRestores",
        "createNotebookInstanceLifecycleConfig",
        "removeTagsFromStream",
        "getTransitGatewayRouteTableAssociations",
        "describeIamInstanceProfileAssociations",
        "stopStreamEncryption",
        "batchDetectSyntax",
        "listContributorInsights",
        "listResourceDelegates",
        "createHITWithHITType",
        "deleteVpnConnection",
        "allocateConnectionOnInterconnect",
        "removeTagsFromVault",
        "updateSignalingChannel",
        "updateRestApi",
        "listVaults",
        "deleteGameServerGroup",
        "describeClientVpnRoutes",
        "updateCompanyNetworkConfiguration",
        "stopHumanLoop",
        "describeInterconnectLoa",
        "deleteAssessmentRun",
        "deregisterOnPremisesInstance",
        "disassociateDomain",
        "sendBounce",
        "tagMeeting",
        "startLabelDetection",
        "describeDataSourcePermissions",
        "startTextDetection",
        "detachInstancesFromLoadBalancer",
        "updateFieldLevelEncryptionConfig",
        "enableEnhancedMonitoring",
        "createCapacityReservation",
        "describeCacheEngineVersions",
        "listTrafficPolicyInstancesByPolicy",
        "batchDetectSentiment",
        "deleteEmailChannel",
        "deleteMethodResponse",
        "updateApplicationSettings",
        "getCredentialsForIdentity",
        "enableEbsEncryptionByDefault",
        "deleteIdentityPolicy",
        "describeTrafficMirrorTargets",
        "updateThreatIntelSet",
        "createEmailTemplate",
        "startFaceDetection",
        "changeResourceRecordSets",
        "deleteInstallationMedia",
        "createStreamingURL",
        "createFileSystemFromBackup",
        "updateContainerAgent",
        "setVaultAccessPolicy",
        "listStackSetOperations",
        "modifyCurrentDBClusterCapacity",
        "describeDBSnapshotAttributes",
        "createNatGateway",
        "associateHostedConnection",
        "listEventSubscriptions",
        "putVoiceConnectorTerminationCredentials",
        "describeEventBus",
        "updateApnsChannel",
        "getInvitationConfiguration",
        "describeCoipPools",
        "listCompilationJobs",
        "updateGameSessionQueue",
        "putExternalModel",
        "sendBulkTemplatedEmail",
        "modifyInstanceCapacityReservationAttributes",
        "disableAvailabilityZonesForLoadBalancer",
        "removeAttributesFromFindings",
        "startDominantLanguageDetectionJob",
        "createDeploymentGroup",
        "describeEC2InstanceLimits",
        "listTagsForResource",
        "createLocalGatewayRoute",
        "deleteFargateProfile",
        "describeInstanceCreditSpecifications",
        "defineAnalysisScheme",
        "deleteAnomalyDetector",
        "listDomainNames",
        "updateDomainNameservers",
        "putLifecycleHook",
        "deprovisionByoipCidr",
        "describeAuditStreamConfiguration",
        "deleteRoomMembership",
        "recognizeCelebrities",
        "deleteModel",
        "listFieldLevelEncryptionProfiles",
        "recordLifecycleActionHeartbeat",
        "describeTransitGatewayAttachments",
        "modifyMountTargetSecurityGroups",
        "modifyVpcAttribute",
        "updateDocumentVersion",
        "listBootstrapActions",
        "createNotificationSubscription",
        "disassociatePhoneNumbersFromVoiceConnectorGroup",
        "modifyTrafficMirrorFilterNetworkServices",
        "modifyDBClusterEndpoint",
        "describeTrial",
        "createHITType",
        "sendUsersMessages",
        "describeEndpointConfig",
        "createBatchPrediction",
        "deregisterFromWorkMail",
        "countClosedWorkflowExecutions",
        "describePendingMaintenanceActions",
        "batchDetectDominantLanguage",
        "deleteInvitations",
        "listRecipes",
        "attachVpnGateway",
        "deleteNatGateway",
        "reimportApi",
        "listTagsForDeliveryStream",
        "deleteEmailIdentity",
        "putRoomSkillParameter",
        "deleteCustomVerificationEmailTemplate",
        "updateDashboardPublishedVersion",
        "listDevelopmentSchemaArns",
        "getApnsVoipSandboxChannel",
        "listTerminologies",
        "listNamedQueries",
        "getCustomVerificationEmailTemplate",
        "rejectTransitGatewayVpcAttachment",
        "deleteVoiceTemplate",
        "updateLoadBalancerAttribute",
        "deleteIpGroup",
        "describeTransitGatewayMulticastDomains",
        "listReceiptFilters",
        "listDeviceEvents",
        "deleteMountTarget",
        "deleteVoiceConnectorGroup",
        "startHumanLoop",
        "createVpcPeeringConnection",
        "deleteDocumentClassifier",
        "deleteDeviceUsageData",
        "describeUsageReportSubscriptions",
        "deleteReceiptFilter",
        "deleteEventBus",
        "replaceRouteTableAssociation",
        "modifyInstanceEventStartTime",
        "describeNodeConfigurationOptions",
        "describeUserHierarchyGroup",
        "startImageScan",
        "updateProfilingGroup",
        "associateResolverEndpointIpAddress",
        "updateClusterConfig",
        "describeDBClusterParameterGroups",
        "updateRuntimeConfiguration",
        "sendTemplatedEmail",
        "sendCustomVerificationEmail",
        "listTypedLinkFacetNames",
        "listCompatibleImages",
        "restoreTableFromClusterSnapshot",
        "getCampaignDateRangeKpi",
        "deleteCacheSubnetGroup",
        "deleteMatchmakingRuleSet",
        "listObjectChildren",
        "deleteFileSystemPolicy",
        "listReviewableHITs",
        "deleteIndexField",
        "describeKeyPairs",
        "updateIPSet",
        "listConfigurationSets",
        "listDashboardVersions",
        "modifyClusterParameterGroup",
        "getCloudFrontOriginAccessIdentity",
        "describeClientVpnAuthorizationRules",
        "getIntegrationResponse",
        "deleteConfigurationSetEventDestination",
        "createSnapshotCopyGrant",
        "listQueryLoggingConfigs",
        "deleteDBSecurityGroup",
        "describeSnapshotCopyGrants",
        "createPublishingDestination",
        "createPresignedNotebookInstanceUrl",
        "listMeetingTags",
        "describeOrderableDBInstanceOptions",
        "listTrafficPolicyVersions",
        "describeIpv6Pools",
        "addInstanceFleet",
        "deleteProfilingGroup",
        "describeVpcAttribute",
        "deleteCloudFrontOriginAccessIdentity",
        "listObjectAttributes",
        "listIdentityPools",
        "resetImageAttribute",
        "createPrivateVirtualInterface",
        "modifyTrafficMirrorFilterRule",
        "allocatePrivateVirtualInterface",
        "deleteStackInstances",
        "deleteVerifiedEmailAddress",
        "authorizeClientVpnIngress",
        "updateVirtualInterfaceAttributes",
        "batchGetOnPremisesInstances",
        "updatePipelineStatus",
        "describeImageAttribute",
        "getDataRetrievalPolicy",
        "batchUpdatePhoneNumber",
        "createDatasetImportJob",
        "deleteUsagePlan",
        "createPlayerSession",
        "listProfileTimes",
        "skipWaitTimeForInstanceTermination",
        "cancelIngestion",
        "updateAuditStreamConfiguration",
        "createNetworkInterfacePermission",
        "associatePhoneNumberWithUser",
        "updateUserRoutingProfile",
        "updateIntegrationResponse",
        "deletePublishingDestination",
        "listVPCAssociationAuthorizations",
        "deleteDBParameterGroup",
        "describeTextTranslationJob",
        "createNetworkAclEntry",
        "deleteVPCAssociationAuthorization",
        "listBatchInferenceJobs",
        "closeInstancePublicPorts",
        "stopProjectVersion",
        "deleteQualificationType",
        "removeRoleFromDBInstance",
        "deleteTrafficMirrorFilter",
        "describeSpotFleetRequestHistory",
        "describeLocalGatewayRouteTableVpcAssociations",
        "cancelSpotInstanceRequests",
        "modifyInstanceFleet",
        "increaseStreamRetentionPeriod",
        "describeStackInstance",
        "describeElasticGpus",
        "requestSpotFleet",
        "updateBusinessReportSchedule",
        "importWorkspaceImage",
        "deleteIPSet",
        "unlinkDeveloperIdentity",
        "deleteRouteRequestParameter",
        "acceptVpcPeeringConnection",
        "listFacetNames",
        "getUsagePlanKey",
        "disassociateSkillFromSkillGroup",
        "describeDBInstanceAutomatedBackups",
        "modifyDefaultCreditSpecification",
        "cancelConversionTask",
        "createIpGroup",
        "createTransformJob",
        "describeStackResource",
        "exportJournalToS3",
        "getOnPremisesInstance",
        "updateDataSetPermissions",
        "runJobFlow",
        "createVPCAssociationAuthorization",
        "listDocumentClassificationJobs",
        "updateFleetAttributes",
        "testInvokeMethod",
        "createLBCookieStickinessPolicy",
        "modifyInstanceCreditSpecification",
        "listReceiptRuleSets",
        "deleteLaunchTemplateVersions",
        "updateTemplatePermissions",
        "getConsoleOutput",
        "listHumanTaskUis",
        "describeInterconnects",
        "updateVoiceChannel",
        "listProposalVotes",
        "disableTransitGatewayRouteTablePropagation",
        "describeIdentityProviderConfiguration",
        "deleteVoiceConnectorProxy",
        "updateFindingsFeedback",
        "describeMLModels",
        "createCodeRepository",
        "deleteUsageReportSubscription",
        "updateDataRetention",
        "cloneReceiptRuleSet",
        "batchGetApplicationRevisions",
        "deleteThreatIntelSet",
        "deleteSkillAuthorization",
        "createSolutionVersion",
        "createVoiceTemplate",
        "listPipelines",
        "disableVpcClassicLinkDnsSupport",
        "subscribeToDataset",
        "deleteLaunchConfiguration",
        "listStackSetOperationResults",
        "listMemberAccounts",
        "deleteRealtimeEndpoint",
        "getResolverRulePolicy",
        "updateVoiceTemplate",
        "disassociateDeviceFromRoom",
        "addRoleToDBInstance",
        "disableVgwRoutePropagation",
        "deregisterInstancesFromLoadBalancer",
        "resetFpgaImageAttribute",
        "createUsagePlan",
        "describeModelVersions",
        "verifyDomainDkim",
        "updateApnsSandboxChannel",
        "listGitHubAccountTokenNames",
        "createHumanTaskUi",
        "describeComponentConfigurationRecommendation",
        "updateLifecyclePolicy",
        "describeDirectConnectGatewayAssociationProposals",
        "updateConferenceProvider",
        "deleteApplicationInputProcessingConfiguration",
        "removeTagsFromOnPremisesInstances",
        "describeAnalysisSchemes",
        "deleteNetworkAcl",
        "unsubscribeFromEvent",
        "confirmPublicVirtualInterface",
        "deleteProjectVersion",
        "describeTerminationPolicyTypes",
        "describeSubscribedWorkteam",
        "deleteVaultNotifications",
        "upgradePublishedSchema",
        "startTopicsDetectionJob",
        "deletePartnerEventSource",
        "cancelExportTask",
        "updateApiMapping",
        "updateFleetCapacity",
        "searchRooms",
        "deleteMLModel",
        "updateTagsForDomain",
        "putConfigurationSetSuppressionOptions",
        "resumeGameServerGroup",
        "createStreamingDistributionWithTags",
        "addAttributesToFindings",
        "checkDomainAvailability",
        "putLifecycleConfiguration",
        "updateBatchPrediction",
        "associateSkillWithUsers",
        "resetEbsDefaultKmsKeyId",
        "describeEngineDefaultClusterParameters",
        "setIdentityNotificationTopic",
        "batchGetDeploymentGroups",
        "modifyDBProxyTargetGroup",
        "stopGameSessionPlacement",
        "listInstanceFleets",
        "listDatasetImportJobs",
        "listTypedLinkFacetAttributes",
        "putScalingPolicy",
        "createBasePathMapping",
        "describeEventTracker",
        "updateDevicePolicyConfiguration",
        "addApplicationInputProcessingConfiguration",
        "getVoiceConnectorLoggingConfiguration",
        "describeVpcEndpointConnections",
        "modifyVpcPeeringConnectionOptions",
        "listStreamingDistributions",
        "deleteReceiptRule",
        "listHealthChecks",
        "describeLoadBalancerAttributes",
        "getDASHStreamingSessionURL",
        "setTypeDefaultVersion",
        "describeVpcClassicLink",
        "createIngestion",
        "createApplicationSnapshot",
        "listTrafficPolicyInstances",
        "listAccountSettings",
        "modifyVpcEndpointServicePermissions",
        "updateNotebookInstanceLifecycleConfig",
        "putLifecyclePolicy",
        "updateBaiduChannel",
        "disassociateSkillFromUsers",
        "listCandidatesForAutoMLJob",
        "getRelationalDatabaseBlueprints",
        "startQueryExecution",
        "modifyVpnConnection",
        "createMountTarget",
        "associateSkillWithSkillGroup",
        "createVpcPeeringAuthorization",
        "putVoiceConnectorLoggingConfiguration",
        "batchGetDeploymentTargets",
        "stopActivityStream",
        "createRealtimeEndpoint",
        "listSpeechSynthesisTasks",
        "deleteResolverEndpoint",
        "createQueryLoggingConfig",
        "updateTableReplicaAutoScaling",
        "verifyEmailIdentity",
        "disassociateClientVpnTargetNetwork",
        "deleteDBClusterEndpoint",
        "putConfigurationSetReputationOptions",
        "replaceNetworkAclEntry",
        "downloadDefaultKeyPair",
        "describeLabelingJob",
        "deleteVpcEndpoints",
        "cancelReservedInstancesListing",
        "listProvisionedCapacity",
        "createInstancesFromSnapshot",
        "stopImageBuilder",
        "listGatewayGroups",
        "startExportTask",
        "updateCloudFrontOriginAccessIdentity",
        "deleteMeeting",
        "listVoiceConnectorGroups",
        "associateConnectionWithLag",
        "deleteMatchmakingConfiguration",
        "cancelImportTask",
        "listRulesPackages",
        "describeTransformJob",
        "createLoadBalancerTlsCertificate",
        "describeScheduledInstanceAvailability",
        "detectDominantLanguage",
        "createStackSet",
        "searchTransitGatewayMulticastGroups",
        "deleteEventSubscription",
        "applySecurityGroupsToClientVpnTargetNetwork",
        "modifyAvailabilityZoneGroup",
        "describeReservedCacheNodesOfferings",
        "getApplicationDateRangeKpi",
        "cancelSpotFleetRequests",
        "listAutoMLJobs",
        "describeStackSet",
        "updateFleetMetadata",
        "describeEntityRecognizer",
        "deleteVpcEndpointConnectionNotifications",
        "listHostedZones",
        "disassociateContactFromAddressBook",
        "listDocumentClassifiers",
        "describeDevicePolicyConfiguration",
        "deleteEventStream",
        "deleteSuppressedDestination",
        "detectStackDrift",
        "describeEgressOnlyInternetGateways",
        "deletePlacementGroup",
        "listCustomVerificationEmailTemplates",
        "createGameServerGroup",
        "getAppliedSchemaVersion",
        "listExperiments",
        "putAccountSendingAttributes",
        "recordActivityTaskHeartbeat",
        "updateModelVersion",
        "getFieldLevelEncryptionProfile",
        "listHITsForQualificationType",
        "confirmPrivateVirtualInterface",
        "regenerateSecurityToken",
        "disassociateIpGroups",
        "deleteStreamProcessor",
        "deleteTemplateAlias",
        "updateUserSecurityProfiles",
        "createHyperParameterTuningJob",
        "disableEnhancedMonitoring",
        "createGameSessionQueue",
        "modifyVpcEndpoint",
        "deleteDeploymentConfig",
        "associateClientVpnTargetNetwork",
        "associateS3Resources",
        "deleteGitHubAccountToken",
        "deleteVoiceConnectorTermination",
        "describeProcessingJob",
        "updateFleetPortSettings",
        "putVoiceConnectorTermination",
        "associateTransitGatewayRouteTable",
        "createLoadBalancerPolicy",
        "describeVpcEndpointServicePermissions",
        "getRawMessageContent",
        "stopStreamProcessor",
        "upgradeAppliedSchema",
        "listCampaigns",
        "listQueueTags",
        "allocatePublicVirtualInterface",
        "listDataSources",
        "deleteHIT",
        "replaceNetworkAclAssociation",
        "createTransitGatewayMulticastDomain",
        "describeNetworkInterfaceAttribute",
        "deleteNotebookInstance",
        "createTypedLinkFacet",
        "describeObservation",
        "describeDomainEndpointOptions",
        "deleteTrafficPolicyInstance",
        "deleteRestApi",
        "abortVaultLock",
        "replaceTransitGatewayRoute",
        "updateUserPhoneConfig",
        "putAnomalyDetector",
        "modifyEbsDefaultKmsKeyId",
        "batchCreateAttendee",
        "listTransformJobs",
        "sendDiagnosticInterrupt",
        "getTelemetryMetadata",
        "getAssociatedIpv6PoolCidrs",
        "describeUserHierarchyStructure",
        "deleteApplicationCloudWatchLoggingOption",
        "setQueueAttributes",
        "describeIdentityIdFormat",
        "attachLoadBalancerTlsCertificate",
        "listJournalS3ExportsForLedger",
        "associateDeviceWithRoom",
        "synthesizeSpeech",
        "updateVpcLink",
        "startVpcEndpointServicePrivateDnsVerification",
        "stopTrainingEntityRecognizer",
        "searchNetworkProfiles",
        "listEmailIdentities",
        "describeScalingProcessTypes",
        "getSchemaAsJson",
        "untagResource",
        "createPushTemplate",
        "describeSuggesters",
        "requestUploadCredentials",
        "listAttendeeTags",
        "listSecurityProfiles",
        "listDeploymentStrategies",
        "disassociateMemberFromGroup",
        "assignIpv6Addresses",
        "putConfigurationSetTrackingOptions",
        "deleteEgressOnlyInternetGateway",
        "listClusterJobs",
        "withdrawByoipCidr",
        "deleteTransitGatewayRoute",
        "deleteAutoScalingGroup",
        "batchCreateVariable",
        "associatePhoneNumbersWithVoiceConnector",
        "describeMetricCollectionTypes",
        "rejectTransitGatewayPeeringAttachment",
        "testDNSAnswer",
        "describeScalingParameters",
        "describeClassicLinkInstances",
        "putMailboxPermissions",
        "revokeSecurityGroupIngress",
        "getRecommenderConfigurations",
        "updateUserIdentityInfo",
        "createTrafficMirrorTarget",
        "buildSuggesters",
        "listWorkteams",
        "deleteClientCertificate",
        "associateTrialComponent",
        "exportTransitGatewayRoutes",
        "stopEntitiesDetectionJob",
        "createDhcpOptions",
        "getRecommenderConfiguration",
        "updateExpirationForHIT",
        "testEventPattern",
        "describeIngestion",
        "listSkillsStoreCategories",
        "getHealthCheckLastFailureReason",
        "deleteSnapshotCopyGrant",
        "modifyVpcEndpointConnectionNotification",
        "putImageScanningConfiguration",
        "getMediaForFragmentList",
        "createRecommenderConfiguration",
        "describeWorkspaceBundles",
        "startProjectVersion",
        "deleteContactMethod",
        "listRoutingProfiles",
        "putAccountSettingDefault",
        "describePublishingDestination",
        "updateServiceAccessPolicies",
        "sendTestEventNotification",
        "listDatasets",
        "listMonitoringSchedules",
        "createAutoScalingGroup",
        "createDirectConnectGatewayAssociation",
        "listOrganizationAdminAccounts",
        "createVpcEndpointConnectionNotification",
        "createCloudFormationStack",
        "describeSpotFleetInstances",
        "createUsageReportSubscription",
        "putImageTagMutability",
        "getBlockPublicAccessConfiguration",
        "disassociateResolverRule",
        "createFargateProfile",
        "batchGetQueryExecution",
        "createTransitGatewayVpcAttachment",
        "allocateTransitVirtualInterface",
        "runScheduledInstances",
        "addTagsToStream",
        "listTrainingJobsForHyperParameterTuningJob",
        "createDiskFromSnapshot",
        "getGcmChannel",
        "updatePublishingDestination",
        "describeHyperParameterTuningJob",
        "createDBClusterEndpoint",
        "deleteUserProfile",
        "modifyWorkspaceAccessProperties",
        "deregisterInstanceEventNotificationAttributes",
        "untagMeeting",
        "describeLoa",
        "deleteGatewayGroup",
        "disassociateTrialComponent",
        "deleteScheduledAction",
        "createTemplateAlias",
        "createMatchmakingConfiguration",
        "getHealthCheckStatus",
        "describeConnectionsOnInterconnect",
        "listTagsForVault",
        "deleteEventsConfiguration",
        "createMLModel",
        "getFileUploadURL",
        "transferDomainToAnotherAwsAccount",
        "createAutoMLJob",
        "modifyWorkspaceProperties",
        "listIdentityPolicies",
        "describeOptionGroupOptions",
        "updateEmailTemplate",
        "describeValidDBInstanceModifications",
        "listGraphs",
        "putDeliverabilityDashboardOption",
        "deleteFieldLevelEncryptionConfig",
        "deleteHsmClientCertificate",
        "rejectVpcEndpointConnections",
        "startImageBuilder",
        "updateIAMPolicyAssignment",
        "mergeDeveloperIdentities",
        "setRepositoryPolicy",
        "deleteFpgaImage",
        "createRouteTable",
        "deleteClusterSecurityGroup",
        "enableVolumeIO",
        "describeDirectConnectGateways",
        "getOpenIdTokenForDeveloperIdentity",
        "authorizeIpRules",
        "putCompositeAlarm",
        "deleteNetworkProfile",
        "deleteConfigurationSetTrackingOptions",
        "removeManagedScalingPolicy",
        "createVpnConnectionRoute",
        "registerDBProxyTargets",
        "setDesiredCapacity",
        "modifySubnetAttribute",
        "cancelBundleTask",
        "getJourneyDateRangeKpi",
        "listChangedBlocks",
        "deleteDirectoryConfig",
        "registerStreamConsumer",
        "registerGameServer",
        "updatePipelineNotifications",
        "verifyDomainIdentity",
        "describeWorkspacesConnectionStatus",
        "deregisterStreamConsumer",
        "listRuleNamesByTarget",
        "createBusinessReportSchedule",
        "getQueryLoggingConfig",
        "unsubscribeFromDataset",
        "describeCrossAccountAccessRole",
        "getTransitGatewayRouteTablePropagations",
        "changeMessageVisibilityBatch",
        "disableMetricsCollection",
        "stopLabelingJob",
        "listSkillsStoreSkillsByCategory",
        "modifyClientVpnEndpoint",
        "enableVpcClassicLink",
        "createVpcEndpointServiceConfiguration",
        "deleteGatewayResponse",
        "getVoiceConnectorOrigination",
        "updateDocumentationVersion",
        "setStackPolicy",
        "getSignalingChannelEndpoint",
        "describeStreamConsumer",
        "associateDhcpOptions",
        "deleteFlowDefinition",
        "disassociateFromMasterAccount",
        "listKeyPhrasesDetectionJobs",
        "unassignPrivateIpAddresses",
        "deleteRoomSkillParameter",
        "startOutboundVoiceContact",
        "enableFastSnapshotRestores",
        "updateVoiceConnectorGroup",
        "listLogPatterns",
        "listLabelingJobs",
        "listTrafficPolicyInstancesByHostedZone",
        "describeImageScanFindings",
        "describeInsightRules",
        "importApiKeys",
        "setIdentityHeadersInNotificationsEnabled",
        "registerToWorkMail",
        "updateTrafficPolicyComment",
        "deleteApi",
        "modifyWorkspaceCreationProperties",
        "describeFargateProfile",
        "createDeploymentStrategy",
        "updateGameServer",
        "modifyVolumeAttribute",
        "listStackResources",
        "updatePushTemplate",
        "deleteAutoSnapshot",
        "registerInstanceEventNotificationAttributes",
        "startSentimentDetectionJob",
        "deleteBatchPrediction",
        "describeFileSystems",
        "describeAggregateIdFormat",
        "putRecordBatch",
        "createThreatIntelSet",
        "describeVpcs",
        "listReusableDelegationSets",
        "rejectDomainTransferFromAnotherAwsAccount",
        "deleteEndpoint",
        "describeAutoScalingNotificationTypes",
        "describeResourcePermissions",
        "deleteTerminology",
        "modifyTrafficMirrorSession",
        "listNotebookInstanceLifecycleConfigs",
        "importTerminology",
        "deleteNotificationSubscription",
        "createAdditionalAssignmentsForHIT",
        "updateTemplateActiveVersion",
        "describeStackResources",
        "updateClusterSettings",
        "describeAlarmsForMetric",
        "modifyLaunchTemplate",
        "describeTrialComponent",
        "startMonitoringSchedule",
        "detectDocumentText",
        "registerTransitGatewayMulticastGroupSources",
        "abortDocumentVersionUpload",
        "(",
        "putEmailIdentityDkimSigningAttributes",
        "deleteNotificationConfiguration",
        "setReceiptRulePosition",
        "batchGetDeploymentInstances",
        "modifyNetworkInterfaceAttribute",
        "putConfigurationSetDeliveryOptions",
        "disassociateSubnetCidrBlock",
        "createPlacementGroup",
        "purchaseHostReservation",
        "confirmTransitVirtualInterface",
        "describeTableReplicaAutoScaling",
        "disableAlarmActions",
        "addJobFlowSteps",
        "createSkillGroup",
        "startKeyPhrasesDetectionJob",
        "putAccountSuppressionAttributes",
        "createSampleFindings",
        "createTrainingJob",
        "addApplicationCloudWatchLoggingOption",
        "updateDirectoryConfig",
        "updateServicePrimaryTaskSet",
        "modifyInstanceAttribute",
        "createTrafficMirrorFilter",
        "describeSentimentDetectionJob",
        "assignPrivateIpAddresses",
        "batchDeleteClusterSnapshots",
        "createVpnGateway",
        "deleteCustomMetadata",
        "listApplicationRevisions",
        "putClusterCapacityProviders",
        "completeLifecycleAction",
        "startCelebrityRecognition",
        "createInternetGateway",
        "getTransitGatewayAttachmentPropagations",
        "replaceIamInstanceProfileAssociation",
        "disassociateMemberAccount",
        "createFlowLogs",
        "describeProjectVersions",
        "listHumanLoops",
        "resetSnapshotAttribute",
        "putSchemaFromJson",
        "batchDeleteImage",
        "modifyClientProperties",
        "associateIpGroups",
        "deleteProxySession",
        "updateDetectorVersionStatus",
        "describeClusterParameterGroups",
        "describeJournalS3Export",
        "estimateTemplateCost",
        "updateSecurityGroupRuleDescriptionsIngress",
        "putEventsConfiguration",
        "updateDirectConnectGatewayAssociation",
        "updateEmailChannel",
        "updateProxySession",
        "updateHostedZoneComment",
        "addTagsToVault",
        "disassociateS3Resources",
        "updateSmsChannel",
        "listMailboxPermissions",
        "getAttendee",
        "startEntitiesDetectionJob",
        "listEventTrackers",
        "updateImagePermissions",
        "createProfilingGroup",
        "attachLoadBalancerToSubnets",
        "createExclusionsPreview",
        "listRepositoryAssociations",
        "putAutoScalingPolicy",
        "updateTrial",
        "initiateVaultLock",
        "defineIndexField",
        "defineSuggester",
        "associateQualificationWithWorker",
        "attachInternetGateway",
        "deleteEmailTemplate",
        "addApplicationOutput",
        "listTrafficPolicies",
        "putSkillAuthorization",
        "listHITs",
        "listConfigurationHistory",
        "describeDBProxyTargets",
        "searchSkillGroups",
        "searchFacesByImage",
        "listModelPackages",
        "disassociateDelegateFromResource",
        "detachLoadBalancerFromSubnets",
        "deleteDetectorVersion",
        "deleteRuleVersion",
        "listVerifiedEmailAddresses",
        "getContentModeration",
        "exportClientVpnClientConfiguration",
        "detectModerationLabels",
        "updateDashboardPermissions",
        "addInstanceGroups",
        "createAttendee",
        "deleteEntityRecognizer",
        "modifyInstanceGroups",
        "deleteEndpointConfig",
        "stopAssessmentRun",
        "listOutgoingTypedLinks",
        "getInsightRuleReport",
        "deleteDBProxy",
        "createDeliverabilityTestReport",
        "setCognitoEvents",
        "listNodegroups",
        "deleteTrafficMirrorSession",
        "getIdentityDkimAttributes",
        "putMethodResponse",
        "updateRouteResponse",
        "listSubscribedWorkteams",
        "getEbsEncryptionByDefault",
        "createSpotDatafeedSubscription",
        "createDBProxy",
        "listPublishedSchemaArns",
        "putVoiceConnectorOrigination",
        "declineInvitations",
        "describeLaunchTemplateVersions",
        "createEgressOnlyInternetGateway",
        "updateGcmChannel",
        "batchDetectEntities",
        "modifyInstanceMetadataOptions",
        "purchaseReservedCacheNodesOffering",
        "describeFleetPortSettings",
        "deleteRepositoryPolicy",
        "enableMetricsCollection",
        "applyPendingMaintenanceAction",
        "terminateInstanceInAutoScalingGroup",
        "deleteGcmChannel",
        "describeSpotDatafeedSubscription",
        "batchCreateRoomMembership",
        "startSpeechSynthesisTask",
        "createStackInstances",
        "deleteApnsSandboxChannel",
        "listTemplateAliases",
        "describeReservedInstancesListings",
        "acceptTransitGatewayVpcAttachment",
        "listSentimentDetectionJobs",
        "updateOrganizationConfiguration",
        "listContactFlows",
        "unassignIpv6Addresses",
        "listLabelingJobsForWorkteam",
        "getVoiceConnectorStreamingConfiguration",
        "getFieldLevelEncryptionProfileConfig",
        "listQueryExecutions",
        "disassociateTransitGatewayRouteTable",
        "setVisibleToAllUsers",
        "disassociateWebsiteCertificateAuthority",
        "describeContributorInsights",
        "deleteConferenceProvider",
        "revokeIpRules",
        "deleteClusterParameterGroup",
        "createTransitGatewayPeeringAttachment",
        "updateQualificationType",
        "listTagsForDomain",
        "describeCacheParameterGroups",
        "getInvitationsCount",
        "deleteAssessmentTemplate",
        "updateRuleMetadata",
        "batchCheckLayerAvailability",
        "startChatContact",
        "updateAvailabilityOptions",
        "listDeliverabilityTestReports",
        "deleteVpcLink",
        "getAdmChannel",
        "listManagedSchemaArns",
        "updateDomainContactPrivacy",
        "deleteCorsConfiguration",
        "createWorkGroup",
        "createBGPPeer",
        "getDownloadUrlForLayer",
        "describeBundleTasks",
        "disassociateTransitGatewayMulticastDomain",
        "disassociateSkillGroupFromRoom",
        "deleteBaiduChannel",
        "deleteWorkteam",
        "revokeClientVpnIngress",
        "updatePhoneNumberSettings",
        "createMeeting",
        "describeVpcClassicLinkDnsSupport",
        "rejectQualificationRequest",
        "updateSecurityGroupRuleDescriptionsEgress",
        "listPolicyAttachments",
        "describeKeyPhrasesDetectionJob",
        "listJobsByPipeline",
        "copyFpgaImage",
        "describeBatchPredictions",
        "createTransitGatewayRouteTable",
        "downloadDBLogFilePortion",
        "listResolverEndpointIpAddresses",
        "deleteApplicationVpcConfiguration",
        "uploadLayerPart",
        "submitAttachmentStateChanges",
        "deleteModelPackage",
        "deleteDeploymentGroup",
        "putConferencePreference",
        "createScheduledAction",
        "associateRouteTable",
        "listThreatIntelSets",
        "createApiMapping",
        "createGroupMembership",
        "updateTypedLinkFacet",
        "deleteAssessmentTarget",
        "attachInstancesToLoadBalancer",
        "listProcessingJobs",
        "getPersonalizedRanking",
        "describeDirectConnectGatewayAssociations",
        "describeVpcEndpointConnectionNotifications",
        "describeInstanceEventNotificationAttributes",
        "listTargetsByRule",
        "stopTransformJob",
        "deleteRouteSettings",
        "deleteBasePathMapping",
        "describeVolumeAttribute",
        "listWebsiteCertificateAuthorities",
        "purchaseReservedInstancesOffering",
        "listWorkersWithQualificationType",
        "detachFromIndex",
        "putManagedScalingPolicy",
        "deleteApplicationOutput",
        "getLoadBalancerTlsCertificates",
        "startDeviceSync",
        "listEntitiesDetectionJobs",
        "stopAutoMLJob",
        "confirmProductInstance",
        "copyWorkspaceImage",
        "updateConfigurationSetEventDestination",
        "listProblems",
        "describeResourceGroups",
        "listLexicons",
        "describeBrokerEngineTypes",
        "deleteQueue",
        "updateAccountSendingEnabled",
        "revokeSecurityGroupEgress",
        "sendAlexaOfferToMaster",
        "sendAnnouncement",
        "resetCacheParameterGroup",
        "getReservedNodeExchangeOfferings",
        "updateMatchmakingConfiguration",
        "deleteIAMPolicyAssignment",
        "deleteSkillGroup",
        "describeHsmClientCertificates",
        "deleteVoiceConnectorStreamingConfiguration",
        "createRoomMembership",
        "createLabelingJob",
        "listSolutionVersions",
        "deregisterContainerInstance",
        "listProposals",
        "modifySnapshotSchedule",
        "getDeploymentConfig",
        "disassociateSigninDelegateGroupsFromAccount",
        "listAssessmentRuns",
        "deleteAttendee",
        "getDistributionConfig",
        "describeDhcpOptions",
        "createDiskSnapshot",
        "revokeDomainAccess",
        "createSignalingChannel",
        "increaseReplicationFactor",
        "createCapacityProvider",
        "modifyClusterSnapshotSchedule",
        "listTemplateVersions",
        "batchUnsuspendUser",
        "listMultipartUploads",
        "listIncomingTypedLinks",
        "listBots",
        "putInsightRule",
        "deleteRelationalDatabaseSnapshot",
        "addApplicationVpcConfiguration",
        "getStreamingDistributionConfig",
        "deleteFlowLogs",
        "describeImagePermissions",
        "listEventSources",
        "getDeliverabilityTestReport",
        "updateRequestValidator",
        "listBusinessReportSchedules",
        "listAttachedIndices",
        "getCapacityReservationUsage",
        "deleteSnapshotSchedule",
        "updateMailboxQuota",
        "deleteAccessPoint",
        "disassociateQualificationFromWorker",
        "startMatchBackfill",
        "countPendingActivityTasks",
        "setDataRetrievalPolicy",
        "attachLoadBalancerTargetGroups",
        "acceptReservedInstancesExchangeQuote",
        "setIdentityPoolRoles",
        "listContainerInstances",
        "deleteGameSessionQueue",
        "startAssessmentRun",
        "stopTrainingJob",
        "deleteMonitoringSchedule",
        "startDocumentAnalysis",
        "listPartnerEventSources",
        "modifyCacheParameterGroup",
        "updateEndpointsBatch",
        "flushStageAuthorizersCache",
        "describeIAMPolicyAssignment",
        "deleteLoadBalancerPolicy",
        "getHLSStreamingSessionURL",
        "listPhoneNumberOrders",
        "createDocumentationVersion",
        "listProxySessions",
        "deleteSecurityConfiguration",
        "deleteUsagePlanKey",
        "removeFacetFromObject",
        "updateSkillGroup",
        "describeGameSessionDetails",
        "deleteNodegroup",
        "listProfilingGroups",
        "updateStreamingDistribution",
        "putSuppressedDestination",
        "describeEventSubscriptions",
        "updateStackInstances",
        "stopMonitoringMembers",
        "listJourneys",
        "describeFastSnapshotRestores",
        "listTagsForStream",
        "describeJobFlows",
        "createWorkteam",
        "listGeoLocations",
        "listFlowDefinitions",
        "untagStream",
        "importRestApi",
        "updateObjectAttributes",
        "describeNodegroup",
        "createFieldLevelEncryptionProfile",
        "deleteTransitGatewayVpcAttachment",
        "modifyVpcEndpointServiceConfiguration",
        "deleteDirectConnectGatewayAssociation",
        "describeTransitGatewayPeeringAttachments",
        "describeConnectionLoa",
        "describeClientVpnTargetNetworks",
        "describeTableRestoreStatus",
        "deleteStreamingDistribution",
        "deleteQueryLoggingConfig",
        "describeSpotInstanceRequests",
        "enableInsightRules",
        "disableDomainAutoRenew",
        "searchTransitGatewayRoutes",
        "deleteDiskSnapshot",
        "updateDeploymentGroup",
        "createWorkerBlock",
        "modifyImageAttribute",
        "modifySnapshotAttribute",
        "setLoadBalancerPoliciesForBackendServer",
        "updateClientCertificate",
        "listDomainDeliverabilityCampaigns",
        "listJobsByStatus",
        "describeDataRepositoryTasks",
        "describeDatasetImportJob",
        "listSignalingChannels",
        "deleteSmsTemplate",
        "updateApnsVoipSandboxChannel",
        "deleteTaskSet",
        "updateDeploymentStrategy",
        "enableTransitGatewayRouteTablePropagation",
        "putPartnerEvents",
        "updateComponentConfiguration",
        "deleteLaunchTemplate",
        "uploadMultipartPart",
        "createLaunchTemplateVersion",
        "listAssessmentTargets",
        "createPhoneNumberOrder",
        "acceptQualificationRequest",
        "describeFpgaImageAttribute",
        "putGatewayResponse",
        "retrieveDomainAuthCode",
        "createBatchInferenceJob",
        "putFileSystemPolicy",
        "associateDelegateToResource",
        "describeCacheSubnetGroups",
        "setLoadBalancerListenerSSLCertificate",
        "listAttendees",
        "openInstancePublicPorts",
        "listNotebookInstances",
        "stopQueryExecution",
        "advertiseByoipCidr",
        "describeLocalGatewayVirtualInterfaceGroups",
        "listDataSets",
        "createTaskSet",
        "listLogPatternSets",
        "deleteInstanceSnapshot",
        "searchDashboards",
        "completeLayerUpload",
        "listDetectors",
        "createQualificationType",
        "getApnsSandboxChannel",
        "removeTagsFromResource",
        "getJourneyExecutionActivityMetrics",
        "discoverInputSchema",
        "attachClassicLinkVpc",
        "countPendingDecisionTasks",
        "listAccessControlRules",
        "deleteTrafficMirrorTarget",
        "listTrialComponents",
        "registerAVSDevice",
        "createStreamProcessor",
        "deregisterTaskDefinition",
        "listSolutions",
        "listTypeVersions",
        "resetInstanceAttribute",
        "startMonitoringMember",
        "deleteReceiptRuleSet",
        "listInvitations",
        "listDeploymentConfigs",
        "updateJourney",
        "deleteEventTracker",
        "createCustomVerificationEmailTemplate",
        "listAllowedNodeTypeModifications",
        "testRenderTemplate",
        "listPublicKeys",
        "createConfigurationSetTrackingOptions",
        "deleteNetworkInterface",
        "createReusableDelegationSet",
        "describeImportSnapshotTasks",
        "describeIdentityUsage",
        "describeAutoMLJob",
        "getImportJob",
        "resetPersonalPIN",
        "listEntityRecognizers",
        "validateTemplate",
        "deleteTransitGatewayMulticastDomain",
        "deleteImagePermissions",
        "putDedicatedIpInPool",
        "batchPutAttributes",
        "createDetectorVersion",
        "deleteKnownHostKeys",
        "listDeploymentTargets",
        "createRelationalDatabaseSnapshot",
        "deleteReusableDelegationSet",
        "deleteScalingPolicy",
        "describeInstanceAttribute",
        "createVpcLink",
        "disassociateWebsiteAuthorizationProvider",
        "startStreamEncryption",
        "deleteVoiceConnectorTerminationCredentials",
        "deleteInternetGateway",
        "detectSentiment",
        "updateCodeRepository",
        "getRecommendations",
        "initiateDocumentVersionUpload",
        "addRoleToDBCluster",
        "detachLoadBalancerTargetGroups",
        "sendVoiceMessage",
        "putScheduledUpdateGroupAction",
        "registerOnPremisesInstance",
        "deleteApnsVoipSandboxChannel",
        "removeRoleFromDBCluster",
        "updateNetworkProfile",
        "listJournalS3Exports",
        "describeHostReservationOfferings",
        "listOnPremisesInstances",
        "listTaskDefinitions",
        "modifyScheduledAction",
        "claimGameServer",
        "listSmartHomeAppliances",
        "flushStageCache",
        "updateClusterVersion",
        "updateAdmChannel",
        "deregisterDBProxyTargets",
        "describeTrafficMirrorSessions",
        "deleteTrialComponent",
        "describeFpgaImages",
        "getCloudFormationStackRecords",
        "applySecurityGroupsToLoadBalancer",
        "deleteInsightRules",
        "detectStackSetDrift",
        "addApplicationReferenceDataSource",
        "deleteTrial",
        "createImportJob",
        "listDeploymentInstances",
        "describeDominantLanguageDetectionJob",
        "listDistributions",
        "deleteDedicatedIpPool",
        "removeAllResourcePermissions",
        "getGameSessionLogUrl",
        "describeNetworkAcls",
        "deleteApnsChannel",
        "deleteTagsForDomain",
        "listQualificationTypes",
        "describeTrafficMirrorFilters",
        "modifyIdFormat",
        "updateConfigurationSetReputationMetricsEnabled",
        "deleteMessageBatch",
        "describeLifecycleHookTypes",
        "createCustomerGateway",
        "getTypedLinkFacetInformation",
        "deleteAlarms",
        "deleteVpnGateway",
        "describeUserStackAssociations",
        "createImageBuilderStreamingURL",
        "deleteAccountSetting",
        "startStreamProcessor",
        "reorderReceiptRuleSet",
        "recordHandlerProgress",
        "describeIdentityPoolUsage",
        "batchApplyUpdateAction",
        "voteOnProposal",
        "createTransitGateway",
        "addTagsToResource",
        "deleteWorkGroup",
        "createReceiptFilter",
        "updateDomainEntry",
        "createDirectConnectGatewayAssociationProposal",
        "lookupDeveloperIdentity",
        "listHoursOfOperations",
        "decreaseStreamRetentionPeriod",
        "createUsagePlanKey",
        "deregisterGameServer",
        "putMetricAlarm",
        "associateSubnetCidrBlock",
        "deleteDirectConnectGatewayAssociationProposal",
        "deleteTrafficMirrorFilterRule",
        "describeGlobalReplicationGroups",
        "updateTaskSet",
        "createMonitoringSchedule",
        "modifyTransitGatewayVpcAttachment",
        "deleteRoute",
        "addTagsToOnPremisesInstances",
        "subscribeToEvent",
        "updateApnsVoipChannel",
        "describeAlarmHistory",
        "associateDeviceWithNetworkProfile",
        "listDedicatedIpPools",
        "createPartnerEventSource",
        "transferDomain",
        "createEndpointConfig",
        "updateTrafficPolicyInstance",
        "restoreAddressToClassic",
        "signOutUser",
        "updateRelationalDatabaseParameters",
        "resendContactReachabilityEmail",
        "describeDocumentClassificationJob",
        "deleteWorkerBlock",
        "updateTemplateAlias",
        "batchDisassociateUserStack",
        "listQualificationRequests",
        "registerCrossAccountAccessRole",
        "batchModifyClusterSnapshots",
        "deleteClientVpnRoute",
        "getEbsDefaultKmsKeyId",
        "createTrafficMirrorFilterRule",
        "describeLoadBalancerTargetGroups",
        "listBrokers",
        "updateSmsTemplate",
        "updateDomainEndpointOptions",
        "rejectVpcPeeringConnection",
        "batchStopUpdateAction",
        "createRestApi",
        "deleteSpotDatafeedSubscription",
        "updateNodegroupVersion",
        "deleteLoadBalancerListeners",
        "putEventStream",
        "searchLocalGatewayRoutes",
        "listFieldLevelEncryptionConfigs",
        "putIdentityPolicy",
        "createReceiptRule",
        "deleteNetworkInterfacePermission",
        "updateDocumentationPart",
        "updateNotificationSettings",
        "getGatewayResponse",
        "createTransitGatewayRoute",
        "listLedgers",
        "updateScalingParameters",
        "stopFleetActions",
        "listUserGroups",
        "updateJourneyState",
        "modifyInstancePlacement",
        "deleteLocalGatewayRouteTableVpcAssociation",
        "putNotificationConfiguration",
        "deleteApiMapping",
        "getApnsVoipChannel",
        "disableEbsEncryptionByDefault",
        "putAccessControlRule",
        "createDataSourceFromS3",
        "deleteConnection",
        "describeBrokerInstanceOptions",
        "putRestApi",
        "startTextTranslationJob",
        "deleteDBSubnetGroup",
        "describePublicIpv4Pools",
        "updateTrialComponent",
        "deleteBusinessReportSchedule",
        "listStreamConsumers",
        "listGroupMembers",
        "listGameServerGroups",
        "putConfigurationSetSendingOptions",
        "authorizeSecurityGroupEgress",
        "describeDBProxyTargetGroups",
        "importClientVpnClientCertificateRevocationList",
        "listIPSets",
        "createAppCookieStickinessPolicy",
        "createAssessmentTarget",
        "createIPSet",
        "listAssessmentRunAgents",
        "createConferenceProvider",
        "describeSecurityGroupReferences",
        "describeImageBuilders",
        "setIdentityDkimEnabled",
        "deleteHumanLoop",
        "startDocumentTextDetection",
        "listStackSets",
        "startDocumentClassificationJob",
        "updateAutoScalingGroup",
        "enableVpcClassicLinkDnsSupport",
        "provisionByoipCidr",
        "importApi",
        "disassociateVPCFromHostedZone",
        "putVoiceConnectorProxy",
        "createEmailIdentity",
        "listTopicsDetectionJobs",
        "isVpcPeered",
        "listFacetAttributes",
        "deleteVoiceChannel",
        "disassociateIamInstanceProfile",
        "sendContactMethodVerification",
        "removeResourcePermission",
        "listDashboards",
        "deleteUserEndpoints",
        "getIdentityMailFromDomainAttributes",
        "deleteRecommenderConfiguration",
        "createFieldLevelEncryptionConfig",
        "listIAMPolicyAssignmentsForUser",
        "createEntityRecognizer",
        "listWorkGroups",
        "setLoadBalancerPoliciesOfListener",
        "listS3Resources",
        "getJourneyExecutionMetrics",
        "deleteVpcEndpointServiceConfigurations",
        "changeTagsForResource",
        "batchDetectKeyPhrases",
        "createInstanceExportTask",
        "createFlowDefinition",
        "deleteQueuedReservedInstances",
        "updateContactAttributes",
        "getCheckerIpRanges",
        "updateLogPattern",
        "startGameSessionPlacement",
        "deleteDeploymentStrategy",
        "listConfigurationRevisions",
        "startFaceSearch",
        "putResolverRulePolicy",
        "removeAutoScalingPolicy",
        "deleteVaultAccessPolicy",
        "listDistributionsByWebACLId",
        "putEmailIdentityFeedbackAttributes",
        "checkDomainTransferability",
        "modifyVpnTunnelCertificate",
        "batchUpdateUser",
        "getRestApis",
        "cancelDomainTransferToAnotherAwsAccount",
        "createDataRepositoryTask",
        "createTransitVirtualInterface",
        "deleteCustomerGateway",
        "describeFlowDefinition",
        "listDeliveryStreams",
        "untagQueue",
        "disableDomainTransferLock",
        "describeClientVpnEndpoints",
        "sendRawEmail",
        "listWebsiteAuthorizationProviders",
        "createTrialComponent",
        "enableVgwRoutePropagation",
        "updateRoomMembership",
        "describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "listApplicationSnapshots",
        "deleteTypedLinkFacet",
        "cancelDataRepositoryTask",
        "deleteFieldLevelEncryptionProfile",
        "listCodeRepositories",
        "forgetSmartHomeAppliances",
        "listResolverEndpoints",
        "modifyFpgaImageAttribute",
        "deleteAccessLogSettings",
        "createCompilationJob",
        "updateContainerInstancesState",
        "createRouteResponse",
        "stopTrainingDocumentClassifier",
        "deleteDhcpOptions",
        "describeServiceAccessPolicies",
        "deleteCodeRepository",
        "updateDomainMetadata",
        "updateEndpointWeightsAndCapacities",
        "modifyVpcTenancy",
        "listTagsForResources",
        "startSmartHomeApplianceDiscovery",
        "registerTaskDefinition",
        "describeOrderableClusterOptions",
        "listIAMPolicyAssignments",
        "createNetworkProfile",
        "registerApplicationRevision",
        "stopTextTranslationJob",
        "deleteDatasetGroup",
        "describeTransitGatewayRouteTables",
        "getReservedInstancesExchangeQuote",
        "describeTaskDefinition",
        "createLifecyclePolicy",
        "updateShardCount",
        "renderUiTemplate",
        "stopProcessingJob",
        "listResolverRuleAssociations",
        "listInvalidations",
        "deleteCacheSecurityGroup",
        "createDeploymentConfig",
        "disassociateVpcCidrBlock",
        "deleteIntegrationResponse",
        "deleteLoadBalancerTlsCertificate",
        "describeExportImageTasks",
        "deleteJourney",
        "terminateJobFlows",
        "listFargateProfiles",
        "listVoiceConnectors",
        "acceptTransitGatewayPeeringAttachment",
        "putEmailIdentityMailFromAttributes",
        "deleteBGPPeer",
        "associateVpcCidrBlock",
        "deleteGroupMembership",
        "updateAccountSettings",
        "deregisterTransitGatewayMulticastGroupSources",
        "deleteRequestValidator",
        "stopMonitoringSchedule",
        "startLifecyclePolicyPreview",
        "detectStackResourceDrift",
        "deleteImageBuilder",
        "listSnapshotBlocks",
        "describeReservedCacheNodes",
        "updateTerminationProtection",
        "createResolverEndpoint",
        "getDeploymentInstance",
        "deleteVpcPeeringAuthorization",
        "sendBonus",
        "listReviewPolicyResultsForHIT",
        "describeCacheParameters",
        "batchDeleteAttributes",
        "createContactMethod",
        "postToConnection",
        "putInstancePublicPorts",
        "describeVpcEndpointServiceConfigurations",
        "putIntegrationResponse",
        "describeHumanTaskUi",
        "createIAMPolicyAssignment",
        "associatePhoneNumbersWithVoiceConnectorGroup",
        "getResolverEndpoint",
        "listRooms",
        "createDataSourceFromRDS",
        "createAccessPoint",
        "untagAttendee",
        "modifySpotFleetRequest",
        "updateHITReviewStatus",
        "listEndpointConfigs",
        "getIPSet",
        "setIdentityMailFromDomain",
        "describeVpcPeeringAuthorizations",
        "deleteDBClusterParameterGroup",
        "createVoiceConnectorGroup",
        "listRoomMemberships",
        "listEventBuses",
        "createIntegrationResponse",
        "listMeetings",
        "deleteTransitGatewayPeeringAttachment",
        "describeHsmConfigurations",
        "modifyDBSnapshotAttribute",
        "listWorkerBlocks",
        "deleteNotebookInstanceLifecycleConfig",
        "createTrial",
        "startDeliveryStreamEncryption",
        "describeIdFormat",
        "createConfigurationSetEventDestination",
        "updateRulesOfIpGroup",
        "putInvitationConfiguration",
        "updateWorkGroup",
        "updateMonitoringSchedule",
        "updateWorkteam",
        "listConfigurationProfiles",
        "getDeliverabilityDashboardOptions",
        "listAssociatedFleets",
        "listTypeRegistrations",
        "describeVpcPeeringConnections",
        "setIdentityFeedbackForwardingEnabled",
        "updateGatewayResponse",
        "enableDomainTransferLock",
        "putAccountDedicatedIpWarmupAttributes",
        "listDeploymentGroups",
        "modifyVpnTunnelOptions",
        "listPhoneNumbers",
        "modifySelfservicePermissions",
        "batchAssociateUserStack",
        "createFpgaImage",
        "updateUsagePlan",
        "updateGlobalSettings",
        "batchPutScheduledUpdateGroupAction",
        "acceptVpcEndpointConnections",
        "updateStackSet",
        "createConfigurationProfile",
        "updateConfigurationSetTrackingOptions",
        "updateMLModel",
        "generateClientCertificate",
        "createDatasetGroup",
        "describeLoadBalancerPolicyTypes",
        "deleteConfigurationProfile",
        "listSecurityConfigurations",
        "batchSuspendUser",
        "listGameServers",
        "putDedicatedIpWarmupAttributes",
        "listTrials",
        "createLoadBalancerListeners",
        "modifyWorkspaceState",
        "deleteLocalGatewayRoute"
      ],
      "Syntactic Label": "Method Names",
      "Semantic Tags": [
        "AWS Management",
        "Cloud Resource Management",
        "Cloud Service Operations",
        "Resource Provisioning",
        "Resource Management"
      ],
      "Description": "These tokens represent methods in a C# AWS SDK interacting with various AWS services.  They perform actions like creating, deleting, updating, listing, and describing different cloud resources. The methods are significant because they provide programmatic access to manage AWS services, automating tasks and integrating with other systems."
    }
  },
  {
    "c443": {
      "Unique tokens": [
        "null",
        "switch",
        "return",
        "try",
        "exclude",
        "finally",
        "index",
        "CmpOp",
        "rowIndex",
        "start",
        "c",
        "!",
        "case",
        "<",
        "{",
        "long",
        "else",
        "capacity",
        "=",
        ">=",
        "final",
        "while",
        "int",
        "monitor",
        "skipBuffer",
        "assert",
        "do",
        "(",
        "t",
        "value",
        "count",
        "UnicodeSet",
        "double",
        "synchronized",
        "catch",
        "for",
        "Tree",
        "sorter",
        "boolean",
        "array",
        "if",
        "type"
      ],
      "Syntactic Label": "C# Keywords, Operators, and Identifiers",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Data Structures",
        "Looping",
        "Assertions"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `switch`, `return`, `try`, `catch`, `finally`, `if`, `else`, `while`, `for`, `do` control program flow and exception handling.  Operators like `=`, `!=`, `<`, `>=`, `!` perform comparisons and assignments. Identifiers such as `rowIndex`, `capacity`, `skipBuffer`, `UnicodeSet`, `Tree`, `sorter` name variables and objects, often representing data structures. The presence of `null` indicates potential null checks. `assert` suggests the use of assertions for debugging.  These elements are fundamental to C# programming, enabling structured code, error handling, and data manipulation."
    }
  },
  {
    "c444": {
      "Unique tokens": [
        "stop",
        "off",
        "paths",
        "0x00",
        "bitLength",
        "b",
        "Math",
        "++",
        "?",
        "<",
        "blockSize",
        "crns",
        "long",
        "maxWriteLen",
        "else",
        "short",
        "ss",
        ")",
        "ord",
        "int",
        "set",
        "length",
        "1023",
        "buffer",
        "Integer",
        "result",
        "boost",
        "newArray",
        "-",
        "Float",
        "if",
        "offset",
        "PathFilter",
        "null",
        ",",
        ">>>",
        "field_6_expression_len",
        ">",
        "len",
        "formatQueryAsTrecTopic",
        "[",
        "<=",
        "tmpTermState",
        "toDirectoryIndex",
        "MurmurHash",
        "end",
        "*",
        "==",
        "SKIP_BUFFER_SIZE",
        "fis",
        "byte",
        "float",
        "bPtr",
        ">=",
        "field_1_number_crn_records",
        "this",
        "gets",
        "s",
        "true",
        "skipped",
        "perThread",
        "_countRecord",
        "size",
        "1",
        "double",
        "termState",
        "for",
        "CODEC_MAGIC",
        "p",
        "num",
        "boolean",
        "!",
        "BlockList",
        "copyLength",
        "frac",
        "arraycopy",
        "cras",
        ".",
        "return",
        "ArrayUtil",
        "getBackgroundDeltaPriority",
        "ENCODED_SIZE",
        "--",
        "index",
        "bytes",
        "new",
        "flushBytes",
        "+",
        "totalFormulaLen",
        "trace",
        "match",
        "arr",
        "resultLength",
        "keyStart",
        "numBytes",
        "step",
        "original",
        "-=",
        "originalLength",
        "=",
        "final",
        "freeBlocks",
        "assert",
        "(",
        "hashSize",
        "bb",
        "o",
        "MIN_CAPACITY_INCREMENT",
        "freq",
        "newDirectory",
        "i",
        "in",
        "field_1_last_column_index",
        ">>",
        "/",
        "!=",
        ";",
        "\"",
        "nAvailableBytes",
        "IO",
        "requireInt",
        "0",
        "assertMemory",
        "/=",
        "start",
        "formulaTokenLen",
        "c",
        "c1",
        "}",
        "{",
        "%",
        "]",
        "+=",
        ":",
        "&",
        "&&",
        "1f",
        "count",
        "T",
        "kRaw",
        "64",
        "a",
        "block",
        "object",
        "minSize",
        "info"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "File I/O",
        "Data Structures",
        "Algorithm",
        "String Manipulation",
        "Error Handling"
      ],
      "Description": "The tokens represent a wide range of C# language elements including keywords (if, else, for, while), operators (+, -, *, /, %, =, ==, !=, <, >, <=, >=, ++, --, >>>, &&, ||), data types (int, long, float, double, byte, boolean, String, Object), array manipulation (System.arraycopy), and other functionalities.  The sentences show various programming constructs such as loops, conditional statements, function calls, and exception handling.  The semantic tags reflect the overall functionality of the code snippets, which involve file input/output, manipulation of data structures (arrays, lists, hash tables), implementation of algorithms (e.g., MurmurHash), string processing, and error handling."
    }
  },
  {
    "c445": {
      "Unique tokens": [
        "",
        "offset",
        "proto",
        "null",
        "dy2",
        ".",
        "b",
        "LRUType",
        "0",
        ">",
        "+",
        "len",
        "2",
        "start",
        "<=",
        "255",
        "refProto",
        "'",
        "!",
        "segments",
        "<",
        "currPtr",
        "dx2",
        "end",
        "{",
        "dirSize",
        "reason",
        "==",
        "numPoints",
        "DVRecord",
        "false",
        "127",
        "originalLength",
        "]",
        ">=",
        "=",
        ")",
        "ord",
        "needToPreserve",
        "buckets",
        "&",
        "freeBlocks",
        "c2",
        "length",
        "&&",
        "buf",
        "(",
        "&=",
        "!=",
        "legacyCredential",
        "Constants",
        "1",
        "byNumber",
        "firstRow",
        "instanceof",
        "Token",
        "FieldInfo",
        "-",
        "s0",
        "a",
        "weightedTerms",
        "BLOCK_MASK",
        "/",
        "minSize",
        "recordId"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Structures",
        "Control Flow",
        "Exception Handling",
        "File I/O"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Many are identifiers for variables and methods, while others are operators, keywords, and symbols used in array manipulation, control flow statements (if, while, for), exception handling (try-catch), and file I/O operations.  The semantic tags reflect the common operations performed in the provided code snippets."
    }
  },
  {
    "c446": {
      "Unique tokens": [
        "public"
      ],
      "Syntactic Label": "Access Modifier",
      "Semantic Tags": [
        "Access Control",
        "Object-Oriented Programming",
        "Encapsulation",
        "Method Visibility",
        "API Design"
      ],
      "Description": "The `public` keyword in C# is an access modifier that controls the accessibility of methods within a class.  In this context, it signifies that the methods are part of a public API, accessible from any other part of the application or from external applications. This is a fundamental concept in object-oriented programming and API design, ensuring encapsulation and controlled access to the class's functionality."
    }
  },
  {
    "c447": {
      "Unique tokens": [
        "",
        "runAutomaton",
        "b",
        "?",
        "eq",
        "896",
        "ethat",
        "ve",
        "resource",
        "else",
        ")",
        "buf",
        "matcher",
        "hasAttributes",
        "isExternal",
        "x",
        "fieldName",
        "service",
        "isSet",
        "if",
        "region",
        "null",
        ",",
        "eof",
        "obj",
        "sourceText",
        "stat2",
        "otherState",
        "field_3_cell_options",
        "compareToIgnoreCase",
        "queryString",
        "Arrays",
        "policy",
        "==",
        "false",
        "this",
        "ref",
        "ttype",
        "true",
        "getClass",
        "NORMAL",
        "prefixLength",
        "accountId",
        "lexerOther",
        "maxExpansions",
        "transpositions",
        "testedValue",
        "Circle",
        "!",
        ".",
        "return",
        "t2",
        "expression",
        "lexerActionExecutor",
        "accept",
        "equals",
        "matches",
        "points",
        "_value",
        "includeUpper",
        "INSTANCE",
        "ret",
        "=",
        "field_4_alignment_options",
        "final",
        "next",
        "_pattern",
        "upperTerm",
        "(",
        "transitions",
        "AnyObjectId",
        "o",
        "d",
        "other",
        "variables",
        "arn",
        "term",
        "indexOptions",
        "!=",
        "isGroup",
        ";",
        "type",
        "needsScores",
        "lowerTerm",
        "r",
        "ObjectEqualityComparator",
        "includeLower",
        "}",
        "case",
        "{",
        "&&",
        "NONE",
        "a",
        "super",
        "maxEdits",
        "FileMode"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Object-Oriented Programming",
        "Conditional Logic",
        "Data Structures",
        "Equality Checks",
        "Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like \"if\", \"else\", \"return\", \"case\", and operators such as \"==\", \"!=\", \".\", \"+\", \"=\", \";\", \"&&\", \"||\", and parentheses are used for control flow and conditional logic.  The presence of objects, methods (e.g., equals, matches, get, evaluate), and data structures (e.g., arrays, lists) indicates object-oriented programming practices.  The frequent use of equality checks (\"equals\", \"==\", \"!=\") suggests comparisons and data validation.  The code snippets demonstrate various programming patterns and techniques within the C# language."
    }
  },
  {
    "c448": {
      "Unique tokens": [
        "Node",
        "separatorIndex",
        "df",
        "corrected",
        "nBreaks",
        "BitSet",
        "StringBuilder",
        "startIndex",
        "Collection",
        "b",
        "idx",
        "numTerms",
        "IndexRevision",
        "HashMap",
        "<",
        "long",
        "hash",
        "nTabs",
        "short",
        "modified",
        "ruleIndex",
        ")",
        "ord",
        "HashSet",
        "int",
        "length",
        "cell",
        "Path",
        "find",
        "buffer",
        "Integer",
        "result",
        "Float",
        "sz",
        "pos",
        "reserve",
        "if",
        "ff",
        "offset",
        "data",
        "base",
        "try",
        "URIish",
        "Cell",
        "args",
        "len",
        "SimpleDateFormat",
        "Row",
        "ix",
        "[",
        "exit",
        "Arrays",
        "end",
        "ArrayList",
        "Bound",
        "iterations",
        "added",
        "byte",
        "Object",
        "float",
        ">=",
        "ref",
        "code",
        "ttype",
        "snapshot",
        "s",
        "Checksum",
        "popCount",
        "t",
        "size",
        "double",
        "cur",
        "synchronized",
        "for",
        "Token",
        "Map",
        "p",
        "color",
        "boolean",
        "LittleEndian",
        "slice",
        ".",
        "return",
        "char",
        "dir",
        "bytes",
        "index",
        "eol",
        "new",
        "k",
        "actualSize",
        "Pair",
        "mem",
        "st",
        "setSize",
        "Set",
        "v",
        "ret",
        "previous",
        "width",
        "field",
        "add",
        "=",
        "Slice",
        "Comparable",
        "sheetIndex",
        "final",
        "while",
        "Entry",
        "writeInt",
        "next",
        "rval",
        "assert",
        "lock",
        "(",
        "ixDiff",
        "write",
        "o",
        "curFP",
        "File",
        "state",
        "gen",
        "diff",
        "i",
        "clear",
        "checkRange",
        "n",
        "Long",
        "w",
        "message",
        "sort",
        ";",
        "Iterator",
        "State",
        "Color",
        "err",
        "sc",
        "row",
        "res",
        "min",
        "cmp",
        "r",
        "oldSize",
        "sum",
        "List",
        "c",
        "System",
        "cached",
        "mutex",
        "{",
        "current",
        "]",
        "carry",
        "widthInteger",
        "sub",
        "wasNull",
        "value",
        "count",
        "Constants",
        "rv",
        "T",
        "rowKey",
        "Double",
        "contains",
        "a",
        "super",
        "fillColor",
        "String",
        "other"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c449": {
      "Unique tokens": [
        "",
        "_firstColumn",
        "stop",
        "off",
        "bufferLeft",
        "subStart",
        "startIndex",
        "minCol",
        "la",
        "b",
        "idx",
        "secondaryProgress",
        "++",
        "docFreq",
        "MAX_RECORD_LENGTH",
        "colOffsetIx",
        "2",
        "bufferStartIndex",
        "termUpto",
        "gt",
        "ptr",
        "resLen",
        "<",
        "blockSize",
        "basis",
        "currentSentence",
        "firstCol",
        "k1",
        "toIndex",
        "mMax",
        "sizeIsValid",
        ")",
        "ord",
        "mid",
        "expectedModCount",
        "length",
        "bufferUpto",
        "rcIx",
        "modCount",
        "rowOffsetIx",
        "maxBufferedBlocks",
        "blockLeft",
        "result",
        "getLastRow",
        "oLastRow",
        "-",
        "bytesRemaining",
        "reserved",
        "oldlen",
        "sz",
        "pos",
        "mDuration",
        "oLastCol",
        "if",
        "offset",
        ",",
        "termFreq",
        "valStart",
        "eof",
        "recSize",
        "tokenIndex",
        "rowNumber",
        "endIdx",
        "_firstColumnIndex",
        "endIndex",
        "_firstRow",
        "getFirstRow",
        ">",
        "len",
        "remainingInBlock",
        "thisDouble",
        "stopIndex",
        "waitingGen",
        "[",
        "<=",
        "k2",
        "getIndex",
        "separatorChar",
        "pos2",
        "stopAt1",
        "currPtr",
        "end",
        "read",
        "==",
        "otherFloat",
        "arg3",
        "crB",
        "currentExternSheetIndex",
        "byte",
        "otherDouble",
        "srcCellCol",
        "byteCount",
        ">=",
        "byteOffset",
        "retLen",
        "lo",
        "startDateVal",
        "is16bit",
        "trim",
        "bytesWritten",
        "minRow",
        "s",
        "true",
        "compareRemaining",
        "upto",
        "size",
        "toCopy",
        "1",
        "|=",
        "double",
        "returnState",
        "firstRow",
        "nextPos",
        "msgE",
        "p",
        "srcCellRow",
        "averageBytesPerChar",
        "srcRowIndex",
        "currentCharIndex",
        "searchingGen",
        "changeSkip",
        "firstTabIndex",
        "currentBlock",
        "newBuffer",
        ".",
        "otherInt",
        "throw",
        "bytes",
        "index",
        "prevPtr",
        "sid",
        "new",
        "binaryExponent",
        "+",
        "isRelevant",
        "firstInPath",
        "_currentRowIndex",
        "delta",
        "thisPos",
        "col",
        "bufferOffset",
        "externalWorkbookNumber",
        "msLeft",
        "shortRecord",
        "pow10",
        "intUpto",
        "previous",
        "lt",
        "width",
        "-=",
        "blockIndex",
        "posStart",
        "=",
        "getOffset",
        "backIndex",
        "sheetIndex",
        "firstCh",
        "otherLong",
        "maxRow",
        "oFirstRow",
        "next",
        "thisFloat",
        "key",
        "nextIndex",
        "oFirstCol",
        "specLen",
        "endDateVal",
        "(",
        "d",
        "fieldsStream",
        "shift",
        "getEndIndex",
        "i",
        "cnt",
        "bAvail",
        "bytesLeft",
        "getBufferStartIndex",
        "nextWrite",
        "maxMS",
        "n",
        "getStartOffset",
        "sampleSize",
        "fromIndex",
        "curChar",
        "ri",
        "0xFFFF",
        "getNumMatches",
        ";",
        "hi",
        "\"",
        "valueCount",
        "firstChar",
        "at",
        "checkCancelAt",
        "linkSize",
        "output1",
        "sc",
        "colorDistance",
        "maxVersion",
        "row",
        "location",
        "output2",
        "crA",
        "newSize",
        "byteUpto",
        "0",
        "removalIdx",
        "rowIndex",
        "requiresSeek",
        "sIx",
        "start",
        "r",
        "newLen",
        "maxCol",
        "System",
        "}",
        "ch",
        "otherPos",
        "setCharAt",
        "mSize",
        "{",
        "li",
        "msgB",
        "styleIndex",
        "tailBlkIdx",
        "srcColumnIndex",
        "y",
        "totalTermFreq",
        "]",
        "line",
        "+=",
        "remaining",
        "thisSheetRefIndex",
        "replaceChar",
        "&",
        "pos1",
        "sheetNumber",
        "_lastColumnIndex",
        "bufferPosition",
        "0.0f",
        "mSecondaryProgress",
        "value",
        "count",
        "column",
        "invokingState",
        "BYTE_BLOCK_MASK",
        "lastSheetIndex",
        "firstSize",
        "firstSheetIndex",
        "skip",
        "valEnd",
        "lastPosition",
        "columnIndex",
        "endInclusive",
        "otherByte",
        "..",
        "a",
        "intOffset",
        "lastRow",
        "left",
        "writeBytes"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c450": {
      "Unique tokens": [
        ".",
        "try",
        "return",
        "E",
        "writer",
        "finally",
        "Class",
        "ObjectStream",
        "out",
        "<",
        "{",
        "flushInternal",
        "decompressor",
        "response",
        "line",
        "final",
        "while",
        "this",
        "toSync",
        ")",
        "buf",
        "do",
        "(",
        "dictionaries",
        "result",
        "catch",
        "in",
        "for",
        "String"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Exception Handling",
        "File I/O",
        "Data Structures",
        "Control Flow",
        "Object Serialization"
      ],
      "Description": "The tokens represent a wide range of C# language features.  'try', 'catch', and 'finally' are keywords for exception handling. 'return' is used to return values from methods. '.' is the dot operator for member access. 'writer', 'ObjectStream', 'InputStream', 'OutputStream' suggest file I/O operations and object serialization.  'for', 'while', 'do', 'if' are control flow statements.  'List', 'Map', 'Collection', 'byte[]', 'String' are data structure types.  The code snippets demonstrate common C# programming patterns, including exception handling, resource management, and data processing."
    }
  },
  {
    "c451": {
      "Unique tokens": [
        "java",
        "]",
        "equals",
        "arrayOffset",
        ")",
        "RecognitionException",
        "getValue",
        "readUTF",
        "(",
        "toString",
        "equalsSameType"
      ],
      "Syntactic Label": "Method",
      "Semantic Tags": [
        "Object Serialization",
        "Method Invocation",
        "String Manipulation",
        "Exception Handling",
        "Data Transformation"
      ],
      "Description": "The tokens represent methods commonly used in C# for object manipulation, string handling, and exception management.  `toString` is frequently used for debugging and logging. `equals` and `equalsSameType` are used for object comparison.  `getValue`, `readUTF`, and `arrayOffset` suggest data access and transformation. `RecognitionException` indicates exception handling within a parsing or lexical analysis context. The square brackets `]` likely denote array access or collection indexing."
    }
  },
  {
    "c452": {
      "Unique tokens": [
        "\"",
        "Access",
        "JGitText",
        "offset",
        "",
        "Bad",
        "null",
        ",",
        "Illegal",
        "replacement:",
        ".",
        "useless",
        "to",
        "tokenStream",
        "min",
        "bytes",
        "Length",
        "ioe",
        "missing",
        "Buckets",
        "Capacity:",
        "max",
        "grams",
        "The",
        "getMessage",
        "maxLevels",
        "format",
        "cannot",
        "out",
        "Specified",
        "PREFIX_LENGTH_KEY",
        "MessageFormat",
        "Clipboard",
        "segments",
        "Unknown",
        "requested",
        "is",
        "notEnoughHeap",
        "First",
        "Expected",
        "Geohash",
        "Pushback",
        "e",
        "Unexpected",
        "seek",
        ")",
        "name",
        "fst",
        "TokenStream",
        "parameter(s):",
        "Asked",
        "Missing",
        "length",
        "lastSheetIndex:",
        "str",
        "(",
        "value",
        "Mismatch",
        "parens:",
        "Configuration",
        "buffer",
        "maxExpansions",
        "Invalid",
        "toMerge",
        "must",
        "block",
        "warning:",
        "String",
        "maxEdits",
        "function:",
        ";",
        "type"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Exception Handling",
        "Object Creation",
        "Data Structures",
        "Input/Output Operations",
        "Program Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords, operators, identifiers, and special characters.  The context sentences show these tokens being used in various programming constructs such as method definitions, exception handling (using try-catch blocks and throwing exceptions), object creation (using 'new'), data structure manipulation (e.g., arrays, lists, maps), and input/output operations. The semantic tags highlight the key functionalities and purposes of the code snippets, emphasizing the importance of robust error handling, efficient data management, and clear control flow in C# programming."
    }
  },
  {
    "c453": {
      "Unique tokens": [
        "",
        "newDoc=",
        "byteToHex",
        "b",
        "vs",
        "bufferStartIndex",
        "file=",
        "<",
        "long",
        "else",
        "matchelements=",
        "append",
        ")",
        "maxWordLen",
        "maxCharsPerByte",
        "toHexString",
        "buffer",
        "Integer",
        "-",
        "checkUnprotectedFormulas",
        "must",
        "small",
        "getLink2",
        "if",
        "offset",
        "OR",
        "limit",
        ",",
        "not",
        "sb",
        "of",
        "_grbitSub",
        "args",
        "maxLevels",
        "[",
        "getDbcellAt",
        "\\t",
        "maxBytesPerChar",
        "*",
        "there's",
        "after",
        "ex",
        "checkNotClosed",
        "this",
        "name",
        "getDeltaBase",
        "actual=",
        "\\\"",
        "Version",
        "prefixLength",
        "path=",
        "current=",
        "output",
        "shortToHex",
        "target=",
        "subrecord",
        "getTypeName",
        "_tabids",
        "_externalBookBlocks",
        ".",
        "length=",
        "throw",
        "bufferSize=",
        "RECORD]",
        "sid",
        "bytes",
        "getAlternateExpression",
        "new",
        "k",
        "+",
        "position=",
        "st",
        "password",
        "header",
        "is",
        "v",
        "readByte",
        "toString",
        "=",
        "longer",
        "rate",
        "CFHeader12Record",
        "(",
        "should",
        "i",
        "in",
        "decrement",
        "buffer:",
        "no",
        "clazz",
        "w",
        "getText",
        "[FEATURE",
        ";",
        "\"",
        "AND",
        "shared",
        "TO",
        "toHex",
        "out",
        "or",
        "r",
        "}",
        "leq",
        "{",
        "field_4_string_len",
        "maximum",
        "numPoints",
        "e",
        "]",
        "field_2_ixals",
        ":",
        "remaining",
        "instead",
        "fSD",
        "finish",
        "\\n",
        "lastSheetIndex",
        "->",
        "getLastRowAdd1",
        "subs:",
        "CFHeaderRecord",
        "starts",
        "array",
        "HexDump"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Object Creation",
        "Conditional Statements",
        "String Manipulation",
        "Exception Handling",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide range of C# language features.  They include keywords for control flow (if, else), object creation (new), operators (+, -, =, ==, !=, <, >, etc.), string manipulation (append, toString, StringBuilder), and exception handling (throw).  The semantic tags reflect the common operations performed in the provided code snippets, which involve creating and manipulating objects, using conditional logic, handling exceptions, and working with various data structures such as arrays, lists, and maps."
    }
  },
  {
    "c454": {
      "Unique tokens": [
        "usedToolPacks",
        "alt",
        "errCode",
        "Math",
        "analyzer",
        "blockSize",
        ")",
        "joinQuery",
        "currentTokenVal",
        "list",
        "MessageImpl",
        "PER_FIELD_REUSE_STRATEGY",
        "repo",
        "config",
        "setParams",
        ",",
        "spContainer",
        "args",
        "MessageFormat",
        "BufferedChecksumIndexInput(",
        "false",
        "ref",
        "delegate",
        "Term",
        "evaluator",
        "resourceDesc",
        "true",
        "target",
        "anchor",
        "size",
        "initialise",
        "exc",
        "firstRow",
        "ae",
        "operator",
        "ruleStart",
        ".",
        "credentials",
        "runData",
        "new",
        "searcher",
        "id",
        "match",
        "clauses",
        "parser",
        "regions",
        "=",
        "maxDoc",
        "bookEvaluator",
        "(",
        "File",
        "state",
        "recognizer",
        "in",
        "term",
        ";",
        "type",
        "\"",
        "ps",
        "row",
        "setShapeType",
        "Format",
        "doc",
        "input",
        "tenum",
        "format",
        "out",
        "or",
        "c",
        "lexer",
        "reason",
        "atn",
        "parent",
        "calculateHashCode",
        "profile",
        "setConfig",
        "dedup",
        "detailMessage",
        "onlySheetIndex",
        "propertyNumber",
        "super",
        "other"
      ],
      "Syntactic Label": "Constructor parameters, Object, Method parameters, Member variables, Method calls, Dot operator, Assignment operator,  Opening Parenthesis (, Closing Parenthesis ), Semicolon ;",
      "Semantic Tags": [
        "Object Instantiation",
        "Inheritance",
        "Exception Handling",
        "Factory Pattern",
        "Parameter Validation"
      ],
      "Description": "The tokens represent various syntactic elements in C# code, primarily focused on constructors and methods.  The frequent use of 'super' indicates inheritance, while numerous 'IllegalArgumentException' throws highlight parameter validation.  The pattern of factory methods (e.g.,  'XXXFactory') is also evident.  The tokens illustrate common C# practices for object creation, inheritance, error handling, and design patterns."
    }
  },
  {
    "c455": {
      "Unique tokens": [
        "_formats",
        "appendValueText",
        "setTitle",
        "getYPosition",
        "7",
        ".address",
        "formatAsString",
        "Clipboard",
        "FreeRefFunction",
        "[/BOUNDSHEET]",
        "append",
        ")",
        "int",
        "_lastrow",
        "_linkOpts",
        "length",
        ".targetFrame=",
        "toHexString",
        "buffer",
        "Integer",
        "[/DVAL]",
        "field_6_res",
        "-output",
        "olevel",
        ".iObjectInstance1=",
        "rawData=",
        "getDeltaDepth",
        "if",
        ",",
        "sb",
        "unused",
        "[/CHARTFRTINFO]",
        "getTargetFrame",
        "ptgs",
        "setProtect",
        "getProperty",
        "Functions",
        "field_4_isMultibyteUnicode",
        ".outline_level=",
        "shortToHex",
        ".",
        "return",
        "new",
        "k",
        "+",
        "dim",
        "font",
        "toString",
        "0x",
        "=",
        "getRowLevelMax",
        "cr",
        "bytesPerArc",
        "grbit",
        "(",
        "highlightForeground",
        "!=",
        ";",
        "\"",
        "wmfImage",
        "nSheets=",
        ".autoPosition",
        "setString",
        "field_10_colInputCol",
        "References]",
        "getRVAType",
        "Format",
        "0",
        "toHex",
        "r",
        ".name",
        "'",
        "}",
        "{",
        "field_3_hasMultibyte",
        "]",
        "field_9_rowInputCol",
        "&",
        "\\n",
        "plink",
        "getXFIndex",
        "8",
        "HexDump"
      ],
      "Syntactic Label": "String Manipulation and Data Representation",
      "Semantic Tags": [
        "Data Serialization",
        "String Formatting",
        "Hexadecimal Conversion",
        "Data Structures",
        "Object Representation"
      ],
      "Description": "The tokens represent a combination of C# language elements involved in string manipulation, data representation, and formatting.  The code uses StringBuilder objects to construct strings, often representing data in hexadecimal format using a HexDump utility.  The tokens include keywords (if, return, new), operators (+, =, .), identifiers (buffer, append, toHex, toHexString, shortToHex, etc.), and literals (numbers, strings). The overall purpose is to create string representations of various data structures and objects for debugging or output purposes.  The frequent use of StringBuilder suggests efficiency in string concatenation. The semantic tags reflect the core functionalities observed in the code snippets."
    }
  },
  {
    "c456": {
      "Unique tokens": [
        "switch",
        "it",
        ".",
        "j",
        "0",
        "copied",
        "ip",
        "<",
        "{",
        "read",
        "toMergeItr",
        "=",
        "short",
        "line",
        "itr",
        "final",
        "while",
        "int",
        "length",
        "assert",
        "br",
        "do",
        "true",
        "(",
        "File",
        "raw",
        "i",
        "for",
        "rs"
      ],
      "Syntactic Label": "C# Keywords, Identifiers, Operators, and Punctuation",
      "Semantic Tags": [
        "Control Flow",
        "Array Manipulation",
        "Assertion",
        "Iteration",
        "File Processing"
      ],
      "Description": "The tokens represent a mix of C# keywords (switch, while, for, do, if, assert), identifiers (e.g., fromIndex, toIndex, valuesPerBlock, blocks, etc.), operators (e.g., =, +, %, /, <<, |, etc.), and punctuation (e.g., ., (, ), {, }, [, ], etc.).  These tokens are used in various code snippets that perform array manipulation, control flow using loops and conditional statements, assertions for validating conditions, and file processing (File object). The code demonstrates fundamental programming concepts in C# and is likely part of a larger system performing data processing or algorithm implementation."
    }
  },
  {
    "c457": {
      "Unique tokens": [
        "",
        "getErrorEval",
        "EvaluationException",
        "OutOfMemoryError",
        "th",
        "IllegalAccessException",
        "CloneNotSupportedException",
        "InvalidMarkException",
        "ConcurrentModificationException",
        "QueryNodeException",
        "InterruptedIOException",
        "RecordFormatException",
        "NegativeArraySizeException",
        "UncheckedIOException",
        "se",
        "readTimedOut",
        "BufferUnderflowException",
        ")",
        "Operator",
        "AlreadyClosedException",
        "InvocationTargetException",
        "apache",
        "length",
        "str",
        "Exception",
        "org",
        "tooBig",
        "MessageImpl",
        "ArrayIndexOutOfBoundsException",
        "StopWalkException",
        "x",
        "TimeExceededException",
        "NoSuchElementException",
        "if",
        "OR",
        "null",
        ",",
        "InputStreamReader",
        "getTargetException",
        "uri",
        "from=",
        "margin(",
        "getName",
        "MessageFormat",
        "ex",
        "Pushback",
        "InvalidObjectIdException",
        "ErrorEval",
        "nsae",
        "status",
        "getClass",
        "UnexpectedPropertySetTypeException",
        "thrown",
        "IllegalArgumentException",
        "BufferOverflowException",
        "writeTimedOut",
        "NoSuchMethodException",
        ".",
        "IOException",
        "new",
        "bogus",
        "id",
        "getEntryObjectId",
        "maxTokenCount",
        "INSTANCE",
        "=",
        "final",
        "(",
        "HPSFException",
        "INVALID_LEXICAL_STATE",
        "BytesRefSorter",
        "catch",
        "TransportException",
        "op",
        ";",
        "\"",
        "JGitText",
        "AND",
        "err",
        "CorruptIndexException",
        "ioe",
        "Reader",
        "getMessage",
        "}",
        "IndexOutOfBoundsException",
        "operation",
        "{",
        "e",
        "Throwable",
        "csn",
        "cns",
        "EmptyStackException",
        "NoSuchFileException",
        "arrayIndexOutOfBoundsException",
        "value",
        "URISyntaxException",
        "poi",
        "String",
        "unchecked"
      ],
      "Syntactic Label": "Exception Handling and Control Flow",
      "Semantic Tags": [
        "Exception Handling",
        "Input Validation",
        "Resource Management",
        "Control Flow",
        "Object Creation"
      ],
      "Description": "The tokens represent various C# exceptions, keywords for control flow (if, catch), operators (=,.), and other elements related to exception handling and object creation.  The code snippets demonstrate input validation, often throwing exceptions if invalid parameters are provided.  There is also resource management (e.g., closing streams) and control flow using if statements and exception handling blocks.  The semantic tags reflect these aspects of the code."
    }
  },
  {
    "c458": {
      "Unique tokens": [
        "getType",
        "getProtocol",
        "peekNextClass",
        "LT",
        "asList",
        "getBytes",
        "setLength",
        "equalsIgnoreCase",
        "getValue",
        "grow",
        "hasArray",
        "append",
        ")",
        "length",
        "cell",
        "matcher",
        "getSimpleName",
        "maxCharsPerByte",
        "find",
        "isNaN",
        "toHexString",
        "entrySet",
        "allocate",
        "reserved",
        "isSet",
        "println",
        "getKey",
        "toLowerCase",
        "abs",
        "getName",
        "getIndex",
        "isCancelled",
        "read",
        "getMethod",
        "getBeginIndex",
        "keySet",
        "Term",
        "label",
        "exactRef",
        "hashCode",
        "emptyList",
        "pre",
        "LA",
        "getClass",
        "class",
        "compare",
        "isExpired",
        "resolve",
        "charAt",
        ".",
        "isNil",
        "toUpperCase",
        "intValue",
        "+",
        "doubleValue",
        "accept",
        "equals",
        "isInfinite",
        "wrap",
        "startsWith",
        "toString",
        "isReadOnly",
        "isEmpty",
        "getCol",
        "next",
        "(",
        "endsWith",
        "fill",
        "valueOf",
        "getEndIndex",
        ";",
        "getFileName",
        "getSuperclass",
        "indexOf",
        "format",
        "get",
        "getRow",
        "'",
        "{",
        "readLine",
        "nextToken",
        "getChildById",
        "remaining",
        "hasMoreTokens",
        "iterator",
        "assertNotStarted",
        "pop",
        "hasNext",
        "value",
        "contains",
        "unlock",
        "replaceAll",
        "other",
        "compareTo"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Method Calls",
        "Object Manipulation",
        "String Operations",
        "Collection Handling",
        "Data Processing"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including method calls (e.g., getType, getProtocol, equalsIgnoreCase), object manipulations (e.g., ., ),), collection handling (e.g., asList, iterator, isEmpty), and string operations (e.g., append, toLowerCase, toUpperCase, replaceAll).  These tokens and their usage within the provided code snippets demonstrate various aspects of C# programming, such as object-oriented programming, data structures, and string manipulation. The semantic tags reflect the common functionalities observed in the code examples."
    }
  },
  {
    "c459": {
      "Unique tokens": [
        "lenbuffer",
        "unused1",
        "removeRange",
        "paths",
        "_modeStack",
        "setSlaveInstanceType",
        "setPrivateKey",
        "_columnIndex",
        "setFilterPattern",
        "toArray",
        "?",
        "setSSLCertificateId",
        "setMetricTransformations",
        "setStatus",
        "setPolicyDocument",
        "_constraint",
        "setItems",
        "setCookieName",
        "setKeySchema",
        "setIfMatch",
        "person",
        "root",
        "setPublicIp",
        "expand",
        "setLoadBalancerPort",
        ")",
        "setEnableDate",
        "setQueryNodeProcessor",
        "setAccessKeyId",
        "set",
        "length",
        "LF",
        "setJobFlowId",
        "buf",
        "setOptionSettings",
        "setDevice",
        "buffer",
        "setAttributeValue",
        "setEntries",
        "setFilterName",
        "setVisibilityTimeout",
        "setCacheParameterGroupFamily",
        "list",
        "field_2_denominator",
        "allocate",
        "setAuthenticateOnUnsubscribe",
        "setSubject",
        "println",
        "if",
        "setToken",
        "setValue",
        "data",
        "setSysAcceptFormat",
        "setLogStreamName",
        ",",
        "setCertificateBody",
        "print",
        ">",
        "setExpected",
        "setPolicyName",
        "setIpPermissions",
        "setAttributeName",
        "prefixGridScanLevel",
        "setDescription",
        "end",
        "setRetentionInDays",
        "setEndpoint",
        "builder",
        "setJobId",
        "setSubmittedAt",
        "readCoordinates",
        "_height",
        "retval",
        "singleRef",
        "setProtocol",
        "setProtect",
        "this",
        "setAttributes",
        "_rowWrappingMask",
        "setVaultNotificationConfig",
        "setExecutionStatusDetail",
        "setRange",
        "field_2_subex_len",
        "setPublicKeyMaterial",
        "for",
        "SwitchTo",
        "setInstanceId",
        "setInitialSeekTerm",
        "setStatements",
        "setSecretAccessKey",
        "complexData",
        "field_4_rk_number",
        ".",
        "return",
        "setId",
        "throw",
        "setEnabled",
        "source",
        "exportDirectory",
        "startPtr",
        "_offset",
        "_countBytesWritten",
        "setConsistentRead",
        "flushOnEnd",
        "append0",
        "equals",
        "field_4_value",
        "setBgpAsn",
        "setExternSheetIndex",
        "addProperty",
        "field_2_current_country",
        "_value",
        "setCustomerGatewayId",
        "initCause",
        "setLogEvents",
        "add",
        "setInstancePort",
        "=",
        "insertSST",
        "_funcMap",
        "_startOffset",
        "key",
        "field_2_options",
        "setMinCount",
        "(",
        "fill",
        "setArgs",
        "state",
        "errorCode",
        "checkBufferSize",
        "unused2",
        "setArchiveId",
        "n",
        "_rawData",
        "/",
        "mode",
        ";",
        "type",
        "tsMilliseconds",
        "convertRawBytesToEscherRecords",
        "path",
        "setMaxCount",
        "setVaultName",
        "0",
        "_options",
        "setComplexData",
        "get",
        "start",
        "setDBParameterGroupFamily",
        "c",
        "System",
        "}",
        "setInstanceCount",
        "setInstanceType",
        "{",
        "setMessage",
        "field_4_sst_index",
        "setType",
        "setReceiptHandle",
        "current",
        ":",
        "setExportAll",
        "filepatterns",
        "field_2_first_col",
        "&&",
        "entry",
        "month",
        "setItemName",
        "checkComponents",
        "field_2_zero",
        "field_2_row_height",
        "value",
        "setSerialNumber",
        "setExists",
        "_index",
        "fieldsData",
        "super",
        "setDestination"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c460": {
      "Unique tokens": [
        "UnsupportedEncodingException",
        "ConnectException",
        "err",
        "IOException",
        "EvaluationException",
        "ClientException",
        "NumberFormatException",
        "ioe",
        "ce",
        "bogus",
        "IndexOutOfBoundsException",
        "{",
        "NoSuchAlgorithmException",
        "IllegalCharsetNameException",
        "ex",
        "e",
        "error",
        "NoMoreDataException",
        "Throwable",
        "CharacterCodingException",
        ")",
        "NoSuchFileException",
        "(",
        "nsae",
        "Exception",
        "URISyntaxException",
        "e1",
        "catch",
        "ArrayIndexOutOfBoundsException",
        "SecurityException",
        "ie",
        "IllegalArgumentException",
        "NoSuchElementException"
      ],
      "Syntactic Label": "Exception Types and Handling",
      "Semantic Tags": [
        "Exception Handling",
        "Error Management",
        "Runtime Exceptions",
        "Resource Management",
        "Input Validation"
      ],
      "Description": "These tokens represent various exception types in C#, commonly encountered during program execution.  The context shows that they are primarily used within `catch` blocks to handle potential errors, ensuring program robustness and graceful failure.  The exceptions cover a wide range of scenarios, from file I/O issues (`IOException`, `NoSuchFileException`) to data format problems (`NumberFormatException`, `IllegalCharsetNameException`) and invalid operations (`IndexOutOfBoundsException`, `IllegalArgumentException`).  The use of `catch` blocks with specific exception types allows for targeted error handling, improving the application's reliability and providing more informative error messages."
    }
  },
  {
    "c461": {
      "Unique tokens": [
        "public",
        "StringWriter",
        "BufferedWriter",
        "final",
        "synchronized",
        "GC",
        "Ole10Native"
      ],
      "Syntactic Label": "Access Modifiers and Class Names",
      "Semantic Tags": [
        "Object Initialization",
        "Class Declaration",
        "Access Control",
        "Constructor Definition",
        "Object Creation"
      ],
      "Description": "The tokens 'public' is an access modifier in C#, controlling the visibility of classes and methods.  'StringWriter', 'BufferedWriter', and 'Ole10Native' appear to be class names, while 'final' and 'synchronized' are keywords related to object mutability and thread safety. 'GC' likely refers to garbage collection. The context sentences show these tokens used in constructor definitions, indicating object initialization and creation."
    }
  },
  {
    "c462": {
      "Unique tokens": [
        "to",
        "getSaveLinkValues",
        "getLastIndex",
        "getCalcMode",
        "field_2_sheet_table_index",
        "field_1_password",
        ".engineId",
        "append",
        ")",
        "[/LeftMargin]",
        "int",
        "length",
        "child",
        "toHexString",
        "buffer",
        "Integer",
        "sequence",
        "[/COUNTRY]",
        "colornum",
        "_colors",
        "if",
        "[/INTERFACEHDR]",
        "null",
        ",",
        "sb",
        "[/WRITEACCESS]",
        "[/CONTINUE",
        "[",
        "[/TopMargin]",
        "Arrays",
        "==",
        "[/WINDOWPROTECT]",
        "this",
        "name",
        "PColor",
        "getColWidth",
        "getCount",
        "[/SXVS]",
        "field_2_subex_len",
        "[/PASSWORD]",
        "[/FOOTER]",
        "size",
        "maxThreadCount",
        "getMode",
        "getString",
        "shortToHex",
        "[/BottomMargin]",
        "[/PROTECT]",
        ".",
        "return",
        "line.separator",
        "newline",
        "new",
        "+",
        "getCodepage",
        "[/PROT4REV]",
        "_offset",
        "maxMergeCount=",
        "nl",
        "[/SeriesToChartGroup]",
        "getVCenter",
        "toString",
        "=",
        "doAutoIOThrottle",
        "(",
        "[/FtCf",
        "[/USESELFS]",
        "i",
        "record",
        "getOptionFlags",
        "getText",
        "getHideObj",
        "_rawData",
        "[/PROT4REVPASSWORD]",
        ";",
        "!=",
        "\"",
        "[/DELTA]",
        "res",
        "[/UNCALCED]",
        "0",
        "ADD",
        "_options",
        "getWindowing",
        "getRow",
        "get",
        "r",
        "toHex",
        "c",
        "System",
        "}",
        "'",
        "{",
        "text",
        "_firstSheetIndex",
        "]",
        ":",
        "getDefaultCountry",
        "[/FtPioGrbit",
        "[/SERTOCRT]",
        "count",
        "sheetIx=",
        "\\n",
        "ti",
        "operands",
        "[/HEADER]",
        "HexDump"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "String Manipulation",
        "Data Serialization",
        "Object Serialization",
        "File Processing",
        "Data Structures"
      ],
      "Description": "The tokens represent a wide variety of C# language elements, including keywords (if, return, new), operators (+, =, ==, !=, .), data types (int, String, byte[], StringBuilder), methods (append, toString, get, serialize, toHex, etc.), and identifiers (variables, fields, class names).  These are used in various contexts, such as string manipulation using StringBuilder, object serialization (byte[]), file processing (Path), and data structure manipulation (Arrays). The frequent use of StringBuilder indicates a focus on efficient string concatenation.  The presence of serialization methods suggests the code deals with persisting or transmitting data. The overall semantic significance is the management and manipulation of data, likely within a larger application or system."
    }
  },
  {
    "c463": {
      "Unique tokens": [
        "_formats",
        "targetNext",
        "getFormat",
        "isDisplayAsPercentage",
        "_data",
        "append",
        ")",
        "getColumn",
        "_range",
        "maxWordLen",
        "originalText",
        "length",
        "s=",
        "buffer",
        "Integer",
        "getVerifier",
        "getEntryFileMode",
        "fieldName",
        "_colors",
        ".wOffset",
        "if",
        "runTimeSec",
        "null",
        ",",
        "sb",
        "eof",
        "[/Pattern",
        "getOptions",
        "[",
        "getSheetName",
        "isVerticalBorder",
        "getRange",
        "maxMergeSize",
        "==",
        "field_2_option_flags",
        "sections:",
        "retval",
        "name",
        "EXHAUST",
        "NumberFormat",
        "</span>",
        "\\\"",
        ".buildyear=",
        "collapsed=",
        "for",
        ".formatstring",
        "shortToHex",
        "p",
        "l=",
        "firstSheetName",
        "tag",
        "_tabids",
        "getXPosition",
        ".",
        "return",
        ".column",
        "k",
        "field_5_flags",
        "maxMergeSizeForForcedMerge=",
        "toString",
        "=",
        "getResult",
        "getTag",
        ".char_offset=",
        "(",
        "write",
        ".xf_index",
        "i",
        "field_1_row",
        "!=",
        "at",
        ";",
        "\"",
        ".unused",
        "edge",
        "field_5_reserved",
        "0",
        "[/SXDI]",
        "'",
        "}",
        ".shapeid=",
        "]",
        ":",
        "&",
        "\\n",
        "[/FRAME]",
        ".df",
        "..",
        "getXFIndex",
        "starts",
        "HexDump"
      ],
      "Syntactic Label": "StringBuilder Object and its methods, Operators, and other tokens",
      "Semantic Tags": [
        "String Manipulation",
        "Data Representation",
        "Object Serialization",
        "Hexadecimal Conversion",
        "Conditional Logic"
      ],
      "Description": "The tokens represent a collection of C# code snippets that primarily utilize the StringBuilder class to construct string representations of various data structures.  The code uses append methods to add data to the StringBuilder objects.  Operators like '=', '==', '!=', and '.' are used for assignment, comparison, and member access. Other tokens such as 'if', 'for', and control flow statements manage the logic of string construction.  Hexadecimal conversion functions (e.g., HexDump) are used to format data for display. The overall purpose is to serialize data into a human-readable string format, often for debugging or logging purposes."
    }
  },
  {
    "c464": {
      "Unique tokens": [
        "\"",
        "null",
        ",",
        "path",
        "uriPattern",
        ".",
        "return",
        "query",
        "relative",
        "setSchemeSpecificPart",
        "new",
        "+",
        "uri",
        "?",
        "opaque",
        "substring",
        "appendEncoded",
        "PATH_ENCODER",
        "if",
        "'",
        "}",
        "#",
        "equals",
        "{",
        "schemeSpecificPart",
        "startsWith",
        "normalize",
        "toString",
        "false",
        "=",
        ":",
        "append",
        ")",
        "URI",
        "fragment",
        "length",
        "authority",
        "&&",
        "relativePath",
        "(",
        "scheme",
        "1",
        "thisPath",
        "result",
        "lastIndexOf",
        "!",
        "string",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "URI Construction and Manipulation",
      "Semantic Tags": [
        "URI Parsing",
        "URI Normalization",
        "String Manipulation",
        "Object Equality",
        "Conditional Logic"
      ],
      "Description": "The tokens represent various components of a URI (Uniform Resource Identifier), including scheme, authority, path, query, and fragment.  The code demonstrates the construction of URIs from their components, comparison of URIs for equality, and the creation of relative URIs.  The use of StringBuilder for efficient string manipulation, conditional logic for handling different URI components, and the normalization of paths are key aspects of the code.  The tokens also include operators and keywords that facilitate these operations, such as the dot operator for method calls, conditional statements, and assignment operators."
    }
  },
  {
    "c465": {
      "Unique tokens": [
        "\"",
        ",",
        ")",
        "(FOLLOW(",
        "NRTCachingDirectory(",
        "+"
      ],
      "Syntactic Label": "C# punctuation and method parameters",
      "Semantic Tags": [
        "API Request Construction",
        "Method Invocation",
        "Parameter Passing",
        "Object Initialization",
        "API Client"
      ],
      "Description": "These tokens represent commas, parentheses, and a method parameter within the context of constructing and invoking C# methods.  The code appears to be building API requests, where each method call likely represents a different API endpoint.  The parameters passed to the 'super' method are likely used for initializing base classes or providing metadata about the API requests. The 'NRTCachingDirectory' parameter suggests a caching mechanism is used for directory operations."
    }
  },
  {
    "c466": {
      "Unique tokens": [
        "public",
        "org",
        "byte",
        "final",
        "synchronized",
        "<"
      ],
      "Syntactic Label": "Access Modifiers and Data Types",
      "Semantic Tags": [
        "Access Control",
        "Data Type Declaration",
        "Method Declaration",
        "Object Attributes",
        "Class Member"
      ],
      "Description": "These tokens represent access modifiers (public), data types (long, boolean, byte), and keywords (final) frequently used in C# class definitions to declare methods and their attributes.  The '<' symbol is not a complete token and requires more context to determine its role."
    }
  },
  {
    "c467": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Request Object",
        "Asynchronous Operations",
        "Client-Server Interaction"
      ],
      "Description": "The opening parenthesis '(' in C# is used to define the parameter list in method declarations. In this context, it's part of method signatures that accept request objects as parameters. These methods likely represent client-side operations interacting with a server, potentially involving asynchronous operations for better performance and responsiveness."
    }
  },
  {
    "c468": {
      "Unique tokens": [
        "",
        "(null)",
        "_modeStack",
        "position",
        "new,",
        "to",
        "ERROR",
        "have",
        "version",
        "don't",
        "formatIndex",
        "only",
        "0..",
        "TokenMgrError",
        "wasn't",
        "nameIndex",
        "allocationSite",
        "getRuleNames",
        "be",
        "se",
        "uses",
        "document",
        ")",
        "getColumn",
        "length",
        "cell",
        "margin",
        "buffer",
        "result",
        "list",
        "-",
        "must",
        "from",
        "pos",
        "fileName",
        "offset",
        "null",
        ",",
        "not",
        "too",
        "args",
        "getNodeName",
        "shape",
        "[",
        "to=",
        "MessageFormat",
        "most",
        "len:",
        "end",
        "bufferPos",
        "_limit",
        "nNames",
        "this",
        "name",
        "tokens",
        "code",
        "snapshot",
        "label",
        "\\\"",
        "size",
        "that",
        "getClass",
        "Null",
        "removed",
        "_values",
        "it",
        ".",
        "return",
        "old,",
        "index",
        "PathQuerynode",
        "+",
        "MurmurHash2",
        "allowed;",
        "but",
        "delete",
        "See",
        "you",
        "is",
        "expected",
        "font",
        "bytesStart",
        "entries",
        ").",
        "field",
        "we",
        "=",
        "as",
        "range",
        "BAT",
        "sheetIndex",
        "key",
        "has",
        "(",
        "curFP",
        "i",
        "in",
        "resourceDescription",
        "errorCode",
        "n",
        "_size",
        "tokenSource",
        "message",
        "at",
        ";",
        "type",
        "\"",
        "State",
        "had:",
        "_representation",
        "E",
        "getFilePointer()=",
        "the",
        "ioe",
        "asked",
        "rowIndex",
        "getRow",
        "out",
        "}",
        "'",
        "relativeOffset",
        "Unknown",
        "e",
        "maxAgeSec",
        ":",
        "lexState",
        "size=",
        "maxrow",
        "value",
        "accessible",
        "Allowable",
        "undefined",
        "columnIndex",
        "getXFIndex",
        "contains",
        "a",
        "numfonts",
        "fieldsData",
        "other"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Exception Handling",
        "Parameter Validation",
        "Resource Management",
        "Object Serialization",
        "Data Processing"
      ],
      "Description": "The tokens represent a wide variety of C# language elements including keywords, identifiers, operators, and literals.  They are used in various methods to perform parameter validation, exception handling, resource management, object serialization, and data processing.  The frequent use of `IllegalArgumentException` and `NullPointerException` indicates a focus on robust error handling.  The presence of methods like `serialize()` and `toByteArray()` suggests data serialization is a key aspect of the code.  The overall code appears to be part of a larger library or application that processes data and handles various types of resources."
    }
  },
  {
    "c469": {
      "Unique tokens": [
        "public",
        "interface"
      ],
      "Syntactic Label": "Access Modifiers and Type Declaration Keywords",
      "Semantic Tags": [
        "Access Control",
        "Interface Definition",
        "Abstraction",
        "Object-Oriented Programming",
        "API Design"
      ],
      "Description": "In C#, 'public' is an access modifier that specifies the accessibility of a class member or type, making it accessible from any other code. 'interface' is a keyword used to declare an interface, which defines a contract for a set of methods, properties, and events that a class can implement.  These tokens are fundamental to object-oriented programming and API design in C#, enabling code modularity, abstraction, and controlled access to functionality."
    }
  },
  {
    "c470": {
      "Unique tokens": [
        ".",
        "}",
        ")",
        "(",
        ";"
      ],
      "Syntactic Label": "Punctuation Marks",
      "Semantic Tags": [
        "Method invocation",
        "Constructor definition",
        "Object instantiation",
        "API request definition",
        "Parameter delimiters"
      ],
      "Description": "These punctuation marks structure the C# code, defining method calls, constructor parameters, and statements.  The dots (.) are used for method calls and member access. Parentheses () enclose method parameters and constructor arguments. Braces {} define code blocks. Semicolons ; terminate statements.  These are fundamental to C# syntax and are crucial for the correct execution of the code, which appears to define a series of API requests."
    }
  },
  {
    "c471": {
      "Unique tokens": [
        "r_undouble",
        "label_2",
        "limit",
        "limit_backward",
        "r_cleaning",
        "v_5",
        "v_3",
        "label_3",
        "r_attached_pronoun",
        "r_postlude",
        "r_endings",
        "r_respell",
        "lab2",
        "r_verb_suffix",
        "r_residual_suffix",
        "r_consonant_pair",
        "lab0",
        ")",
        "v_4",
        "r_main_suffix",
        "v_2",
        "(",
        "cursor",
        "r_stem_noun_suffixes",
        "lab1",
        "r_stem_nominal_verb_suffixes",
        "v_1",
        "v_6",
        "r_mark_regions"
      ],
      "Syntactic Label": "Method Name, Local Variables, and Control Flow",
      "Semantic Tags": [
        "Stemming Algorithm",
        "Natural Language Processing",
        "Text Processing",
        "Finite State Machine",
        "Rule-Based System"
      ],
      "Description": "The tokens represent method names (e.g., r_undouble, r_respell) that are part of a stemming algorithm.  These methods appear to implement rules for reducing words to their root form.  The variables (v_1, v_2, etc.) store intermediate results, and the control flow (loops, conditional statements, labels) manages the execution of the stemming rules.  The overall code implements a natural language processing task, specifically stemming, using a rule-based approach.  The use of labels suggests a possible finite state machine implementation or a structured approach to applying the rules."
    }
  },
  {
    "c472": {
      "Unique tokens": [
        "",
        "range!",
        "state.",
        "and",
        "to",
        "maxTokenPosition",
        "version",
        "getWidth",
        ");",
        "suffix",
        "only",
        "end=",
        "bitsPerValue",
        "called",
        "ADDINDEXES_INPUT_DIR",
        "You",
        "firstCol",
        "be",
        "all",
        "codec",
        "close()",
        "violation:",
        ")",
        "getColumn",
        "buckets",
        "int",
        "had",
        "set",
        "length",
        "str",
        "integer",
        "formula",
        "merge",
        "Clauses",
        "buffer",
        "-",
        "supports",
        "must",
        "MAX_ROW_INDEX",
        "mismatch:",
        "if",
        "null",
        ",",
        "not",
        "getHeight",
        "of",
        "args",
        "stream",
        ">",
        "dataSize",
        "len",
        "setByteAt",
        "saw",
        "[",
        "MAX_POINTS",
        "invalidated.",
        "entry:",
        "end",
        "len.",
        "bufferPos",
        "font!",
        "after",
        "added",
        "false",
        "_cellType",
        "this",
        "lastCol",
        "created",
        "name",
        "doesn't",
        "host",
        "rows",
        "header=",
        "\\\"",
        "size",
        "Builtin",
        "that",
        "marker.",
        "firstRow",
        "error:",
        "CODEC_MAGIC",
        "file:",
        "StandardAnalyzer",
        "num",
        "!",
        "_firstCell",
        "index=",
        "it",
        ".",
        "length=",
        "return",
        "bytes",
        "index",
        "streamName",
        "found",
        "exceeded.",
        "value=",
        "+",
        "The",
        "id",
        "but",
        "match",
        "is",
        "expected",
        "name=",
        "cells",
        "entries",
        "invalid",
        ").",
        "toString",
        "=",
        "sheetIndex",
        "final",
        "HashtableEntry",
        "assert",
        "(",
        "write",
        "aborting",
        "state",
        "release",
        "fieldNumber",
        "in",
        "resourceDescription",
        "dfa",
        "build()",
        "n",
        "-bits",
        "start=",
        "/",
        "latitude",
        ";",
        "indexes",
        "\"",
        "builtInName",
        "!=",
        "had:",
        "maxVersion",
        "]is",
        "the",
        "docs,",
        "now",
        "(needs",
        "len=",
        "at:",
        "rowIndex",
        "start",
        "or",
        "}",
        "'",
        "Unknown",
        "maxCharsPerByte:",
        "_other",
        "capacity",
        "numDocs",
        "n=",
        "]",
        "files:",
        "HashMapEntry",
        "_byname",
        "Service:",
        "firstCol,",
        "number:",
        "value",
        "rc",
        "Invalid",
        "exceptions",
        "result:",
        "):",
        "fieldsData",
        "was",
        "String",
        "IndexWriter;",
        "minSize",
        "likely"
      ],
      "Syntactic Label": "C# Tokens and Syntax",
      "Semantic Tags": [
        "Exception Handling",
        "Data Structures",
        "Input/Output Operations",
        "File Processing",
        "Program Control Flow"
      ],
      "Description": "The tokens represent a wide range of C# language elements, including keywords (if, else, return, public, etc.), operators (+, -, =, !=, etc.), identifiers (method names, variable names, class names), literals (strings, numbers, booleans), and punctuation (parentheses, brackets, commas, etc.).  The context sentences show these tokens used in various programming constructs such as method definitions, exception handling (try-catch blocks, throwing exceptions), conditional statements (if-else), loops, and data structure manipulation (arrays, lists, maps).  The semantic tags highlight the overall functionality of the code snippets, which involve exception handling, using various data structures, performing input/output operations, processing files, and controlling program flow."
    }
  },
  {
    "c473": {
      "Unique tokens": [
        ")"
      ],
      "Syntactic Label": "Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Parameter List",
        "Function Definition",
        "AWS SDK",
        "API Calls"
      ],
      "Description": "The closing parenthesis ')' in C# signifies the end of a parameter list in method declarations.  In this context, it's crucial for defining the input parameters of numerous AWS SDK methods. The methods appear to be part of an AWS client library, handling various API calls for different AWS services."
    }
  },
  {
    "c474": {
      "Unique tokens": [
        "\"",
        "arraycopy",
        "err",
        ".",
        "ArrayUtil",
        "min",
        "line.separator",
        "MAX_VALUE",
        "print",
        "nanoTime",
        "Math",
        "out",
        "Collections",
        "checkOffsetAndCount",
        "System",
        "exit",
        "Arrays",
        "currentTimeMillis",
        "signal",
        "getProperty",
        ")",
        "(",
        "fill",
        "CodecUtil",
        "buffer",
        "Long",
        "Function",
        "println"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "System Utilities",
        "Input/Output",
        "Exception Handling",
        "Utility Functions"
      ],
      "Description": "The tokens represent a mix of C# keywords, operators, and library calls.  They are primarily used for array manipulation (System.arraycopy, Arrays.fill, ArrayUtil.grow), interacting with the system (System.err, System.getProperty, System.exit), handling input/output (System.out.println, System.in.read), managing exceptions (try-catch blocks, exception types), and using utility functions from various libraries (Math, Collections, CodecUtil).  These tokens and their usage are significant in C# programming for performing common tasks such as array copying, string manipulation, file system operations, and error handling."
    }
  },
  {
    "c475": {
      "Unique tokens": [
        "f",
        "queries",
        "to",
        "BitSet",
        "charCount",
        "currentCell",
        "nOther",
        "j",
        "b",
        "token",
        "h",
        "Math",
        "element",
        "++",
        "toArray",
        "?",
        "2",
        "LT",
        "ptr",
        "chars",
        "<",
        "included",
        "hash",
        "long",
        "GE",
        "lines",
        "else",
        "Interval",
        "clone",
        "break",
        "short",
        ")",
        "ord",
        "int",
        "levelW",
        "w5",
        "length",
        "buf",
        "modCount",
        "buffer",
        "result",
        "w3",
        "list",
        "currentRow",
        "DATE",
        "-",
        "x",
        "aux",
        "numskipped",
        "EOF",
        "levelH",
        "pos",
        "if",
        "GT",
        "region",
        "rhs",
        "offset",
        "data",
        "null",
        ",",
        "limit",
        "LazyAreaEval",
        "q",
        "Cell",
        "endIndex",
        "desc",
        "obj",
        ">",
        "first",
        "LE",
        "len",
        "cellIndex",
        "substring",
        "files",
        "[",
        "<=",
        "Arrays",
        "span1",
        "end",
        "*",
        "==",
        "builder",
        "values",
        "false",
        "w4",
        "byte",
        "Paths",
        "Object",
        "float",
        "last",
        ">=",
        "retval",
        "this",
        "continue",
        "elseentries",
        "elementData",
        "chunks",
        "Term",
        "carray",
        "cnstr",
        "newValue",
        "array",
        "ints",
        "l",
        "stopWords",
        "snapshot",
        "s",
        "true",
        "skipped",
        "target",
        "es",
        "popCount",
        "t",
        "_interp",
        "size",
        "1",
        "that",
        "BODY",
        "for",
        "Token",
        "intervals",
        "classmap",
        "p",
        "boolean",
        "charAt",
        "remove",
        "table",
        "it",
        "arraycopy",
        ".",
        "return",
        "char",
        "--",
        "index",
        "w2",
        "sid",
        "new",
        "k",
        "id",
        "+",
        "nl",
        "parts",
        "Set",
        "v",
        "points",
        "strkey",
        "elsedesc",
        "ret",
        "toString",
        "entries",
        "-=",
        "elements",
        "el",
        "field",
        "add",
        "=",
        "final",
        "newElements",
        "Span",
        "next",
        "rval",
        "key",
        "(",
        "rowArray",
        "tab",
        "d",
        "I",
        "written",
        "record",
        "i",
        "clear",
        "in",
        "lc",
        "_nRows",
        "n",
        "Long",
        "destPos",
        "/",
        "sort",
        "!=",
        ";",
        "Iterator",
        "\"",
        "results",
        "shared",
        "level",
        "E",
        "res",
        "max",
        "getParent",
        "input",
        "nItems",
        "0",
        "rowIndex",
        "get",
        "r",
        "start",
        "oldSize",
        "c",
        "headIterator",
        "System",
        "'",
        "}",
        "ch",
        "firstFooterLine",
        "case",
        "Character",
        "_regions",
        "{",
        "text",
        "concatenated",
        "y",
        "current",
        "dq",
        "e",
        "]",
        "+=",
        ":",
        "HashMapEntry",
        "els",
        "stack",
        "totalLength",
        "_nColumns",
        "_input",
        "H",
        "&&",
        "String",
        "entry",
        "ID",
        "rowData",
        "value",
        "m",
        "count",
        "token_source",
        "subs",
        "\\n",
        "endA",
        "a",
        "block",
        "super",
        "object",
        "other",
        "w1",
        "endB"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  },
  {
    "c476": {
      "Unique tokens": [
        "byte",
        "(",
        "]",
        "buffer",
        "[",
        "T",
        "original",
        "<",
        "..",
        "int",
        "array",
        ">",
        "RecordBase"
      ],
      "Syntactic Label": "Array Data Types and Operators",
      "Semantic Tags": [
        "Array Manipulation",
        "Data Processing",
        "Byte Stream Processing",
        "Numerical Computation",
        "Data Structures"
      ],
      "Description": "The tokens represent fundamental C# data types (byte, int, long, short, double, char, boolean) used in array contexts.  The tokens '[', ']', '(', ')', '<', '>', '.' are operators used for array access, method calls, and generic type declarations. The token 'T' suggests generic type parameters. The token 'RecordBase' indicates a custom class likely used as a data structure. The code snippets demonstrate common array operations such as iteration, element access, sorting, copying, and data manipulation within arrays of various types.  These are core concepts in C# programming, essential for handling collections of data."
    }
  },
  {
    "c477": {
      "Unique tokens": [
        "listJobs",
        "{",
        "(",
        ")"
      ],
      "Syntactic Label": "Method Name, Opening Brace, Opening Parenthesis, Closing Parenthesis",
      "Semantic Tags": [
        "Method Declaration",
        "Request Handling",
        "Result Retrieval",
        "Asynchronous Operations",
        "Resource Management"
      ],
      "Description": "The tokens represent parts of C# method declarations.  `listJobs` is a method name, `{` starts the method body, `(` and `)` enclose parameters.  The context shows a pattern of methods that likely handle requests (e.g., `ListJobsRequest`) and return results (e.g., `ListJobsResult`). This suggests a design pattern for managing requests and responses, possibly in an asynchronous or resource-intensive environment."
    }
  },
  {
    "c478": {
      "Unique tokens": [
        "PathFilter",
        "BytesRef",
        "Analyzer",
        ",",
        "Ref",
        "RevFilter",
        "Head",
        "RevCommit",
        "TreeFilter",
        "BitSet",
        "<",
        "RefSpec",
        "String",
        ">",
        "CharStream",
        "Row"
      ],
      "Syntactic Label": "Class Names and Objects",
      "Semantic Tags": [
        "Text Analysis",
        "Filter Factories",
        "Tokenization",
        "Stemming",
        "Language Processing"
      ],
      "Description": "These tokens represent classes and objects related to text analysis in C#.  They are part of filter factories used in tokenization and stemming processes for various languages.  The code snippets show the creation and configuration of these filters, often handling parameters and throwing exceptions for invalid input.  This is significant for building custom analyzers in Lucene.NET or similar text processing frameworks."
    }
  },
  {
    "c479": {
      "Unique tokens": [
        "tokenizer",
        "data",
        "this",
        ".",
        "writer",
        "allocationSite",
        "remainingBits",
        "{",
        "output",
        "reserved",
        "newline",
        "pos",
        "reset"
      ],
      "Syntactic Label": "Object, Method, Field, Dot Operator, Local Variable",
      "Semantic Tags": [
        "Object Creation",
        "Data Access",
        "Method Invocation",
        "State Management",
        "Data Processing"
      ],
      "Description": "The tokens represent a mix of object instances (tokenizer, writer, allocationSite), method calls using the dot operator (.), fields (remainingBits, pos), and local variables (output, reserved, newline, data).  These are fundamental C# language elements used for object interaction, data manipulation, and control flow within methods. The context shows getter and setter methods, object initialization, and data processing operations.  The frequent use of the dot operator indicates method calls on objects, which is a common pattern in object-oriented programming."
    }
  },
  {
    "c480": {
      "Unique tokens": [
        "off",
        "mValues",
        "f",
        "queries",
        "interpreter",
        "b",
        "idx",
        "ptr",
        "chars",
        "currentSentence",
        "sheetName",
        "ft",
        "ruleIndex",
        "set",
        "dsInf",
        "length",
        "flag",
        "Integer",
        "sequence",
        "boost",
        "walker",
        "currentRow",
        "getChildCount",
        "x",
        "aux",
        "from",
        "pos",
        "home",
        "q",
        "sb",
        "stream",
        "args",
        "blocks",
        "keys",
        "len",
        "use",
        "greedy",
        "end",
        "name1",
        "number",
        "success",
        "sentenceSplitter",
        "LA",
        "session",
        "output",
        "closer",
        "so",
        "provider",
        "iMode",
        "mods",
        "bytes",
        "split",
        "fieldBoostMap",
        "link",
        "v",
        "array1",
        "time",
        "endPosition",
        "side",
        "raw",
        "d",
        "o",
        "lastDateFormat",
        "byteBuffer",
        "term",
        "op",
        "mode",
        "newPosition",
        "type",
        "newEntry",
        "mask",
        "partition",
        "rowIndex",
        "up",
        "FileMode",
        "leq",
        "getVisibility",
        "e",
        "line",
        "&",
        "fm",
        "revision",
        "dictFile",
        "func",
        "overflow",
        "columnIndex",
        "displayName",
        "paths",
        "lastElement",
        "to",
        "charCount",
        "j",
        "elementsForKey",
        "matchedSymbol",
        "chargroup",
        "rowRecord",
        "beginB",
        "cell",
        "list",
        "disableCounting",
        "getId",
        "content",
        "fileName",
        "offset",
        "_unused",
        "cce",
        "opaque",
        "done",
        "<=",
        "selector",
        "encoderClass",
        "exists",
        "mkdir",
        "timeout",
        "fieldNames",
        "last",
        "ptgs",
        "this",
        "symbol",
        "nextTokenWithinRule",
        "lo",
        "pendingDocs",
        "numDocsWritten",
        "arrays",
        "freenode",
        "nArgs",
        "sInf",
        "listener",
        "qm",
        "slice",
        ".",
        "_validationList",
        "sid",
        "boundaryChars",
        "jt",
        "sorting",
        "ret",
        "field",
        "isEmpty",
        "container",
        "arg0",
        "key",
        "marker",
        "state",
        "nthPosition",
        "fieldNumber",
        "instanceof",
        "currentVersion",
        "path",
        "row",
        "res",
        "max",
        "getParent",
        "cmpResult",
        "context",
        "0",
        "r",
        "currentSubtree",
        "tnode",
        "src",
        "pending",
        "params",
        "text",
        "msgB",
        "outPtr",
        "fmt",
        "&&",
        "parentDir",
        "records",
        "iter",
        "value",
        "m",
        "modeDiff",
        "skipExisting",
        "Double",
        "a",
        "Context",
        "object",
        "externalRecord",
        "position",
        "token",
        "StringUtil",
        "distErr",
        "thisFont",
        "val",
        "nameName",
        "isDefaultField",
        "bitsPerValue",
        "bits",
        "<",
        "rem",
        "equalsIgnoreCase",
        "firstColumnIndex",
        "buf",
        "nr",
        "available",
        "node",
        "startOffset",
        "oldValue",
        "usedCells",
        "obj",
        ">",
        "getOptions",
        "active",
        "inputDirProp",
        "isCancelled",
        "file",
        "initCalled",
        "map",
        "_character",
        "true",
        "ordinal",
        "xptg",
        "t",
        "getClass",
        "msg",
        "status",
        "p",
        "zzBuffer",
        "dist",
        "it",
        "rawData",
        "k",
        "id",
        "OpenMode",
        "docID",
        "sheetIndex",
        "rval",
        "repetitions",
        "cache",
        "gen",
        "succeeded",
        "record",
        "sharedContextCache",
        "stringValue",
        "nextWrite",
        "n",
        "getRawMode",
        "!=",
        "recordId",
        "ENABLED",
        "lastLink",
        "RevCommit",
        "stepSize",
        "input",
        "parentIds",
        "cmp",
        "sheet",
        "protectedWords",
        "out",
        "ptg",
        "precedence",
        "isFileMode",
        "mState",
        "sheetNumber",
        "_input",
        "iterator",
        "currentRun",
        "rr",
        "shouldKeep",
        "count",
        "lastColumnIndex",
        "udf",
        "rs",
        "sqi",
        "stop",
        "mergeInfo",
        "element",
        "paramValue",
        "getChildren",
        "reader",
        "pattern",
        ")",
        "cp",
        "expectedModCount",
        "str",
        "lastDot",
        "result",
        "ctx",
        "intSet",
        "region",
        "null",
        "mp",
        "unused",
        "isneg",
        "begin",
        "currMap",
        "otherState",
        "sync",
        "probs",
        "==",
        "values",
        "er",
        "byteCount",
        ">=",
        "name",
        "getField",
        "ref",
        "pendingPairs",
        "options",
        "s",
        "perThread",
        "target",
        "size",
        "1",
        "appendStatus",
        "actualHeader",
        "returnState",
        "Token",
        "propertyValue",
        "thrown",
        "index",
        "match",
        "delta",
        "matches",
        "total",
        "queryTerm",
        "terms",
        "replace",
        "next",
        "scratch",
        "(",
        "transitions",
        "bb",
        "i",
        "indexOptions",
        "beginA",
        "tokenGroup",
        "rowCells",
        "shared",
        "extNames",
        "translationAmount",
        "indexOf",
        "start",
        "c",
        "shifter",
        "style",
        "styleIndex",
        "wholePart",
        "current",
        "numDocs",
        "entry",
        "arc",
        "hasNext",
        "_parseListeners",
        "_length",
        "sock",
        "block",
        "other",
        "colon",
        "left"
      ],
      "Syntactic Label": "Variables, Keywords, Operators, Method Calls, Literals",
      "Semantic Tags": [
        "Input Processing",
        "Data Structures",
        "Control Flow",
        "File I/O",
        "Exception Handling"
      ],
      "Description": "The tokens represent a mix of C# language elements.  'int', 'byte[]', 'if', 'while', 'return', 'new', 'throw', etc., are keywords and operators that control program flow and data manipulation.  'b', 'ptr', 'chrA', etc., are identifiers used as variables to store and process data.  Method calls like 'append', 'split', 'get', 'equals', etc., are used to interact with objects and perform operations.  Literals such as '0', '\n', etc., represent specific values.  The code snippets show various programming patterns, including iterative processing, conditional logic, object manipulation, and exception handling, common in C# development."
    }
  },
  {
    "c481": {
      "Unique tokens": [
        ";"
      ],
      "Syntactic Label": "Statement Terminator",
      "Semantic Tags": [
        "Method Declaration",
        "Code Structure",
        "Control Flow",
        "Function Definition",
        "Program Termination"
      ],
      "Description": "In C#, the semicolon (;) acts as a statement terminator, signifying the end of a single executable statement.  In the given context, it's crucial for defining the structure of methods (functions) and ensuring correct code execution. Each semicolon marks the end of a method declaration or a statement within a method.  The consistent use of semicolons is essential for the C# compiler to parse and execute the code correctly."
    }
  },
  {
    "c482": {
      "Unique tokens": [
        "readUShort",
        ",",
        "remaining",
        "readUByte",
        ".",
        "in",
        ")",
        "readShort",
        "readInt",
        "(",
        ";"
      ],
      "Syntactic Label": "Method Calls and Data Input",
      "Semantic Tags": [
        "Data Deserialization",
        "Record Reading",
        "Data Structures",
        "File Input",
        "Object Initialization"
      ],
      "Description": "The tokens represent method calls to read data from a RecordInputStream in C#.  The methods (readShort, readInt, readUShort, readUByte, readByte) read different data types from the input stream. The ',' is used as a separator in parameter lists, '.' is the member access operator, '(' and ')' are used for method calls, and ';' terminates statements.  The overall semantic significance is deserialization of data from a binary stream into C# objects. The code is likely part of a library that reads and parses a binary file format, such as a spreadsheet file."
    }
  },
  {
    "c483": {
      "Unique tokens": [
        "request"
      ],
      "Syntactic Label": "Method Parameter",
      "Semantic Tags": [
        "Request Object",
        "API Gateway",
        "AWS SDK",
        "Client-side Request",
        "Input Parameter"
      ],
      "Description": "The token 'request' represents a parameter passed to various methods.  These methods appear to be part of an AWS SDK or similar library, handling requests to an API Gateway. Each method takes a request object as input, processes it (potentially using a 'beforeClientExecution' pre-processing step), and then executes a corresponding API call ('execute...'). The semantic tags highlight the role of 'request' in this context."
    }
  },
  {
    "c484": {
      "Unique tokens": [
        "",
        "null",
        ".",
        "return",
        "throw",
        "new",
        "b",
        ">",
        "@SuppressWarnings",
        "[",
        "if",
        "}",
        "!",
        "Arrays",
        "{",
        "dirSize",
        "==",
        "fis",
        "]",
        "=",
        ":",
        "continue",
        ")",
        "ref",
        "int",
        "&&",
        "s",
        "(",
        "buffer",
        "diff",
        "StopWalkException",
        "transform",
        "protocols",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Object Creation",
        "Array Manipulation",
        "Method Definition"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `return`, `throw`, `continue` control program flow.  `null`, `new`, and object instantiations are related to object creation and handling.  `Arrays` and array-related operations show array manipulation. The presence of exception types (`StopWalkException`, `IllegalArgumentException`, `BufferUnderflowException`, `IOException`) and `throw` statements indicates exception handling.  The `.` operator is used for member access. The symbols `(`, `)`, `{`, `}`, `[`, `]`, `=`, `,`, `==`, `!=`, `&&`, `>` are standard C# operators and punctuation."
    }
  },
  {
    "c485": {
      "Unique tokens": [
        "getType",
        "expect",
        "f",
        "getState",
        "jsonString",
        "nodeName",
        "recog",
        "bounds",
        "MB",
        "rec",
        "b",
        "digest",
        "Math",
        "idx",
        "element",
        "toArray",
        "2",
        "threshold",
        "newObjectId",
        "asList",
        "chars",
        "nameIndex",
        "toolPack",
        "<",
        "date",
        "sheetName",
        "delimiter",
        "clone",
        "short",
        "refName",
        "reader",
        "ruleIndex",
        "pattern",
        ")",
        "getColumn",
        "set",
        "buf",
        "build",
        "child",
        "cell",
        "flag",
        "pi",
        "formula",
        "item",
        "merge",
        "buffer",
        "serialize",
        "tree",
        "bs",
        "formatter",
        "ctx",
        "typeMatch",
        "-",
        "repo",
        "commands",
        "fieldName",
        "inject",
        "sheetIdx",
        "wordId",
        "toRemove",
        "config",
        "offset",
        "null",
        ",",
        "100",
        "ir",
        "rowNumber",
        "altsets",
        "obj",
        "stream",
        "workbook",
        ">",
        "uri",
        "bitmask",
        "listFormula",
        "60",
        "files",
        "777",
        "Arrays",
        "getAbsolutePath",
        "childRecord",
        "tokenType",
        "*",
        "end",
        "csq",
        "main",
        "_mask",
        "builder",
        "prop",
        "escherGroup",
        "false",
        "stateNumber",
        "ptgs",
        "payload",
        "this",
        "getSourceInterval",
        "fh",
        "map",
        "name",
        "cfRule",
        "ConfigurationKeys",
        "cellLoc",
        "4",
        "sheetnum",
        "monitor",
        "getField",
        "perMin",
        "termInfo",
        "mb",
        "s",
        "true",
        "bindings",
        "foreground",
        "t",
        "on",
        "mark",
        "anchor",
        "1",
        "getFile",
        "class",
        "double",
        "prefixLength",
        "BLANK",
        "extensionKey",
        "transliterator",
        "listener",
        "commit",
        "baseQuery",
        "ruleNames",
        ".",
        "PolicyReaderOptions",
        "re",
        "getRawData",
        "ordered",
        "relative",
        "bytes",
        "index",
        "pm",
        "toBeRemoved",
        "new",
        "extension",
        "scale",
        "Comparator",
        "id",
        "+",
        "expression",
        "sortField",
        "scaleX",
        "getTermText",
        "need",
        "bare",
        "preserveOriginal",
        "delta",
        "ts",
        "col",
        "rules",
        "errorCheck",
        "header",
        "password",
        "is",
        "dictionary",
        "contexts",
        "backwardId",
        "clauses",
        "16",
        "engine",
        "font",
        "getConfig",
        "numberOfSheets",
        "entries",
        "cra",
        "toString",
        "width",
        "field",
        "slop",
        "terms",
        "url",
        "sheetIndex",
        "stemDerivational",
        "getPrefix",
        "maxDoc",
        "localName",
        "rate",
        "key",
        "getContext",
        "lock",
        "(",
        "o",
        "newName",
        "state",
        "recognizer",
        "book",
        "NameRecord",
        "directory",
        "db",
        "record",
        "FormulaError",
        "in",
        "errorCode",
        "_ctx",
        "term",
        "ignoreCase",
        "string",
        "sort",
        "functionName",
        "mode",
        "/",
        "extfield",
        "type",
        "field_1_options",
        "cs",
        "newPosition",
        "\"",
        "err",
        "path",
        "normalizer",
        "IntStream",
        "row",
        "Charsets",
        "encoder",
        "E",
        "channel",
        "location",
        "symbol",
        "holder",
        "mask",
        "replaceAll",
        "_string",
        "input",
        "0",
        "port",
        "prefix",
        "format",
        "since",
        "start",
        "out",
        "Locale",
        "src",
        "List",
        "c",
        "rewriteMethod",
        "mutex",
        "mGarbage",
        "opnds",
        "lexer",
        "Character",
        "nameProposal",
        "'",
        "filter",
        "text",
        "fmt",
        "parent",
        "e",
        "]",
        "readlimit",
        "milliseconds",
        "queryPoint",
        "&",
        "iterator",
        "cellnum",
        "func",
        "replacement",
        "username",
        "value",
        "count",
        "maxPercentage",
        "column",
        "listOfValues",
        "create",
        "TREE",
        "skip",
        "blob",
        "operands",
        "cvRec",
        "flags",
        "until",
        "rootNode",
        "rowKey",
        "8",
        "a",
        "udf",
        "update",
        "namenum",
        "object",
        "dgg",
        "other",
        "rs",
        "ofKind",
        "when"
      ],
      "Syntactic Label": "Method calls and object instantiations",
      "Semantic Tags": [
        "Object Creation",
        "Method Invocation",
        "Data Processing",
        "Repository Management",
        "Filtering"
      ],
      "Description": "The tokens represent a wide array of method calls, primarily focused on creating and manipulating objects, processing data, managing a repository (likely Git), and filtering data streams.  Many tokens are method names (e.g., `setProgressMonitor`, `create`, `get`, `add`, `remove`), while others are object instantiations (e.g., `new PullCommand`, `new JapaneseReadingFormFilter`). The semantic tags reflect the diverse operations performed by these methods."
    }
  },
  {
    "c486": {
      "Unique tokens": [
        "("
      ],
      "Syntactic Label": "Opening Parenthesis",
      "Semantic Tags": [
        "Method Parameters",
        "Input Data",
        "Function Arguments",
        "Request Handling",
        "AWS SDK"
      ],
      "Description": "The opening parenthesis '(' is used in C# to define the parameter list of methods. In this context, it signifies the start of the input parameters for various describe methods, likely part of an AWS SDK, where each method takes a request object as input to retrieve information about a specific resource."
    }
  },
  {
    "c487": {
      "Unique tokens": [
        "resourceGroupName",
        "request"
      ],
      "Syntactic Label": "Method Parameters",
      "Semantic Tags": [
        "Request Handling",
        "API Interaction",
        "Client-Side Logic",
        "AWS SDK",
        "Asynchronous Operations"
      ],
      "Description": "The tokens `resourceGroupName` and `request` represent parameters passed to various methods within what appears to be an AWS SDK for C#.  `request` is consistently used as an input parameter to methods that likely make requests to an AWS service. The methods' names suggest they perform various operations (create, get, update, delete) on AWS resources. The presence of `resourceGroupName` indicates that these operations are likely scoped to a specific resource group. The pattern of `request = beforeClientExecution(request);` suggests pre-processing of the request before execution, a common pattern in SDKs for handling authentication, logging, or other cross-cutting concerns. The overall code snippet demonstrates a common design pattern in client-side SDKs for interacting with cloud services."
    }
  },
  {
    "c488": {
      "Unique tokens": [
        "HPC",
        ",",
        "cr",
        "accountId",
        "in",
        ")",
        "ens",
        "hpc",
        "domain",
        "main",
        "+",
        "ots",
        "Ots"
      ],
      "Syntactic Label": "Request Parameter",
      "Semantic Tags": [
        "API Request",
        "Service Invocation",
        "Cloud Service",
        "Request Parameter",
        "Product Name"
      ],
      "Description": "These tokens represent parameters used in various API requests.  They appear to be part of a larger system where different services (e.g., HPC, CloudPhoto, cr) are invoked via requests.  The tokens such as 'accountId', 'domain', and others are likely identifiers for specific accounts or domains within these services. The structure suggests a pattern of creating requests for different cloud services, each with its own set of parameters."
    }
  },
  {
    "c489": {
      "Unique tokens": [
        "getType",
        "rt",
        "lookContext",
        "b",
        "idx",
        "ptr",
        "chars",
        "edges",
        "ve",
        "Interval",
        "codec",
        "rectype",
        "set",
        "length",
        "preTag",
        "buffer",
        "Integer",
        "DocMaker",
        "boost",
        "sequence",
        "from",
        "pos",
        "data",
        "q",
        "fieldData",
        "indexedField",
        "stream",
        "args",
        "keys",
        "uri",
        "ALL",
        "[",
        "dgId",
        "end",
        "minVersion",
        "false",
        "ConfigurationKeys",
        "Result",
        "ttype",
        "snapshot",
        "semanticContext",
        "anchor",
        "widths",
        "commit",
        "canonicalName",
        "Arc",
        "bytes",
        "rules",
        "header",
        "v",
        "fr",
        "elements",
        "getOperator",
        "Calendar",
        "raw",
        "d",
        "o",
        "db",
        "lsnr",
        "byteBuffer",
        "in",
        "fieldInfo",
        "categoryPath",
        "term",
        "message",
        "string",
        "op",
        "type",
        "newEntry",
        "mask",
        "rowIndex",
        "walk",
        "cached",
        "_str",
        "ascending",
        "e",
        "area",
        "processor",
        "fv",
        "newUrl",
        "fm",
        "Constants",
        "columnIndex",
        "s0",
        "fd",
        "info",
        "to",
        "version",
        "elementsForKey",
        "pv",
        "chrA",
        "pmt",
        "getFontpos",
        "cell",
        "find",
        "formula",
        "workDir",
        "cf",
        "fileName",
        "offset",
        "fieldInfos",
        "first",
        "cce",
        "BooleanClause",
        "builder",
        "timeout",
        "fieldNames",
        "last",
        "payload",
        "this",
        "that",
        "lastFormats",
        "compiled",
        "listener",
        "suffixes",
        "formula2",
        "COMMA",
        ".",
        "sid",
        "source",
        "getPatternTree",
        "original",
        "labelValues",
        "_value",
        "field",
        "=",
        "encodeASCII",
        "key",
        "state",
        "errorCode",
        "_ctx",
        "path",
        "_representation",
        "row",
        "crA",
        "context",
        "0",
        "fullPath",
        "format",
        "Record",
        "r",
        "Locale",
        "src",
        "params",
        "Character",
        "_regions",
        "text",
        "atn",
        "fmt",
        "capacity",
        "error",
        ":",
        "trie",
        "parentDir",
        "records",
        "iter",
        "ec",
        "username",
        "value",
        "poi",
        "a",
        "object",
        "className",
        "query",
        "tags",
        "token",
        "LOWER",
        "val",
        "offsets",
        "_constraint",
        "root",
        "append",
        "elemType",
        "TYPE_COMMIT",
        "arr2",
        "originalText",
        "buf",
        "child",
        "components",
        "setup",
        "org",
        "getDirectory",
        "handle",
        "bq",
        "fieldName",
        "K",
        "sentence",
        ",",
        "obj",
        "getOptions",
        "by",
        "lower",
        "_workbook",
        "cb",
        "ex",
        "map",
        "newValue",
        "_character",
        "true",
        "ordinal",
        "task",
        "queryTree",
        "t",
        "status",
        "msg",
        "intervals",
        "ae",
        "classmap",
        "p",
        "idf",
        "dist",
        "stopState",
        "rule",
        "it",
        "rawData",
        "k",
        "id",
        "arr",
        "docID",
        "tme",
        "evaluate",
        "indexedBytes",
        "filename",
        "Point",
        "bsk",
        "recognizer",
        "record",
        "sharedContextCache",
        "n",
        "StringUtils",
        "postingsArray",
        "\"",
        "level",
        "(needs",
        "doc",
        "input",
        "termText",
        "bbox",
        "prefix",
        "cmp",
        "sheet",
        "getRow",
        "protectedWords",
        "_options",
        "out",
        "dg",
        "arr1",
        "postTag",
        "precedence",
        "fst",
        "upper",
        "column",
        "rv",
        "phraseCandidate",
        "ti",
        "skip",
        "words",
        "array",
        "sqi",
        "event",
        "qualified",
        "qf",
        "element",
        "hash",
        "way",
        "short",
        "dst",
        "reader",
        "pattern",
        ")",
        "stat",
        "w5",
        "str",
        "tree",
        "result",
        "ctx",
        "config",
        "region",
        "null",
        "characters",
        "escapedTags",
        "fieldConfig",
        "mKeys",
        "labels",
        "otherState",
        "shape",
        "probs",
        "csq",
        "values",
        "crB",
        "heads",
        "name",
        "ref",
        "objects",
        "functionIndex",
        "s",
        "label",
        "target",
        "getWeight",
        "size",
        "class",
        "Version",
        "opName",
        "extensionKey",
        "resolve",
        "Map",
        "queryID",
        "_values",
        "table",
        "treeIdx",
        "dir",
        "index",
        "bogus",
        "+",
        "match",
        "password",
        "col",
        "parts",
        "escapeSyntaxParser",
        "entries",
        "fp",
        "forward",
        "getContext",
        "sessionID",
        "upperTerm",
        "(",
        "bb",
        "perField",
        "i",
        "holidays",
        ";",
        "lowerTerm",
        "thedata",
        "tokenizer",
        "start",
        "opnds",
        "c",
        "pid",
        "style",
        "current",
        "]",
        "names",
        "kid",
        "agg",
        "escaper",
        "toObjectId",
        "_array",
        "entry",
        "replacement",
        "getWorkbook",
        "operands",
        "numberVE",
        "subList",
        "String",
        "other",
        "w1",
        "TYPE_TAG",
        "luceneSubQueries"
      ],
      "Syntactic Label": "Variables, Objects, Methods, Dot Operator, Keywords, Data Types, Array Access, Assignment Operator, Parentheses, Comma",
      "Semantic Tags": [
        "Data Processing",
        "Object Manipulation",
        "File I/O",
        "Algorithm Implementation",
        "Utility Functions"
      ],
      "Description": "The tokens represent a wide range of C# programming constructs.  Variables and objects are declared and manipulated using methods and the dot operator.  Data types such as byte[], int, String, boolean, etc., are used to define data structures. Array access is used to work with arrays. The assignment operator (=) is used to assign values. Parentheses and commas are used for method calls and array initialization. Keywords such as public, static, final, if, while, etc., control program flow and access modifiers.  These tokens and sentences are significant in the context of C# programming because they demonstrate fundamental programming concepts and data structures used in various C# applications."
    }
  },
  {
    "c490": {
      "Unique tokens": [
        "",
        "21",
        "offset",
        "return",
        "511L",
        "7L",
        "0L",
        "7",
        "mask",
        "index",
        "6",
        ">>>",
        "15",
        "b",
        "blocks",
        "~",
        "0",
        "1000",
        "+",
        "2",
        "[",
        "bitsPerValue",
        "9",
        "}",
        "<<",
        "5",
        "<",
        ";",
        "*",
        "16",
        "255L",
        "31",
        "%",
        "byte",
        "]",
        "=",
        "12",
        "1023L",
        "final",
        "4095L",
        ")",
        "63L",
        "int",
        "&",
        "4",
        "10",
        "length",
        "31L",
        "0xff",
        "(",
        "127L",
        "curFP",
        "2097151L",
        "o",
        "value",
        "pos",
        "shift",
        "1",
        "3L",
        "64",
        "-",
        "15L",
        "8",
        ">>",
        "/",
        "3"
      ],
      "Syntactic Label": "Bit Manipulation and Array Indexing in C#",
      "Semantic Tags": [
        "Data Storage",
        "Bitwise Operations",
        "Array Manipulation",
        "Data Retrieval",
        "Efficient Data Packing"
      ],
      "Description": "The tokens represent a pattern of bitwise operations and array indexing commonly used for efficient data storage and retrieval.  The code manipulates individual bits within array elements (blocks) to store and retrieve values, optimizing space usage.  The repeated use of bitwise operators like >>> (unsigned right shift), &, | (bitwise AND, OR), and << (left shift) indicates that the data is packed into the array elements at the bit level. The calculations involving 'o' and 'b' determine the array index and bit offset within the array element, respectively.  The final return statements extract the desired value from the array element after applying the bitwise operations."
    }
  },
  {
    "c491": {
      "Unique tokens": [
        "public",
        "synchronized",
        "final",
        "GC"
      ],
      "Syntactic Label": "Access Modifiers and Keywords",
      "Semantic Tags": [
        "Access Control",
        "Class Declaration",
        "Method Declaration",
        "Synchronization",
        "Garbage Collection"
      ],
      "Description": "The tokens 'public', 'synchronized', and 'final' are C# access modifiers and keywords that control the visibility and mutability of classes and methods.  'public' indicates that a class or method is accessible from any other class. 'synchronized' ensures that only one thread can access a method at a time, preventing race conditions. 'final' prevents a variable or method from being overridden or modified after initialization. 'GC' refers to the garbage collector, which is responsible for reclaiming memory occupied by objects that are no longer in use."
    }
  },
  {
    "c492": {
      "Unique tokens": [
        "lastDocIDs",
        "StringBuilder",
        "BIT_STOP_NODE",
        "?",
        "end=",
        "Query",
        "<",
        "else",
        "_jumpTable",
        "addBlock",
        "break",
        "append",
        ")",
        "int",
        "buf",
        "Ptg",
        "flag",
        "buffer",
        "result",
        "fieldName",
        "actualChecksum",
        "if",
        "Hooks",
        "offset",
        "denseBuffer",
        "null",
        ",",
        "XmlPullParserException",
        "_externalNameRecords",
        "try",
        "sb",
        "RefCountedRevision",
        "[",
        "<=",
        "scratchArc",
        "Arrays",
        "read",
        "float",
        "fieldNames",
        "field_2_encoded_url",
        "byteCount",
        "this",
        "map",
        "bytesWritten",
        "upto",
        "status",
        "synchronized",
        "IntervalSet",
        "work",
        "parseShape",
        "IllegalArgumentException",
        "temp",
        "boolean",
        "_crnBlocks",
        "checkStatus",
        "proto",
        "validate",
        ".",
        "return",
        "IOException",
        "printfFmt",
        "_valuesAgg",
        "throw",
        "ArrayUtil",
        "synset",
        "bytes",
        "new",
        "k",
        "+",
        "actualVersion",
        "compressedLength",
        "checkCoderResult",
        "_recs",
        "field_3_sheet_names",
        "affix",
        "minWordLength",
        "toString",
        "minShingleSize",
        "_workbookRecordList",
        "add",
        "=",
        "getPointer",
        "currentSubs",
        "final",
        "while",
        "_psBlock",
        "(",
        "catch",
        "n",
        "isSum",
        "!=",
        ";",
        "Iterator",
        "\"",
        "err",
        "finally",
        "ioe",
        "isSkip",
        "checkExpiredSessions",
        "cjkAsWords",
        "out",
        "System",
        "}",
        "_buf",
        "{",
        "WeightedPhraseInfo",
        "]",
        "+=",
        "notes",
        "maxValue",
        "NotSupportedException",
        "searcherMgr",
        "count",
        "\\n",
        "subs",
        "8",
        "block",
        "String",
        "isOptimizedChoose",
        "cc"
      ],
      "Syntactic Label": "C# Tokens and their syntactic roles",
      "Semantic Tags": [
        "Data Structures",
        "Control Flow",
        "Exception Handling",
        "File I/O",
        "Object-Oriented Programming"
      ],
      "Description": "The tokens represent a wide range of C# language features.  Keywords like `if`, `else`, `while`, `try`, `catch`, `finally` control program flow.  `StringBuilder` is a mutable string object.  `Arrays` and other data structures are used for data management.  Exception handling is implemented using `try-catch` blocks.  File I/O is suggested by `IOException`.  The overall code demonstrates object-oriented programming principles through class methods and object interactions."
    }
  },
  {
    "c493": {
      "Unique tokens": [
        "blockCount",
        "offset",
        "currentBlockUpto",
        "data",
        "null",
        ",",
        "f",
        "paths",
        ".",
        "return",
        "numberOfItems",
        "sizeInBytes",
        "to",
        "--",
        "crc32",
        "MAX_VALUE",
        "new",
        "LOG_2",
        "0",
        ">",
        "+",
        "NA",
        "id",
        "2",
        "?",
        "ALL",
        "c",
        "<=",
        "separatorChar",
        "refreshIntervalInMillSeconds",
        "<",
        "{",
        "*",
        "divide",
        "FALSE",
        "end",
        "==",
        "false",
        "e",
        "maxAgeSec",
        "]",
        "=",
        "newMessage",
        "milliseconds",
        ":",
        ">=",
        "symbol",
        ")",
        "ord",
        "int",
        "arg0",
        "expireAgeMillis",
        "4",
        "length",
        "&&",
        "deltaCompress",
        "(",
        "true",
        "other",
        "1",
        "succeeded",
        "i",
        "columnIndex",
        "for",
        "-",
        "8",
        "super",
        "from",
        "String",
        "increment",
        "/",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators",
      "Semantic Tags": [
        "Method Parameters",
        "Return Statements",
        "Control Flow",
        "Data Structures",
        "Boolean Logic"
      ],
      "Description": "The tokens represent a wide range of C# language elements.  Many are identifiers for variables (e.g., blockCount, offset), method parameters (e.g., monitor, locale, input), or local variables (e.g., i).  Others are operators (e.g., +, -, *, /, ==, !=, <, >, <=, >=, &&, ||), keywords (e.g., return, for, if, new, public, static, boolean), and special characters (e.g., (, ), {, }, [, ], ., ;).  The context sentences show these tokens used in method signatures, return statements, conditional statements, loops, object creation, and boolean expressions.  The semantic tags reflect the common programming tasks these tokens enable."
    }
  },
  {
    "c494": {
      "Unique tokens": [
        "put",
        "++",
        "?",
        "Toffs",
        "long",
        ".dbcell_",
        "RecordFormatException",
        "else",
        "break",
        "append",
        ")",
        "int",
        "infoStream",
        "buf",
        "boost",
        "issues",
        "if",
        "denseBuffer",
        "SpatialOperation",
        "null",
        ",",
        "try",
        "sb",
        "recSize",
        "args",
        "first",
        "shape",
        "[",
        "ex",
        "false",
        "RuntimeException",
        "this",
        "continue",
        "name",
        "s",
        "true",
        "SubRecord",
        "synsetSize",
        "1",
        "termsOffsets",
        "CharsRef",
        "work",
        "for",
        "IllegalArgumentException",
        "commit",
        "!",
        "remove",
        "currentBlock",
        ".",
        "return",
        "throw",
        "--",
        "new",
        "+",
        "setRewriteMethod",
        "v",
        "toString",
        "=",
        "final",
        "while",
        "next",
        "(",
        "write",
        "o",
        "fieldsStream",
        "db",
        "catch",
        "w",
        "message",
        "typeHint",
        ";",
        "Iterator",
        "\"",
        "prePush",
        "finally",
        "min",
        "0",
        "get",
        "r",
        "}",
        "'",
        "close",
        "{",
        "bufferStart",
        "e",
        "body",
        "appendCharString",
        "WeightedPhraseInfo",
        "]",
        "seqnum",
        "notes",
        ":",
        "allToffs",
        "hasNext",
        "\\n",
        "String",
        "info"
      ],
      "Syntactic Label": "C# Tokens and Symbols",
      "Semantic Tags": [
        "Control Flow",
        "Exception Handling",
        "Data Structures",
        "File I/O",
        "String Manipulation"
      ],
      "Description": "The tokens represent a wide range of C# language features. Keywords like \"if\", \"else\", \"for\", \"while\", \"try\", \"catch\", and \"finally\" control program flow.  Operators such as \"+\", \"-\", \"++\", \"--\", \"=\", \".\", \"!\", and \"?\" perform arithmetic, logical, and assignment operations.  Data structures such as arrays and lists are used extensively.  The code interacts with files and streams, as evidenced by \"IOException\" and file-related operations.  String manipulation is evident through the use of \"StringBuilder\", \"append\", and string concatenation."
    }
  },
  {
    "c495": {
      "Unique tokens": [
        "JGitInternalException",
        "SSTDeserializer",
        "MutableObjectId",
        "b",
        "LinkedHashMap",
        "CellRangeAddress",
        "HashMap",
        "<",
        "FtrHeader",
        "LongsRef",
        "long",
        "requireNonNull",
        "short",
        "IdentityHashMap",
        "Stemmer",
        "HashSet",
        "int",
        "NameIntCacheLRU",
        "CellReference",
        "FileTreeIterator",
        "TermsEnumWithSlice",
        "TreeSet",
        "PathFilter",
        "Transition",
        "FileOutputStream",
        "DeltaIndexScanner",
        "AlarmThread",
        "LegacyCredentials",
        "[",
        "ArrayList",
        "IndexDiff",
        "byte",
        "Object",
        "float",
        "AtomicInteger",
        "PColor",
        "BoundedEntrySet",
        "AutoKiller",
        "GroupComparator",
        "double",
        "IntervalSet",
        "DecisionInfo",
        "MultiPostingsEnum",
        "boolean",
        "Arc",
        "OneMergeProgress",
        "ReentrantLock",
        "char",
        "NameHashIntCacheLRU",
        "EmptyTreeIterator",
        "new",
        "Semaphore",
        "Break",
        "IntMapper",
        "Slice",
        "CRNRecord",
        "TreeMap",
        "(",
        "File",
        "TermStates",
        "NameRecord",
        "instanceof",
        ";",
        "\"",
        "State",
        "AlarmState",
        "Status",
        "StringBuffer",
        "UnicodeString",
        "Trie",
        "ObjectId",
        "CharArraySet",
        "BasicSessionCredentials",
        "List",
        "CommonRpcRequest",
        "PagedGrowableWriter",
        "CellRangeAddress8Bit",
        "ByteBlockPool",
        "StaticCredentialsProvider",
        "fd",
        "String"
      ],
      "Syntactic Label": "C# identifiers and keywords",
      "Semantic Tags": [
        "Exception Handling",
        "Data Structures",
        "File I/O",
        "Object Serialization",
        "Concurrency"
      ],
      "Description": "The tokens represent a wide range of C# programming elements.  Many are class names (e.g., JGitInternalException, SSTDeserializer, MutableObjectId), indicating object-oriented programming.  Others are data structure types (e.g., LinkedHashMap, HashMap, ArrayList, HashSet, TreeSet), showing data manipulation. Keywords like 'new' demonstrate object instantiation.  The presence of FileOutputStream and File indicates file operations.  The inclusion of AtomicInteger and ReentrantLock suggests concurrency control mechanisms.  Finally, exception handling is implied by JGitInternalException."
    }
  },
  {
    "c496": {
      "Unique tokens": [
        "data",
        "null",
        ",",
        "it",
        ".",
        "lastLink",
        "return",
        "E",
        "--",
        "new",
        "canRemove",
        ">",
        "++",
        "link",
        "lastReturned",
        "}",
        "close",
        "voidLink",
        "<",
        "previous",
        "parent",
        "=",
        ")",
        "next",
        "scratch",
        "newLink",
        "(",
        "true",
        "write",
        "result",
        "LinkedList",
        "list",
        "lastPosition",
        "Link",
        "p",
        "block",
        "object",
        "pos",
        "!=",
        ";"
      ],
      "Syntactic Label": "C# Tokens and Operators in LinkedList Implementation",
      "Semantic Tags": [
        "Linked List Manipulation",
        "Data Structures",
        "Iteration",
        "Node Traversal",
        "Exception Handling"
      ],
      "Description": "The tokens represent elements of a C# LinkedList implementation.  They are used for creating, traversing, adding, removing, and accessing elements within the linked list.  The code demonstrates common linked list operations, including handling edge cases (empty list, null values), and exception handling for invalid operations (e.g., accessing elements outside the bounds, concurrent modifications).  The tokens such as `next`, `previous`, `data`, `voidLink`, etc., are directly related to the structure and manipulation of nodes in the linked list.  Operators like `!=`, `==`, `++`, `--`, and `=` are used for comparisons, increment/decrement, and assignments within the list operations."
    }
  },
  {
    "c497": {
      "Unique tokens": [
        "StringUtil",
        "IntegerField",
        ".",
        "listener",
        "LongField",
        "LittleEndian",
        ";"
      ],
      "Syntactic Label": "Class Names, Object Instantiation, Member Access, Method Calls, Data Type",
      "Semantic Tags": [
        "Data Structures",
        "Data Serialization",
        "Binary Data",
        "Record Management",
        "Listener Pattern"
      ],
      "Description": "The tokens represent classes (StringUtil, IntegerField, LongField), object instantiation using the 'new' keyword (implicitly in the context), member access via the '.' operator, method calls (e.g., putShort, serialize), and data types (byte[], short, int).  These are fundamental to C# programming, particularly when dealing with binary data structures and serialization. The listener pattern is used for callbacks during serialization. The code snippets show the serialization and deserialization of data structures, likely for file formats or data exchange."
    }
  },
  {
    "c498": {
      "Unique tokens": [
        "ExternalName",
        "SpanQuery",
        "WindowsIndexInput",
        "Executor",
        "ObjectReader",
        "CellRangeAddressList",
        "DimensionsRecord",
        "Collection",
        "Graphics",
        "Vector",
        "FormulaCellCacheEntry",
        "HSSFPicture",
        "Rule",
        "LinkedHashMap",
        "DirCacheEntry",
        "ByteBuffer",
        "HttpRequest",
        "CellRangeAddress",
        "EnumSet",
        "Query",
        "HSSFWorkbook",
        "HashMap",
        "Storage",
        "Note",
        "CanonicalTreeParser",
        "ObjRecord",
        "FieldConfig",
        "ExternalSheet",
        "HSSFCellStyle",
        "InetAddress",
        "QueryText",
        "BooleanQuery",
        "ObjectLoader",
        "DirectoryEntry",
        "FreeRefFunction",
        "TermsEnum",
        "short",
        "TSTNode",
        "FacetLabel",
        "PasswordRecord",
        "FieldsConsumer",
        "RowRecord",
        "CellReference",
        "PhraseQuery",
        "Ptg",
        "RevFlag",
        "HSSFAnchor",
        "FieldQuery",
        "ATN",
        "TokenFilter",
        "EditList",
        "InstanceProfileCredentials",
        "QueryMaker",
        "ByteOrder",
        "Float",
        "TreeSet",
        "Edit",
        "Config",
        "IntBuffer",
        "HSSFName",
        "Request",
        "PredictionContext",
        "QueryPhraseMap",
        "ExtendedFormatRecord",
        "SharedFormulaRecord",
        "K",
        "Header",
        "PersonIdent",
        "Transition",
        "Ref",
        "HSSFColor",
        "Hashtable",
        "BigDecimal",
        "EscherContainerRecord",
        "BytesReader",
        "URIish",
        "Cell",
        "Charset",
        "DocumentInputStream",
        "Field",
        "ParseTreePattern",
        "ParserRuleContext",
        "FetchConnection",
        "SrndQuery",
        "Row",
        "RevTag",
        "EvaluationName",
        "UnknownSubRecord",
        "ListIterator",
        "TerminalNode",
        "TreeFilter",
        "LookupResult",
        "V",
        "ArrayList",
        "MatchNoDocsQuery",
        "Object",
        "Group",
        "EvaluationSheet",
        "RevWalk",
        "TokenStream",
        "Credential",
        "Term",
        "User",
        "Result",
        "Sheet",
        "ErrorEval",
        "DFA",
        "InputStream",
        "Merger",
        "SegToken",
        "FSTTermsReader",
        "ContainsResult",
        "Bits",
        "InternalWorkbook",
        "HSSFCell",
        "RecordInputStream",
        "IntervalSet",
        "DecisionInfo",
        "IndexableField",
        "SheetRangeEvaluator",
        "Token",
        "Map",
        "Matcher",
        "ExpandedDouble",
        "BlockList",
        "IndexOutput",
        "IntegerList",
        "Count",
        "Comparator",
        "Automaton",
        "ATNConfig",
        "Pair",
        "SortedSet",
        "IndexInput",
        "LongBuffer",
        "PackFile",
        "Set",
        "RevObject",
        "HSSFSimpleShape",
        "Drawable",
        "ET",
        "Explanation",
        "FieldWriter",
        "Entry",
        "OutputStream",
        "Span",
        "FieldIndexEnum",
        "RevTree",
        "File",
        "Point",
        "IndexSearcher",
        "Transport",
        "NameRecord",
        "LooseRef",
        "TermData",
        "ErrorHandler",
        "LinkedList",
        "Item",
        "ParseTreeMatch",
        "AreaEval",
        "Iterable",
        "Loc",
        "Iterator",
        "HSSFRow",
        "State",
        "AND",
        "Position",
        "MatchResult",
        "Analyzer",
        "Status",
        "RawText",
        "FontRecord",
        "LexerActionExecutor",
        "RevCommit",
        "E",
        "StringBuffer",
        "Reader",
        "UnicodeString",
        "Trie",
        "LinearOffsetRange",
        "Builder",
        "EvaluationCell",
        "SheetRefEvaluator",
        "ObjectId",
        "FieldsProducer",
        "EscherDgRecord",
        "ShortBuffer",
        "Record",
        "BytesRef",
        "Locale",
        "List",
        "MutableEntry",
        "Step",
        "ValueEval",
        "RevFilter",
        "ResourceBundle",
        "ParseException",
        "BlameResult",
        "DVRecord",
        "HSSFPalette",
        "NormalisedDecimal",
        "PackedObjectInfo",
        "ExtSSTRecord",
        "QueryNode",
        "SearchGroup",
        "Tab",
        "Repository",
        "DirCache",
        "LittleEndianOutput",
        "MultiPhraseQuery",
        "AbbreviatedObjectId",
        "MergeResult",
        "CharSequence",
        "T",
        "CharBuffer",
        "Process",
        "FieldInfo",
        "CellRangeAddressBase",
        "String",
        "FileMode",
        "DoubleBuffer",
        "URI",
        "FuzzySet"
      ],
      "Syntactic Label": "Variables and Objects",
      "Semantic Tags": [
        "Data Structures",
        "Spreadsheet Processing",
        "API Interaction",
        "Version Control",
        "Text Processing"
      ],
      "Description": "The tokens represent a wide variety of C# objects and variables, many related to spreadsheet processing (HSSFWorkbook, HSSFCell, CellRangeAddress), API interaction (HttpRequest, Request), version control (RevCommit, RevWalk), and text processing (TokenStream, TokenFilter, Analyzer).  The context sentences show these tokens being used in methods that perform actions on these objects, such as creating, manipulating, and querying data.  The `short` type is a primitive data type used for efficient storage of small integer values."
    }
  },
  {
    "c499": {
      "Unique tokens": [
        "searchingGen",
        "",
        "\"",
        "COMMA",
        "DELETED",
        "180",
        "null",
        "currentBlock",
        ".",
        "return",
        "0L",
        "sb",
        "throw",
        "position",
        "endIndex",
        "getParent",
        "found",
        "analyzerName",
        "b",
        "0",
        "idx",
        "rowIndex",
        "?",
        "2",
        "property",
        "r",
        "5",
        "<",
        "{",
        ";",
        "1.0",
        "31",
        "lt",
        "e",
        "numDocs",
        "0.0",
        "+=",
        ":",
        "NO_OUTPUT",
        "this",
        "container",
        ")",
        "instance",
        "lo",
        "buckets",
        "reuseFirst",
        "4",
        "key",
        "10",
        "length",
        "String",
        "&&",
        "s",
        "(",
        "available",
        "_parentctx",
        "upto",
        "Constants",
        "1",
        "size",
        "buffer",
        "freq",
        "skip",
        "NONE",
        "columnIndex",
        "EMPTY",
        "-",
        "w",
        "left",
        "49",
        "0x20",
        "actualChecksum",
        "0xFFFF",
        "EOF",
        "3"
      ],
      "Syntactic Label": "Unknown",
      "Semantic Tags": [
        "Unknown"
      ],
      "Description": "Failed to classify due to processing error."
    }
  }
]